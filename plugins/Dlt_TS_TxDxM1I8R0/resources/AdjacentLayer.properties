# AdjacentLayer.properties file of module Dlt.
#
# The background for designing property files can be found in
# http://wiki.elektrobit.com/index.php/Project:AutoCore_Module_Properties
#
# The module name corresponds to the name of attribute 'categoryType' in the plugin.xml of the
# adjacent module and must be identical to the PduRBswModules Container-short name.
#
# The properties in 'Module Type Dependent Data' must be provided in dependence on particles
# ForUpperLayer|ForLowerLayer, If|Tp ('If' for handling nonTP-PDUs, 'Tp' for handling
# TP-PDUs) and Rx/Tx. If it's not provided it’s considered as 'Unsupported'.
#
# 'Mandatory', 'Unsupported' and 'Optional' are considered as possible values with the
# following meaning:
# - Mandatory: module supports this API, API shall be used by adjacent layer module
# - Optional: module supports this API (depending on the configuration), API can be used by adjacent layer module
# - Unsupported: module doesn't support this API, API shall not be used by adjacent layer module
# The XPath expressions to the references of the relevant PDUs or PDUIDs shall be restricted by
# conditions if possible.
#
# The properties for the 'API Names' are optional:
# - if no value is provided, default name is assigned (<Callee>_<Caller><ApiName>)
#   where <ApiName> is the name of the API with API type (e.g. IfRxindication, TpRxindication,...) and
# - those APIs provided by the adjacent layer module shall start with '<Callee>_'.

# ------------------------------------------
# ------------  General Data  --------------
# ------------------------------------------

# Name of module configuration (i.e name which can be used with as:modconf('<ModuleConfigName>'))
Dlt.AdjacentLayerConfig.ModuleConfigName:Dlt

# Supported AUTOSAR Handle ID Version (allowed values: AUTOSAR32, AUTOSAR40)
Dlt.AdjacentLayerConfig.HandleIDPolicyVersion:AUTOSAR40

# Name of include file(s)
# Multiple header files are separated by comma.
# If no header file is provided no property value shall be configured.
Dlt.AdjacentLayerConfig.IncludeFileNames.V1.Tp.ForLowerLayer:Dlt_Cbk.h

# Information which services (If/Tp) a module (optionally) provides for an upper or lower layer. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
Dlt.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForUpperLayer:Unsupported
Dlt.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForLowerLayer:Unsupported
Dlt.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForUpperLayer:Unsupported
Dlt.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForLowerLayer:Mandatory

# List of modules which are possible as upper or lower layer modules
# (comma separated list or use empty property if module has a generic layer support)
# List is only valid if respective LayerServiceSupport exists.
Dlt.AdjacentLayerConfig.LayerSupportList.V1.ForLowerLayer:PduR

# --------------------------------------------
# -------  Module Type Dependent Data  -------
# --------------------------------------------

# Information on whether a module (optionally) provides a given API feature to its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.ProvidedApiFeature.V1.<layerType>.<apiFeature>
Dlt.AdjacentLayerConfig.ProvidedApiFeature.V1.ForLowerLayer.TpTxConfirmation:Mandatory

# Information on whether a module (optionally) requires a given API feature from its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.RequiredApiFeature.V1.<layerType>.<apiFeature>
Dlt.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.TpChangeParameter:Unsupported
Dlt.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.TpCancelReceive:Unsupported
Dlt.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.TpCancelTransmit:Unsupported

# ------- Data to referenced global Rx I-PDUs (ForLowerLayer, Tp-module) -------
# XPath-expression to all references of the relevant Rx I-PDUs
Dlt.AdjacentLayerConfig.AbsXPathPduRef.V1.ForLowerLayer.Tp.Rx:as:modconf('Dlt')[1]/DltMultipleConfigurationContainer/DltPduConfig/DltRxPduRef

# relative XPath-expression to associated PduId of above referenced Rx I-PDU
Dlt.AdjacentLayerConfig.RelXPathPduId.V1.ForLowerLayer.Tp.Rx:../DltRxPduId

# ------- Data to referenced global Tx I-PDUs (ForLowerLayer, Tp-module) -------
# XPath-expression to all references of the relevant Tx I-PDUs
Dlt.AdjacentLayerConfig.AbsXPathPduRef.V1.ForLowerLayer.Tp.Tx: as:modconf('Dlt')[1]/DltMultipleConfigurationContainer/DltPduConfig/DltTxPduRef | as:modconf('Dlt')[1]/DltConfigSet/*/DltLogOutput/*/DltLogChannel/*/DltTxPdu/DltTxPduIdRef

# relative XPath-expression to associated PduId of above referenced Tx I-PDU
Dlt.AdjacentLayerConfig.RelXPathPduId.V1.ForLowerLayer.Tp.Tx:../DltTxPduId | ../DltITxPduHandleId


# ------------------------------------------
# ------------    API Names   --------------
# ------------------------------------------

# API functions are provided by the callee module to the caller module with
# default pattern <callee>_<caller><name> where <name> reflects the particle of property
# <caller>.AdjacentLayerConfig.ApiName.V1.<name>
Dlt.AdjacentLayerConfig.ApiName.V1.TpStartOfReception:Dlt_ComStartOfReception
Dlt.AdjacentLayerConfig.ApiName.V1.TpCopyRxData:Dlt_ComCopyRxData
Dlt.AdjacentLayerConfig.ApiName.V1.TpRxIndication:Dlt_ComRxIndication
Dlt.AdjacentLayerConfig.ApiName.V1.TpTxConfirmation:Dlt_ComTxConfirmation
Dlt.AdjacentLayerConfig.ApiName.V1.TpCopyTxData:Dlt_ComCopyTxData

# Overrule API names provided by the adjacent layer's <AdjacentLayerName> property file,
# e.g. to overrule the default API name PduR_DltIfTransmit of the PduR by PduR_DltTransmit
# of the Dlt properties file.
PduR.AdjacentLayerConfig.ApiName.V1.TpTransmit.Dlt:PduR_DltTransmit


