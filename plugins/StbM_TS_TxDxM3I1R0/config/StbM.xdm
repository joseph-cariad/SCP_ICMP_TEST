<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM3I1R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="StbM" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.2</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                    &lt;p&gt;Configuration of the Synchronized Time-base Manager (StbM) module.&lt;/p&gt;
                  &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
              <a:a name="RELEASE" value="asc:4.4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="4d5149da-7451-457b-abb7-c328a7077622"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="3"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="7"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="160"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the StbM can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:var name="POST_BUILD_VARIANT_USED" type="BOOLEAN">
                <a:a name="DESC" 
                     value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Post Build Variant Used"/>
                <a:a name="ORIGIN" value="EB"/>
                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                <a:a name="VISIBLE" value="false"/>
                <a:da name="DEFAULT" value="false"/>
                <a:da name="READONLY" value="FALSE"/>
                <a:da name="TOOLTIP" 
                      value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
              </v:var>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="UUID" value="df8627cc-98a8-42e6-a869-77bca6941436"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:ctr name="StbMDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="StbMDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module StbM.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../StbMGeneral/StbMDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="StbMPrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module StbM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;StbMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;StbMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../StbMGeneral/StbMDevErrorDetect = &apos;true&apos;) and (../StbMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="StbMPostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module StbM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;StbMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;StbMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../StbMGeneral/StbMDevErrorDetect = &apos;true&apos;) and (../StbMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="StbMStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module StbM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;StbMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;StbMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../StbMGeneral/StbMDevErrorDetect = &apos;true&apos;) and (../StbMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="StbMUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module StbM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;StbMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;StbMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../StbMGeneral/StbMDevErrorDetect = &apos;true&apos;) and (../StbMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="StbMInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module StbM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;StbMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;StbMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../StbMGeneral/StbMDevErrorDetect = &apos;true&apos;) and (../StbMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="StbMGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Container holding the general parameters for the Synchronized
                        Time-base Manager.
                      &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" value="c5d4a048-c6d0-4089-8e49-50bbe12ed096"/>
                <v:var name="StbMDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables and disables the development error detection
                            and notification mechanism.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;True: Enabled&lt;/li&gt;
                            &lt;li&gt;False: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.increase&quot;&gt;
                              &lt;strong&gt;ROM increase (code):&lt;/strong&gt;
                              Enabling this parameter increases the
                              ROM consumption of the module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.increase&quot;&gt;
                              &lt;strong&gt;Execution time increase (code):&lt;/strong&gt;
                              Enabling this parameter increases the
                              execution time of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c38d017e-5265-4635-bb16-635989fc5733"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="StbMGetCurrentTimeExtendedAvailable" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This allows to define whether an additional variant of the API GetCurrentTime with a 64 bit argument is provided.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ab133808-5acf-4812-9fbf-021619da39ef"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="((node:value(.) = &apos;true&apos;) and ((not(node:exists(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit))) or ((node:exists(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit)) and (node:value(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit) = &apos;false&apos;))))" 
                        true="If StbM_GetCurrentTimeExtended API is intended to be used, BaseTypes64bit shall be set to TRUE!"/>
                </v:var>
                <v:var name="StbMMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Schedule period of the main function StbM_MainFunction. Unit: [s].&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="0.01"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=1000"/>
                    <a:tst expr="&gt;0.0"/>
                  </a:da>
                </v:var>
                <v:var name="StbMTimeRecordingSupport" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: Enables/Disables the usage of the recording functionality for Synchronized and Offset timebases for Global Time precision measurement purpose."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:581861fb-8d14-4e49-8e38-74b7266d8b46"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(node:value(.) = &apos;false&apos;) and (node:exists(./../../StbMSynchronizedTimeBase/*/StbMTimeRecording))" 
                        true="This parameter should be set to &apos;true&apos; if there are StbMTimeRecording&apos;s available in any time bases."/>
                </v:var>
                <v:var name="StbMTimerStartThreshold" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            EN: This  interval defines, when a GPT Timer shall be started for Time Notification Customers for which the corresponding Customer Timer is running [unit: seconds].
                          &lt;/p&gt;
                          &lt;p&gt;
                            This parameter is enabled only if there are StbMNotificationCostumers configured.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:da9f7a43-396f-46c6-a53e-4df7895539c7"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(count(as:modconf(&apos;StbM&apos;)[1]/StbMSynchronizedTimeBase/*[count(./StbMNotificationCustomer/*) &gt; 0]) &gt; 0)" 
                        true="true" false="false"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;4290"/>
                      <mt:tst expr="&gt;0.0"/>
                    </mt:range>
                    <mt:xpath 
                              true="StbMTimerStartThreshold parameter shall have a greater value than StbMMainFunctionPeriod!" 
                              expr="((not(node:empty(.))) and (not(node:value(.) &gt; node:value(./../StbMMainFunctionPeriod))))"/>
                  </a:da>
                </v:var>
                <v:var name="StbMVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables and disables the API StbM_GetVersionInfo().
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;True: Enabled&lt;/li&gt;
                            &lt;li&gt;False: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                        &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.increase&quot;&gt;
                              &lt;strong&gt;ROM increase (code):&lt;/strong&gt;
                              Enabling this parameter increases the
                              ROM consumption of the module code.
                            &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="299fc6cd-109e-4f09-bc25-9963fc60b0fd"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:ref name="StbMGptTimerRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                             EN: This represents an optional sub-container in case any Time Notification Customer is configured.
                          &lt;/p&gt;
                          &lt;p&gt;
                            This parameter is enabled only if there are StbMNotificationCostumers configured.
                          &lt;/p&gt;
                          &lt;p&gt;If StbMGptTimerRef is configured, please make sure that GptNotification is enabled and configured!&lt;/p&gt;
                          &lt;p&gt;The referenced GptChannel shall not be used for other purposes, this is the only place it shall be
                            configured!&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="REQUIRES-SYMBOLIC-NAME-VALUE" value="true"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="UUID" 
                       value="ECUC:0cdc6dd0-fd5a-492d-bace-768bf495e607"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="node:exists(./../StbMTimerStartThreshold)" 
                        true="true" false="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="((node:empty(.)) and (node:exists(./../StbMTimerStartThreshold)))" 
                           true="If StbMTimerStartThreshold parameter is configured, a valid reference to a GptChannelConfiguration shall be configured here!"/>
                    <a:tst 
                           expr="(((node:exists(.)) and (not(node:empty(.)))) and (node:value(as:modconf(&apos;Gpt&apos;)[1]/GptConfigurationOfOptApiServices/GptEnableDisableNotificationApi) = &apos;false&apos;))" 
                           true="If StbMGptTimerRef parameter is configured, GptEnableDisableNotificationApi shall be enabled!"/>
                    <a:tst 
                           expr="(((node:exists(.)) and (not(node:empty(.)))) and ((not(node:exists(node:ref(.)/GptNotification))) or ((node:exists(node:ref(.)/GptNotification)) and (node:empty(node:ref(.)/GptNotification))) or ((node:exists(node:ref(.)/GptNotification)) and (node:value(node:ref(.)/GptNotification) != &apos;StbM_TimerCallback&apos;))))" 
                           true="If StbMGptTimerRef parameter is configured, GptNotification shall also be configured and the name of the notification shall be StbM_TimerCallback!"/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Gpt/GptChannelConfigSet/GptChannelConfiguration"/>
                </v:ref>
                <v:var name="StbMRteUsage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;Enables RTE Usage.&lt;/p&gt;
                      &lt;p&gt;
                        If enabled, the StbM will generate an SWCD and supply the specified
                        software component interfaces.
                      &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr=". = &apos;true&apos; and count(as:modconf(&apos;Rte&apos;)) = 0" 
                        true="The usage of the RTE is enabled for the StbM, but the RTE is disabled or missing."/>
                </v:var>
                <v:var name="StbMTimerStartMaxNumberOfCalls" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            EN: This defines the maximum number of StbM_StartTimer() function calls that StbM can handle at once during runtime.
                                If this is exceded, StbM_StartTimer() will return E_NOT_OK.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:da9f7a43-396f-46c6-a53e-4df7895539c7"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(count(as:modconf(&apos;StbM&apos;)[1]/StbMSynchronizedTimeBase/*[count(./StbMNotificationCustomer/*) &gt; 0]) &gt; 0)" 
                        true="true" false="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;4294967295"/>
                    <a:tst expr="&gt;0"/>
                  </a:da>
                </v:var>
                <v:var name="StbMMulticoreSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables/Disables multicore support with respect to Rte cross-core calls.
                          &lt;/p&gt;
                          &lt;p&gt;
                            If this parameter is disabled, StbM is still multicore capable as long as the exclusive areas are correctly configured(i.e to spin-lock)
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;True: Enabled&lt;/li&gt;
                            &lt;li&gt;False: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b35c29a1-1c01-4738-a4b8-e5f181d5e167"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="((node:value(.) = &apos;true&apos;) and (node:value(./../StbMRteUsage) = &apos;false&apos;))" 
                        true="If StbMMulticoreSupport is needed for C-S Interfaces which are generated by Rte, please also enable StbMRteUsage! If StbMRteUsage is set to false, StbM will still support multicore as long as exclusive areas are correctly configured!"/>
                </v:var>
                <v:lst name="StbMEcucPartitionRefList" type="MAP">
                  <a:da name="ENABLE" type="XPath" 
                        expr="((node:exists(./../StbMMulticoreSupport)) and (node:value(./../StbMMulticoreSupport) = &apos;true&apos;))" 
                        true="true" false="false"/>
                  <a:da name="MAX" value="50"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="StbMEcucPartitionRefList" type="IDENTIFIABLE">
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="ECUC:deb2e88e-f8a9-477f-acf5-7e27044cc69b"/>
                    <v:ref name="StbMEcucPartitionRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Reference to EcucPartition, where StbM module is assigned to."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="UUID" 
                           value="0068b608-16a0-4781-be60-783b3ddaa089"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                    </v:ref>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:lst name="StbMSynchronizedTimeBase" type="MAP">
                <a:da name="INVALID" type="XPath">
                  <a:tst 
                         expr="node:isconsecutive(./*[(not(node:exists(StbMOffsetTimeBase))) and (node:value(./StbMSynchronizedTimeBaseIdentifier) &lt; 16)]/StbMSynchronizedTimeBaseIdentifier,0)" 
                         false="StbMSynchronizedTimeBaseIdentifier for SYNCHRONIZED time bases shall be 0-based and consecutive."/>
                  <a:tst 
                         expr="node:isconsecutive(./*[node:exists(StbMOffsetTimeBase)]/StbMSynchronizedTimeBaseIdentifier,16)" 
                         false="StbMSynchronizedTimeBaseIdentifier for OFFSET time bases shall be consecutive and start with Id 16."/>
                  <a:tst 
                         expr="node:isconsecutive(./*[(not(node:exists(StbMOffsetTimeBase))) and (node:value(./StbMSynchronizedTimeBaseIdentifier) &gt; 31)]/StbMSynchronizedTimeBaseIdentifier,32)" 
                         false="StbMSynchronizedTimeBaseIdentifier for PURE time bases shall be consecutive and start with Id 32."/>
                  <a:tst 
                         expr="count(node:refs(./*[node:exists(./StbMLocalTimeClock/StbMLocalTimeHardware)]/StbMLocalTimeClock/StbMLocalTimeHardware)[node:exists(./../../OsCounter)]) &gt; 1" 
                         true="StbMLocalTimeHardware referencing Os, of various time bases must point to the same unique Os counter."/>
                  <a:tst 
                         expr="(count(node:refs(./*[node:exists(./StbMLocalTimeClock/StbMLocalTimeHardware)]/StbMLocalTimeClock/StbMLocalTimeHardware)[node:exists(./../../EthTSynGlobalTimeDomain)]) &lt; 1) and node:exists(as:modconf(&apos;StbM&apos;)[1]/StbMGeneral/StbMEthHwTimestampBehaviourSelect)" 
                         true="There are no TimeBases referencing EthTSyn, but StbMEthHwTimestampBehaviourSelect is enabled. Please disable it, or configre a TimeBase where a EthTSynGlobalTimeDomain is referenced."/>
                  <a:tst 
                         expr="(not(node:exists(./*/StbMTimeRecording))) and (node:value(as:modconf(&apos;StbM&apos;)[1]/StbMGeneral/StbMTimeRecordingSupport) = &apos;true&apos;)" 
                         true="The StbMTimeRecording parameter is not configured in any synchronized time base. In this case the StbMTimeRecordingSupport parameter should be set to &apos;false&apos;."/>
                  <a:tst 
                         expr="(count(./*[node:exists(./StbMNotificationCustomer/*/StbMTimeNotificationCallback)]) &lt; 1) and (node:exists(as:modconf(&apos;StbM&apos;)[1]/StbMGeneral/StbMTimerStartThreshold)) and (node:value(as:modconf(&apos;StbM&apos;)[1]/StbMGeneral/StbMRteUsage) = &apos;false&apos;)" 
                         true="The StbMTimeNotificationCallback parameter is not configured in any StbMNotificationCustomer. In this case the StbMRteUsage parameter should be set to &apos;true&apos; because the time notification costumers need to report either to RTE or a callback."/>
                </a:da>
                <a:da name="MIN" value="1"/>
                <v:ctr name="StbMSynchronizedTimeBase" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Container holding the list of Synchronized time-base providers.
                            The Synchronized time-base provider collects the information about
                            specific time-base/s within the system.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                  <a:a name="UUID" value="714bfb77-1a2f-4b63-8e89-158d48fdd873"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(node:value(StbMUseOSGetTimeStamp) = &apos;false&apos;) and (node:empty(StbMLocalTimeClock/StbMLocalTimeHardware)) and (not(node:exists(StbMOffsetTimeBase)))" 
                        true="Configure a valid reference for StbMLocalTimeClock/StbMLocalTimeHardware or set StbMUseOSGetTimeStamp parameter to TRUE, for a SYNCHRONIZED/PURE time base or enable StbMOffsetTimeBase, for an OFFSET time base!"/>
                  <v:var name="StbMAllowSystemWideGlobalTimeMaster" 
                         type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              &lt;em&gt;For postbuild variant of the StbM this parameter has to be set to true
                                  for a Global Time Master that may act as a system-wide source of time.
                                  Otherwise no corresponding service ports/interfaces is provided.
                                  The Global Time Master functionality behind the service ports/interfaces
                                  has to be enabled/disabled separately via parameter StbMIsSystemWideGlobalTimeMaster.
                             &lt;/em&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:cb072c54-dffe-4a81-9232-4584c0a7b4db"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                  <v:var name="StbMIsSystemWideGlobalTimeMaster" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                            This parameter shall be set to true for a global time master
                            that acts as a system-wide source of time information with
                            respect to global time.
                            It is possible that several global time masters exist that have
                            set this parameter set to true because the global time masters
                            exist once per global time domain and one ECU may start several
                            global time domains on different busses it is connected to.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="f48b8940-8446-11e4-b4a9-0800200c9a66"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(node:value(.) = &apos;true&apos;) and ((not(node:exists(./../StbMAllowSystemWideGlobalTimeMaster)) = &apos;true&apos;) or ((node:exists(./../StbMAllowSystemWideGlobalTimeMaster) = &apos;true&apos;) and (node:value(./../StbMAllowSystemWideGlobalTimeMaster) = &apos;false&apos;)))" 
                          true="For a MASTER time base, StbMIsSystemWideGlobalTimeMaster can only be set to TRUE, if StbMAllowSystemWideGlobalTimeMaster is set to TRUE! Please make sure that StbMAllowSystemWideGlobalTimeMaster is not enabled on a SLAVE time base!"/>
                  </v:var>
                  <v:var name="StbMNotificationInterface" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;
                                The parameter defines what type of interface shall be used to notify a customer of a status event.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="bc3a528a-6625-4347-80e5-2d4af03e732d"/>
                    <a:da name="DEFAULT" value="NO_NOTIFICATION"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(((node:value(.) = &apos;CALLBACK_AND_SR_INTERFACE&apos;) or (node:value(.) = &apos;SR_INTERFACE&apos;)) and (node:value(../../../StbMGeneral/StbMRteUsage) = &apos;false&apos;))" 
                          true="StbMNotificationInterface cannot be configured to CALLBACK_AND_SR_INTERFACE or SR_INTERFACE, if parameter StbMRteUsage is disabled!"/>
                    <a:da name="RANGE">
                      <a:v>NO_NOTIFICATION</a:v>
                      <a:v>CALLBACK</a:v>
                      <a:v>SR_INTERFACE</a:v>
                      <a:v>CALLBACK_AND_SR_INTERFACE</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="StbMStoreTimebaseNonVolatile" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;
                                This allows for specifying that the timebase shall be stored
                                in the NvRam.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="37a6cbe0-8447-11e4-b4a9-0800200c9a66"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>NO_STORAGE</a:v>
                      <a:v>STORAGE_AT_SHUTDOWN</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="StbMSyncLossTimeout" type="FLOAT">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              This attribute describes the timeout for the situation that the time
                              synchronization gets lost in the scope of the time domain.
                              Unit: seconds
                            &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="8e0934f0-8447-11e4-b4a9-0800200c9a66"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=4294"/>
                        <mt:tst expr="&gt;0.0"/>
                      </mt:range>
                      <mt:xpath 
                                true="The sync loss timeout must be at equal or greater than the duration of a MainFunction period." 
                                expr="node:value(.) &lt; node:value(../../../StbMGeneral/StbMMainFunctionPeriod)"/>
                    </a:da>
                  </v:var>
                  <v:var name="StbMSynchronizedTimeBaseIdentifier" 
                         type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;ID of a synchronized time-base via a unique identifier.&lt;/p&gt;
                            &lt;p&gt;
                              The value for this parameter can be calculated automatic or
                              manually entered.
                              Allowed ranges are:
                                  0..15     for Synchronized Time Bases
                                  16..31    for Offset Time Bases
                                  32..127   for Pure Local Time Bases
                                 123..65535 Reserved
                            &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                    <a:a name="UUID" 
                         value="ecbbfb26-c47a-43f3-8344-d9c091535d9a"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=65535"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath>
                        <mt:tst 
                                true="The parameter StbMSyncLossTimeout should not be activated for Pure TimeBases!" 
                                expr="(node:value(.) &gt;= 32) and (node:exists(./../StbMSyncLossTimeout))"/>
                        <mt:tst 
                                true="Pure TimeBases do not support Offset. The parameter StbMOffsetTimeBase should not be activated for Pure TimeBases!" 
                                expr="(node:value(.) &gt;= 32) and (node:exists(./../StbMOffsetTimeBase))"/>
                        <mt:tst 
                                true="Timeleap feature is not supported for Pure TimeBases. The parameters StbMClearTimeleapCount, StbMTimeLeapFutureThreshold and StbMTimeLeapPastThreshold should not be activated for Pure TimeBases!" 
                                expr="(node:value(.) &gt;= 32) and ((node:exists(./../StbMClearTimeleapCount)) or (node:exists(./../StbMTimeLeapFutureThreshold)) or (node:exists(./../StbMTimeLeapPastThreshold)))"/>
                        <mt:tst 
                                true="Slave Rate Correction and Offset Correction features are not supported for Pure TimeBases!" 
                                expr="((node:value(.) &gt;= 32) and ((node:exists(./../StbMTimeCorrection/StbMRateCorrectionMeasurementDuration)) or (node:exists(./../StbMTimeCorrection/StbMOffsetCorrectionJumpThreshold))))"/>
                        <mt:tst 
                                true="If StbMTimeCorrection is set to TRUE, but neither Master Rate Correction, Slave Rate Correction, nor Offset Correction are used, StbMTimeCorrection shall be deactivated!" 
                                expr="((node:exists(./../StbMTimeCorrection)) and (not(node:exists(./../StbMTimeCorrection/StbMAllowMasterRateCorrection))) and (not(node:exists(./../StbMTimeCorrection/StbMRateCorrectionMeasurementDuration))) and (not(node:exists(./../StbMTimeCorrection/StbMOffsetCorrectionJumpThreshold))))"/>
                        <mt:tst 
                                true="Either Master Rate Correction or Slave Rate Correction and Offset Correction features are supported, not both!" 
                                expr="((node:exists(./../StbMTimeCorrection/StbMAllowMasterRateCorrection)) and (node:exists(./../StbMTimeCorrection/StbMRateCorrectionMeasurementDuration)))"/>
                        <mt:tst 
                                true="Time Recording feature is not supported for Pure TimeBases. StbMTimeRecording parameter should not be activated for Pure TimeBases!" 
                                expr="(node:value(.) &gt;= 32) and (node:exists(./../StbMTimeRecording))"/>
                        <mt:tst 
                                true="StbMTimeValidation cannot be activated on an OFFSET time base!" 
                                expr="((((node:value(.) &gt;= 16)) and (not(node:value(.) &gt; 31))) and (node:exists(./../StbMTimeValidation)))"/>
                        <mt:tst 
                                true="StbMTimeValidation cannot be activated on a PURE time base!" 
                                expr="((((node:value(.) &gt;= 32)) and (not(node:value(.) &gt; 127))) and (node:exists(./../StbMTimeValidation)))"/>
                      </mt:xpath>
                    </a:da>
                  </v:var>
                  <v:ref name="StbMOffsetTimeBase" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to another time base.&lt;/p&gt;
                          &lt;p&gt;
                            In this case this reference is used, this time base
                            is treated as an offset time base.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="aa3cef5c-9bfd-4a02-bf8b-438e4ae0f614"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="node:refexists(.)" 
                             false="Reference to StbMSynchronizedTimeBase is invalid."/>
                      <a:tst 
                             expr="(node:refexists(.)) and (node:exists(node:ref(.)/StbMOffsetTimeBase))" 
                             true="An offset time base must not reference to another offset time base."/>
                      <a:tst 
                             expr="((node:refexists(.)) and (not(node:exists(node:ref(.)/StbMOffsetTimeBase))) and (node:value(./../StbMUseOSGetTimeStamp) = &apos;true&apos;))" 
                             true="An offset time base, referencing a valid synchronized time base, must not have StbMUseOSGetTimeStamp enabled!"/>
                    </a:da>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/StbM/StbMSynchronizedTimeBase"/>
                  </v:ref>
                  <v:var name="StbMClearTimeleapCount" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              This attribute describes the required number of updates to the
                              Time Base where the time difference to the previous value has to
                              remain below StbMTimeLeapPastThreshold/StbMTimeLeapFutureThreshold
                              until the TIMELEAP_PAST/TIMELEAP_FUTURE bit within timeBaseStatus of
                              the Time Base is cleared.
                            &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="8e0934f0-8447-11e4-b4a9-0800200c9a66"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=65535"/>
                        <mt:tst expr="&gt;=1"/>
                      </mt:range>
                    </a:da>
                  </v:var>
                  <v:var name="StbMTimeLeapFutureThreshold" type="FLOAT">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              This represents the maximum allowed positive difference between a newly
                              received Global Time Base value and the current Local Time Base value
                              [unit: seconds].
                            &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="8e0934f0-8447-11e4-b4a9-0800200c9a66"/>
                    <a:da name="DEFAULT" value="0.0"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;Infinity"/>
                      <a:tst expr="&gt;=0.0"/>
                    </a:da>
                  </v:var>
                  <v:var name="StbMTimeLeapPastThreshold" type="FLOAT">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              This represents the maximum allowed negative difference between the
                              current Local Time Base value and a newly received Global Time Base
                              value [unit: seconds].
                            &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="8e0934f0-8447-11e4-b4a9-0800200c9a66"/>
                    <a:da name="DEFAULT" value="0.0"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;Infinity"/>
                      <a:tst expr="&gt;=0.0"/>
                    </a:da>
                  </v:var>
                  <v:var name="StbMStatusNotificationCallback" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the customer specific status notification callback function,
                              which shall be called, if a non-masked status event occurs.
                            &lt;/p&gt;
                            &lt;p&gt;Naming example: &lt;code&gt;StbM_StatusNotificationCallback&lt;/code&gt;&lt;/p&gt;
                            &lt;p&gt;If the name of the Time Base is &lt;code&gt;StbMSync1&lt;/code&gt;, the generated
                            function name will be:&lt;/p&gt;
                            &lt;p&gt;&lt;code&gt;StbM_StatusNotificationCallbackStbMSync1&lt;/code&gt;&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:39782520-9fd9-4107-b204-1e3e19253cee"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:value(./../StbMNotificationInterface) = &apos;CALLBACK&apos; or node:value(./../StbMNotificationInterface) = &apos;CALLBACK_AND_SR_INTERFACE&apos;)" 
                          true="true" false="false"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="((node:value(.) = &apos;&apos;) and  ((node:value(./../StbMNotificationInterface) = &apos;CALLBACK&apos;) or (node:value(./../StbMNotificationInterface) = &apos;CALLBACK_AND_SR_INTERFACE&apos;)))" 
                             true="If StbMNotificationInterface parameter is equal to CALLBACK or CALLBACK_AND_SR_INTERFACE, then StbMStatusNotificationCallback must be configured to StbM_StatusNotificationCallback!"/>
                      <a:tst 
                             expr="node:exists(./../StbMStatusNotificationMask)" 
                             false="If this parameter is active the StbMStatusNotificationMask parameter should also be active."/>
                    </a:da>
                  </v:var>
                  <v:var name="StbMStatusNotificationMask" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The parameter defines the initial value for NotificationMask mask,
                              which defines the events for which the event notification callback
                              function shall be called.
                            &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:6bce2c95-96d5-428d-badf-a1541e69ff3a"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(node:value(./../StbMNotificationInterface) != &apos;NO_NOTIFICATION&apos;)" 
                          true="true" false="false"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=4294967295"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                      <mt:xpath 
                                true="If StbMNotificationInterface equals CALLBACK or SR_INTERFACE or CALLBACK_AND_SR_INTERFACE, StbMStatusNotificationMask shall be configured!" 
                                expr="((node:value(./../StbMNotificationInterface) != &apos;NO_NOTIFICATION&apos;)  and (node:value(.) = &apos;&apos;))"/>
                    </a:da>
                  </v:var>
                  <v:ctr name="StbMLocalTimeClock" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: References the hardware reference clock of this Synchronized Time Base."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:fa6338a8-afbe-4f71-86e8-2dc16d94e81d"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:var name="StbMClockFrequency" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Represents the frequency [Hz] of the HW reference clock used by the StbM.&lt;/p&gt; 
							  
							  &lt;p&gt;In case StbMLocalTimeHardware has a reference to Os or StbMUseOSGetTimeStamp is enabled for this time base,
							     StbMClockFrequency will not be used when converting Os ticks to nanoseconds, since Os provides an own macro to do this.&lt;/p&gt;
							  &lt;p&gt;StbMClockFrequency shall be configured to a value equal to Os frequency, in order to be mapped to the Header Element HWfrequency
                                 of the record table belonging to the Synchronized Time Base (if Time Recording is activated on the Time Base).
								 Otherwise, it does not matter what value it has.
							  &lt;/p&gt;
								 
							  &lt;p&gt;In case StbMLocalTimeHardware has a reference to EthTSyn, StbMClockFrequency will not be used when converting,
                                 because no conversion from ticks to nanoseconds will take place at StbM level.
							     It does not matter what value it has, StbM will always use a value of 1GHz.&lt;/p&gt;
							  
							  &lt;p&gt;In case StbMLocalTimeHardware has a reference to Gpt, StbMClockFrequency/StbMClockPrescaler factor will be used when converting Gpt ticks to nanoseconds,
							     and it is mandatory to configure both parameters. Typically the resulting frequency from the StbMClockFrequency/StbMClockPrescaler division
								 should be the same as the one from the Gpt channel.&lt;/p&gt;
							  &lt;p&gt;For the following frequencies:
							     10 kHz, 16 kHz, 1,001675 MHz, 2 MHz, 2.08 MHz, 3 MHz, 3.25 MHz, 3.5 MHz, 4 MHz,
		                         5 MHz, 6.25 MHz, 8 MHz, 10 MHz, 12.5 MHz, 15 MHz, 16 MHz, 20 MHz,
		                         24 Mhz, 24.55 Mhz, 25 MHz, 26 MHz, 32 MHz, 33,3 MHz, 37.5 MHz, 40 MHz,
		                         45 MHz, 48 MHz, 50 MHz, 55 MHz, 56 MHz, 60 MHz, 62.5 MHz, 64 MHz,
		                         70 MHz, 75 MHz, 80 MHz, 90 MHz, 96 MHz, 100 MHz, 110 MHz, 120 MHz,
		                         132 MHz, 133 MHz, 140 MHz, 125 MHz, 150 MHz, 160 MHz, 180 MHz, 200 MHz,
		                         240 MHz, 250 MHz, 264 MHz, 300 MHz, 330 MHz, 400 MHz, 800 MHz.
							     the conversion is done in a more precise way.
								 For other frequencies, a more general conversion takes place, which is less precise.
							  &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:8f90dad1-1648-4e13-a1a0-fdb54dc30e51"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=4294967295"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath 
                                  true="If GPT is configured as a time source for Virtual Local Time of this time base, the StbMClockFrequency parameter shall have a value different from zero." 
                                  expr="((node:value(./../../StbMUseOSGetTimeStamp) = &apos;false&apos;) and ((node:exists(./../StbMLocalTimeHardware)) and (node:exists(node:ref(./../StbMLocalTimeHardware)/../../GptChannelConfiguration)) and (node:value(./../StbMClockFrequency) = 0)))"/>
                      </a:da>
                    </v:var>
                    <v:var name="StbMClockPrescaler" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Represents the prescaler to calculate the resulting frequency of the HW reference clock used by the StbM.&lt;/p&gt; 
							  
							  &lt;p&gt;In case StbMLocalTimeHardware has a reference to Os or StbMUseOSGetTimeStamp is enabled for this time base,
							     StbMClockPrescaler will not be used when converting Os ticks to nanoseconds, since Os provides an own macro to do this.&lt;/p&gt;
							  &lt;p&gt;StbMClockPrescaler shall be configured, in order to be mapped to the Header Element HWfrequency
                                 of the record table belonging to the Synchronized Time Base (if Time Recording is activated on the Time Base).
								 Otherwise, it does not matter what value it has.
							  &lt;/p&gt;
								 
							  &lt;p&gt;In case StbMLocalTimeHardware has a reference to EthTSyn, StbMClockPrescaler will not be used when converting,
                                 because no conversion from ticks to nanoseconds will take place at StbM level.
							     It does not matter what value it has, StbM will always use a value of 1.&lt;/p&gt;
							  
							  &lt;p&gt;In case StbMLocalTimeHardware has a reference to Gpt, StbMClockFrequency/StbMClockPrescaler factor will be used when converting Gpt ticks to nanoseconds,
							     and it is mandatory to configure both parameters. Typically StbMClockPrescaler shall be configured in such a manner that 
								 the resulting frequency from the StbMClockFrequency/StbMClockPrescaler division
								 should be the same as the one from the Gpt channel.&lt;/p&gt;
							  &lt;p&gt;For the following frequencies:
							     10 kHz, 16 kHz, 1,001675 MHz, 2 Mhz, 2.08 Mhz, 3 MHz, 3.25 MHz, 3.5 MHz, 4 MHz,
		                         5 MHz, 6.25 MHz, 8 MHz, 10 MHz, 12.5 MHz, 15 MHz, 16 MHz, 20 MHz,
		                         24 Mhz, 24.55 Mhz, 25 MHz, 26 MHz, 32 MHz, 33,3 MHz, 37.5 MHz, 40 MHz,
		                         45 MHz, 48 MHz, 50 MHz, 55 MHz, 56 MHz, 60 MHz, 62.5 MHz, 64 MHz,
		                         70 MHz, 75 MHz, 80 MHz, 90 MHz, 96 MHz, 100 MHz, 110 MHz, 120 MHz,
		                         132 MHz, 133 MHz, 140 MHz, 125 MHz, 150 MHz, 160 MHz, 180 MHz, 200 MHz,
		                         240 MHz, 250 MHz, 264 MHz, 300 MHz, 330 MHz, 400 MHz, 800 MHz.
							     the conversion is done in a more precise way.
								 For other frequencies, a more general conversion takes place, which is less precise.
							  &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:77a2eb1e-2e6d-422c-9ce3-5f5f7016432a"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=4294967295"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath 
                                  true="If GPT is configured as a time source for Virtual Local Time of this time base, the StbMClockPrescaler parameter shall have a value different from zero." 
                                  expr="((node:value(./../../StbMUseOSGetTimeStamp) = &apos;false&apos;) and ((node:exists(./../StbMLocalTimeHardware)) and (node:exists(node:ref(./../StbMLocalTimeHardware)/../../GptChannelConfiguration)) and (node:value(./../StbMClockPrescaler) = 0)))"/>
                      </a:da>
                    </v:var>
                    <v:ref name="StbMLocalTimeHardware" type="CHOICE-REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the local time hardware.&lt;/p&gt;
                              &lt;p&gt;
                                In case a reference to Os is used,
                                the designated OS counter has to be configured properly:
                              &lt;/p&gt;
                              &lt;ol&gt;
                                &lt;li&gt;the counter is directly driven by a HW timer&lt;/li&gt;
                                &lt;li&gt;the counter&apos;s &lt;code&gt;OsCounterTicksPerBase&lt;/code&gt; is one tick
                                in x nanoseconds [ns]&lt;/li&gt;
                              &lt;/ol&gt;
                              &lt;p&gt;
                                In case a reference to EthTSyn is used, the following shall happen: the underlying Eth
                                driver shall support hardware timestamping.
                              &lt;/p&gt;

							                &lt;p&gt;
                                In case a reference to a Gpt is used,
                                the frequency shall be configured in such a manner, that the resulting frequency
								                to be equal to the Gpt Channel Frequency.
                              &lt;/p&gt;
							  
							               &lt;p&gt;
                                Attention (EthTSyn): This reference must point to a time domain
                                which is connected to this time base. In detail this means
                                that the time domain referenced by this parameter must refer
                                to this time base in turn.
                              &lt;/p&gt;
							  
							                &lt;p&gt;
                                Attention (for SYNC/PURE time bases): StbMLocalTimeHardware can be left empty for SYNC/PURE time bases,
								                if and only if, StbMUseOSGetTimeStamp is enabled.
                              &lt;/p&gt;
							  
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="UUID" 
                           value="ECUC:99851e3c-5734-4f0a-9509-d90a8a1434b2"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="((node:value(./../../StbMUseOSGetTimeStamp) = &apos;false&apos;) and (not(node:refvalid(.))))" 
                               true="When StbMUseOSGetTimeStamp is disabled, a reference to either Os, Gpt or EthTSyn, shall be configured!"/>
                        <a:tst 
                               expr="((node:value(./../../StbMUseOSGetTimeStamp) = &apos;false&apos;) and (node:refvalid(.) and node:exists(node:ref(.)/../../OsCounter) and (node:ref(.)/OsCounterTicksPerBase = 0)))" 
                               true="The referenced counter&apos;s OsCounterTicksPerBase parameter value must be different than 0!"/>
                        <a:tst 
                               expr="(node:refvalid(.)) and (node:value(./../../StbMUseOSGetTimeStamp) = &apos;true&apos;)" 
                               true="A StbMLocalTimeHardware reference shall be configured, or OSGetTimeStamp shall be set to TRUE, not both!"/>
                        <a:tst 
                               expr="((not(node:exists(./../../StbMOffsetTimeBase))) and ((node:value(./../../StbMUseOSGetTimeStamp) = &apos;false&apos;) and (not(node:refexists(.)))))" 
                               true="For a SYNCHRONIZED/PURE time base, either StbMLocalTimeHardware shall exists, or StbMUseOSGetTimeStamp shall be enabled!"/>
                        <a:tst 
                               expr="(node:refvalid(.)) and (node:exists(node:ref(.)/../../EthTSynGlobalTimeDomain)) and (node:exists(node:ref(.)/EthTSynPortConfig)) and ((not(node:empty(node:ref(.)/EthTSynGlobalTimeEthIfRef))) and (node:exists(node:ref(node:ref(.)/EthTSynGlobalTimeEthIfRef)/../../../EthIfGeneral/EthIfGlobalTimeSupport)) and (node:value(node:ref(node:ref(.)/EthTSynGlobalTimeEthIfRef)/../../../EthIfGeneral/EthIfGlobalTimeSupport) = &apos;false&apos;))" 
                               true="If StbMLocalTimeHardware references an EthTSynGlobalTimeDomain, EthIfGlobalTimeSupport shall be set to TRUE, in order to have access to EthIf_GetCurrentTime API!"/>
                        <a:tst 
                               expr="(node:refvalid(.)) and (node:exists(node:ref(.)/../../EthTSynGlobalTimeDomain)) and (node:value(node:ref(.)/EthTSynGlobalTimeDomainId) &gt; 15)" 
                               true="StbMLocalTimeHardware of an StbM time base shall not reference an OFS EthTSynGlobalTimeDomain!"/>
                        <a:tst 
                               expr="((node:refvalid(.)) and (node:value(./../../StbMUseOSGetTimeStamp) = &apos;false&apos;) and ((node:exists(node:ref(.)/../../EthTSynGlobalTimeDomain) = &apos;true&apos;) and (node:empty(node:ref(.)/EthTSynGlobalTimeEthIfRef) = &apos;true&apos;)))" 
                               true="When StbMUseOSGetTimeStamp is disabled and a reference to EthTSyn is used, EthTSynGlobalTimeEthIfRef shall reference an EthIf controller!"/>
                      </a:da>
                      <a:da name="REF">
                        <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/EthTSyn/EthTSynGlobalTimeDomain</a:v>
                        <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsCounter</a:v>
                        <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Gpt/GptChannelConfigSet/GptChannelConfiguration</a:v>
                      </a:da>
                    </v:ref>
                  </v:ctr>
                  <v:lst name="StbMNotificationCustomer" type="MAP">
                    <a:da name="INVALID" type="XPath" 
                          expr="node:isconsecutive(./*/StbMNotificationCustomerId,0)" 
                          false="StbMNotificationCustomerId shall be consecutive and start with Id 0."/>
                    <a:da name="MIN" value="0"/>
                    <v:ctr name="StbMNotificationCustomer" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                EN: This container holds the configuration of a notification customer, which is notified is informed about the occurrence of a Time-base related event.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:af461e1b-abdf-4e1b-9382-cbfe1705b9c2"/>
                      <a:da name="EDITABLE" value="true"/>
                      <v:var name="StbMNotificationCustomerId" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  EN: Identification of a event notification customer.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:8887ed5a-f808-4a63-b669-1f2798058a58"/>
                        <a:da name="EDITABLE" value="true"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=65535"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:var name="StbMTimeNotificationCallback" 
                             type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  EN: Name of the customer specific notification callback function, which shall be called, if the time previously set by the customer is reached.
                                &lt;/p&gt;
                                &lt;p&gt;The name of the StbMTimeNotificationCallback shall be configured to: &lt;code&gt;TimeNotificationCallback&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;The callback will be generated like this: &lt;code&gt;[Customer]_TimeNotificationCallback[TimeBase]&lt;/code&gt;&lt;/p&gt;
                                &lt;p&gt;If the name of the Time Base is &lt;code&gt;StbMSynchronizedTimeBase_0_Sync&lt;/code&gt;,
                                   and the name of the Notification Customer is &lt;code&gt;NotificationCustomer_1&lt;/code&gt;
                                   the generated function name will be:&lt;/p&gt;
                                &lt;p&gt;&lt;code&gt; NotificationCustomer_1_TimeNotificationCallbackStbMSynchronizedTimeBase_0_Sync&lt;/code&gt;&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:8cf64d77-c567-4c56-8f3f-f61eb597a8a6"/>
                        <a:da name="EDITABLE" value="true"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="((node:exists(.)) and (node:value(.) = &apos;&apos;))" 
                              true="If StbMTimeNotificationCallback parameter is enabled, please configure a name for the TimeNotification callback!"/>
                      </v:var>
                    </v:ctr>
                  </v:lst>
                  <v:ctr name="StbMTimeCorrection" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: Collects the information relevant for the rate- and offset correction of a Time Base."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:470ce21a-f5a3-44c7-8b8a-e9c04f5619e3"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="node:exists(StbMOffsetCorrectionJumpThreshold) and node:exists(StbMOffsetCorrectionAdaptionInterval) and ((num:f(node:value(StbMOffsetCorrectionJumpThreshold))) div (num:f(node:value(StbMOffsetCorrectionAdaptionInterval)))) &gt; (2.068)" 
                          true="The result of the division between StbMOffsetCorrectionJumpThreshold and StbMOffsetCorrectionAdaptionInterval must no exceed 2.068 !"/>
                    <v:var name="StbMAllowMasterRateCorrection" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;EN: This attribute describes whether the rate correction value of a Time Base can be set by StbM_SetRateCorrection():&lt;/p&gt;
                          &lt;p&gt;- false: the rate correction value can not be set by StbM_SetRateCorrection()&lt;/p&gt;
                          &lt;p&gt; - true: the rate correction value can be set by StbM_SetRateCorrection()&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:b2e9cbf0-a6cc-4df7-bc43-72d64ecb83b1"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(((node:exists(.)) and (node:value(.) = &apos;true&apos;)) and ((not(node:exists(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit))) or ((node:exists(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit)) and (node:value(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit) = &apos;false&apos;))))" 
                               true="If Master Rate Correction is intended to be used (StbMAllowMasterRateCorrection is set to TRUE), BaseTypes64bit shall be activated in Base module!"/>
                        <a:tst 
                               expr="(node:value(.) = &apos;true&apos;) and (not(node:exists(./../StbMMasterRateDeviationMax)))" 
                               true="If the value of this node is true, StbMMasterRateDeviationMax should also be activated."/>
                      </a:da>
                    </v:var>
                    <v:var name="StbMMasterRateDeviationMax" type="INTEGER">
                      <a:a name="DESC" 
                           value="EN: This attribute describes the maximum allowed absolute value of the rate deviation value to be set by StbM_SetRateCorrection() [unit: ppm]."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:a807fe9b-0e6d-43ff-bb74-6cff7ce4d07d"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=32000"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="StbMOffsetCorrectionAdaptionInterval" 
                           type="FLOAT">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;EN: Defines the interval during which the adaptive rate correction cancels out the rate- and time deviation [unit: seconds].&lt;/p&gt; 
                              &lt;p&gt;Note: If the StbMOffsetCorrectionJumpThreshold parameter is disabled, or it&apos;s value is 0, StbMOffsetCorrectionAdaptionInterval is not used.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:1d86529a-589b-410b-b435-2fcf4aad9012"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=5"/>
                        <a:tst expr="&gt;0.0"/>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="not(node:exists(./../StbMOffsetCorrectionJumpThreshold))" 
                            true="This parameter does not have any effect without the StbMOffsetCorrectionJumpThreshold parameter activated!"/>
                    </v:var>
                    <v:var name="StbMOffsetCorrectionJumpThreshold" 
                           type="FLOAT">
                      <a:a name="DESC" 
                           value="EN: Threshold for the correction method. Deviations below this value will be corrected by a linear reduction over a defined timespan. Values equal- and greater than this value will be corrected by immediately setting the correct time- and rate in form of a jump [unit: seconds]."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:6bd98c9d-622d-46ab-a0b8-115607bbc6ea"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=15"/>
                          <mt:tst expr="&gt;=0.0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst 
                                  true="Offset Correction can not be used without Rate Correction, please enable the StbMRateCorrectionMeasurementDuration parameter!" 
                                  expr="not(node:exists(./../StbMRateCorrectionMeasurementDuration))"/>
                          <mt:tst 
                                  true="Offset Correction can not be used for Offset time bases!" 
                                  expr="node:exists(./../../StbMOffsetTimeBase)"/>
                          <mt:tst 
                                  true="If this parameter is activated, StbMOffsetCorrectionAdaptionInterval should also be activated!" 
                                  expr="not(node:exists(./../StbMOffsetCorrectionAdaptionInterval))"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                    <v:var name="StbMRateCorrectionMeasurementDuration" 
                           type="FLOAT">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;EN: Definition of the time span [s] which is used to calculate the rate deviation.&lt;/p&gt; 
                              &lt;p&gt;The StbMRateCorrectionMeasurementDuration parameter, and the resynchronization
                              time of the StbM should be configured in a way that:&lt;/p&gt;
                              &lt;p&gt;- the difference (TGstop - TGstart)&lt;/p&gt;
                              &lt;p&gt;and&lt;/p&gt;
                              &lt;p&gt;- the difference (TVstop - Tvstart),&lt;/p&gt;
                              &lt;p&gt;do not exceed the value of 15 seconds.&lt;/p&gt;
                              &lt;p&gt;These are part of the rate correction calculation formula, (rrc = (TGStop ? TGStart) / (TVStop- TVStart)).
                              If they do exceed the above value, an overflow could emerge when calculating the Rate Correction.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:89193384-5b70-44d3-bd65-ec80b1d2e55c"/>
                      <a:da name="DEFAULT" value="1.0"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=14"/>
                          <mt:tst expr="&gt;=0.0"/>
                        </mt:range>
                        <mt:xpath 
                                  true="If Slave Rate Correction is intended to be used (StbMAllowMasterRateCorrection is set to FALSE and StbMRateCorrectionMeasurementDuration different from 0), BaseTypes64bit shall be activated in Base module!" 
                                  expr="(((node:exists(.)) and (node:value(.) != 0)) and ((not(node:exists(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit))) or ((node:exists(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit)) and (node:value(as:modconf(&apos;Base&apos;)[1]/BaseTypes/BaseTypes64bit) = &apos;false&apos;))))"/>
                      </a:da>
                    </v:var>
                    <v:var name="StbMRateCorrectionsPerMeasurementDuration" 
                           type="INTEGER">
                      <a:a name="DESC" 
                           value="EN: Number of simultaneous rate measurements to determine the current rate deviation."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:f3168974-38ae-4164-9d56-8ebab743042e"/>
                      <a:da name="DEFAULT" value="1"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=65535"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                  <v:ctr name="StbMTimeRecording" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: Collects the information relevant for configuration of the precision measurement of a Time Base."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:b0120a44-ce38-4aff-9773-85b00de861b1"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(node:exists(./StbMOffsetTimeRecordTableBlockCount)) and (node:value(./StbMOffsetTimeRecordTableBlockCount) = 0) and (node:exists(./StbMSyncTimeRecordTableBlockCount)) and (node:value(./StbMSyncTimeRecordTableBlockCount) = 0)" 
                          true="Both StbMOffsetTimeRecordTableBlockCount and StbMSyncTimeRecordTableBlockCount can not be zero at the same time, please make one greater than zero, or disable StbMTimeRecording for this time base!"/>
                    <v:var name="StbMOffsetTimeRecordBlockCallback" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC" 
                           value="EN: Name of the customer specific callback function, which shall be called, if a measurement data for a Offset Time Base are available."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:e90d79c5-0e03-41c2-be6a-b0ebc038143e"/>
                      <a:da name="ENABLE" value="false"/>
                    </v:var>
                    <v:var name="StbMOffsetTimeRecordTableBlockCount" 
                           type="INTEGER">
                      <a:a name="DESC" 
                           value="EN: Represents the number of Blocks used for queing time measurement events for the Offset Time Base Record Table."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:638d4d87-9937-4298-9e81-b24e064b73fa"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=65535"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst 
                                  true="StbMOffsetTimeRecordTableBlockCount is equal to 0, please don&apos;t configure a callback with the StbMOffsetTimeRecordBlockCallback parameter!" 
                                  expr="(node:exists(./../StbMOffsetTimeRecordBlockCallback)) and (node:value(.) = 0)"/>
                          <mt:tst 
                                  true="StbMOffsetTimeRecordTableBlockCount is greater than 0, but StbMOffsetTimeBase is not active, please activate it if this is meant to be an offset time base!" 
                                  expr="(not(node:exists(./../../StbMOffsetTimeBase))) and (node:value(.) != 0)"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                    <v:var name="StbMSyncTimeRecordBlockCallback" 
                           type="FUNCTION-NAME">
                      <a:a name="DESC" 
                           value="EN: Name of the customer specific callback function, which shall be called, if a measurement data for a Synchronized Time Base are available."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:394d1251-9b73-43d0-9324-d73636ba28b3"/>
                      <a:da name="ENABLE" value="false"/>
                    </v:var>
                    <v:var name="StbMSyncTimeRecordTableBlockCount" 
                           type="INTEGER">
                      <a:a name="DESC" 
                           value="EN: Represents the number of Blocks used for queuing time measurement events for the Synchronized Time Base Record Table."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:88d10345-6f2a-4656-b8b3-8bb070a4138c"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=65535"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath>
                          <mt:tst 
                                  true="StbMSyncTimeRecordTableBlockCount is equal to 0, please don&apos;t configure a callback with the StbMSyncTimeRecordBlockCallback parameter!" 
                                  expr="(node:exists(./../StbMSyncTimeRecordBlockCallback)) and (node:value(.) = 0)"/>
                          <mt:tst 
                                  true="StbMSyncTimeRecordTableBlockCount is greater than 0, but neither StbMLocalTimeHardware nor StbMUseOSGetTimeStamp is active, please activate one of them, if this is meant to be a sync time base!" 
                                  expr="(not(node:exists(./../../StbMLocalTimeClock/StbMLocalTimeHardware))) and (node:value(./../../StbMUseOSGetTimeStamp) = &apos;false&apos;) and (node:value(.) != 0)"/>
                        </mt:xpath>
                      </a:da>
                    </v:var>
                  </v:ctr>
                  <v:ref name="StbMGlobalNvMBlockDescriptor" 
                         type="SYMBOLIC-NAME-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Reference to NVRAM block
                            containing the non volatile data.&lt;/p&gt;
                  
                            &lt;p&gt;Index of the NvMBlockDescriptor will be
                            used by the StbM module for the identification
                            of the NvM block&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Global NVRAM Block Descriptor"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="95ab0472-3024-496d-a805-5474bf8a784e"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="((node:exists(./../StbMStoreTimebaseNonVolatile)) and (node:value(./../StbMStoreTimebaseNonVolatile) = &apos;STORAGE_AT_SHUTDOWN&apos;))" 
                          true="true" false="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="((node:exists(./../StbMStoreTimebaseNonVolatile)) and (node:value(./../StbMStoreTimebaseNonVolatile) = &apos;STORAGE_AT_SHUTDOWN&apos;)) and (node:empty(.))" 
                          true="If StbMStoreTimebaseNonVolatile is set to STORAGE_AT_SHUTDOWN, a reference to a NvM Block shall exist!)"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/NvM/NvMBlockDescriptor"/>
                  </v:ref>
                  <v:var name="StbMUseOSGetTimeStamp" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The time source of this Time Base will be given by calling OS_GetTimeStamp.
                            &lt;/p&gt;
                            &lt;p&gt;
                              Please make sure StbMLocalTimeClock is enabled and StbMLocalTimeHardware is left empty.
                            &lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;True: Enabled&lt;/li&gt;
                              &lt;li&gt;False: Disabled&lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="58ad803d-3be8-4640-b77e-6bf323cd45ac"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="StbMProvideDataInSharedMemory" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The StbM provides the offset of the local time of this time base with respect to the Eth HwCounter.
                              The value is provided to a shared location that should be mapped by the integrator
                              in order for the value to be used by other &apos;user&apos; modules.
                            &lt;/p&gt;
                            &lt;p&gt;
                              MemMap section: VAR_STBM_SHARED_TIME_DATA
                            &lt;/p&gt;
                            &lt;p&gt;
                              IMPORTANT : this must be activated only for Synchronized Time Bases that have a reference to a
                              EthTSynGlobalTimeDomain (an Eth Driver), or for Offset Time Bases that have a reference to a
                              Synchronized Time Base as described above.
                            &lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;True: Enabled&lt;/li&gt;
                              &lt;li&gt;False: Disabled&lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="58ad803d-3be8-4640-b77e-6bf323cd45ac"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="(node:value(.) = &apos;true&apos;) and (not(node:exists(../StbMOffsetTimeBase))) and (not(node:exists(node:refs(../StbMLocalTimeClock/StbMLocalTimeHardware)/../../EthTSynGlobalTimeDomain)))" 
                             true="StbMProvideDataInSharedMemory must not be used for Time Bases that are not using an EthTSynGlobalTimeDomain as reference (Offset time bases are an exception)!"/>
                      <a:tst 
                             expr="(node:value(.) = &apos;true&apos;) and (node:exists(../StbMOffsetTimeBase)) and (not(node:exists(node:refs(node:refs(../StbMOffsetTimeBase)/StbMLocalTimeClock/StbMLocalTimeHardware)/../../EthTSynGlobalTimeDomain)))" 
                             true="StbMProvideDataInSharedMemory must not be used for Offset Time Bases that are referencing Synchronized Time Bases which are not using an EthTSynGlobalTimeDomain as reference!"/>
                    </a:da>
                  </v:var>
                  <v:ctr name="StbMTimeValidation" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: Container with Time Validation configuration for Time Base."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:50cf10ce-8458-4d82-b50d-9e1237422a41"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:var name="StbMTimeValidationRecordTableBlockCount" 
                           type="INTEGER">
                      <a:a name="DESC" 
                           value="EN: Size of record table for Time Validation (number of blocks)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="M4_ECUC_ORIGIN_ASRR20-11"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:29d9c4a8-83c8-4289-acee-85efa05dd592"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=65535"/>
                          <mt:tst expr="&gt;=0"/>
                        </mt:range>
                        <mt:xpath 
                                  true="If StbMTimeValidation is intended to be used, StbMTimeValidationRecordTableBlockCount cannot be zero!" 
                                  expr="(node:value(.) = 0)"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <v:lst name="StbMTriggeredCustomer" type="MAP">
                <a:da name="MIN" value="0"/>
                <v:ctr name="StbMTriggeredCustomer" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          The triggered customer is directly triggered by the Synchronized
                          Timebase Manager by getting synchronized with the current (global)
                          definition of time and passage of time.
                        &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                  <a:a name="UUID" value="fbd31fd8-96cf-46ba-87f7-cbb35d03f07e"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="node:refexists(StbMSynchronizedTimeBaseRef) and                             node:refexists(StbMOSScheduleTableRef) and                             node:refexists(node:ref(StbMSynchronizedTimeBaseRef)/StbMLocalTimeClock/StbMLocalTimeHardware) and                             node:refexists(node:ref(StbMOSScheduleTableRef)/OsScheduleTableCounterRef) and                             node:path(node:ref(node:ref(StbMSynchronizedTimeBaseRef)/StbMLocalTimeClock/StbMLocalTimeHardware)) = node:path(node:ref(node:ref(StbMOSScheduleTableRef)/OsScheduleTableCounterRef))" 
                        true="The triggered schedule table (StbMOSScheduleTableRef) must not be driven by the same Os counter as the synchronized time base (StbMSynchronizedTimeBaseRef)."/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(not(node:exists(StbMScheduleTableClockFreq)))" 
                        true="If StbMScheduleTableClockFreq is not used, a more general conversion of nanoseconds to ticks will take place, which is less precise and the scheduling of the ScheduleTable might be imprecise!"/>
                  <v:var name="StbMTriggeredCustomerPeriod" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Triggering period of the triggered customer called by the
                          StbM_MainFunction.&lt;/p&gt;
                          &lt;p&gt;Note: The Triggering period value is configured in [us].&lt;/p&gt;
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="false"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="1886c48e-a915-451a-9fbd-5b23d403264a"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4294967295"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:ref name="StbMOSScheduleTableRef" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Reference to synchronized OS ScheduleTables.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="f35b908a-fb9b-4936-83d8-43a19d637f68"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="node:refexists(.)" 
                             false="Reference to OsScheduleTable is invalid."/>
                      <a:tst 
                             expr="text:uniq(../../*/StbMOSScheduleTableRef, .)" 
                             false="The StbMOSScheduleTableRef reference must be unique within the &quot;Triggered Customers&quot; configuration list."/>
                      <a:tst 
                             expr="node:refexists(.) and                               node:exists(node:ref(.)/OsScheduleTableSync) and                               node:value(node:ref(.)/OsScheduleTableSync/OsScheduleTblSyncStrategy) != &apos;EXPLICIT&apos;" 
                             true="OsScheduleTable must use explicit synchronization."/>
                      <a:tst 
                             expr="node:refexists(.) and                               not(node:refexists(node:ref(.)/OsScheduleTableCounterRef))" 
                             true="The referenced schedule table must contains a valid Os counter reference."/>
                      <a:tst 
                             expr="node:value(node:ref(.)/OsScheduleTableDuration) = 0" 
                             true="The OsScheduleTableDuration of the referenced OsScheduleTable, must not be 0!"/>
                    </a:da>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsScheduleTable"/>
                  </v:ref>
                  <v:ref name="StbMSynchronizedTimeBaseRef" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the mandatory required synchronized time-base.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="a16a1638-a600-4ca4-b9d7-01cd0107b55a"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="node:refexists(.)" 
                             false="Reference to StbMSynchronizedTimeBase is invalid."/>
                      <a:tst 
                             expr="node:refexists(.) and                               node:exists(node:ref(.)/StbMOffsetTimeBase)" 
                             true="StbMSynchronizedTimeBaseRef must not refer to an offset time base."/>
                    </a:da>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/StbM/StbMSynchronizedTimeBase"/>
                  </v:ref>
                  <v:var name="StbMScheduleTableClockFreq" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;
                                 This parameter defines the Clock Frequency [Hz] that drives the ScheduleTable.
                                 It is needed to be able to determine nanoseconds to ticks conversion in the most precise way.
                              &lt;/p&gt; 
							  &lt;p&gt;
                                 For the following frequencies:
							     10 kHz, 16 kHz, 1,001675 MHz, 2 Mhz, 2.08 Mhz, 3 MHz, 3.25 MHz, 3.5 MHz, 4 MHz,
		                         5 MHz, 6.25 MHz, 8 MHz, 10 MHz, 12.5 MHz, 15 MHz, 16 MHz, 20 MHz,
		                         24 Mhz, 24.55 Mhz, 25 MHz, 26 MHz, 32 MHz, 33,3 MHz, 37.5 MHz, 40 MHz,
		                         45 MHz, 48 MHz, 50 MHz, 55 MHz, 56 MHz, 60 MHz, 62.5 MHz, 64 MHz,
		                         70 MHz, 75 MHz, 80 MHz, 90 MHz, 96 MHz, 100 MHz, 110 MHz, 120 MHz,
		                         132 MHz, 133 MHz, 140 MHz, 125 MHz, 150 MHz, 160 MHz, 180 MHz, 200 MHz,
		                         240 MHz, 250 MHz, 264 MHz, 300 MHz, 330 MHz, 400 MHz, 800 MHz.
							     the conversion is done in a more precise way.
								 For other frequencies, a more general conversion takes place, which is less precise.
							  &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9faa822c-47ed-4d0f-8c5d-5ec78db7dd94"/>
                    <a:da name="EDITABLE" value="true"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4294967295"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="StbMScheduleTicksToNsConvFactor" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;
                                 This parameter defines a factor that would help obtain better results when converting nanoseconds to ticks.
                              &lt;/p&gt; 
							  &lt;p&gt;
                                 To improve the accuracy based on usage of the existing macros OS_TICKS2NS_xxx,
                                 the calculation could also be done differently to avoid large rounding effects on usage of small numbers as parameters to OS_TICKS2NS_xxx().
                              &lt;/p&gt;
                              &lt;p&gt;
                                 Instead of  nanoseconds / OS_TICKS2NS_[!&quot;$StbMOsCounterId&quot;!]( 1U),  nanoseconds * factor / OS_TICKS2NS_[!&quot;$StbMOsCounterId&quot;!](factor) formula is used,
                                 which reduces the theoretical maximum error at least by factor.
                              &lt;/p&gt;
                              &lt;p&gt;                              
                                 For the given example of 80 MHz, using a factor of 2 would already reduce the error to 0 as there wouldn&apos;t be any error due to rounding on the integer calculations:
                              &lt;/p&gt;
                              &lt;p&gt;
                                 OS_TICKS2NS_xx( 2 )   =  2 * 5  /  2  * 5    = 25    (is the exact value of 2 ticks)
                              &lt;/p&gt;
                              &lt;p&gt;
                                 compared to
                              &lt;/p&gt;
                              &lt;p&gt;
                                 OS_TICKS2NS_xx( 1 )   =  1 * 5  /  2  *  5   = 10   (instead of the exact value 12.5 for 1 tick)
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="false"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="181aac73-19ab-4c64-abe8-658c413b4651"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="EDITABLE" value="true"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:lst>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/StbM"/>
              <v:lst name="StbMBswModules" type="MAP">
                <a:da name="MIN" value="0"/>
                <a:da name="WARNING" type="XPath" expr="count(./*) = 0" 
                      true="For a full integration, please make sure that all BusTSyn modules which are referring StbM TimeBases are present in StbMBswModules list and if EthTSyn is used as a time reference, EthTSyn shall also be added in the StbMBswModules list. Please refer to the Limitations documentation for more details."/>
                <v:ctr name="StbMBswModules" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the schemaNode path of an adjacent BSW module.&lt;/p&gt;
                          &lt;p&gt;
                            Each container describes a specific BSW module adjacent to
                            and controlled by the StbM.
                          &lt;/p&gt;
                          &lt;p&gt;
                            There are three preconditions to fully integrate a BSW module to the StbM:
                          &lt;/p&gt;
                          &lt;p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;The BSW module shall provide a property file defining specific parameters.&lt;/li&gt;
                              &lt;li&gt;This property file shall be registered at startup of tresos Studio.&lt;/li&gt;
                              &lt;li&gt;The BWM module shall be added to this list (by its schemaNode path).&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                          &lt;p&gt;
                            The StbM considers the property files of all BSW module defined here.
                            Modules without property file must not be defined in this list.
                          &lt;/p&gt;
                          &lt;p&gt;
                            A BSW module without a property file is not fully integrated and suffers the following limitations:
                          &lt;/p&gt;
                          &lt;p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;StbM can not control a master time domain of this BSW module.&lt;/li&gt;
                              &lt;li&gt;StbM can not use a possible hardware timestamp capability of this BSW module.&lt;/li&gt;
                              &lt;li&gt;The StbM configuration must contain a reserved time base for this BSW module.&lt;/li&gt;
                              &lt;li&gt;Parameter StbMDevErrorDetect must be disabled.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                          &lt;p&gt;
                            A BSW module with a property file shall define the following parameters for successful integration:
                          &lt;/p&gt;
                          &lt;p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;Name of module config.&lt;/li&gt;
                              &lt;li&gt;List of header files for inclusion.&lt;/li&gt;
                              &lt;li&gt;List of time base references of master time domains.&lt;/li&gt;
                              &lt;li&gt;List of time base references of slave time domains.&lt;/li&gt;
                              &lt;li&gt;Support of hardware timestamps.&lt;/li&gt;
                              &lt;li&gt;Name of time getter API.&lt;/li&gt;
                              &lt;li&gt;Name of time setter API.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:da name="INVALID" type="XPath" 
                        expr="count(as:modconf(node:name(.))) = 0" 
                        true="Container name must be identical with the schemaNode path of the adjacent module."/>
                </v:ctr>
              </v:lst>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
