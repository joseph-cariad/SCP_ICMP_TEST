<?xml version="1.0" encoding="UTF-8"?>
<nvm:blocks xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.tresos.de/_project/AutoCore/nvm.blocks_1.xsd"
    xmlns:nvm="http://www.tresos.de/_project/AutoCore/nvm.blocks_1.xsd">

    <block name="NVM_BLOCK_STBM_SYNC_TIMEBASE"
        base="as:modconf('StbM')[1]/StbMSynchronizedTimeBase/*[not(node:exists(StbMOffsetTimeBase))]"
        suffix="concat( '_',node:value(./StbMSynchronizedTimeBaseIdentifier))">
        <enable type="XPATH"
                value="((node:exists(./StbMStoreTimebaseNonVolatile)) and (node:value(./StbMStoreTimebaseNonVolatile) = 'STORAGE_AT_SHUTDOWN'))" />
        <updateReference
            value="./StbMGlobalNvMBlockDescriptor" />
        <type value="native" />
        <length type="XPATH"
            value="num:i(16)" />
        <crc value="CRC16" />
        <calcRamBlockCrc value="true" />
        <ramBlockDataAddress type="XPATH" 
            value="concat('&amp;StbM_TimeStamps[', (node:value(./StbMSynchronizedTimeBaseIdentifier)), '].globalTime')" />
        <readonly value="false" />
        <resistantToChangedSw value="false" />
        <restoreAtStart value="true" />
        <storeAtShutdown value="true"/>
        <writeOnlyOnce value="false" />
    </block>

    <block name="NVM_BLOCK_STBM_OFFSET_TIMEBASE"
        base="as:modconf('StbM')[1]/StbMSynchronizedTimeBase/*[node:exists(StbMOffsetTimeBase)]"
        suffix="concat( '_',node:value(./StbMSynchronizedTimeBaseIdentifier))">
        <enable type="XPATH"
                value="((node:exists(./StbMStoreTimebaseNonVolatile)) and (node:value(./StbMStoreTimebaseNonVolatile) = 'STORAGE_AT_SHUTDOWN'))" />
        <updateReference
            value="./StbMGlobalNvMBlockDescriptor" />
        <type value="native" />
        <length type="XPATH"
            value="num:i(16)" />
        <crc value="CRC16" />
        <calcRamBlockCrc value="true" />
        <ramBlockDataAddress type="XPATH" 
            value="concat('&amp;StbM_TimeStamps[', ((node:value(./StbMSynchronizedTimeBaseIdentifier) - 16) + (num:i(count(as:modconf('StbM')[1]/StbMSynchronizedTimeBase/*[not(node:exists(StbMOffsetTimeBase))])))), '].globalTime')" />
        <readonly value="false" />
        <resistantToChangedSw value="false" />
        <restoreAtStart value="true" />
        <storeAtShutdown value="true"/>
        <writeOnlyOnce value="false" />
    </block>

</nvm:blocks>
