<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM2I12R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Xcp" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                      &lt;p&gt;Configuration of the Xcp Slave module.&lt;/p&gt;
                    &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="0"/>
              <a:a name="RELEASE" value="asc:4.0.3"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="1e1375d1-6d5e-4f5c-b540-cb67627411ef"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="12"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="212"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Xcp can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="UUID" value="8cb2bb1b-ada5-4e20-950e-41dea3419ab4"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:ctr name="XcpDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="XcpDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module Xcp.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpPrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module Xcp.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;) and (../XcpDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpPostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module Xcp.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;) and (../XcpDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module Xcp.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;) and (../XcpDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module Xcp.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;) and (../XcpDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module Xcp.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;) and (../XcpDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <v:lst name="XcpConfig" type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:a name="LABEL" value="Configuration Set"/>
                <a:da name="MAX" value="1"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="XcpConfig" type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains the configuration parameters
                          and sub-containers of the Xcp module supporting multiple
                          configuration sets.&lt;/p&gt;
                          &lt;p&gt;This container is a MultipleConfigurationContainer,
                          i.e. this container and its sub-containers
                          exist once per configuration set.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="d0b2f4c2-c5ee-4777-bb26-3230f36b020a"/>
                  <a:da name="TITLE" value="Configuration Set"/>
                  <v:lst name="XcpDaqList" type="MAP">
                    <a:a name="LABEL" value="DAQ List Configuration"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(../../../XcpGeneral/XcpDaqSupported = &apos;true&apos;) and ((../../../XcpGeneral/XcpMinDaq &gt; 0) or (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_STATIC&apos;))"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="count(*) &gt;= ../../../XcpGeneral/XcpMinDaq" 
                             false="DAQ list must contain elements at least equal to XcpMinDaq."/>
                      <a:tst 
                             expr="(../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (count(*) &gt;../../../XcpGeneral/XcpMinDaq)" 
                             true="DAQ list must not contain elements greater than XcpMinDaq, if DAQ Configuration Type(XcpDaqConfigType) is DAQ_DYNAMIC."/>
                      <a:tst 
                             expr="(../../../XcpGeneral/XcpIdentificationFieldType = &apos;ABSOLUTE&apos;) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_STATIC&apos;) and (sum(./*/XcpMaxOdt) &gt; 252)" 
                             true="If XcpIdentificationFieldType is ABSOLUTE, the total number of possible ODTs shall not be greater than 252. For DAQ_STATIC configuration this is the sum of XcpMaxOdt of all DAQ lists."/>
                      <a:tst 
                             expr="(../../../XcpGeneral/XcpIdentificationFieldType = &apos;ABSOLUTE&apos;) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (sum(./*/XcpMaxOdt) + (../../../XcpGeneral/XcpDaqCount * ../../../XcpGeneral/XcpOdtCount) &gt; 252)" 
                             true="If XcpIdentificationFieldType is ABSOLUTE, the total number of possible ODTs shall not be greater than 252. For DAQ_DYNAMIC configuration this is XcpDaqCount * XcpOdtCount plus the sum of XcpMaxOdt of all predefined DAQ lists."/>
                      <a:tst 
                             expr="((count(*) = 0 ) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_STATIC&apos;))and(../../../XcpGeneral/XcpDaqSupported =&apos;true&apos;)" 
                             true="The number of configured DAQ lists shall be greater than 0, when DAQ is supported (XcpDaqSupported = TRUE) and the configuration is DAQ_STATIC (XcpDaqConfigType = DAQ_STATIC)."/>
                      <a:tst 
                             expr="(../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_STATIC&apos;) and (../../../XcpGeneral/XcpIdentificationFieldType = &apos;RELATIVE_BYTE&apos;) and (count(*) &gt; 256)" 
                             true="If XcpIdentificationFieldType is RELATIVE_BYTE, the number of configured DAQ lists shall not be greater than 256."/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:exists(../../../XcpStimSupported) and (../../../XcpGeneral/XcpStimSupported = &apos;true&apos;) and (../../../XcpGeneral/XcpIdentificationFieldType = &apos;ABSOLUTE&apos;) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (../../../XcpGeneral/XcpDaqCount * ../../../XcpGeneral/XcpOdtCount != 0) and (sum(./*/XcpMaxOdt) + (../../../XcpGeneral/XcpDaqCount * ../../../XcpGeneral/XcpOdtCount) &gt; 192)" 
                          true="If XcpIdentificationFieldType is ABSOLUTE, the absolute ODT numbers of DAQ lists of type STIM shall not be greater than 192. For DAQ_DYNAMIC configuration, this is XcpDaqCount * XcpOdtCount plus the sum of XcpMaxOdt of all predefined DAQ lists."/>
                    <v:ctr name="XcpDaqList" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Defines &lt;code&gt;PREDEFINED&lt;/code&gt; and &lt;code&gt;STATIC&lt;/code&gt; configurable data
                                acquisition (DAQ) lists.
                              &lt;/p&gt;
                              &lt;p&gt;
                                To configure DAQ lists, proceed as follows:
                              &lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  &lt;code&gt;PREDEFINED&lt;/code&gt; DAQ lists (i.e. lists
                                  with &lt;code&gt;XcpDaqListNumber&lt;/code&gt; less than
                                  &lt;code&gt;XcpMinDaq&lt;/code&gt;): Configure the general parameters in the
                                  container &lt;code&gt;XcpDaqList&lt;/code&gt; including all object descriptor
                                  tables (ODTs, sub-containers &lt;code&gt;XcpOdt&lt;/code&gt;) and their
                                  parameters.
                                &lt;/li&gt;
                                &lt;li&gt;
                                  &lt;code&gt;STATIC&lt;/code&gt; DAQ lists (i.e. lists with
                                  &lt;code&gt;XcpDaqListNumber&lt;/code&gt; &gt;=
                                  &lt;code&gt;XcpMinDaq&lt;/code&gt; if the parameter
                                  &lt;code&gt;XcpDaqConfigType&lt;/code&gt; is set to
                                  &lt;code&gt;DAQ_STATIC&lt;/code&gt;): Configure the general parameters in the
                                  container &lt;code&gt;XcpDaqList&lt;/code&gt;. Do not configure any
                                  &lt;code&gt;XcpOdt&lt;/code&gt; containers.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;
                                Note: &lt;code&gt;DYNAMIC&lt;/code&gt; DAQ lists (i.e. lists with
                                &lt;code&gt;XcpDaqListNumber&lt;/code&gt; &gt;= &lt;code&gt;XcpMinDaq&lt;/code&gt;
                                if the parameter &lt;code&gt;XcpDaqConfigType&lt;/code&gt; is set to
                                &lt;code&gt;DAQ_DYNAMIC&lt;/code&gt;) are not configured in this container.
                              &lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;): must be enabled to configure any DAQ lists
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                                  &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                                  Configuring less DAQ lists reduces the
                                  ROM consumption of the module configuration.
                                &lt;/li&gt;
                                &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                  Configuring less DAQ lists reduces the
                                  RAM consumption of the module configuration.
                                &lt;/li&gt;
                                &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                                  &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                                  Configuring less DAQ lists reduces the
                                  execution time of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="74d82086-2c81-4d13-9ae5-afc1d500b919"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(XcpDaqEventFixed = &apos;true&apos;) and (count(../../../*/XcpEventChannel/*/XcpEventChannelTriggeredDaqListRef/*[node:refvalid(.) and (name(as:ref(.))=name(node:current()))]) = 0)" 
                            true="An event channel needs to be configured for this DAQ, as the configuration DAQ Event Fixed is enabled."/>
                      <a:da name="TITLE" value="DAQ List"/>
                      <v:var name="XcpDaqListNumber" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the index number of the DAQ list (ASAM parameter:
                                &lt;code&gt;DAQ_LIST_NUMBER&lt;/code&gt;).&lt;/p&gt;
                                &lt;p&gt;Within one and the same Xcp slave device, the range
                                for the DAQ list number starts from 0 and must be
                                continuous.&lt;/p&gt;
                                &lt;p&gt;A symbolic value (preprocessor macro) is also
                                generated for each DAQ list number.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt; 0 .. 65534 &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DAQ List Number"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                        <a:a name="UUID" 
                             value="027a904c-0618-46b9-a85e-10b486c2f629"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(../@index)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65534"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                          <mt:xpath 
                                    false="DAQ list number has to be zero based and consecutive." 
                                    expr="node:isconsecutive(../../*/XcpDaqListNumber,0)"/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpDaqListType" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the direction of the DAQ list
                                (ASAM parameter: &lt;code&gt;DAQ_LIST_TYPE&lt;/code&gt;).&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DAQ&lt;/code&gt;: List shall be used only with direction DAQ.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;STIM&lt;/code&gt;: List shall be used only with direction STIM.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DAQ_STIM&lt;/code&gt;: List shall be used either with direction DAQ or with direction STIM.&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt;STIM direction support (&lt;code&gt;XcpStimSupported&lt;/code&gt;): must be enabled to configure this parameter
                                as STIM or DAQ_STIM. &lt;/li&gt;
                                &lt;li&gt;Number of Predefined DAQ Lists (&lt;code&gt;XcpMinDaq&lt;/code&gt;): this
                                parameter is enabled only if the DAQ list is preconfigured. &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DAQ List Type"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="de7cbeab-e826-4939-9b53-f16c316e7b2d"/>
                        <a:da name="DEFAULT" value="DAQ"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="../XcpDaqListNumber &lt; as:modconf(&apos;Xcp&apos;)/XcpGeneral/XcpMinDaq"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="( ( (node:empty(../../../../../XcpGeneral/XcpStimSupported)) or                                            ( (node:accessible(../../../../../XcpGeneral/XcpStimSupported)) and                                            (../../../../../XcpGeneral/XcpStimSupported = &apos;false&apos;) ) )                                        and (.!=&apos;DAQ&apos;) )" 
                              true="If STIM support is disabled, no DAQ lists can be configured as STIM or DAQ_STIM"/>
                        <a:da name="RANGE">
                          <a:v>DAQ</a:v>
                          <a:v>DAQ_STIM</a:v>
                          <a:v>STIM</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="XcpMaxOdt" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the number of Object Descriptor Tables (ODTs) in this
                                DAQ list (ASAM parameter: &lt;code&gt;MAX_ODT&lt;/code&gt;). &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt; 1 .. 252 &lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Number of Predefined DAQ Lists (&lt;code&gt;XcpMinDaq&lt;/code&gt;),
                                    DAQ List Number (&lt;code&gt;XcpDaqListNumber&lt;/code&gt;):
                                    &lt;code&gt;XcpMaxOdt&lt;/code&gt; is ignored for predefined DAQ lists
                                    (XcpDaqListNumber less than XcpMinDaq) and instead
                                    the corresponding value is calculated.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    When the &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is enabled, not knowing
                                    the actual type of the DAQ list at run-time, the decreasing of the ODT range
                                    upper limit to &apos;123&apos; must be considered if the direction
                                    becomes &apos;DAQ&apos; at run-time. Therefore, a warning is issued when this limit is exceeded.
                                    The following aspects are considered when the ODT
                                    range upper limit is calculated:
                                    &lt;ul&gt;
                                      &lt;li&gt;If the identification field is ABSOLUTE, (see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;),
                                        all ODTs configured for the DAQ list with a lower ID than the selected one
                                       are considered. Also, all the ODTs with a lower ID than the selected
                                        one are considered, too, in the computation formula.
                                      &lt;/li&gt;
                                      &lt;li&gt;If the identification field is RELATIVE[/_], see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;,
                                        only the ODTs with a lower ID than the selected one are considered
                                        in the computation formula.
                                        &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    When the &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is disabled, not knowing
                                    the actual type of the DAQ list at run-time, the decreasing of the ODT range
                                    upper limit to &apos;191&apos; must be considered if the direction 
                                    becomes &apos;STIM&apos; at run-time. Therefore, a warning is issued when this limit is exceeded.
                                    The following aspects are considered when the ODT
                                    range upper limit is calculated:
                                    &lt;ul&gt;
                                      &lt;li&gt;If the identification field is &apos;ABSOLUTE&apos;, see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;,
                                        all ODTs configured for the DAQ list with a lower ID than the selected one
                                        are considered. Also, all the ODTs with a lower ID than the selected
                                        one are considered, too, in the computation formula.
                                      &lt;/li&gt;
                                      &lt;li&gt;If the identification field is &apos;RELATIVE[/_]&apos;, see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;,
                                        only the ODTs with a lower ID than the selected one are considered
                                        in the computation formula.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                                    &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                                    Selecting a smaller value for this parameter reduces the ROM
                                    consumption of the module configuration.
                                  &lt;/li&gt;
                                  &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                    &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                    Selecting a smaller value for this parameter reduces the RAM
                                    consumption of the module configuration.
                                  &lt;/li&gt;
                                  &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                                    &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                                    Selecting a smaller value for this parameter reduces the
                                    execution time of the module code.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Number of ODTs"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="97773f90-b9ae-40d5-8e06-bab9d6794b06"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="../XcpDaqListNumber &gt;= ../../../../../XcpGeneral/XcpMinDaq"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=252"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath 
                                    true="Maximum number of ODTs in the DAQ list shall not be greater than Maximum ODT (XcpOdtCount)." 
                                    expr=". &gt;= ../../../XcpGeneral/XcpOdtCount and ../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos; "/>
                        </a:da>
                        <a:da name="WARNING" type="XPath">
                          <a:tst 
                                 expr="node:exists(.)                                        and (../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;true&apos;)                                        and (../../../../../XcpGeneral/XcpIdentificationFieldType = &apos;ABSOLUTE&apos;)                                        and ((. + count(../../*[(XcpDaqListNumber &lt; ../../../../XcpGeneral/XcpMinDaq)]/XcpOdt/*) + count(../../*[(XcpDaqListNumber &lt; node:current()/../XcpDaqListNumber)]/XcpMaxOdt)) &gt; 124)" 
                                 true="When XcpSupportForOverloadMSB parameter is enabled, the calculated absolute ODT numbers, for a DAQ list having &apos;STIM/DAQ_STIM&apos; direction, shall not be greater than 123. To increase the PID range, you can configure PID as relative number, refer to XcpIdentificationFieldType parameter."/>
                          <a:tst 
                                 expr="node:exists(.)                                        and (../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;true&apos;)                                        and (../../../../../XcpGeneral/XcpIdentificationFieldType != &apos;ABSOLUTE&apos;)                                        and (. &gt; 124)" 
                                 true="When XcpSupportForOverloadMSB parameter is enabled, the relative ODT numbers, for a daq list having &apos;STIM/DAQ_STIM&apos; direction, shall not be greater than 123."/>
                          <a:tst 
                                 expr="node:exists(.)                                        and (../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;false&apos;)                                        and (../../../../../XcpGeneral/XcpStimSupported = &apos;true&apos;)                                        and (../../../../../XcpGeneral/XcpIdentificationFieldType = &apos;ABSOLUTE&apos;)                                        and ((. + count(../../*[(XcpDaqListNumber &lt; ../../../../XcpGeneral/XcpMinDaq)]/XcpOdt/*) + count(../../*[(XcpDaqListNumber &lt; node:current()/../XcpDaqListNumber)]/XcpMaxOdt)) &gt; 192)" 
                                 true="The calculated absolute ODT numbers, for a DAQ list having &apos;STIM/DAQ_STIM&apos; direction, shall not be greater than 191. To increase the PID range you can configure PID relative number, refer to XcpIdentificationFieldType parameter."/>
                          <a:tst 
                                 expr="node:exists(.)                                        and (../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;false&apos;)                                        and (../../../../../XcpGeneral/XcpGeneral/XcpIdentificationFieldType != &apos;ABSOLUTE&apos;)                                        and (../../../../../XcpGeneral/XcpStimSupported = &apos;true&apos;)                                        and (. &gt; 192)" 
                                 true="The relative ODT numbers, for a DAQ list having &apos;STIM/DAQ_STIM&apos; direction, shall not be greater than 191."/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpMaxOdtEntries" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the maximum number of entries
                                into an Object Descriptor Table (ODT) of the DAQ list
                                if the current configuration is DAQ_STATIC (ASAM parameter:
                                &lt;code&gt;MAX_ODT_ENTRIES&lt;/code&gt;). &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt; 1 .. 255 &lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Number of Predefined DAQ Lists (&lt;code&gt;XcpMinDaq&lt;/code&gt;),
                                    DAQ List Number (&lt;code&gt;XcpDaqListNumber&lt;/code&gt;):
                                    &lt;code&gt;XcpMaxOdtEntries&lt;/code&gt; is ignored for predefined DAQ lists
                                    (XcpDaqListNumber less than XcpMinDaq) and instead
                                    the corresponding value is calculated.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                                    &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                                    Selecting a smaller value for this parameter reduces the ROM
                                    consumption of the module configuration.
                                  &lt;/li&gt;
                                  &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                    &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                    Selecting a smaller value for this parameter reduces the RAM
                                    consumption of the module configuration.
                                  &lt;/li&gt;
                                  &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                                    &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                                    Selecting a smaller value for this parameter reduces the
                                    execution time of the module code.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum ODT Entries Per ODT"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="24cec9c4-8d18-417f-8b48-f98f6ae83faf"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="../XcpDaqListNumber &gt;= ../../../../../XcpGeneral/XcpMinDaq"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                          <mt:xpath 
                                    true="Maximum ODT entries per ODT cannot exceed (max(XcpMaxDto) - XcpIdentificationFieldType) size. Note that max(XcpMaxDto) refers to the maximum XcpMaxDto of all configured connections." 
                                    expr="( &apos;false&apos;  = &apos;false&apos;) and (. &gt; ((num:max(../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) ))))"/>
                        </a:da>
                        <a:da name="WARNING" type="XPath" 
                              expr="( &apos;false&apos;  = &apos;false&apos;) and (. &gt; ((num:min(../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) ))))" 
                              true="Maximum ODT entries per ODT cannot exceed (XcpMaxDto - XcpIdentificationFieldType) size. Note that the minimum XcpMaxDto from all configured connections is used, thus this warning can be a false positive."/>
                      </v:var>
                      <v:var name="XcpDaqEventFixed" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                               &lt;p&gt;Defines whether the event channel for this DAQ list can be changed
                               or not.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Number of predefined DAQ lists
                                    (&lt;code&gt;XcpMinDaq&lt;/code&gt;): This parameter is enabled only if the
                                    DAQ list is preconfigured.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                             &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DAQ Event Fixed"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="d49f6000-3260-11e2-81c1-0800200c9a66"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="../XcpDaqListNumber &lt; as:modconf(&apos;Xcp&apos;)/XcpGeneral/XcpMinDaq"/>
                      </v:var>
                      <v:var name="XcpDaqListPriority" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the priority of the DAQ list when the slave
                                processes the different DAQ lists.&lt;/p&gt;
                                &lt;p&gt;The DAQ list with &lt;em&gt;XcpDaqListPriority&lt;/em&gt; = 255
                                has the highest priority.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt; 0 .. 255 &lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Number of predefined DAQ lists
                                    (&lt;code&gt;XcpMinDaq&lt;/code&gt;): This parameter is enabled only if the
                                    DAQ list is preconfigured.
                                  &lt;/li&gt;
                                &lt;/ul&gt;

                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DAQ List Priority"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="d9ff1b80-3260-11e2-81c1-0800200c9a66"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="../XcpDaqListNumber &lt; as:modconf(&apos;Xcp&apos;)/XcpGeneral/XcpMinDaq"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpDaqListPrescaler" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                               &lt;p&gt;Defines the prescaler value of the DAQ list.&lt;/p&gt;
                               &lt;p&gt;For a transmission rate without reduction, the prescaler must be 1.
                               For a reduced transmission rate, the prescaler must be greater than 1. &lt;/p&gt;
                               &lt;p&gt;The prescaler is only used for DAQ lists with DIRECTION = DAQ.&lt;/p&gt;

                               &lt;p&gt;Range:&lt;/p&gt;
                               &lt;ul&gt;
                               &lt;li&gt; 1 .. 255 &lt;/li&gt;
                               &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Number of predefined DAQ lists
                                    (&lt;code&gt;XcpMinDaq&lt;/code&gt;): This parameter is enabled only if the
                                    DAQ list is preconfigured.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DAQ List Prescaler"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="e145e680-3260-11e2-81c1-0800200c9a66"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="../XcpDaqListNumber &lt; as:modconf(&apos;Xcp&apos;)/XcpGeneral/XcpMinDaq"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                      <v:lst name="XcpDto" type="MAP">
                        <a:a name="LABEL" value="DTO Parameters"/>
                        <a:da name="ENABLE" value="false"/>
                        <v:ctr name="XcpDto" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines Data Transfer Object (DTO)
                                  specific parameters for the DAQ list.&lt;/p&gt;

                                  &lt;p&gt;Note: This container is not supported in the current
                                  implementation.&lt;/p&gt;

                                  &lt;p&gt;The current implementation does not support the configuration
                                  of individual CAN IDs for each DAQ list. Thus, the configuration
                                  is not required as of now. All DTOs are transmitted with the same
                                  CAN ID.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="cc09a4a4-28e1-42d0-a24a-3417f80ca045"/>
                          <a:da name="TITLE" value="DTO parameters"/>
                          <v:var name="XcpDtoPid" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;This parameter indicates the Packet Identifier
                                    (PID) that identifies the content of the DTO,
                                    namely the ODT, within a DAQ list.&lt;/p&gt;

                                    &lt;p&gt;Note: This parameter is not supported in the current
                                    implementation.&lt;/p&gt;

                                    &lt;p&gt;This parameter is disabled, because the value for PID shall be
                                    generated from the ODT index.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="35f444f2-b791-491f-952d-d62e2e3cc9d4"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=251"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:ref name="XcpDto2PduMapping" 
                                 type="CHOICE-REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;This reference specifies the mapping of the DTO to the
                                    PDUs from the lower-layer interfaces (CanIf, FrIf, SoAd,
                                    and CDD).&lt;/p&gt;

                                    &lt;p&gt;Note: This parameter is not supported in the current
                                    implementation.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="DTO to PDU mapping"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="16a51661-aacb-451f-be7f-bb84accd46e1"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="REF">
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Xcp/XcpConfig/XcpPdu/XcpRxPdu</a:v>
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Xcp/XcpConfig/XcpPdu/XcpTxPdu</a:v>
                            </a:da>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                      <v:lst name="XcpOdt" type="MAP">
                        <a:a name="LABEL" value="ODT Parameters"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(../XcpDaqListNumber &lt; ../../../../../XcpGeneral/XcpMinDaq)"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:isconsecutive(*/XcpOdtNumber,0)" 
                              false="XcpOdtNumber has to be zero based and consecutive."/>
                        <v:ctr name="XcpOdt" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Defines Object Descriptor Table (ODT) specific parameters.
                                  &lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;
                                      Number of Predefined DAQ Lists (&lt;code&gt;XcpMinDaq&lt;/code&gt;): ODTs
                                      can be configured only for a predefined DAQ list.
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="150bb97b-0443-405c-bd45-8281e133918d"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(count(../../../../XcpConnectionCfg/*) &gt; 0) and ((( &apos;false&apos;  = &apos;true&apos;) and ((num:max(../../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;NO_TIME_STAMP&apos;) * 0) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;ONE_BYTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;TWO_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;FOUR_BYTE&apos;) * 4))) ) - (  1  * (sum(XcpOdtEntry/*/XcpOdtEntryLength)) )) &lt; 0)) or (( &apos;false&apos;  = &apos;false&apos;) and (XcpOdtNumber != 0) and ((num:max(../../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) ) - (  1  * (sum(XcpOdtEntry/*/XcpOdtEntryLength)) )) &lt; 0)) or (( &apos;false&apos;  = &apos;false&apos;) and (XcpOdtNumber = 0) and ((num:max(../../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) ) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;NO_TIME_STAMP&apos;) * 0) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;ONE_BYTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;TWO_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;FOUR_BYTE&apos;) * 4))) )- (  1  * (sum(XcpOdtEntry/*/XcpOdtEntryLength)) )) &lt; 0)))" 
                                true="The ODT entries of this ODT should be changed such that the total size of all the ODT entries + [Optional Identifier Field] + [Optional TIMESTAMP field] shall not be greater than maximum XcpMaxDto of all configured connections."/>
                          <a:da name="TITLE" value="ODT parameters"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="(count(../../../../XcpConnectionCfg/*) &gt; 0) and ((( &apos;false&apos;  = &apos;true&apos;) and ((num:min(../../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;NO_TIME_STAMP&apos;) * 0) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;ONE_BYTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;TWO_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;FOUR_BYTE&apos;) * 4))) ) - (  1  * (sum(XcpOdtEntry/*/XcpOdtEntryLength)) )) &lt; 0)) or (( &apos;false&apos;  = &apos;false&apos;) and (XcpOdtNumber != 0) and ((num:min(../../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) ) - (  1  * (sum(XcpOdtEntry/*/XcpOdtEntryLength)) )) &lt; 0)) or (( &apos;false&apos;  = &apos;false&apos;) and (XcpOdtNumber = 0) and ((num:min(../../../../XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) ) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;NO_TIME_STAMP&apos;) * 0) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;ONE_BYTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;TWO_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpTimestampType =&apos;FOUR_BYTE&apos;) * 4))) )- (  1  * (sum(XcpOdtEntry/*/XcpOdtEntryLength)) )) &lt; 0)))" 
                                true="The ODT entries of this ODT should be changed such that the total size of all the ODT entries + [Optional Identifier Field] + [Optional TIMESTAMP field] shall not be greater than maximum XcpMaxDto of all configured connections. Note that the minimum XcpMaxDto of all configured connections is used, thus this warning might be a false positive."/>
                          <v:var name="XcpOdtEntryMaxSize" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the upper limit for the size of the element described
                                    by an Object Descriptor Table (ODT) entry.&lt;/p&gt;

                                    &lt;p&gt;Note: This parameter is not supported in the current
                                    implementation.&lt;/p&gt;

                                    &lt;p&gt;The current implementation uses XcpGeneral/XcpOdtEntrySizeDaq
                                    and XcpGeneral/XcpOdtEntrySizeStim instead of this parameter.&lt;/p&gt;

                                    &lt;p&gt;Depending on the DAQ list type that this Object Descriptor Table (ODT)
                                    belongs to, it describes the limit for a DAQ (MAX_ODT_ENTRY_SIZE_DAQ) or
                                    a STIM (MAX_ODT_ENTRY_SIZE_STIM).&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                    &lt;li&gt; 0 .. 254 &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="ODT Entry Maximum Size"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="4bb28dd2-758d-4c25-87b8-b65ec591fc4e"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="ENABLE" value="false"/>
                          </v:var>
                          <v:var name="XcpOdtNumber" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the index number of this Object Descriptor Table (ODT)
                                    within the DAQ list (ASAM parameter: &lt;code&gt;ODT_NUMBER&lt;/code&gt;).&lt;/p&gt;
                                    &lt;p&gt;The scope of this parameter is local for a DAQ list and ODT
                                    numbers must be unique within one and the same slave device.&lt;/p&gt;
                                    &lt;p&gt;For every DAQ list, the numbering of the Object Descriptor Tables (ODTs)
                                    through &lt;em&gt;ODT_NUMBER&lt;/em&gt; restarts from 0.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;
                                        When the &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is enabled, if the
                                        DAQ list direction is &lt;code&gt;DAQ&lt;/code&gt; or &lt;code&gt;DAQ_STIM&lt;/code&gt;,
                                        the ODT range upper limit decreases to 123 (see ASAM specifications).
                                        The following aspects are considered when the ODT
                                        range upper limit is calculated:
                                        &lt;ul&gt;
                                          &lt;li&gt; 0 .. (123 - number of configured ODTs):
                                            when &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt; = &lt;code&gt;ABSOLUTE&lt;/code&gt;:
                                            all ODTs configured for the DAQ list with a lower ID than the selected one
                                            are considered. Also, all the ODTs with a lower ID than the selected
                                            one are considered, too, in the computation formula.
                                          &lt;/li&gt;
                                          &lt;li&gt; 0 .. 123:
                                            when &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt; != &lt;code&gt;ABSOLUTE&lt;/code&gt;:
                                            only the ODTs with a lower ID than the selected one are considered
                                            in the computation formula.
                                          &lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/li&gt;
                                      &lt;li&gt;
                                        When the &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is disabled, if the
                                        DAQ list direction is &lt;code&gt;STIM&lt;/code&gt; or &lt;code&gt;DAQ_STIM&lt;/code&gt;,
                                        the ODT range upper limit decreases to 191 (see ASAM specifications).
                                        The following aspects are considered when the ODT
                                        range upper limit is calculated:
                                        &lt;ul&gt;
                                          &lt;li&gt; 0 .. (191 - number of configured ODTs):
                                          when &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt; = &lt;code&gt;ABSOLUTE&lt;/code&gt;:
                                            all ODTs configured for the DAQ list with a lower ID than the selected one
                                            are considered. Also, all the ODTs with a lower ID than the selected
                                            one are considered, too, in the computation formula.
                                          &lt;/li&gt;
                                          &lt;li&gt; 0 .. 191:
                                            when &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt; != &lt;code&gt;ABSOLUTE&lt;/code&gt;:
                                            only the ODTs with a lower ID than the selected one are considered
                                            in the computation formula.
                                          &lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="ODT Number"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="a76867bb-47e3-400b-831a-fe677a3f04b1"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="num:integer(../@index)"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=251"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                              <mt:xpath>
                                <mt:tst 
                                        true="When XcpSupportForOverloadMSB parameter is enabled, the calculated absolute ODT number, for a daq list having &apos;DAQ/DAQ_STIM&apos; direction, shall not be greater than 123. To increase the PID range you can configure PID relative number, refer to XcpIdentificationFieldType parameter." 
                                        expr="(../../../XcpDaqListType != &apos;STIM&apos;)                                               and (../../../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;true&apos;)                                               and (../../../../../../../XcpGeneral/XcpIdentificationFieldType = &apos;ABSOLUTE&apos;)                                               and ((. + 1 + count(../../../../*[(XcpDaqListNumber &lt; node:current()/../../../XcpDaqListNumber)]/XcpOdt/*)) &gt; 124)"/>
                                <mt:tst 
                                        true="When XcpSupportForOverloadMSB parameter is enabled, the relative ODT numbers, for a daq list having &apos;DAQ/DAQ_STIM&apos; direction, shall not be greater than 123." 
                                        expr="(../../../XcpDaqListType != &apos;STIM&apos;)                                               and (../../../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;true&apos;)                                               and (../../../../../../../XcpGeneral/XcpIdentificationFieldType != &apos;ABSOLUTE&apos;)                                               and ((. + 1) &gt; 124)"/>
                                <mt:tst 
                                        true="The calculated absolute ODT numbers, for a daq list having &apos;STIM/DAQ_STIM&apos; direction, shall not be greater than 191. To increase the PID range you can configure PID relative number, refer to XcpIdentificationFieldType parameter." 
                                        expr="(../../../XcpDaqListType != &apos;DAQ&apos;)                                               and (../../../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;false&apos;)                                               and (../../../../../../../XcpGeneral/XcpIdentificationFieldType = &apos;ABSOLUTE&apos;)                                               and ((. + 1 + count(../../../../*[(XcpDaqListNumber &lt; node:current()/../../../XcpDaqListNumber)]/XcpOdt/*)) &gt; 192)"/>
                                <mt:tst 
                                        true="The relative ODT numbers, for a daq list having &apos;STIM/DAQ_STIM&apos; direction, shall not be greater than 191." 
                                        expr="(../../../XcpDaqListType != &apos;DAQ&apos;)                                               and (../../../../../../../XcpGeneral/XcpSupportForOverloadMSB = &apos;false&apos;)                                               and (../../../../../../../XcpGeneral/XcpGeneral/XcpIdentificationFieldType != &apos;ABSOLUTE&apos;)                                               and ((. + 1) &gt; 192)"/>
                              </mt:xpath>
                            </a:da>
                          </v:var>
                          <v:ref name="XcpOdt2DtoMapping" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    This reference maps the Object Descriptor Table (ODT) to the
                                    corresponding DTO in which it is transmitted.

                                    &lt;p&gt;Note: This parameter is not supported in the current
                                    implementation.&lt;/p&gt;

                                    &lt;p&gt;The current implementation does not support the configuration
                                    of individual CAN IDs for each DAQ list. Thus, the configuration
                                    is not required as of now. All DTOs are transmitted with the same
                                    CAN ID.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="ODT to DTO mapping"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="316c3fc8-c6fe-4b11-8602-2c002799ddc5"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Xcp/XcpConfig/XcpDaqList/XcpDto"/>
                          </v:ref>
                          <v:lst name="XcpOdtEntry" type="MAP">
                            <a:a name="LABEL" value="ODT Entry Parameters"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:isconsecutive(*/XcpOdtEntryNumber,0)" 
                                  false="XcpOdtEntryNumber has to be zero based and consecutive."/>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="XcpOdtEntry" type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the configuration parameters to configure an ODT
                                      entry.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="UUID" 
                                   value="54a0039b-03b3-435c-bbe2-4dd11b76a7c1"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(XcpOdtEntryLength &gt; ../../../../../../../../XcpGeneral/XcpOdtEntrySizeDaq) and ((../../../../XcpDaqListType = &apos;DAQ&apos;) or (../../../../XcpDaqListType = &apos;DAQ_STIM&apos;))" 
                                       true="The size of ODT entry in an ODT should be less than or equal to the value of XcpOdtEntrySizeDaq when Direction of daq list is DAQ or DAQ_STIM."/>
                                <a:tst 
                                       expr="(XcpOdtEntryLength &gt; ../../../../../../../../XcpGeneral/XcpOdtEntrySizeStim) and ((../../../../XcpDaqListType = &apos;STIM&apos;) or (../../../../XcpDaqListType = &apos;DAQ_STIM&apos;))" 
                                       true="The size of ODT entry in an ODT should be less than or equal to the value of XcpOdtEntrySizeStim when Direction of daq list is STIM or DAQ_STIM."/>
                              </a:da>
                              <a:da name="TITLE" value="ODT Entry"/>
                              <v:var name="XcpOdtEntryAddress" 
                                     type="LINKER-SYMBOL">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the memory address to a measurement object that
                                        is part of the Object Descriptor Table (ODT).&lt;/p&gt;

                                        &lt;p&gt;Enter here a valid C-expression that evaluates to an
                                        address in the slave&apos;s memory,
                                        e.g. &lt;code&gt;&amp;VariableName&lt;/code&gt; for a variable address
                                        or &lt;code&gt;0xEB15C001&lt;/code&gt; for a literal address. Any
                                        literal address must point to a valid address into the
                                        slave&apos;s memory.&lt;/p&gt;

                                        &lt;p&gt;If variable names are used, the Xcp module expects all
                                        required symbol declarations and definitions to be available
                                        after including the User Header File, which is specified by
                                        the configuration parameter XcpGeneral/XcpUserHeader.&lt;/p&gt;

                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="ODT Entry Address"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="ac13958b-a1b0-4192-8145-69750e8c4e30"/>
                                <a:da name="INVALID" type="XPath" expr=". = &apos;&apos;" 
                                      true="This parameter cannot be empty because the name/address of the entry is used to calculate the write/read address into RAM memory."/>
                                <a:da name="WARNING" type="XPath" 
                                      expr="(text:match(node:value(.),&apos;^[&amp;][a-zA-Z][a-zA-Z0-9_]*([\[][0-9]+[\]])*$&apos;)) or                                                (text:match(node:value(.),&apos;^[a-zA-Z][a-zA-Z0-9_]*([\[][0-9]+[\]])*$&apos;)) or                                                (text:match(node:value(.),&apos;^[0][xX][a-fA-F0-9]+$&apos;)) or                                                (text:match(node:value(.),&apos;^[0-9]+$&apos;))" 
                                      false="Make sure that the configuration is valid."/>
                              </v:var>
                              <v:var name="XcpOdtEntryLength" type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the length of the memory area that is referenced
                                        by the Object Descriptor Table (ODT) entry.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                        &lt;li&gt; 1 .. 255 &lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Note: This parameter is counted in address
                                        granularity (AG, parameter XcpAddressGranularity) bytes.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="ODT Entry Length"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="c2d849ba-c9c6-45ae-b84c-cff23c99960d"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=255"/>
                                  <a:tst expr="&gt;=1"/>
                                </a:da>
                              </v:var>
                              <v:var name="XcpOdtEntryNumber" type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the index number of the Object Descriptor Table (ODT)
                                        entry (ASAM parameter: &lt;code&gt;ODT_ENTRY_NUMBER&lt;/code&gt;).&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                        &lt;li&gt; 0 .. 254 &lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="ODT Entry Number"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="9709b828-418d-4a64-af64-bb585ae88bf2"/>
                                <a:da name="DEFAULT" type="XPath" 
                                      expr="num:integer(../@index)"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=254"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                              </v:var>
                              <v:var name="XcpOdtEntryBitOffset" type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the bit offset if the element represents a status bit.&lt;/p&gt;
                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                        &lt;li&gt; 0 .. 31 &lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;
                                            Address Granularity (&lt;code&gt;XcpAddressGranularity&lt;/code&gt;): If Address Granularity
                                            is BYTE, the maximum value of this parameter is 7. If Address Granularity
                                            is WORD, the maximum value of this parameter is 15. If Address Granularity
                                            is DWORD, the maximum value of this parameter is 31.
                                          &lt;/li&gt;
                                          &lt;li&gt;
                                            ODT Entry Length (&lt;code&gt;XcpOdtEntryLength&lt;/code&gt;): must be 1 if Bit Offset
                                            is enabled.
                                          &lt;/li&gt;
                                          &lt;li&gt;
                                            XcpEnableBitOffset: If XcpEnableDaqOptimization is TRUE and XcpEnableBitOffset is FALSE
                                            then XcpOdtEntryBitOffset cannot be used.
                                          &lt;/li&gt;
                                       &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="ODT Entry Bit Offset"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="ENABLE" value="false"/>
                                <a:da name="INVALID" type="XPath">
                                  <a:tst 
                                         expr="node:exists(../../../../../../../../../RamOptimizations/XcpEnableBitOffset) and ../../../../../../../../../RamOptimizations/XcpEnableBitOffset=&apos;false&apos;" 
                                         true="If configuration parameter RamOptimizations/XcpEnableBitOffset is set to FALSE then this parameter cannot be enabled."/>
                                  <a:tst 
                                         expr="((../../../../../../../../../XcpGeneral/XcpAddressGranularity = &apos;BYTE&apos;) and (. &gt; 7))                                             or ((../../../../../../../../../XcpGeneral/XcpAddressGranularity = &apos;WORD&apos;) and (. &gt; 15))                                             or ((../../../../../../../../../XcpGeneral/XcpAddressGranularity = &apos;DWORD&apos;) and (. &gt; 31))" 
                                         true="if Address Granularity is BYTE, the maximum value of this parameter is 7. If Address Granularity is WORD, the maximum value of this parameter is 15. If Address Granularity is DWORD, the maximum value of this parameter is 31."/>
                                  <a:tst 
                                         expr="(../../../../../XcpDaqListType = &apos;DAQ_STIM&apos;) and (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeDaq != ../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeStim)" 
                                         true="If corresponding DAQ list has DAQ_STIM direction, XcpGranularityOdtEntrySizeDaq must be equal to XcpGranularityOdtEntrySizeStim in order to resolve granularity limitation ambiguity."/>
                                  <a:tst 
                                         expr="((../../../../../XcpDaqListType = &apos;STIM&apos;) and      (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeStim = &apos;BYTE&apos;) and (../XcpOdtEntryLength != 1))                                             or ((../../../../../XcpDaqListType = &apos;STIM&apos;) and  (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeStim = &apos;WORD&apos;) and (../XcpOdtEntryLength != 2))                                             or ((../../../../../XcpDaqListType = &apos;STIM&apos;) and  (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeStim = &apos;DWORD&apos;) and (../XcpOdtEntryLength != 4))                                             or ((../../../../../XcpDaqListType = &apos;STIM&apos;) and  (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeStim = &apos;DLONG&apos;) and (../XcpOdtEntryLength != 8))" 
                                         true="If the bit offset parameter is used, the length of the ODT Entry must be exactly XcpGranularityOdtEntrySizeStim, if corresponding DAQ list has STIM direction."/>
                                  <a:tst 
                                         expr="((../../../../../XcpDaqListType = &apos;DAQ&apos;) and      (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeDaq = &apos;BYTE&apos;) and (../XcpOdtEntryLength != 1))                                             or ((../../../../../XcpDaqListType = &apos;DAQ&apos;) and  (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeDaq = &apos;WORD&apos;) and (../XcpOdtEntryLength != 2))                                             or ((../../../../../XcpDaqListType = &apos;DAQ&apos;) and  (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeDaq = &apos;DWORD&apos;) and (../XcpOdtEntryLength != 4))                                             or ((../../../../../XcpDaqListType = &apos;DAQ&apos;) and  (../../../../../../../../../XcpGeneral/XcpGranularityOdtEntrySizeDaq = &apos;DLONG&apos;) and (../XcpOdtEntryLength != 8))" 
                                         true="If the bit offset parameter is used, the length of the ODT Entry must be exactly XcpGranularityOdtEntrySizeDaq, if corresponding DAQ list has DAQ direction."/>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                  <v:ctr name="XcpDemEventParameterRefs" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Reference to the &lt;code&gt;DemEventParameter&lt;/code&gt; elements
                            that shall be invoked using the API &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt;
                            if the corresponding error occurs.&lt;/p&gt;
                            &lt;p&gt;The EventId is taken from the referenced
                            &lt;code&gt;DemEventParameter&lt;/code&gt;&apos;s &lt;code&gt;DemEventId&lt;/code&gt; value. The
                            standardized errors are provided in the container and can be extended by
                            vendor-specific error references.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Dem Events References"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(../../../ReportToDem/XcpRetryFailedReportToDem = &apos;DEM&apos;) or (../../../ReportToDem/XcpIllegalMemoryAccessReportToDem = &apos;DEM&apos;) or (../../../ReportToDem/XcpPduBufferLockedReportToDem = &apos;DEM&apos;) or (../../../ReportToDem/XcpRespCTOQueueFullReportToDem = &apos;DEM&apos;) or (../../../ReportToDem/XcpPDUBufferFullReportToDem = &apos;DEM&apos;) or (../../../ReportToDem/XcpPDULostReportToDem = &apos;DEM&apos;) or (../../../ReportToDem/XcpStimulationDataLostReportToDem = &apos;DEM&apos;) or (../../../ReportToDem/XcpAcquisitionDataLostReportToDem = &apos;DEM&apos;)"/>
                    <a:da name="TITLE" value="DEM References"/>
                    <v:ref name="XCP_E_INIT_FAILED" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the &lt;code&gt;DemEventParameter&lt;/code&gt; that shall be
                              issued when the error &lt;em&gt;Initialization of XCP failed&lt;/em&gt; has occurred.&lt;/p&gt;

                              &lt;p&gt;Note: This parameter is not supported in the current implementation.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Error for failed initialization"/>
                      <a:a name="OPTIONAL" value="false"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="REF-TYPE" value="ASPath"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_RETRY_FAILED" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                              the error &lt;em&gt;Tx retry failed&lt;/em&gt; occurs.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Xcp Retry Failed Reporting Type
                                  (&lt;code&gt;XcpRetryFailedReportToDem&lt;/code&gt;): Select DEM to enable
                                  the reporting of &lt;code&gt;XCP_E_RETRY_FAILED&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Further notes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Activation: Thrown if the XCP message transmission (including the configured 
                                    number of retries) fails.&lt;/li&gt;
                                &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                &lt;li&gt;Trigger debounce: XCP_E_RETRY_FAILED shall be thrown only after a maximum number 
                                    of retries (&lt;code&gt;XcpTxRetryCount&lt;/code&gt;) is exceeded for requests
                                    configured with a retry counter.&lt;/li&gt;
                                &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                    A list of API functions that report this error can be found in the table
                                    of production errors in the Integration notes section of the module references.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Error for Failed Transmission Retry"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../../../../ReportToDem/XcpRetryFailedReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_RETRY_FAILED&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_RETRY_FAILED for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_PDU_BUFFER_LOCKED" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                              the error &lt;em&gt;PDU buffer locked&lt;/em&gt; occurs.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Xcp Pdu Buffer Locked Reporting Type
                                  (&lt;code&gt;XcpPduBufferLockedReportToDem&lt;/code&gt;): Select DEM to enable
                                  the reporting of &lt;code&gt;XCP_E_PDU_BUFFER_LOCKED&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Further notes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Activation: Thrown if the internal PDU ID is not mapped correctly to an Xcp connection ID.&lt;/li&gt;
                                &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                                &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                    A list of API functions that report this error can be found in the table
                                    of production errors in the Integration notes section of the module references.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Error for Pdu Buffer Locked"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../../../../ReportToDem/XcpPduBufferLockedReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_PDU_BUFFER_LOCKED&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_PDU_BUFFER_LOCKED for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_RESP_CTO_QUEUE_FULL" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                              the error &lt;em&gt;Response CTO queue full&lt;/em&gt; occurs.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Xcp Response CTO Queue Full Reporting Type
                                  (&lt;code&gt;XcpRespCTOQueueFullReportToDem&lt;/code&gt;): Select DEM to
                                  enable the reporting of &lt;code&gt;XCP_E_RESP_CTO_QUEUE_FULL&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Further notes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Activation: Thrown if the response CTO queue, which is used to enqueue the response
                                  packet, is full.&lt;/li&gt;
                                &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                                &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                    A list of API functions that report this error can be found in the table
                                    of production errors in the Integration notes section of the module references.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Error for Response CTO Queue Full"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../../../../ReportToDem/XcpRespCTOQueueFullReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_RESP_CTO_QUEUE_FULL&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_RESP_CTO_QUEUE_FULL for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_PDU_LOST" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                              the error &lt;em&gt;PDU lost&lt;/em&gt; occurs.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Xcp PDU Lost Reporting Type
                                  (&lt;code&gt;XcpPDULostReportToDem&lt;/code&gt;): Select DEM to enable
                                  the reporting of &lt;code&gt;XCP_E_PDU_LOST&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Further notes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Activation: Thrown if an XCP message is received, but it is
                                    discarded by XCP because it is detected as incorrect.&lt;/li&gt;
                                &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                                &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                    A list of API functions that report this error can be found in the table
                                    of production errors in the Integration notes section of the module references.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Error for PDU Lost"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../../../../ReportToDem/XcpPDULostReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_PDU_LOST&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_PDU_LOST for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_STIMULATION_DATA_LOST" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                              the error &lt;em&gt;Stimulation data lost&lt;/em&gt; occurs.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Xcp Stimulation Data Lost Reporting Type
                                  (&lt;code&gt;XcpStimulationDataLostReportToDem&lt;/code&gt;): Select DEM
                                  to enable the reporting of &lt;code&gt;XCP_E_STIMULATION_DATA_LOST&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Further notes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Activation: The error is triggered by Xcp_MainFunction()/Xcp_MainFunction_[EventName]/
                                  Xcp_&lt;If&gt;RxIndication() if, when unpacking PDUs, at least one PDU message
                                  is silently lost. That means there is no notification towards the Xcp master.&lt;/li&gt;
                                &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                                &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                    A list of API functions that report this error can be found in the table
                                    of production errors in the Integration notes section of the module references.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Error for Stimulation Data Lost"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../../../../ReportToDem/XcpStimulationDataLostReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_STIMULATION_DATA_LOST&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_STIMULATION_DATA_LOST for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_ACQUISITION_DATA_LOST" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                               &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                               the error &lt;em&gt;Acquisition data lost&lt;/em&gt; occurs.&lt;/p&gt;
                               &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                               &lt;ul&gt;
                                 &lt;li&gt;
                                   Xcp Acquisition Data Lost Reporting Type
                                   (&lt;code&gt;XcpAcquisitionDataLostReportToDem&lt;/code&gt;): Select DEM
                                   to enable the reporting of &lt;code&gt;XCP_E_ACQUISITION_DATA_LOST&lt;/code&gt;.
                                 &lt;/li&gt;
                               &lt;/ul&gt;
                               &lt;p&gt;Further notes:&lt;/p&gt;
                               &lt;ul&gt;
                                 &lt;li&gt;Activation: The error is triggered by Xcp_MainFunction()/Xcp_MainFunction_[EventName]/
                                   Xcp_&lt;If&gt;RxIndication() if, when unpacking PDUs, at least one PDU message
                                   is silently lost. That means there is no notification towards the Xcp master.&lt;/li&gt;
                                 &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                 &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                                 &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                     A list of API functions that report this error can be found in the table
                                     of production errors in the Integration notes section of the module references.&lt;/li&gt;
                               &lt;/ul&gt;
                             &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Error for Acquisition Data Lost"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../../../../ReportToDem/XcpAcquisitionDataLostReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_ACQUISITION_DATA_LOST&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_ACQUISITION_DATA_LOST for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_PDU_BUFFER_FULL" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                              the error &lt;em&gt;PDU buffer full&lt;/em&gt; occurs.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  PDU Buffer Full Reporting Type
                                  (&lt;code&gt;XcpPDUBufferFullReportToDem&lt;/code&gt;): Select DEM to enable the
                                  reporting of &lt;code&gt;XCP_E_PDU_BUFFER_FULL&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Further notes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Activation: The error is triggered by Xcp_&lt;If&gt;RxIndication() if the L-PDU buffer corresponding
                                    to the received PDU is full. This may happen if the Xcp main function is called
                                    with a higher latency than the lowest latency used by the master to send messages.&lt;/li&gt;
                                &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                                &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                    A list of API functions that report this error can be found in the table
                                    of production errors in the Integration notes section of the module references.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Error for Response PDU Buffer Full"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../../../../ReportToDem/XcpPDUBufferFullReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_PDU_BUFFER_FULL&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_PDU_BUFFER_FULL for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                    <v:ref name="XCP_E_ILLEGAL_MEMORY_ACCESS" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to the DemEventParameter that shall be issued when
                              the error &lt;em&gt;Illegal memory access&lt;/em&gt; occurs.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Xcp Illegal Memory Access Reporting Type (&lt;code&gt;XcpIllegalMemoryAccessReportToDem&lt;/code&gt;):
                                  Select DEM to enable the reporting of &lt;code&gt;XCP_E_ILLEGAL_MEMORY_ACCESS&lt;/code&gt;.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Further notes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Activation: Thrown if an illegal memory access is performed.&lt;/li&gt;
                                &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                                &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                                &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                                    A list of API functions that report this error can be found in the table
                                    of production errors in the Integration notes section of the module references.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Error for Illegal Memory Access"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(num:i(count(../../XcpMemoryAccessArea/*)) &gt; 0) and (../../../../ReportToDem/XcpIllegalMemoryAccessReportToDem = &apos;DEM&apos;)"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to a DemEventParameter must be provided."/>
                        <a:tst 
                               expr="node:refvalid(.) and (name(as:ref(.)) != &apos;XCP_E_ILLEGAL_MEMORY_ACCESS&apos;)" 
                               true="Xcp needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/XCP_E_ILLEGAL_MEMORY_ACCESS for a successful build."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                  </v:ctr>
                  <v:lst name="XcpEventChannel" type="MAP">
                    <a:a name="LABEL" value="Event Channel Configuration"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(../../../XcpGeneral/XcpDaqSupported = &apos;true&apos;)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:xpath>
                        <mt:tst 
                                false="Event channel number starts from 0 and has to be consecutive." 
                                expr="node:isconsecutive(*/XcpEventChannelNumber,0)"/>
                        <mt:tst 
                                true="The number of Xcp Event Channels shall be greater than 0 when at least one DAQ or STIM list is configured (i.e. there is a XcpDaqList container or XcpDaqCount is greater than 0). Since for processing of DAQ, Events are required." 
                                expr="((count(*) = 0) and (((count(../XcpDaqList/*) &gt; 0 ) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_STATIC&apos;)) or ((((../../../XcpGeneral/XcpDaqCount)+(../../../XcpGeneral/XcpMinDaq)) &gt; 0 ) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;))))"/>
                        <mt:tst 
                                true="The value of Xcp Event Channels shall be equal to 0 when no DAQ or STIM list is configured (i.e. there is no XcpDaqList container if XcpDaqConfigType is set to DAQ_STATIC or XcpDaqCount and XcpMinDaq are both 0 if XcpDaqConfigType is set to DAQ_DYNAMIC). Since for processing of Events, DAQ lists are required." 
                                expr="((count(*) &gt; 0) and (((count(../XcpDaqList/*) = 0 ) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_STATIC&apos;)) or ((((../../../XcpGeneral/XcpDaqCount)+(../../../XcpGeneral/XcpMinDaq)) = 0 ) and (../../../XcpGeneral/XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;))))"/>
                      </mt:xpath>
                    </a:da>
                    <v:ctr name="XcpEventChannel" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration of event channels on the Xcp slave.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;): must be enabled to configure any event channel
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                  Configuring less event channels reduces the RAM
                                  consumption of the module configuration.
                                &lt;/li&gt;
                                &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                                  &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                                  Configuring less event channels reduces the ROM
                                  consumption of the module configuration.
                                &lt;/li&gt;
                                &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                                  &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                                  Configuring less event channels reduces the
                                  execution time of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="87ed916e-c78f-4f5d-9c48-aae255e19aca"/>
                      <a:da name="TITLE" value="Event Channel Configuration"/>
                      <v:var name="XcpEventChannelConsistency" 
                             type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the consistency of the event channel.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;ODT&lt;/code&gt;: The function Xcp_MainFunction()
                                shall process one ODT associated with the event in one cyclic call.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DAQ&lt;/code&gt;: The function Xcp_MainFunction()
                                shall process one DAQ list associated with the event in one cyclic call.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;EVENT&lt;/code&gt;: The function Xcp_MainFunction()
                                shall process all DAQ lists associated with the event in one cyclic call.&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                    &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                    Setting this parameter, together with all other event channel
                                    consistency, to a value of ODT reduces the RAM consumption of
                                    the module configuration.
                                  &lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Note: Xcp internal buffers grow a lot if the overall
                                event consistency is EVENT or DAQ. If RAM consumption issues are
                                found, consider changing overall event consistency to ODT.
                                RAM consumption issues are most likely to occur when Xcp on Ethernet
                                (&lt;code&gt;XcpOnEthernetEnabled&lt;/code&gt;) is enabled because the MAX_DTO can be
                                much bigger than the CAN or FlexRay case.&lt;/p&gt;

                                &lt;p&gt;The overall event consistency is calculated as:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    If a single event consistency is set to EVENT, the overall
                                    event consistency is set to EVENT.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    If a single event consistency is set to DAQ and no event has
                                    event consistency set to EVENT, the overall event consistency
                                    is set to DAQ.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    If all events have event consistency ODT, the overall event
                                    consistency is set to ODT.
                                  &lt;/li&gt;
                                &lt;/ul&gt;

                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Channel Consistency"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="a98dbe16-7ab7-48d6-b272-8240f1e79ac0"/>
                        <a:da name="DEFAULT" value="ODT"/>
                        <a:da name="RANGE">
                          <a:v>DAQ</a:v>
                          <a:v>EVENT</a:v>
                          <a:v>ODT</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="XcpEventChannelMaxDaqList" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the maximum number of DAQ lists that are handled by this event
                                channel (ASAM parameter: &lt;code&gt;MAX_DAQ_LIST&lt;/code&gt;).&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt; 1 .. 255 &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                    &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                    Selecting a smaller value for this parameter reduces the RAM
                                    consumption of the module configuration.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum Number of DAQ Lists"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="9f2f5ccb-3e5d-440e-a602-da91cdd2cc4a"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpEventChannelNumber" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the index number of the event channel (ASAM parameter:
                                &lt;code&gt;EVENT_CHANNEL_NUMBER&lt;/code&gt;).&lt;/p&gt;
                                &lt;p&gt;The event channel number specifies the generic
                                signal source that effectively determines the data
                                transmission timing.&lt;/p&gt;

                                &lt;p&gt;A symbolic value (preprocessor macro) is also
                                generated for each event channel number.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt; 0 .. 65534 &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Channel Number"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                        <a:a name="UUID" 
                             value="07ae6939-2fd2-4cd9-8ad1-612d8616d270"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(../@index)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65534"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                        </a:da>
                      </v:var>
                      <v:var name="XcpEventChannelPriority" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the priority of the event channel when
                                the slave processes the different event channels (ASAM parameter:
                                &lt;code&gt;EVENT_CHANNEL_PRIORITY&lt;/code&gt;).&lt;/p&gt;
                                &lt;p&gt;This prioritization is a fixed attribute of the
                                slave and therefore read-only.&lt;/p&gt;
                                &lt;p&gt;The event channel with priority 255 has the highest priority.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                &lt;li&gt; 0 .. 255 &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Channel Priority"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="415eab43-aeae-44b3-9c68-41374d42fee1"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpEventChannelTimeCycle" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Defines the sampling period for this event in multiples of the
                                  event channel time unit (ASAM parameter:
                                  &lt;code&gt;EVENT_CHANNEL_TIME_CYCLE&lt;/code&gt;).
                                &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 255&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Note:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Events with a sampling period greater than 0 are automatically
                                    sampled by the function &lt;code&gt;Xcp_MainFunction()&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    Events with a sampling period of 0 are not automatically
                                    sampled. Use the API function &lt;code&gt;Xcp_SetEvent()&lt;/code&gt;
                                    to trigger those events. The events are then handled in the next
                                    execution of &lt;code&gt;Xcp_MainFunction()&lt;/code&gt;.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    &lt;code&gt;Xcp_SetEvent()&lt;/code&gt; may not be called for events with a
                                    sampling period different than 0.
                                  &lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Event Channel Time Unit (&lt;code&gt;XcpEventChannelTimeUnit&lt;/code&gt;):
                                    the sampling period is defined in multiples of the event channel
                                    time unit.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    Main Function Period [s] (&lt;code&gt;XcpMainFunctionPeriod&lt;/code&gt;):
                                    the sampling period (i.e. Event Channel Time Cycle * Event
                                    Channel Time Unit) shall be an integer multiple of the main
                                    function period.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                                    &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                                    Setting the value ZERO for this parameter reduces the ROM
                                    consumption of the module code.
                                  &lt;/li&gt;
                                  &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                                    &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                                    Setting the value ZERO for this parameter reduces the execution
                                    time of the module code.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Channel Time Cycle"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="a19590cf-0b8c-4edb-92ec-29904874a474"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                        <a:da name="WARNING" type="XPath">
                          <a:tst 
                                 expr="(../../../../../XcpGeneral/XcpEventTriggerMainFunc = &apos;false&apos;) and (. &gt; 0) and ( (((number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1PS&apos;) * 0.000000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10PS&apos;) * 0.00000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100PS&apos;) * 0.0000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1NS&apos;) * 0.000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10NS&apos;) * 0.00000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100NS&apos;) * 0.0000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1US&apos;) * 0.000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10US&apos;) * 0.00001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100US&apos;) * 0.0001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1MS&apos;) * 0.001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10MS&apos;) * 0.01) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100MS&apos;) * 0.1) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1S&apos;) * 1)) * (../XcpEventChannelTimeCycle)) &lt; (../../../../../XcpGeneral/XcpMainFunctionPeriod))" 
                                 true="XcpEventChannelTimeCycle period is less than XcpMainFunctionPeriod. Adjust XcpEventChannelTimeCycle and/or XcpEventChannelTimeUnit."/>
                          <a:tst 
                                 expr="(../../../../../XcpGeneral/XcpEventTriggerMainFunc = &apos;false&apos;) and (    (  ( (((number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1PS&apos;) * 0.000000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10PS&apos;) * 0.00000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100PS&apos;) * 0.0000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1NS&apos;) * 0.000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10NS&apos;) * 0.00000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100NS&apos;) * 0.0000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1US&apos;) * 0.000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10US&apos;) * 0.00001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100US&apos;) * 0.0001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1MS&apos;) * 0.001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10MS&apos;) * 0.01) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100MS&apos;) * 0.1) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1S&apos;) * 1)) * (../XcpEventChannelTimeCycle)) div ../../../../../XcpGeneral/XcpMainFunctionPeriod)     - round( (((number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1PS&apos;) * 0.000000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10PS&apos;) * 0.00000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100PS&apos;) * 0.0000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1NS&apos;) * 0.000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10NS&apos;) * 0.00000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100NS&apos;) * 0.0000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1US&apos;) * 0.000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10US&apos;) * 0.00001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100US&apos;) * 0.0001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1MS&apos;) * 0.001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10MS&apos;) * 0.01) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100MS&apos;) * 0.1) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1S&apos;) * 1)) * (../XcpEventChannelTimeCycle)) div ../../../../../XcpGeneral/XcpMainFunctionPeriod)    ) &gt; 0.0001  ) or  ( (  ( (((number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1PS&apos;) * 0.000000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10PS&apos;) * 0.00000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100PS&apos;) * 0.0000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1NS&apos;) * 0.000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10NS&apos;) * 0.00000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100NS&apos;) * 0.0000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1US&apos;) * 0.000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10US&apos;) * 0.00001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100US&apos;) * 0.0001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1MS&apos;) * 0.001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10MS&apos;) * 0.01) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100MS&apos;) * 0.1) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1S&apos;) * 1)) * (../XcpEventChannelTimeCycle)) div ../../../../../XcpGeneral/XcpMainFunctionPeriod)     - round( (((number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1PS&apos;) * 0.000000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10PS&apos;) * 0.00000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100PS&apos;) * 0.0000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1NS&apos;) * 0.000000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10NS&apos;) * 0.00000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100NS&apos;) * 0.0000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1US&apos;) * 0.000001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10US&apos;) * 0.00001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100US&apos;) * 0.0001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1MS&apos;) * 0.001) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_10MS&apos;) * 0.01) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_100MS&apos;) * 0.1) + (number(../XcpEventChannelTimeUnit = &apos;TIMESTAMP_UNIT_1S&apos;) * 1)) * (../XcpEventChannelTimeCycle)) div ../../../../../XcpGeneral/XcpMainFunctionPeriod)    ) &lt; -0.0001  )" 
                                 true="XcpEventChannelTimeCycle period is not divisible by XcpMainFunctionPeriod. Adjust XcpEventChannelTimeCycle and/or XcpEventChannelTimeUnit."/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpEventChannelTimeUnit" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Defines the time unit for calculating the sampling period of this
                                  event (ASAM parameter: &lt;code&gt;EVENT_CHANNEL_TIME_UNIT&lt;/code&gt;).
                                &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_1NS&lt;/code&gt;: 1ns (nanosecond)&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_10NS&lt;/code&gt;: 10ns&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_100NS&lt;/code&gt;: 100ns&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_1US&lt;/code&gt;: 1us (microsecond)&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_10US&lt;/code&gt;: 10us&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_100US&lt;/code&gt;: 100us&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_1MS&lt;/code&gt;: 1ms (millisecond)&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_10MS&lt;/code&gt;: 10ms&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_100MS&lt;/code&gt;: 100ms&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_1S&lt;/code&gt;: 1s (second)&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_1PS&lt;/code&gt;: 1ps (picosecond)&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_10PS&lt;/code&gt;: 10ps&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TIMESTAMP_UNIT_100PS&lt;/code&gt;: 100ps&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Event Channel Time Cycle (&lt;code&gt;XcpEventChannelTimeCycle&lt;/code&gt;):
                                    must be set to a value different from 0 to allow setting the
                                    event channel time unit.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    Main Function Period [s] (&lt;code&gt;XcpMainFunctionPeriod&lt;/code&gt;):
                                    the sampling period (i.e. Event Channel Time Cycle * Event
                                    Channel Time Unit) shall be an integer multiple of the main
                                    function period.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Channel Time Unit"/>
                        <a:a name="OPTIONAL" value="false"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="280edeb2-6443-43c4-ba53-6703627375f9"/>
                        <a:da name="DEFAULT" value="TIMESTAMP_UNIT_1MS"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="( ../XcpEventChannelTimeCycle != &apos;0&apos; )"/>
                        <a:da name="RANGE">
                          <a:v>TIMESTAMP_UNIT_100MS</a:v>
                          <a:v>TIMESTAMP_UNIT_100NS</a:v>
                          <a:v>TIMESTAMP_UNIT_100PS</a:v>
                          <a:v>TIMESTAMP_UNIT_100US</a:v>
                          <a:v>TIMESTAMP_UNIT_10MS</a:v>
                          <a:v>TIMESTAMP_UNIT_10NS</a:v>
                          <a:v>TIMESTAMP_UNIT_10PS</a:v>
                          <a:v>TIMESTAMP_UNIT_10US</a:v>
                          <a:v>TIMESTAMP_UNIT_1MS</a:v>
                          <a:v>TIMESTAMP_UNIT_1NS</a:v>
                          <a:v>TIMESTAMP_UNIT_1PS</a:v>
                          <a:v>TIMESTAMP_UNIT_1S</a:v>
                          <a:v>TIMESTAMP_UNIT_1US</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="XcpEventChannelType" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the kind of DAQ list that can be allocated to this event
                                channel (ASAM parameter: &lt;code&gt;EVENT_CHANNEL_TYPE&lt;/code&gt;).&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;DAQ&lt;/code&gt;: List allocated shall be
                                  only with direction DAQ.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;STIM&lt;/code&gt;: List allocated shall be
                                  only with direction STIM.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;DAQ_STIM&lt;/code&gt;: List allocated shall be
                                  either with direction DAQ or with direction STIM.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Event Channel Type"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="29413754-6c4f-44b3-9a26-3c496ba65c6e"/>
                        <a:da name="DEFAULT" value="DAQ"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="( ( (node:empty(../../../../../XcpGeneral/XcpStimSupported)) or                                            ( (node:accessible(../../../../../XcpGeneral/XcpStimSupported)) and                                            (../../../../../XcpGeneral/XcpStimSupported = &apos;false&apos;) ) )                                        and (.!=&apos;DAQ&apos;) )" 
                              true="If STIM support is disabled, no DAQ lists can be allocated with direction STIM or DAQ_STIM"/>
                        <a:da name="RANGE">
                          <a:v>DAQ</a:v>
                          <a:v>DAQ_STIM</a:v>
                          <a:v>STIM</a:v>
                        </a:da>
                      </v:var>
                      <v:lst name="XcpEventChannelTriggeredDaqListRef">
                        <a:a name="LABEL" value="Event Triggered DAQ Lists"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="count(../XcpEventChannelTriggeredDaqListRef/*) &gt; ../XcpEventChannelMaxDaqList" 
                              true="The number of referenced DaqLists is greater than the configured maximum value for this channel (XcpEventChannelMaxDaqList)."/>
                        <v:ref name="XcpEventChannelTriggeredDaqListRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the predefined DAQ lists that are triggered by this
                                  event channel.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="DAQ List Reference"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="93976c2c-a9c8-4646-8cb4-b51e473f3eed"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="text:uniq(../../../*/XcpEventChannelTriggeredDaqListRef/*,.)" 
                                   false="Should have unique DAQs through out all the XcpEventChannel."/>
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference. A valid reference to a DAQ list (XcpDaqList) must be provided."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (((as:ref(.)/XcpDaqListType = &apos;DAQ&apos;) and (../../XcpEventChannelType = &apos;STIM&apos;) ) or ((as:ref(.)/XcpDaqListType = &apos;STIM&apos;) and (../../XcpEventChannelType = &apos;DAQ&apos;)))" 
                                   true="The types of the event channel should match with the type of the DAQ list."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (as:ref(.)/XcpDaqListNumber &gt;= as:modconf(&apos;Xcp&apos;)/XcpGeneral/XcpMinDaq)" 
                                   true="Only predefined DAQ Lists can be associated to an event channel during configuration."/>
                          </a:da>
                          <a:da name="RANGE" type="XPath">
                            <a:tst 
                                   expr="node:when(node:value(../../XcpEventChannelType) = &apos;DAQ_STIM&apos;, node:paths(../../../../XcpDaqList/*[XcpDaqListType]), &apos;&apos;)"/>
                            <a:tst 
                                   expr="node:when(node:value(../../XcpEventChannelType) = &apos;STIM&apos;, node:paths(../../../../XcpDaqList/*[XcpDaqListType = &apos;STIM&apos; or XcpDaqListType = &apos;DAQ_STIM&apos;]), &apos;&apos;)"/>
                            <a:tst 
                                   expr="node:when(node:value(../../XcpEventChannelType) = &apos;DAQ&apos;, node:paths(../../../../XcpDaqList/*[XcpDaqListType = &apos;DAQ&apos; or XcpDaqListType = &apos;DAQ_STIM&apos;]), &apos;&apos;)"/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Xcp/XcpConfig/XcpDaqList"/>
                        </v:ref>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                  <v:lst name="XcpPdu" type="MAP">
                    <a:a name="LABEL" value="PDU Information"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="node:isconsecutive(*[@name=&apos;XcpTxPdu&apos;]/XcpTxPduId,0)" 
                             false=" Tx PDU Id has to be 0 based and consecutive."/>
                      <a:tst 
                             expr="node:isconsecutive(*[@name=&apos;XcpRxPdu&apos;]/XcpRxPduId,0)" 
                             false=" Rx PDU Id has to be 0 based and consecutive."/>
                    </a:da>
                    <a:da name="MIN" value="1"/>
                    <v:chc name="XcpPdu" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines PDU information.&lt;/p&gt;
                              &lt;p&gt;A PDU may be either a transmission (Tx) PDU or a reception (Rx) PDU.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="470ae98a-cd57-4915-9507-1a88f6e8de01"/>
                      <v:ctr name="XcpRxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the Rx PDUs.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    It is not allowed to configure an &lt;code&gt;XcpRxPdu&lt;/code&gt; that is not further assigned
                                    to a connection, refer to &lt;code&gt;XcpMapRxPdu2Connection&lt;/code&gt;.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="FRAME" value="LINE"/>
                        <a:a name="UUID" 
                             value="9f75be64-cbf1-48c1-b069-44ba7984c55c"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="count(../../XcpConnectionCfg/*/XcpRxPduConnectionInfo/*[node:refvalid(XcpMapRxPdu2Connection) and node:ref(XcpMapRxPdu2Connection)/XcpRxPduId = node:current()/XcpRxPduId]) = 0" 
                              true="Unused XcpRxPdus are not allowed to be configured. You should configure at least one reference to this parameter, from an Xcp connection container(refer to &apos;XcpMapRxPdu2Connection&apos;)."/>
                        <a:da name="TITLE" value="Rx PDU Information"/>
                        <v:var name="XcpRxPduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the ID of the PDU that is received via an
                                  Xcp_&lt;module&gt;RxIndication.&lt;/p&gt;
                                  &lt;p&gt;A symbolic value (preprocessor macro) is also
                                  generated for each PDU ID.&lt;/p&gt;
                                  &lt;p&gt;The Xcp&apos;s Rx PDU IDs must be zero-based and consecutive.&lt;/p&gt;
                                  &lt;p&gt;Range: 0 .. 65535&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Rx PDU Id"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="9a09d71b-f182-4e4e-92b1-0f0870e54995"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:i(count(../../*[@name=&apos;XcpRxPdu&apos;]) - 1)"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpRxPduRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Reference to the external Rx PDU definition in the EcuC module.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;A valid reference to EcuC&apos;s &lt;code&gt;Pdu&lt;/code&gt; parameters must be provided.&lt;/li&gt;
                                  &lt;li&gt;A unique EcuC PDU must be provided as reference for each Xcp Rx PDU.&lt;/li&gt;
                                  &lt;li&gt;It is not allowed to configure bidirectional Xcp PDUs (the same PDU cannot be given
                                      as reference for both &lt;code&gt;XcpRxPdu&lt;/code&gt; and &lt;code&gt;XcpTxPdu&lt;/code&gt;).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Rx PDU Reference"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="cdf6c05d-a39f-4be4-a986-eb345a5e315d"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference. A valid reference to an Rx PDU must be provided."/>
                            <a:tst 
                                   expr="(node:refvalid(.)) and (count(../../*[node:refvalid(XcpRxPduRef) and (node:ref(XcpRxPduRef)/@name = node:ref(node:current())/@name)]) &gt; 1)" 
                                   true="A unique EcuC PDU has to be provided as reference for each Xcp Rx Pdu."/>
                            <a:tst 
                                   expr="(node:refvalid(.)) and (count(../../*[node:refvalid(XcpTxPduRef) and (node:ref(XcpTxPduRef)/@name = node:ref(node:current())/@name)]) &gt; 0)" 
                                   true="The referenced EcuC PDU is bidirectional(has both Tx and Rx direction). It is not allowed to configure bidirectional Xcp PDUs."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpTxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the Tx PDUs.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    It is not allowed to configure an &lt;code&gt;XcpTxPdu&lt;/code&gt; that is not further assigned
                                    to a connection, refer to &lt;code&gt;XcpMapTxPdu2Connection&lt;/code&gt;.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="FRAME" value="LINE"/>
                        <a:a name="LABEL" value="Tx PDU Id"/>
                        <a:a name="UUID" 
                             value="f7277203-0eaf-462d-b43f-eb65ab768bf9"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="count(../../XcpConnectionCfg/*/XcpTxPduConnectionInfo/*[node:refvalid(XcpMapTxPdu2Connection) and node:ref(XcpMapTxPdu2Connection)/XcpTxPduId = node:current()/XcpTxPduId]) = 0" 
                              true="Unused XcpTxPdus are not allowed to be configured. You should configure at least one reference to this parameter, from an Xcp connection container(refer to &apos;XcpMapTxPdu2Connection&apos;)."/>
                        <a:da name="TITLE" value="Tx PDU Information"/>
                        <v:var name="XcpTxPduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the PDU identifier, which must be used by the lower
                                  layer BSW module for TxConfirmations or TriggerTransmits.&lt;/p&gt;
                                  &lt;p&gt;A symbolic value (preprocessor macro) is also
                                  generated for each PDU ID.&lt;/p&gt;
                                  &lt;p&gt;The Xcp&apos;s Tx PDU IDs must be zero-based and consecutive.&lt;/p&gt;
                                  &lt;p&gt;Range: 0 .. 65535&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="cb453f5d-db7d-4c93-bcf0-f5212c0b153c"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:i(count(../../*[@name=&apos;XcpTxPdu&apos;]) - 1)"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="XcpTxPduSupportForCddTriggerTransmit" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Enables the Tx PDU to support the TriggerTransmit functionality over a CDD connection.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;p&gt;The XcpOnCddEnabled parameter shall be set in order for this parameter to be used.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="PDU Support for CDD Trigger Transmit"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(../../../../../XcpGeneral/XcpOnCddEnabled = &apos;true&apos;)"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="((node:value(.) = &apos;true&apos;) and not(count(../../../../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;]) &gt; 0))" 
                                true="At least one connection of type XcpConnectionOverCDD has to be configured in order to enable Trigger Transmit for a CDD TxPdu."/>
                        </v:var>
                        <v:ref name="XcpTxPduRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the external Tx PDU definition in the EcuC module.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;A valid reference to EcuC&apos;s &lt;code&gt;Pdu&lt;/code&gt; parameters must be provided.&lt;/li&gt;
                                  &lt;li&gt;A unique EcuC PDU must be provided as reference for each Xcp Tx PDU.&lt;/li&gt;
                                  &lt;li&gt;It is not allowed to configure bidirectional Xcp PDUs (the same PDU cannot be given
                                      as reference for both &lt;code&gt;XcpTxPdu&lt;/code&gt; and &lt;code&gt;XcpRxPdu&lt;/code&gt;).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Tx PDU Reference"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="7de3f168-66d6-4867-91f4-7e9fa70ccb84"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference. A valid reference to a Tx PDU must be provided."/>
                            <a:tst 
                                   expr="(node:refvalid(.)) and (count(../../*[node:refvalid(XcpTxPduRef) and (node:ref(XcpTxPduRef)/@name = node:ref(node:current())/@name)]) &gt; 1)" 
                                   true="A unique EcuC PDU has to be provided as reference for each Xcp Tx Pdu."/>
                            <a:tst 
                                   expr="(node:refvalid(.)) and (count(../../*[node:refvalid(XcpRxPduRef) and (node:ref(XcpRxPduRef)/@name = node:ref(node:current())/@name)]) &gt; 0)" 
                                   true="The referenced EcuC PDU is bidirectional(has both Tx and Rx direction). It is not allowed to configure bidirectional Xcp PDUs."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                      </v:ctr>
                    </v:chc>
                  </v:lst>
                  <v:lst name="XcpConnectionCfg" type="MAP">
                    <a:a name="LABEL" value="Xcp Connection configuration"/>
                    <a:a name="TAB" value="Connection Information"/>
                    <a:da name="MIN" value="1"/>
                    <v:ctr name="XcpConnectionCfg" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Groups PDU information related to a connection via a specified
                                 bus (Can/CanFD/FlexRay/Ethernet).&lt;/p&gt;
                              &lt;p&gt;Multiple connections via the same bus type can be configured.&lt;/p&gt;
                              &lt;p&gt;Dependency on parameter: &lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;If the connection type is Xcp over Ethernet (&lt;code&gt;XcpEthernetConnectionType&lt;/code&gt;),
                                    the following conditions must be met:
                                  &lt;ul&gt;
                                    &lt;li&gt;The socket connections (&lt;code&gt;SoAdSocketConnection&lt;/code&gt;) configured for the PDUs belonging to the selected
                                        connection must belong to the same socket connection group (&lt;code&gt;SoAdSocketConnectionGroup&lt;/code&gt;).&lt;/li&gt;
                                    &lt;li&gt;Usually, only one socket connection (&lt;code&gt;SoAdSocketConnection&lt;/code&gt;) is allowed to be configured 
                                        for each configured Xcp over Ethernet connection (when &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt; =
                                        &lt;code&gt;XcpConnectionOverEthernet&lt;/code&gt;).
                                        There is one deviation from this rule: If the Ethernet connection type
                                        is UDP/IP (&lt;code&gt;SoAdSocketProtocol&lt;/code&gt;), and the wildcard is used for
                                        the configured socket connection (&lt;code&gt;SoAdSocketRemoteIpAddress&lt;/code&gt; = &lt;code&gt;ANY&lt;/code&gt; or
                                        &lt;code&gt;SoAdSocketRemotePort&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt;), then two connections, one for each direction,
                                        must be defined for the same socket.
                                        Note: This workaround is required because the master can change the port address when it is still
                                              connected, and it is specified in ASAM that this case is allowed.
                                    &lt;/li&gt;
                                    &lt;li&gt;If multiple Xcp PDUs are configured for one of the available directions
                                        (&lt;code&gt;XcpTxPduConnectionInfo&lt;/code&gt;/&lt;code&gt;XcpRxPduConnectionInfo&lt;/code&gt;),
                                        the SoAd PDU header (&lt;code&gt;SoAdPduHeaderEnable&lt;/code&gt;) must be enabled.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdSocketSoConModeChgNotification&lt;/code&gt; must be:
                                      &lt;ul&gt;
                                        &lt;li&gt;Enabled, if the socket type (&lt;code&gt;SoAdSocketProtocol&lt;/code&gt;) is TCP (&lt;code&gt;SoAdSocketTcp&lt;/code&gt;)&lt;/li&gt;
                                        &lt;li&gt;Disabled, if the socket type (&lt;code&gt;SoAdSocketProtocol&lt;/code&gt;) is UDP (&lt;code&gt;SoAdSocketUdp&lt;/code&gt;)&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdSocketTcpInitiate&lt;/code&gt; must be disabled for the used TCP/IP socket connection
                                        group (&lt;code&gt;SoAdSocketConnectionGroup&lt;/code&gt;) - refer to the ASAM specification (the Xcp slave is listener).&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnectionRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../@name !=                                      node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/../../@name)" 
                               true="For each Xcp over the Ethernet connection, the socket connections, for Tx and Rx PDUs has to belong to the same socket connection group(refer to &apos;SoAdSocketConnectionGroup&apos;)"/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnectionRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketId !=                                           node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/SoAdSocketId)" 
                               true="For each Xcp over the Ethernet&apos;s TCP/IP connection, all Tx and Rx PDUs has to belong to the same socket connection (refer to &apos;SoAdSocketConnection&apos;)"/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnectionRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketId !=                                           node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/SoAdSocketId)                                           and((node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketRemoteAddress/SoAdSocketRemoteIpAddress != &apos;ANY&apos;)                                               and                                               (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketRemoteAddress/SoAdSocketRemotePort &gt; 0)                                              )" 
                               true="In case the selected connection is Xcp over the UDP/IP(Ethernet), all Xcp Tx and Rx PDUs has to belong to the same connection, if the &apos;SoAdSocketRemoteIpAddress&apos; != &apos;ANY&apos; or &apos;SoAdSocketRemotePort&apos; &gt; 0. This is required because the connection settings are reseted to default values, after each transmission."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnectionRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketId =                                           node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/SoAdSocketId)                                           and((node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketRemoteAddress/SoAdSocketRemoteIpAddress = &apos;ANY&apos;)                                               or                                               (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketRemoteAddress/SoAdSocketRemotePort = 0)                                               )" 
                               true="In case the selected connection is Xcp over the UDP/IP(Ethernet), two socket connections has to be defined(one for Tx and one for Rx), if the &apos;SoAdSocketRemoteIpAddress&apos; = &apos;ANY&apos; or &apos;SoAdSocketRemotePort&apos; = 0. This is required because the connection settings are reseted to default values, after each transmission."/>
                        <a:tst 
                               expr="((count(XcpTxPduConnectionInfo/*) &gt; 1) or (count(XcpRxPduConnectionInfo/*) &gt; 1))                                       and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                       and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                       and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                       and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                       and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdPduHeaderEnable != &apos;true&apos;)" 
                               true="In case more than one Xcp Tx or Rx PDU are configured, for the selected Xcp connection over the Ethernet, the &apos;SoAdPduHeaderEnable&apos; has to be set &apos;true&apos;, in order to make possible the distinguishing between PDUs, on the configured socket."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketSoConModeChgNotification != &apos;true&apos;)" 
                               true="In case the selected connection is Xcp over Ethernets TCP/IP, the &apos;SoAdSocketSoConModeChgNotification&apos; has to be enable, for the Xcp&apos;s TCP socket connection group."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol/SoAdSocketTcpInitiate = &apos;true&apos;)" 
                               true="In case the selected connection is Xcp over Ethernets TCP/IP, the &apos;SoAdSocketTcpInitiate&apos; has to be disabled(the Xcp Slave is the listener), for the Xcp&apos;s TCP socket connection group(refer to ASAM specifications)."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketSoConModeChgNotification = &apos;true&apos;)" 
                               true="In case the selected connection is Xcp over Ethernets UDP/IP, the &apos;SoAdSocketSoConModeChgNotification&apos; has to be disabled, for the Xcp&apos;s UDP socket connection group."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../@name !=                                      node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/../../@name)" 
                               true="For each Xcp over the Ethernet connection, the socket connections, for Tx and Rx PDUs has to belong to the same socket connection group(refer to &apos;SoAdSocketConnectionGroup&apos;)"/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketId !=                                           node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/SoAdSocketId)" 
                               true="For each Xcp over the Ethernet&apos;s TCP/IP connection, all Tx and Rx PDUs has to belong to the same socket connection (refer to &apos;SoAdSocketConnection&apos;)"/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketId !=                                           node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/SoAdSocketId)                                           and((node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketRemoteAddress/SoAdSocketRemoteIpAddress != &apos;ANY&apos;)                                               and                                               (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketRemoteAddress/SoAdSocketRemotePort &gt; 0)                                              )" 
                               true="In case the selected connection is Xcp over the UDP/IP(Ethernet), all Xcp Tx and Rx PDUs has to belong to the same connection, if the &apos;SoAdSocketRemoteIpAddress&apos; != &apos;ANY&apos; or &apos;SoAdSocketRemotePort&apos; &gt; 0. This is required because the connection settings are reseted to default values, after each transmission."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0) and (count(XcpRxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketId =                                           node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/SoAdSocketId)                                           and((node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketRemoteAddress/SoAdSocketRemoteIpAddress = &apos;ANY&apos;)                                               or                                               (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketRemoteAddress/SoAdSocketRemotePort = 0)                                               )" 
                               true="In case the selected connection is Xcp over the UDP/IP(Ethernet), two socket connections has to be defined(one for Tx and one for Rx), if the &apos;SoAdSocketRemoteIpAddress&apos; = &apos;ANY&apos; or &apos;SoAdSocketRemotePort&apos; = 0. This is required because the connection settings are reseted to default values, after each transmission."/>
                        <a:tst 
                               expr="((count(XcpTxPduConnectionInfo/*) &gt; 1) or (count(XcpRxPduConnectionInfo/*) &gt; 1))                                       and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                       and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                       and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                       and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                       and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdPduHeaderEnable != &apos;true&apos;)" 
                               true="In case more than one Xcp Tx or Rx PDU are configured, for the selected Xcp connection over the Ethernet, the &apos;SoAdPduHeaderEnable&apos; has to be set &apos;true&apos;, in order to make possible the distinguishing between PDUs, on the configured socket."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketSoConModeChgNotification != &apos;true&apos;)" 
                               true="In case the selected connection is Xcp over Ethernets TCP/IP, the &apos;SoAdSocketSoConModeChgNotification&apos; has to be enable, for the Xcp&apos;s TCP socket connection group."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol/SoAdSocketTcpInitiate = &apos;true&apos;)" 
                               true="In case the selected connection is Xcp over Ethernets TCP/IP, the &apos;SoAdSocketTcpInitiate&apos; has to be disabled(the Xcp Slave is the listener), for the Xcp&apos;s TCP socket connection group(refer to ASAM specifications)."/>
                        <a:tst 
                               expr="(count(XcpTxPduConnectionInfo/*) &gt; 0)                                      and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                      and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                      and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                      and (count(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)                                      and (node:ref(node:ref(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketSoConModeChgNotification = &apos;true&apos;)" 
                               true="In case the selected connection is Xcp over Ethernets UDP/IP, the &apos;SoAdSocketSoConModeChgNotification&apos; has to be disabled, for the Xcp&apos;s UDP socket connection group."/>
                      </a:da>
                      <v:var name="XcpConnectionId" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;Xcp connection unique identifier.&lt;/p&gt;
                             &lt;p&gt;It is used to determine the connection that is
                                used by the Xcp slave to communicate with the master.&lt;/p&gt;
                             &lt;p&gt;Range:
                               &lt;ul&gt;
                                 &lt;li&gt;0 .. 254&lt;/li&gt;
                                 &lt;li&gt;255: used to define an invalid connection ID&lt;/li&gt;
                               &lt;/ul&gt;
                             &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Xcp Connection Id"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                        <a:a name="UUID" 
                             value="f36e5680-3260-11e2-81c1-1800200c9a69"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="num:integer(../@index)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=254"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                          <mt:xpath 
                                    false="The Xcp connection Id has to be zero based and consecutive." 
                                    expr="node:isconsecutive(../../*/XcpConnectionId,0)"/>
                        </a:da>
                      </v:var>
                      <v:ref name="XcpConnectionApplicationRef" 
                             type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;Xcp reference to an Os Application.&lt;/p&gt;
                             &lt;p&gt;If the Bsw Distribution feature is enabled, each Xcp connection needs to be mapped
                             to an Os Application.&lt;/p&gt;
                             &lt;p&gt;Xcp Bsw Distribution generates one Xcp instance per core. Each instance is represented by one or more Xcp connections.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Xcp Connection Application"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="node:exists(../../../../../XcpBswDistribution)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath 
                                    false="A valid OsApplication container must be referenced." 
                                    expr="(node:refvalid(.))"/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                      </v:ref>
                      <v:var name="XcpMaxCto" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The maximum length of a CTO packet in bytes, specific to each individual connection.&lt;/p&gt;
                              &lt;p&gt;A CTO packet consists of:&lt;/p&gt;
                              
                              &lt;ul&gt;
                                &lt;li&gt;an Identification Field (the PID containing the CTO packet code)&lt;/li&gt;
                                &lt;li&gt;the Data Field, which contains the specific payload necessary for
                                the different types of CTO packet.&lt;/li&gt;
                              &lt;/ul&gt;
                              
                              &lt;p&gt;The length of the CTO varies according to the needs and the used
                              XCP transport layer.&lt;/p&gt;
                              
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt; CAN: 8 &lt;/li&gt;
                              &lt;li&gt; CAN-FD: 8 .. (maximum data length of a CAN-FD frame)&lt;/li&gt;
                              &lt;li&gt; FlexRay: 8 .. (maximum data length of a FlexRay frame
                              (&lt;code&gt;XcpMaxFlexMsgLengthInit&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                              &lt;li&gt; Ethernet: 8 .. (maximum data length of a Ethernet frame
                              (&lt;code&gt;XcpMaxEthernetMsgLengthInit&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                              &lt;li&gt; CDD: 8 .. 255 &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                  Selecting a smaller value for this parameter reduces the
                                  RAM consumption of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum CTO Length"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="../../../../../XcpGeneral/XcpMaxCto"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The maximum length of XCP command transfer objects must be 8 if CAN is enabled." 
                                    expr="../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos; and . != 8"/>
                            <mt:tst 
                                    true="The maximum length of XCP command transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpCanFdMaxDlc for CAN-FD." 
                                    expr="../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos; and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (. &gt; ../XcpConnectionInterfaceType/XcpCanFdMaxDlc))"/>
                            <mt:tst 
                                    true="If FlexRay is used, the maximum length of XCP command transfer objects shall not be greater than min(XcpMaxFlexMsgLengthInit,254) - XCP_FLEXRAY_HEADER_LENGTH_PER_CONNECTION (which can be 4,2, or 1 depending on parameter XcpFlxHeaderAlignment)." 
                                    expr="(../../../../../XcpGeneral/XcpSupportForFlxTPCommands = &apos;false&apos;) and (../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;) and (. &gt; node:when(../XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../XcpConnectionInterfaceType/XcpMaxFlexMsgLengthInit, 254) - ( number(node:when(../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))) ))"/>
                            <mt:tst 
                                    true="If Ethernet is used, the maximum length of XCP command transfer objects shall not be greater than min(XcpMaxEthernetMsgLengthInit - 4, 255)." 
                                    expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;) and (. &gt; node:when(../XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;, ../XcpConnectionInterfaceType/XcpMaxEthernetMsgLengthInit - 4, 255))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpMaxDto" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;The maximum length of a DTO packet in bytes, specific to each individual connection.&lt;/p&gt;
                             &lt;p&gt;A DTO packet consists of:&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li&gt;an Identification Field, which varies depending upon the Identification
                               Field type (&lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;)&lt;/li&gt;
                               &lt;li&gt;an optional Timestamp Field, which varies depending upon the
                               Timestamp Field Type(&lt;code&gt;XcpTimestampType&lt;/code&gt;)&lt;/li&gt;
                               &lt;li&gt;the Data Field, which contains the data for synchronous
                               acquisition and stimulation.&lt;/li&gt;
                             &lt;/ul&gt;
                             
                             &lt;p&gt;The length of the CTO varies according to the needs and the used
                             XCP transport layer.&lt;/p&gt;
                             
                             &lt;p&gt;Range:&lt;/p&gt;
                             &lt;ul&gt;
                             &lt;li&gt; CAN: 8 &lt;/li&gt;
                             &lt;li&gt; CAN-FD: 8 .. (maximum data length of a CAN-FD frame)&lt;/li&gt;
                             &lt;li&gt; FlexRay: 8 .. (maximum data length of a FlexRay frame
                             (&lt;code&gt;XcpMaxFlexMsgLengthInit&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                             &lt;li&gt; Ethernet: 8 .. (maximum data length of a Ethernet frame
                             (&lt;code&gt;XcpMaxEthernetMsgLengthInit&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                             &lt;li&gt; CDD: 8 .. (maximum data length of a CDD frame)&lt;/li&gt;
                             &lt;/ul&gt;
                             &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                 &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 RAM consumption of the module code.
                               &lt;/li&gt;
                               &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                 &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 RAM consumption of the module config.
                               &lt;/li&gt;
                               &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                                 &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 ROM consumption of the module config.
                               &lt;/li&gt;
                             &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum DTO Length"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="../../../../../XcpGeneral/XcpMaxDto"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65535"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The maximum length of XCP data transfer objects must be 8 if CAN is enabled." 
                                    expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;) and (. != 8)"/>
                            <mt:tst 
                                    true="The maximum length of XCP data transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpCanFdMaxDlc for CAN-FD." 
                                    expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;) and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (. &gt; ../XcpConnectionInterfaceType/XcpCanFdMaxDlc))"/>
                            <mt:tst 
                                    true="If FlexRay is used, the maximum length of XCP data transfer objects shall not be greater than min(XcpMaxFlexMsgLengthInit,254) - XCP_FLEXRAY_HEADER_LENGTH_PER_CONNECTION (which can be 4,2, or 1 depending on parameter XcpFlxHeaderAlignment)." 
                                    expr="(../../../../../XcpGeneral/XcpSupportForFlxTPCommands = &apos;false&apos;) and (../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;) and (. &gt; node:when(../XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../XcpConnectionInterfaceType/XcpMaxFlexMsgLengthInit, 254) - ( number(node:when(../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))) ))"/>
                            <mt:tst 
                                    true="If Ethernet is used, the maximum length of XCP data transfer objects shall not be greater than min(XcpMaxEthernetMsgLengthInit,1454) - 4." 
                                    expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;) and (. &gt; node:when(../XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;, ../XcpConnectionInterfaceType/XcpMaxEthernetMsgLengthInit, 1454) - 4)"/>
                            <mt:tst 
                                    true="If CDD is used, the maximum length of XCP data transfer objects shall not be greater than 1454." 
                                    expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;) and (. &gt; 1454)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpMaxBS" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;The maximum number of blocks in a DOWNLOAD block sequence. Includes the initial DOWNLOAD command (ASAM parameter: MAX_BS).&lt;/p&gt;
                             &lt;p&gt;Range:&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li&gt; 1 .. 255 &lt;/li&gt;
                             &lt;/ul&gt;
                             &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                 &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the RAM
                                 consumption of the module code.
                               &lt;/li&gt;
                             &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="XcpMaxBS"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="../../../../../XcpGeneral/XcpMaxBS"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(../../../../../XcpGeneral/XcpMasterBlockModeSupported = &apos;true&apos;)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=1"/>
                          </mt:range>
                        </a:da>
                        <a:da name="WARNING" type="XPath">
                          <a:tst expr="(. = 1)" 
                                 true="Setting this parameter to 1 disables block mode and is therefore discouraged."/>
                          <a:tst 
                                 expr="((../../../../../XcpGeneral/XcpAddressGranularity = &apos;BYTE&apos;) and (. &gt; (ceiling(255 div (../XcpMaxCto - 2)))))                                       or ((../../../../../XcpGeneral/XcpAddressGranularity = &apos;WORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCto - 2) div 2))))))                                       or ((../../../../../XcpGeneral/XcpAddressGranularity = &apos;DWORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCto - 4) div 4))))))  " 
                                 true="The value configured for XcpMaxBS is too high. It will be reduced during generation to the maximum supported value. If you want to correct the configuration, press the &apos;Calculate value&apos; button to reduce it to the maximum value that is supported."/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpMaxCtoPgm" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the maximum length of XCP command transfer objects (CTO) in bytes for flash programming (ASAM parameter: &lt;code&gt;MAX_CTO_PGM&lt;/code&gt;)&lt;/p&gt;
                              &lt;p&gt;A CTO packet consists of:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;an Identification Field (the PID containing the CTO Packet code) &lt;/li&gt;
                                &lt;li&gt;the Data Field, which contains the specific payload necessary for
                                the different types of CTO packet.&lt;/li&gt;
                              &lt;/ul&gt;
                              
                              &lt;p&gt;The length of the CTO varies according to the needs and the used
                              XCP transport layer.&lt;/p&gt;
                              
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt; CAN: 8 &lt;/li&gt;
                              &lt;li&gt; CAN-FD: 8 .. (maximum data length of a CAN-FD frame)&lt;/li&gt;
                              &lt;li&gt; FlexRay: 8 .. (maximum data length of a FlexRay frame
                              (&lt;code&gt;XcpMaxFlexMsgLengthInit&lt;/code&gt; or &lt;code&gt;XcpFlxBufMaxLenInitValue&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Flash Programming Support
                                  (&lt;code&gt;XcpPgmSupported&lt;/code&gt;): this parameter is editable only if
                                  flash programming is enabled.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Note: Some older Xcp masters ignore this parameter. If your master is
                                 affected, it is advised to configure this parameter to the same value
                                 as XcpMaxCto.&lt;/p&gt;
                              
                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                  Selecting a smaller value for this parameter reduces the
                                  RAM consumption of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="XcpMaxCtoPgm"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="../../../../../XcpGeneral/XcpMaxCtoPgm"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(../../../../../XcpGeneral/XcpPgmSupported = &apos;true&apos;)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The maximum length of XCP PGM command transfer objects must be 8 if CAN is enabled." 
                                    expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;) and (. != 8)"/>
                            <mt:tst 
                                    true="If FlexRay is used, the maximum length of XCP PGM command transfer objects shall not be greater than min(XcpMaxFlexMsgLengthInit,254) - XCP_FLEXRAY_HEADER_LENGTH_PER_CONNECTION (which can be 4,2, or 1 depending on parameter XcpFlxHeaderAlignment)." 
                                    expr="(../../../../../XcpGeneral/XcpSupportForFlxTPCommands = &apos;false&apos;) and (../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;) and (. &gt; node:when(../XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../XcpConnectionInterfaceType/XcpMaxFlexMsgLengthInit, 254) - ( number(node:when(../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))) ))"/>
                            <mt:tst 
                                    true="If Ethernet is used, the maximum length of XCP PGM command transfer objects shall not be greater than min(XcpMaxEthernetMsgLengthInit,1454) - 4." 
                                    expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;) and (. &gt; node:when(../XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;, ../XcpConnectionInterfaceType/XcpMaxEthernetMsgLengthInit, 1454) - 4)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpMaxBSPgm" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Defines the maximum allowed block size as the initial PROGRAM command
                                plus the number of consecutive command packets (PROGRAM_NEXT) in a block
                                sequence for flash programming (ASAM parameter: &lt;code&gt;MAX_BS_PGM&lt;/code&gt;).
                              &lt;/p&gt;
                              
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt; 1 .. 255 &lt;/li&gt;
                              &lt;/ul&gt;
                              
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Flash Programming Support
                                  (&lt;code&gt;XcpPgmSupported&lt;/code&gt;): this parameter is editable only if
                                  flash programming is enabled.
                                &lt;/li&gt;
                                &lt;li&gt;
                                  Master Block Mode Support
                                  (&lt;code&gt;XcpMasterBlockModePgmSupported&lt;/code&gt;): this parameter is editable
                                  if master block mode support for flash programming is enabled.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              
                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                  Selecting a smaller value for this parameter reduces the RAM
                                  consumption of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="XcpMaxBSPgm"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="../../../../../XcpGeneral/XcpMaxBSPgm"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(../../../../../XcpGeneral/XcpPgmSupported = &apos;true&apos;) and (../../../../../XcpGeneral/XcpMasterBlockModePgmSupported = &apos;true&apos;)"/>
                        <a:da name="WARNING" type="XPath">
                          <a:tst expr="(. = 1)" 
                                 true="Setting this parameter to 1 disables block mode and is therefore discouraged."/>
                          <a:tst 
                                 expr="((../../../../../XcpGeneral/XcpAddressGranularity = &apos;BYTE&apos;) and (. &gt; (ceiling(255 div (../XcpMaxCtoPgm - 2)))))                                       or ((../../../../../XcpGeneral/XcpAddressGranularity = &apos;WORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCtoPgm - 2) div 2 ))))))                                       or ((../../../../../XcpGeneral/XcpAddressGranularity = &apos;DWORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCtoPgm - 4) div 4 ))))))  " 
                                 true="The value configured for XcpMaxBSPgm is too high. It will be reduced during generation to the maximum supported value. If you want to correct the configuration, press the &apos;Calculate value&apos; button to reduce it to the maximum value that is supported."/>
                        </a:da>
                      </v:var>
                      <v:var name="XcpTimestampEnabled" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;Enables or disables timestamps in DTO packets for the current connection.&lt;/p&gt;
                             &lt;p&gt;Note that the actual number of bytes that will be used for the timestamp field
                                in DTO packets is given by XcpGeneral/XcpTimestampType.
                             &lt;/p&gt;
                             &lt;p&gt;Dependency on other configuration parameters:&lt;/p&gt;
                             &lt;p&gt;If XcpGeneral/XcpTimestampType is set to NO_TIME_STAMP, then XcpTimestampEnabled cannot be TRUE.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Timestamp Enabled"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="../../../../../XcpGeneral/XcpTimestampType != &apos;NO_TIME_STAMP&apos;"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="../../../../../XcpGeneral/XcpDaqSupported = &apos;true&apos;"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath 
                                    true="If XcpGeneral/XcpTimestampType is set to NO_TIME_STAMP then XcpTimestampEnabled cannot be TRUE." 
                                    expr=". = &apos;true&apos; and ../../../../../XcpGeneral/XcpTimestampType = &apos;NO_TIME_STAMP&apos;"/>
                        </a:da>
                      </v:var>
                      <v:chc name="XcpConnectionInterfaceType" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;Choice container used to select the connection type:&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li&gt;&lt;code&gt;XcpConnectionOverCAN&lt;/code&gt;: only PDUs mapped to the referenced CanIf configuration container are accepted to
                                   the selected connection configuration&lt;/li&gt;
                               &lt;li&gt;&lt;code&gt;XcpConnectionOverCANFD&lt;/code&gt;: only PDUs mapped to the referenced CanIf configuration container are accepted to
                                   the selected connection configuration&lt;/li&gt;
                               &lt;li&gt;&lt;code&gt;XcpConnectionOverFlexRay&lt;/code&gt;: only PDUs mapped to the same FlexRay controller are accepted to
                                   the selected connection configuration.&lt;/li&gt;
                               &lt;li&gt;&lt;code&gt;XcpConnectionOverEthernet&lt;/code&gt;: only PDUs mapped to the same Socket connection group are accepted to
                                   the selected connection configuration.&lt;/li&gt;
                               &lt;li&gt;&lt;code&gt;XcpConnectionOverCDD&lt;/code&gt;: only PDUs referenced from a CDD configuration are accepted to 
                                   the selected connection configuration.&lt;/li&gt;
                             &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Xcp Connection Interface Type"/>
                        <a:a name="UUID" 
                             value="c37bb5d0-3260-11e2-81c1-0800200c9a71"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(. = &apos;XcpConnectionOverCAN&apos;) and (text:tolower(../../../../../XcpGeneral/XcpOnCanEnabled) = &apos;false&apos;)" 
                                 true="The connection &apos;XcpConnectionOverCAN&apos; is selected but the Xcp support for CAN communication is disabled(refer to &quot;XcpOnCanEnabled&quot; parameter)."/>
                          <a:tst 
                                 expr="(. = &apos;XcpConnectionOverCANFD&apos;) and (text:tolower(../../../../../XcpGeneral/XcpOnCanFDEnabled) = &apos;false&apos;)" 
                                 true="The connection &apos;XcpConnectionOverCANFD&apos; is selected but the Xcp support for CAN-FD communication is disabled(refer to &quot;XcpOnCanFDEnabled&quot; parameter)."/>
                          <a:tst 
                                 expr="(. = &apos;XcpConnectionOverFlexRay&apos;) and (text:tolower(../../../../../XcpGeneral/XcpOnFlexRayEnabled) = &apos;false&apos;)" 
                                 true="The connection &apos;XcpConnectionOverFlexRay&apos; is selected but the Xcp support for FlexRay communication is disabled(refer to &quot;XcpOnFlexRayEnabled&quot; parameter)."/>
                          <a:tst 
                                 expr="(. = &apos;XcpConnectionOverEthernet&apos;) and (text:tolower(../../../../../XcpGeneral/XcpOnEthernetEnabled) = &apos;false&apos;)" 
                                 true="The connection &apos;XcpConnectionOverEthernet&apos; is selected but the Xcp support for Ethernet communication is disabled(refer to &quot;XcpOnEthernetEnabled&quot; parameter)."/>
                          <a:tst 
                                 expr="(. = &apos;XcpConnectionOverCDD&apos;) and (text:tolower(../../../../../XcpGeneral/XcpOnCddEnabled) = &apos;false&apos;)" 
                                 true="The connection &apos;XcpConnectionOverCDD&apos; is selected but the Xcp support for CDD communication is disabled(refer to &quot;XcpOnCddEnabled&quot; parameter)."/>
                        </a:da>
                        <v:ctr name="XcpConnectionOverCAN" type="IDENTIFIABLE">
                          <a:a name="UUID" 
                               value="c37bb5d0-3260-11e2-81c1-0800200c9a72"/>
                          <v:ref name="XcpCtoSlavePduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the Xcp Rx PDU belonging to the selected connection.
                                     It is used by the master to send CMD packages. &lt;/p&gt;
                                  &lt;p&gt;To configure this parameter, proceed as follows: &lt;/p&gt;
                                  &lt;ol&gt;
                                  &lt;li&gt;Configure the Rx PDU required for the CTO, using the PDU Information tab.
                                      Refer to the parameter dependency below.&lt;/li&gt;
                                  &lt;li&gt;Add the configured Rx PDU to the Xcp Rx PDUs to Connection mapping tab.&lt;/li&gt;
                                  &lt;li&gt;Select the PDU reference from the drop-down list.&lt;/li&gt;
                                  &lt;/ol&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Xcp Rx PDUs to Connection mapping (&lt;code&gt;XcpRxPduConnectionInfo&lt;/code&gt;): At least one
                                    Xcp connection Rx PDU must be configured in the Xcp Rx PDUs to Connection mapping container.
                                    All PDUs configured will be listed in the drop-down list next to the
                                    &lt;code&gt;CTO Slave PDU Reference&lt;/code&gt; parameter.
                                    The referenced PDU must support the receiving of CMD packages.&lt;/li&gt;
                                    &lt;li&gt;The referenced node must belong to the same connection.&lt;/li&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverCAN&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="CTO Slave PDU Reference (Rx PDU)"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference. A valid reference to an Xcp Rx PDU must be provided."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/XcpPduSupportForCmdCtoType = &apos;false&apos;)" 
                                     true="Invalid reference. The referenced Rx PDU is ocnfigured to not supporting CMD CTOs, and thus for cannot be used by the master to send CMD CTO packages, refer to &quot;XcpPduSupportForCmdCtoType&quot; parameter."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../@name != ../../@name)" 
                                     true="Invalid reference. The referenced node is not belonging to the same connection."/>
                            </a:da>
                            <a:da name="RANGE" type="XPath" 
                                  expr="node:paths(../../XcpRxPduConnectionInfo/*)"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpRxPduConnectionInfo"/>
                          </v:ref>
                          <v:ref name="XcpBroadcastPduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the Xcp Rx PDU belonging to the selected connection.
                                     It is used by the master to broadcast the GET_SLAVE_ID command. &lt;/p&gt;
                                  &lt;p&gt;Note: On the referenced ID, only the GET_SLAVE_ID command will be accepted.
                                     All other packages received with this PDU will be ignored.&lt;/p&gt;

                                  &lt;p&gt;To configure this parameter, proceed as follows: &lt;/p&gt;
                                  &lt;ol&gt;
                                  &lt;li&gt;Configure the Rx PDU required for the CTO, using the PDU Information tab.
                                      Refer to the parameter dependency below.&lt;/li&gt;
                                  &lt;li&gt;Add the configured Rx PDU to the Xcp Rx PDUs to Connection mapping tab.&lt;/li&gt;
                                  &lt;li&gt;Select the PDU reference from the drop-down list.&lt;/li&gt;
                                  &lt;/ol&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Xcp Rx PDUs to Connection mapping (&lt;code&gt;XcpRxPduConnectionInfo&lt;/code&gt;): At least one
                                    Xcp connection Rx PDU must be configured in the Xcp Rx PDUs to Connection mapping container.
                                    All PDUs configured will be listed in the drop-down list next to the
                                    &lt;code&gt;CTO Slave PDU Reference&lt;/code&gt; parameter.
                                    The referenced PDU must support the receiving of CMD packages.&lt;/li&gt;
                                    &lt;li&gt;The referenced node must belong to the same connection.&lt;/li&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverCAN&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;XcpPduSupportForStimDtoType&lt;/code&gt; must be disabled for the referenced Xcp PDU,
                                        if the referenced PDU is used only to receive the broadcasted GET_SLAVE_ID command.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Master Broadcast PDU reference (Rx PDU)"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference. A valid reference to an Xcp Rx PDU must be provided."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/XcpPduSupportForCmdCtoType = &apos;false&apos;)" 
                                     true="Invalid reference. The referenced Rx PDU is configured not to supporting CMD CTOs, and thus for cannot be used by the master to send CMD CTO packages, refer to &quot;XcpPduSupportForCmdCtoType&quot; parameter."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../@name != ../../@name)" 
                                     true="Invalid reference. The referenced node is not belonging to the same connection."/>
                              <a:tst 
                                     expr="node:refvalid(.)                                            and node:refvalid(../XcpCtoSlavePduRef)                                            and (node:ref(.)/XcpPduSupportForStimDtoType = &apos;true&apos;)                                            and not(contains(node:path(node:ref(.)), node:path(node:ref(../XcpCtoSlavePduRef))))" 
                                     true="In case the selected configuration is &apos;XcpConnectionOverCAN&apos;, if the referenced PDU is used only for receiving broadcasted GET_SLAVE_ID, it is not allowed to support STIM packages on this PDU(&apos;XcpPduSupportForStimDtoType&apos; has to be disabled, for the referenced Xcp PDU)."/>
                            </a:da>
                            <a:da name="RANGE" type="XPath" 
                                  expr="node:paths(../../XcpRxPduConnectionInfo/*)"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpRxPduConnectionInfo"/>
                          </v:ref>
                          <v:ref name="XcpConnectionCanIfCfgRef" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the CanIf interface where the Source/Destination PDUs,
                                     configured for the selected connection, can be found.&lt;/p&gt;
                                  &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                      assigned PDUs for the selected connection over CAN.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverCAN&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;li&gt;A valid CanIf configuration must be available for selection.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Reference to CanIf configuration"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference. A valid reference to an CanIf Init configuration has to be provided, refer to &apos;CanIfInitCfg&apos;."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanIf/CanIfInitCfg"/>
                          </v:ref>
                        </v:ctr>
                        <v:ctr name="XcpConnectionOverCANFD" 
                               type="IDENTIFIABLE">
                          <a:a name="UUID" 
                               value="04c6a910-88ab-4054-856c-5f4a4b3d78c4"/>
                          <v:ref name="XcpCanFdCtoSlavePduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the Xcp Rx PDU belonging to the selected connection.
                                     It is used by the master to send CMD packages. &lt;/p&gt;
                                  &lt;p&gt;To configure this parameter, proceed as follows: &lt;/p&gt;
                                  &lt;ol&gt;
                                  &lt;li&gt;Configure the Rx PDU required for the CTO, using the PDU Information tab.
                                      Refer to the parameter dependency below.&lt;/li&gt;
                                  &lt;li&gt;Add the configured Rx PDU to the Xcp Rx PDUs to Connection mapping tab.&lt;/li&gt;
                                  &lt;li&gt;Select the PDU reference from the drop-down list&lt;/li&gt;
                                  &lt;/ol&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Xcp Rx PDUs to Connection mapping (&lt;code&gt;XcpRxPduConnectionInfo&lt;/code&gt;): At least one
                                    Xcp connection Rx PDU must be configured in the Xcp Rx PDUs to Connection mapping container.
                                    All PDUs configured will be listed in the drop-down list next to the
                                    &lt;code&gt;CTO Slave PDU Reference&lt;/code&gt; parameter.
                                    The referenced PDU must support the receiving of CMD packages.&lt;/li&gt;
                                    &lt;li&gt;The referenced node must belong to the same connection.&lt;/li&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverCANFD&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="CAN-FD CTO Slave PDU Reference (Rx PDU)"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="ab7994ce-831b-4ea0-8056-60b6d7fb65cc"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference. A valid reference to an Xcp Rx PDU must be provided."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/XcpPduSupportForCmdCtoType = &apos;false&apos;)" 
                                     true="Invalid reference. The referenced Rx PDU is configured to not supporting CMD CTOs, and thus for cannot be used by the master to send CMD CTO packages, refer to &quot;XcpPduSupportForCmdCtoType&quot; parameter."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../@name != ../../@name)" 
                                     true="Invalid reference. The referenced node is not belonging to the same connection."/>
                            </a:da>
                            <a:da name="RANGE" type="XPath" 
                                  expr="node:paths(../../XcpRxPduConnectionInfo/*)"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpRxPduConnectionInfo"/>
                          </v:ref>
                          <v:ref name="XcpCanFdBroadcastPduRef" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the Xcp Rx PDU belonging to the selected connection.
                                     It is used by the master to broadcast the GET_SLAVE_ID command. &lt;/p&gt;
                                  &lt;p&gt;Note: On the referenced ID, only the GET_SLAVE_ID command is accepted.
                                     All other packages received with this PDU are ignored.&lt;/p&gt;

                                  &lt;p&gt;To configure this parameter, proceed as follows: &lt;/p&gt;
                                  &lt;ol&gt;
                                  &lt;li&gt;Configure the Rx PDU required for the CTO, using the PDU Information tab.
                                      Refer to the parameter dependency below.&lt;/li&gt;
                                  &lt;li&gt;Add the configured Rx PDU to the Xcp Rx PDUs to Connection mapping tab.&lt;/li&gt;
                                  &lt;li&gt;Select the PDU reference from the drop-down list&lt;/li&gt;
                                  &lt;/ol&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Xcp Rx PDUs to Connection mapping (&lt;code&gt;XcpRxPduConnectionInfo&lt;/code&gt;): At least one
                                    Xcp connection Rx PDU must be configured in the Xcp Rx PDUs to Connection mapping container.
                                    All PDUs configured are listed in the drop-down list next to the
                                    &lt;code&gt;CTO Slave PDU Reference&lt;/code&gt; parameter.
                                    The referenced PDU must support the receiving of CMD packages.&lt;/li&gt;
                                    &lt;li&gt;The referenced node must belong to the same connection.&lt;/li&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverCANFD&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;XcpPduSupportForStimDtoType&lt;/code&gt; must be disabled for the referenced Xcp PDU,
                                        if the referenced PDU is used only to receive the broadcasted GET_SLAVE_ID command.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Master Broadcast PDU reference (Rx PDU)"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="9ff4308f-f427-41ee-b730-9ef2a9b2feb3"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference. A valid reference to an Xcp Rx PDU must be provided."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/XcpPduSupportForCmdCtoType = &apos;false&apos;)" 
                                     true="Invalid reference. The referenced Rx PDU is configured not to supporting CMD CTOs, and thus for cannot be used by the master to send CMD CTO packages, refer to &quot;XcpPduSupportForCmdCtoType&quot; parameter."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../@name != ../../@name)" 
                                     true="Invalid reference. The referenced node is not belonging to the same connection."/>
                              <a:tst 
                                     expr="node:refvalid(.)                                            and node:refvalid(../XcpCanFdCtoSlavePduRef)                                            and (node:ref(.)/XcpPduSupportForStimDtoType = &apos;true&apos;)                                            and not(contains(node:path(node:ref(.)), node:path(node:ref(../XcpCanFdCtoSlavePduRef))))" 
                                     true="In case the selected configuration is &apos;XcpConnectionOverCANFD&apos;, if the referenced PDU is used only for receiving broad casted GET_SLAVE_ID, it is not allowed to support STIM packages on this PDU(&apos;XcpPduSupportForStimDtoType&apos; has to be disabled, for the referenced Xcp PDU)."/>
                            </a:da>
                            <a:da name="RANGE" type="XPath" 
                                  expr="node:paths(../../XcpRxPduConnectionInfo/*)"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpRxPduConnectionInfo"/>
                          </v:ref>
                          <v:var name="XcpCanFdMaxDlcRequired" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines if the length of the XCP packages is given by
                                      &lt;code&gt;XcpCanFdMaxDlc&lt;/code&gt; or not.
                                    For CAN-FD, the next larger defined DLC is considered for the calculation if
                                    &lt;code&gt;XcpCanFdMaxDlcRequired&lt;/code&gt; is disabled and the DLC of a frame does not
                                    match one of the defined DLC values.
                                    If &lt;code&gt;XcpCanFdMaxDlcRequired&lt;/code&gt; is enabled, always the corresponding
                                    DLC = &lt;code&gt;XcpCanFdMaxDlc&lt;/code&gt; parameter is used for the calculation.&lt;/p&gt;
                                    &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                       &lt;p&gt;This parameter is available only if the following parameter is enabled:&lt;/p&gt;
                                        &lt;li&gt;
                                          Xcp on CAN-FD (&lt;code&gt;XcpOnCanFDEnabled&lt;/code&gt;)
                                        &lt;/li&gt;
                                      &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="CANFD Max DLC required"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="7487e095-f04e-41b3-acf4-dc9c32b0223f"/>
                          </v:var>
                          <v:var name="XcpCanFdMaxDlc" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the value of maximum data length of a CAN-FD frame.&lt;/p&gt;
                                    &lt;p&gt;The maximum data length of a CAN-FD message shall be one of the following values:
                                       8, 12, 16, 20, 24, 32, 48, 64.&lt;/p&gt;
                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                    &lt;li&gt; DLC values: 8, 12, 16, 20, 24, 32, 48, 64 &lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                       &lt;p&gt;This parameter is available only if the following parameters are enabled:&lt;/p&gt;
                                        &lt;li&gt;
                                          Xcp on CAN-FD (&lt;code&gt;XcpOnCanFDEnabled&lt;/code&gt;).
                                        &lt;/li&gt;
                                      &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="CAN-FD Max DLC"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f8723a56-7546-4607-a241-7a2d4573f2b7"/>
                            <a:da name="DEFAULT" value="64"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="../XcpCanFdMaxDlcRequired = &apos;true&apos; and num:max(text:split(concat(../../XcpMaxCto,&apos; &apos;,../../XcpMaxDto,&apos; &apos;,../../XcpMaxCtoPgm))) != ." 
                                  true="The maximum value between XcpMaxCto, XcpMaxCtoPgm and XcpMaxDto is not equal to the XcpCanFdMaxDlc"/>
                            <a:da name="RANGE">
                              <a:v>8</a:v>
                              <a:v>12</a:v>
                              <a:v>16</a:v>
                              <a:v>20</a:v>
                              <a:v>24</a:v>
                              <a:v>32</a:v>
                              <a:v>48</a:v>
                              <a:v>64</a:v>
                            </a:da>
                          </v:var>
                          <v:var name="XcpCanFdFillValue" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the value used for the fill bytes of CAN-FD packages.&lt;/p&gt;
                                    &lt;p&gt;This parameter should be used to define the value for fill bytes. For CAN-FD, fill
                                    bytes are added to the data until the expected package length is reached.&lt;/p&gt;
                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                    &lt;li&gt; Fill bytes Value: 0 .. 255 &lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                       &lt;p&gt;This parameter is available only if the following parameters are enabled:&lt;/p&gt;
                                        &lt;li&gt;
                                          Xcp on CAN-FD (&lt;code&gt;XcpOnCanFDEnabled&lt;/code&gt;).
                                        &lt;/li&gt;
                                      &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="CAN-FD Fill Byte Value"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="2d28c96b-0405-4230-8962-429d0ee2088c"/>
                            <a:da name="DEFAULT" value="255"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=255"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:ref name="XcpConnectionCanFdCanIfCfgRef" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the CanIf interface where the Source/Destination PDUs,
                                     configured for the selected connection, can be found.&lt;/p&gt;
                                  &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                      assigned PDUs for the selected connection over CAN-FD.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverCANFD&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;li&gt;A valid CanIf configuration must be available for selection.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Reference CAN-FD to CanIf configuration"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="de3137db-c7b4-45c4-83b9-da7affccd596"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference. A valid reference to an CanIf Init configuration has to be provided, refer to &apos;CanIfInitCfg&apos;."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanIf/CanIfInitCfg"/>
                          </v:ref>
                        </v:ctr>
                        <v:ctr name="XcpConnectionOverFlexRay" 
                               type="IDENTIFIABLE">
                          <a:a name="UUID" 
                               value="c37bb5d0-3260-11e2-81c1-0800200c9a73"/>
                          <v:var name="XcpFlxNodeAddress" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the node address for XCP (NAX) that is used for this node.&lt;/p&gt;
                                    &lt;p&gt;This value is written to the NAX field of the FlexRay XCP header
                                    when a message is sent to the master and is also expected in messages
                                    received from the master in the NAX field.&lt;/p&gt;
                                    &lt;p&gt;When multiple FlexRay are configured, it is allowed to share the same NAX
                                       address between connections, or to have different NAX addresses.&lt;/p&gt;
                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt; 0 .. 255 &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Node Address for XCP (NAX)"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="d8480030-3261-11e2-81c1-0800200c9a66"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=255"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:var name="XcpFlxHeaderAlignment" 
                                 type="ENUMERATION">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the alignment of the FlexRay XCP header.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;PACKET_ALIGNMENT_8: 8-bit alignment is used.&lt;/li&gt;
                                      &lt;li&gt;PACKET_ALIGNMENT_16: 16-bit alignment is used.&lt;/li&gt;
                                      &lt;li&gt;PACKET_ALIGNMENT_32: 32-bit alignment is used.&lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                        &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                        Selecting a smaller value for this parameter reduces the RAM
                                        consumption of the module code.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Alignment of the FlexRay XCP Header"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="da994330-3261-11e2-81c1-0800200c9a66"/>
                            <a:da name="DEFAULT" value="PACKET_ALIGNMENT_8"/>
                            <a:da name="RANGE">
                              <a:v>PACKET_ALIGNMENT_8</a:v>
                              <a:v>PACKET_ALIGNMENT_16</a:v>
                              <a:v>PACKET_ALIGNMENT_32</a:v>
                            </a:da>
                          </v:var>
                          <v:var name="XcpPackMultiMsgInOneFlexRayFrame" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables the concatenation of multiple XCP messages in one frame
                                      for FlexRay communication.&lt;/p&gt;
                                 &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Enable Multiple Xcp Msgs In One FlexRay Frame"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="c28133c0-3261-11e2-81c1-0800200c9a66"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                          <v:var name="XcpSequenceCorrectionEnabled" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables the sequence correction. Each sent frame contains a counter that is
                                   incremented for each Xcp packet.&lt;/p&gt;
                                 &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Enable Sequence Correctness"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="c28133c0-3262-11e2-81c1-0800200c9a66"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                          <v:lst name="XcpFlexrayBufferCfg" type="MAP">
                            <a:a name="LABEL" 
                                 value="Xcp FlexRay Buffer configuration"/>
                            <a:da name="ENABLE" type="XPath" 
                                  expr="(../../../../../../XcpGeneral/XcpSupportForFlxTPCommands = &apos;true&apos;)"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="count(*[node:exists(FLX_BUFCfg/XcpFlxTxConnectionInfoRef)]) != count(../../XcpTxPduConnectionInfo/*)" 
                                     true="Each Tx connection info (XcpTxPduConnectionInfo) must be mapped to a Tx FlexRay buffer (XcpFlexrayBufferCfg)"/>
                              <a:tst 
                                     expr="count(*[node:exists(FLX_BUFCfg/XcpFlxRxConnectionInfoRef)]) != count(../../XcpRxPduConnectionInfo/*)" 
                                     true="Each Rx connection info (XcpRxPduConnectionInfo) must be mapped to a Rx FlexRay buffer (XcpFlexrayBufferCfg)"/>
                            </a:da>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="XcpFlexrayBufferCfg" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                         &lt;p&gt;Contains the configuration options for FlexRay hardware buffers.&lt;/p&gt;
                                         &lt;p&gt;At least two buffers need to be fully configured: one for receiving CMD packet types
                                         (i.e. commands sent by the Xcp master to the Xcp slave),
                                         and one for transmitting the RES_ERR packet types (i.e. response to the commands).&lt;/p&gt;
                                         &lt;p&gt;The fully configured buffers must have initial valid FlexRay frame parameters (see details in groups
                                          FLX_BUFCfg and LPDU_IDCfg) as the FrIf will not implicitly initialize the Flexray frames that are marked as
                                          reconfigurable.&lt;/p&gt;
                                       &lt;/html&gt;</a:v>
                              </a:a>
                              <v:ctr name="FLX_BUFCfg" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                          &lt;p&gt;FLX_BUF Configuration&lt;/p&gt;
                                          &lt;p&gt;This configuration group configures the LPDU reference, i.e. actual Flexray hardware buffer.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="LABEL" value="FLX_BUF Configuration"/>
                                <a:a name="UUID" 
                                     value="500c2df9-be40-4e42-9c33-0a2b3d78e19a"/>
                                <a:da name="EDITABLE" value="false"/>
                                <a:da name="TITLE" value="FLX_BUF Configuration"/>
                                <v:ref name="XcpFrIfLPDURef" type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;Reference to the FrIf_LPDU that is mapped to the FlexRay hardware buffer. &lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Flexray LPDU_ID Reference"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="UUID" 
                                       value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                                  <a:da name="INVALID" type="XPath">
                                    <a:tst expr="node:refvalid(.)" 
                                           false="Invalid reference. A valid reference to an FrIf LPDU_ID must be provided"/>
                                    <a:tst 
                                           expr="node:refvalid(.) and                                             (                                               (../XcpFlxBufMaxLen != &apos;FIXED&apos;) or                                               (../../LPDU_IDCfg/XcpFlxSlotId != &apos;FIXED&apos;) or                                               (../../LPDU_IDCfg/XcpFlxOffset != &apos;FIXED&apos;) or                                               (../../LPDU_IDCfg/XcpFlxCycleRepetition != &apos;FIXED&apos;) or                                               (../../LPDU_IDCfg/XcpFlxChannel != &apos;FIXED&apos;)                                             )                                           and (node:ref(.)/FrIfReconfigurable = &apos;false&apos;)" 
                                           true="Since at least one LPDU_ID related parameter is configurable, The LPDU_ID referenced must be set as reconfigurable (FrIfReconfigurable set to true) in order to be able to change the LPDU_ID mapping to a frame structure at runtime."/>
                                    <a:tst 
                                           expr="node:refvalid(.) and (count(../../../*[node:refvalid(FLX_BUFCfg/XcpFrIfLPDURef) and (node:ref(FLX_BUFCfg/XcpFrIfLPDURef)/FrIfLPduIdx = node:ref(node:current())/FrIfLPduIdx)]) &gt; 1)" 
                                           true="It is not allowed to share the same LPDU for different FlexRay Harware buffers."/>
                                    <a:tst 
                                           expr="node:refvalid(.) and (count(node:ref(node:ref(node:ref(.)/FrIfVBTriggeringRef)/FrIfFrameStructureRef)/FrIfPdusInFrame/*) &gt; 1)" 
                                           true="It is not allowed in this implementation for an Xcp dedicated frame to have multiple PDUs."/>
                                  </a:da>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/FrIf/FrIfConfig/FrIfCluster/FrIfController/FrIfLPdu"/>
                                </v:ref>
                                <v:ref name="XcpFlxTxConnectionInfoRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;Reference to the Xcp Tx connection info that contains the Xcp packet types supported by this buffer.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Flexray Tx Connection Info Reference"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="UUID" 
                                       value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                                  <a:da name="ENABLE" type="XPath" 
                                        expr="( count(node:ref(node:ref(node:ref(node:ref(../XcpFrIfLPDURef)/FrIfVBTriggeringRef)/FrIfFrameStructureRef)/FrIfPdusInFrame/*[1]/FrIfPduRef)/FrIfPduDirection/FrIfTxPduRef) &gt; 0 )"/>
                                  <a:da name="INVALID" type="XPath">
                                    <a:tst expr="node:refvalid(.)" 
                                           false="Invalid reference. A valid reference to tx connection info must be provided"/>
                                    <a:tst 
                                           expr="node:refvalid(.) and (node:ref(node:ref(node:ref(node:ref(../XcpFrIfLPDURef)/FrIfVBTriggeringRef)/FrIfFrameStructureRef)/FrIfPdusInFrame/*[1]/FrIfPduRef)/FrIfPduDirection/FrIfTxPduRef != node:ref(node:ref(.)/XcpMapTxPdu2Connection)/XcpTxPduRef)" 
                                           true="The PDU referenced by this connection info reference must be the same as the one referenced by by the LPDU_ID (i.e. XcpFrIfLPDURef must point to the same PDU as XcpFlxTxConnectionInfoRef points to)"/>
                                    <a:tst 
                                           expr="node:refvalid(.) and                                                   (node:ref(.)/XcpPduSupportForResErrCtoType = &apos;true&apos;) and                                                   ((../../LPDU_IDCfg/XcpFlxSlotId = &apos;VARIABLE&apos;) or                                                   (../../LPDU_IDCfg/XcpFlxOffsetInitValue = &apos;VARIABLE&apos;) or                                                   (../../LPDU_IDCfg/XcpFlxCycleRepetitionInitValue = &apos;VARIABLE&apos;) or                                                   (../../LPDU_IDCfg/XcpFlxChannelInitValue = &apos;VARIABLE&apos;))" 
                                           true="If this is the buffer meant to transmit the RES_ERR packet type, it has to have all the values preconfigured in order to be available at startup"/>
                                  </a:da>
                                  <a:da name="RANGE" type="XPath" 
                                        expr="node:paths(../../../../../XcpTxPduConnectionInfo/*)"/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpTxPduConnectionInfo"/>
                                </v:ref>
                                <v:ref name="XcpFlxRxConnectionInfoRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;Reference to the Xcp Rx connection info that contains the Xcp packet types supported by this buffer.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Flexray Rx Connection Info Reference"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="UUID" 
                                       value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                                  <a:da name="ENABLE" type="XPath" 
                                        expr="( count(node:ref(node:ref(node:ref(node:ref(../XcpFrIfLPDURef)/FrIfVBTriggeringRef)/FrIfFrameStructureRef)/FrIfPdusInFrame/*[1]/FrIfPduRef)/FrIfPduDirection/FrIfRxPduRef) &gt; 0 )"/>
                                  <a:da name="INVALID" type="XPath">
                                    <a:tst expr="node:refvalid(.)" 
                                           false="Invalid reference. A valid reference to an rx connection info must be provided"/>
                                    <a:tst 
                                           expr="node:refvalid(.) and (node:ref(node:ref(node:ref(node:ref(../XcpFrIfLPDURef)/FrIfVBTriggeringRef)/FrIfFrameStructureRef)/FrIfPdusInFrame/*[1]/FrIfPduRef)/FrIfPduDirection/FrIfRxPduRef != node:ref(node:ref(.)/XcpMapRxPdu2Connection)/XcpRxPduRef)" 
                                           true="The PDU referenced by this connection info reference must be the same as the one referenced by by the LPDU_ID (i.e. XcpFrIfLPDURef must point to the same PDU as XcpFlxRxConnectionInfoRef points to)"/>
                                    <a:tst 
                                           expr="node:refvalid(.) and                                                    (node:ref(.)/XcpPduSupportForCmdCtoType = &apos;true&apos;) and                                                    ((../../LPDU_IDCfg/XcpFlxSlotId = &apos;VARIABLE&apos;) or                                                    (../../LPDU_IDCfg/XcpFlxOffsetInitValue = &apos;VARIABLE&apos;) or                                                    (../../LPDU_IDCfg/XcpFlxCycleRepetitionInitValue = &apos;VARIABLE&apos;) or                                                    (../../LPDU_IDCfg/XcpFlxChannelInitValue = &apos;VARIABLE&apos;))" 
                                           true="If this is the buffer meant to receive the CMD packet type, it has to have all the values preconfigured in order to be available at startup"/>
                                  </a:da>
                                  <a:da name="RANGE" type="XPath" 
                                        expr="node:paths(../../../../../XcpRxPduConnectionInfo/*)"/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpRxPduConnectionInfo"/>
                                </v:ref>
                                <v:var name="XcpFlxBufId" type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;FLX_BUF&lt;/p&gt;
                                            &lt;p&gt;The buffer ID, which uniquely identifies an Xcp Flexray hardware buffer&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Buffer ID"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                                  <a:da name="DEFAULT" type="XPath" 
                                        expr="num:integer(../@index)"/>
                                  <a:da name="INVALID" type="Multi">
                                    <mt:range>
                                      <mt:tst expr="&lt;=255"/>
                                      <mt:tst expr="&gt;=0"/>
                                    </mt:range>
                                    <mt:xpath 
                                              false="The Xcp Flexray Hardware buffers has to be zero based and consecutive." 
                                              expr="node:isconsecutive(../../../../../../*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]/XcpConnectionInterfaceType/XcpFlexrayBufferCfg/*/FLX_BUFCfg/XcpFlxBufId,0)"/>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxBufMaxLen" 
                                       type="ENUMERATION">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;MAX_FLX_LEN_BUF_x_init properties.&lt;/p&gt;
                                            &lt;p&gt;Range:&lt;/p&gt;
                                            &lt;ul&gt;
                                              &lt;li&gt;&lt;code&gt;FIXED&lt;/code&gt;: MAX_FLX_LEN_BUF_x_init has an initial value and cannot be changed. In that case, it equals MAX_FLX_LEN_BUF_x.&lt;/li&gt;
                                              &lt;li&gt;&lt;code&gt;VARIABLE_INITIALIZED&lt;/code&gt;: MAX_FLX_LEN_BUF_x_init can be changed by FLX_ASSIGN and, thus, becomes MAX_FLX_LEN_BUF_x.&lt;/li&gt;
                                            &lt;/ul&gt;
                                          &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Maximum Buffer Length Properties"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                                  <a:da name="DEFAULT" 
                                        value="VARIABLE_INITIALIZED"/>
                                  <a:da name="RANGE">
                                    <a:v>FIXED</a:v>
                                    <a:v>VARIABLE_INITIALIZED</a:v>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxBufMaxLenInitValue" 
                                       type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;MAX_FLX_LEN_BUF_x_init.&lt;/p&gt;
                                            &lt;p&gt;This parameter defines the initial maximum data length of the FlexRay frame.&lt;/p&gt;
                                            &lt;p&gt;Range:
                                            &lt;ul&gt;
                                              &lt;li&gt;8 .. 0xFE&lt;/li&gt;
                                            &lt;/ul&gt;
                                          &lt;/p&gt;
                                       &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Maximum Buffer Length Initial Value"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="8982dfe6-23fd-4113-b063-ff58edb1aacd"/>
                                  <a:da name="DEFAULT" value="8"/>
                                  <a:da name="ENABLE" value="true"/>
                                  <a:da name="INVALID" type="Multi">
                                    <mt:range>
                                      <mt:tst expr="&lt;=254"/>
                                      <mt:tst expr="&gt;=8"/>
                                    </mt:range>
                                    <mt:xpath>
                                      <mt:tst 
                                              true="Since this is a receive buffer for CMD packet types, the minimum size must be 12 (to guarantee the FLX_ASSIGN command reception)." 
                                              expr="(node:exists(../XcpFlxRxConnectionInfoRef) and (as:ref(../XcpFlxRxConnectionInfoRef)/XcpPduSupportForCmdCtoType = &apos;true&apos;) and (. &lt; 12)) "/>
                                      <mt:tst 
                                              true="The XcpFlxBufMaxLenInitValue should be an even number." 
                                              expr="(. mod 2 = 1)"/>
                                      <mt:tst 
                                              true="MAX_FLX_LEN_BUF_x_init shall not have the size smaller than MAX_CTO (XcpMaxCto or XcpMaxCtoPgm, whichever is larger) + Header length (XcpFlxHeaderAlignment)" 
                                              expr="(node:exists(../XcpFlxRxConnectionInfoRef) and (as:ref(../XcpFlxRxConnectionInfoRef)/XcpPduSupportForCmdCtoType = &apos;true&apos;) and (. &lt; ( number(node:when(( number(node:when(node:exists(../../../../../XcpMaxCtoPgm), ../../../../../XcpMaxCtoPgm, 0)) ) &gt; ( ../../../../../XcpMaxCto ), ( number(node:when(node:exists(../../../../../XcpMaxCtoPgm), ../../../../../XcpMaxCtoPgm, 0)) ), ( ../../../../../XcpMaxCto )) + ( number(node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) )) )))"/>
                                      <mt:tst 
                                              true="MAX_FLX_LEN_BUF_x_init shall not have the size smaller than MAX_DTO (XcpMaxDto) + Header length (XcpFlxHeaderAlignment)" 
                                              expr="(node:exists(../XcpFlxRxConnectionInfoRef) and (as:ref(../XcpFlxRxConnectionInfoRef)/XcpPduSupportForStimDtoType = &apos;true&apos;) and (. &lt; ( ../../../../../XcpMaxDto + ( number(node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )))"/>
                                      <mt:tst 
                                              true="MAX_FLX_LEN_BUF_x_init shall not have the size smaller than MAX_CTO (XcpMaxCto) + Header length (XcpFlxHeaderAlignment)" 
                                              expr="(node:exists(../XcpFlxTxConnectionInfoRef) and (as:ref(../XcpFlxTxConnectionInfoRef)/XcpPduSupportForResErrCtoType = &apos;true&apos;) and (. &lt; ( number(node:when(( number(node:when(node:exists(../../../../../XcpMaxCtoPgm), ../../../../../XcpMaxCtoPgm, 0)) ) &gt; ( ../../../../../XcpMaxCto ), ( number(node:when(node:exists(../../../../../XcpMaxCtoPgm), ../../../../../XcpMaxCtoPgm, 0)) ), ( ../../../../../XcpMaxCto )) + ( number(node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) )) )))"/>
                                      <mt:tst 
                                              true="MAX_FLX_LEN_BUF_x_init shall not have the size smaller than MAX_CTO (XcpMaxCto) + Header length (XcpFlxHeaderAlignment)" 
                                              expr="(node:exists(../XcpFlxTxConnectionInfoRef) and (as:ref(../XcpFlxTxConnectionInfoRef)/XcpPduSupportForEvServCtoType = &apos;true&apos;) and (. &lt; ( number(node:when(( number(node:when(node:exists(../../../../../XcpMaxCtoPgm), ../../../../../XcpMaxCtoPgm, 0)) ) &gt; ( ../../../../../XcpMaxCto ), ( number(node:when(node:exists(../../../../../XcpMaxCtoPgm), ../../../../../XcpMaxCtoPgm, 0)) ), ( ../../../../../XcpMaxCto )) + ( number(node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) )) )))"/>
                                      <mt:tst 
                                              true="MAX_FLX_LEN_BUF_x_init shall not have the size smaller than MAX_DTO (XcpMaxDto) + Header length (XcpFlxHeaderAlignment)" 
                                              expr="(node:exists(../XcpFlxTxConnectionInfoRef) and (as:ref(../XcpFlxTxConnectionInfoRef)/XcpPduSupportForDaqDtoType = &apos;true&apos;) and (. &lt; ( ../../../../../XcpMaxDto + ( number(node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../../../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )))"/>
                                    </mt:xpath>
                                  </a:da>
                                </v:var>
                              </v:ctr>
                              <v:ctr name="LPDU_IDCfg" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                            &lt;p&gt;Defines the configuration of the FlexRay frame.&lt;/p&gt;
                                           &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="LABEL" value="LPDU_ID Configuration"/>
                                <a:a name="UUID" 
                                     value="500c2df9-be40-4e42-9c33-0a2b3d78e19a"/>
                                <a:da name="EDITABLE" value="false"/>
                                <a:da name="TITLE" value="LPDU_ID Configuration"/>
                                <v:var name="XcpFlxSlotId" type="ENUMERATION">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;FLX_SLOT_ID parameter properties&lt;/p&gt;
                                          &lt;p&gt;Range:&lt;/p&gt;
                                             &lt;ul&gt;
                                             &lt;li&gt;&lt;code&gt;FIXED&lt;/code&gt;: FLX_SLOT_ID has an initial value and cannot be changed.&lt;/li&gt;
                                             &lt;li&gt;&lt;code&gt;VARIABLE&lt;/code&gt;: FLX_SLOT_ID does not have an initial value and can be changed.&lt;/li&gt;
                                             &lt;li&gt;&lt;code&gt;VARIABLE_INITIALIZED&lt;/code&gt;: FLX_SLOT_ID has an initial value and can be changed.&lt;/li&gt;
                                          &lt;/ul&gt;
                                         &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Slot Id Properties"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                                  <a:da name="DEFAULT" value="VARIABLE"/>
                                  <a:da name="RANGE">
                                    <a:v>FIXED</a:v>
                                    <a:v>VARIABLE</a:v>
                                    <a:v>VARIABLE_INITIALIZED</a:v>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxSlotIdInitValue" 
                                       type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;FLX_SLOT_ID parameter&lt;/p&gt;
                                            &lt;p&gt;This parameter defines the FlexRay slot ID that the FrIf_LPdu shall be configured to.&lt;/p&gt;
                                            &lt;p&gt;Range:
                                              &lt;ul&gt;
                                                &lt;li&gt;1 .. 2047&lt;/li&gt;
                                              &lt;/ul&gt;
                                            &lt;/p&gt;
                                           &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Slot Id Initial Value"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="8982dfe6-23fd-4113-b063-ff58edb1aacd"/>
                                  <a:da name="DEFAULT" value="1"/>
                                  <a:da name="ENABLE" type="XPath" 
                                        expr="( ../XcpFlxSlotId != &apos;VARIABLE&apos; )"/>
                                  <a:da name="INVALID" type="Multi">
                                    <mt:range>
                                      <mt:tst expr="&lt;=2047"/>
                                      <mt:tst expr="&gt;=1"/>
                                    </mt:range>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxOffset" type="ENUMERATION">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                             &lt;p&gt;OFFSET parameter properties&lt;/p&gt;
                                             &lt;p&gt;Range:&lt;/p&gt;
                                                &lt;ul&gt;
                                                &lt;li&gt;&lt;code&gt;FIXED&lt;/code&gt;: OFFSET has an initial value and cannot be changed.&lt;/li&gt;
                                                &lt;li&gt;&lt;code&gt;VARIABLE&lt;/code&gt;: OFFSET does not have an initial value and can be changed.&lt;/li&gt;
                                                &lt;li&gt;&lt;code&gt;VARIABLE_INITIALIZED&lt;/code&gt;: OFFSET has an initial value and can be changed.&lt;/li&gt;
                                             &lt;/ul&gt;
                                            &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Cycle Offset Properties"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                                  <a:da name="DEFAULT" value="VARIABLE"/>
                                  <a:da name="RANGE">
                                    <a:v>FIXED</a:v>
                                    <a:v>VARIABLE</a:v>
                                    <a:v>VARIABLE_INITIALIZED</a:v>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxOffsetInitValue" 
                                       type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;OFFSET parameter&lt;/p&gt;
                                            &lt;p&gt;This parameter contains the FlexRay offset (base cycle) that is used to transmit this FlexRay frame.&lt;/p&gt;
                                            &lt;p&gt;Range:
                                              &lt;ul&gt;
                                                &lt;li&gt;0 .. 63&lt;/li&gt;
                                              &lt;/ul&gt;
                                            &lt;/p&gt;
                                           &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Cycle Offset Initial Value"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="8982dfe6-23fd-4113-b063-ff58edb1aacd"/>
                                  <a:da name="DEFAULT" value="0"/>
                                  <a:da name="ENABLE" type="XPath" 
                                        expr="( ../XcpFlxOffset != &apos;VARIABLE&apos; )"/>
                                  <a:da name="INVALID" type="Multi">
                                    <mt:range>
                                      <mt:tst expr="&lt;=63"/>
                                      <mt:tst expr="&gt;=0"/>
                                    </mt:range>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxCycleRepetition" 
                                       type="ENUMERATION">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;CYCLE_REPETITION parameter properties&lt;/p&gt;
                                            &lt;p&gt;Range:&lt;/p&gt;
                                               &lt;ul&gt;
                                               &lt;li&gt;&lt;code&gt;FIXED&lt;/code&gt;: CYCLE_REPETITION has an initial value and cannot be changed.&lt;/li&gt;
                                               &lt;li&gt;&lt;code&gt;VARIABLE&lt;/code&gt;: CYCLE_REPETITION does not have an initial value and can be changed.&lt;/li&gt;
                                               &lt;li&gt;&lt;code&gt;VARIABLE_INITIALIZED&lt;/code&gt;: CYCLE_REPETITION has an initial value and can be changed.&lt;/li&gt;
                                            &lt;/ul&gt;
                                           &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Cycle Repetition Properties"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                                  <a:da name="DEFAULT" value="VARIABLE"/>
                                  <a:da name="RANGE">
                                    <a:v>FIXED</a:v>
                                    <a:v>VARIABLE</a:v>
                                    <a:v>VARIABLE_INITIALIZED</a:v>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxCycleRepetitionInitValue" 
                                       type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;CYCLE_REPETITION parameter&lt;/p&gt;
                                            &lt;p&gt;This parameter contains the FlexRay cycle repetition that is used to transmit the FlexRay frame.&lt;/p&gt;
                                            &lt;p&gt;Range:
                                              &lt;ul&gt;
                                                &lt;li&gt;0 .. 0xFF&lt;/li&gt;
                                              &lt;/ul&gt;
                                            &lt;/p&gt;
                                           &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Cycle Repetition Initial Value"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="8982dfe6-23fd-4113-b063-ff58edb1aacd"/>
                                  <a:da name="DEFAULT" value="0"/>
                                  <a:da name="ENABLE" type="XPath" 
                                        expr="( ../XcpFlxCycleRepetition != &apos;VARIABLE&apos; )"/>
                                  <a:da name="INVALID" type="Multi">
                                    <mt:range>
                                      <mt:tst expr="&lt;=255"/>
                                      <mt:tst expr="&gt;=0"/>
                                    </mt:range>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxChannel" type="ENUMERATION">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;CHANNEL parameter properties&lt;/p&gt;
                                            &lt;p&gt;Range:&lt;/p&gt;
                                               &lt;ul&gt;
                                               &lt;li&gt;&lt;code&gt;FIXED&lt;/code&gt;: CHANNEL has an initial value and cannot be changed.&lt;/li&gt;
                                               &lt;li&gt;&lt;code&gt;VARIABLE&lt;/code&gt;: CHANNEL does not have an initial value and can be changed.&lt;/li&gt;
                                               &lt;li&gt;&lt;code&gt;VARIABLE_INITIALIZED&lt;/code&gt;: CHANNEL has an initial value and can be changed.&lt;/li&gt;
                                            &lt;/ul&gt;
                                           &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Channel Properties"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                                  <a:da name="DEFAULT" value="VARIABLE"/>
                                  <a:da name="RANGE">
                                    <a:v>FIXED</a:v>
                                    <a:v>VARIABLE</a:v>
                                    <a:v>VARIABLE_INITIALIZED</a:v>
                                  </a:da>
                                </v:var>
                                <v:var name="XcpFlxChannelInitValue" 
                                       type="ENUMERATION">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;CHANNEL parameter&lt;/p&gt;
                                            &lt;p&gt;This parameter contains the FlexRay channel that is used to transmit the FlexRay frame.&lt;/p&gt;
                                            &lt;p&gt;Range:&lt;/p&gt;
                                               &lt;ul&gt;
                                               &lt;li&gt;&lt;code&gt;A&lt;/code&gt;: Channel A is used.&lt;/li&gt;
                                               &lt;li&gt;&lt;code&gt;B&lt;/code&gt;: Channel B is used.&lt;/li&gt;
                                            &lt;/ul&gt;
                                           &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Xcp Flexray Channel initial value"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="8982dfe6-23fd-4113-b063-ff58edb1aacd"/>
                                  <a:da name="DEFAULT" value="A"/>
                                  <a:da name="ENABLE" type="XPath" 
                                        expr="( ../XcpFlxChannel != &apos;VARIABLE&apos; )"/>
                                  <a:da name="RANGE">
                                    <a:v>A</a:v>
                                    <a:v>B</a:v>
                                  </a:da>
                                </v:var>
                              </v:ctr>
                            </v:ctr>
                          </v:lst>
                          <v:ref name="XcpConnectionFrIfCfgRef" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the FrIf interface where the source/destination PDUs,
                                     configured for the selected connection, can be found.&lt;/p&gt;
                                  &lt;p&gt;This reference is used to validate/generate PDU information for the
                                      assigned PDUs for the selected connection over FlexRay.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverFlexRay&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;li&gt;A valid FrIf configuration must be available for selection.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Reference to FrIf configuration"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference. A valid reference to an FrIf configuration has to be provided, refer to &apos;FrIfConfig&apos;."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrIf/FrIfConfig"/>
                          </v:ref>
                          <v:var name="XcpMaxFlexMsgLengthInit" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the initial maximum data length of a FlexRay frame
                                    (&lt;em&gt;MAX_FLX_LEN_BUF_x_init&lt;/em&gt;) that a specific slave is able to receive
                                    or transmit in a specific XCP-dedicated buffer.&lt;/p&gt;
                                    &lt;p&gt;This parameter is meaningful only if FLX_ASSIGN command support
                                    (&lt;code&gt;XcpSupportForFlxTPCommands&lt;/code&gt;) is disabled because in this case both the Rx and Tx buffers have the same size.&lt;/p&gt;
                                    &lt;p&gt;Note that the current implementation does not allow you to change MAX_FLX_LEN_BUF_x. So MAX_FLX_LEN_BUF_x is always equal to MAX_FLX_LEN_BUF_x_init.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                    &lt;li&gt; 8 .. 254 &lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                       &lt;p&gt;This parameter is available if all of the following conditions are fulfilled:&lt;/p&gt;
                                        &lt;li&gt;
                                          Xcp on FlexRay (&lt;code&gt;XcpOnFlexRayEnabled&lt;/code&gt;) is enabled.
                                        &lt;/li&gt;
                                        &lt;li&gt;
                                          Multiple Xcp Msgs In One Xcp FlexRay Frame (&lt;code&gt;XcpPackMultiMsgInOneFlexRayFrame&lt;/code&gt;) is enabled.
                                        &lt;/li&gt;
                                        &lt;li&gt;
                                          FlexRay Transport Layer Commands Support (&lt;code&gt;XcpSupportForFlxTPCommands&lt;/code&gt;) is disabled.
                                        &lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;p&gt;Hint: This parameter should be high enough to accommodate at least
                                    2 DTOs of maximum size.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Max Flexray Msg Length Initial"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="c28133c0-3261-11e2-81c1-0800200c9a66"/>
                            <a:da name="DEFAULT" value="254"/>
                            <a:da name="ENABLE" type="XPath" 
                                  expr="(../XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;) and (../../../../../../XcpGeneral/XcpSupportForFlxTPCommands = &apos;false&apos;)"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=254"/>
                                <mt:tst expr="&gt;=8"/>
                              </mt:range>
                              <mt:xpath 
                                        true="The XcpMaxFlexMsgLengthInit should be an even number." 
                                        expr="(. mod 2 = 1)"/>
                            </a:da>
                            <a:da name="WARNING" type="XPath" 
                                  expr="((2 * ( ../../XcpMaxDto + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )) &gt; .) and ((2 * ( ../../XcpMaxDto + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )) &lt; 254)" 
                                  true="The XcpPackMultiMsgInOneFlexRayFrame is enabled but just one DTO message with maximum size can be sent within one frame. If you want to efficiently use this feature, you should increase the value of XcpMaxFlexMsgLengthInit to accommodate at least 2 DTOs having the maximum configured size."/>
                          </v:var>
                        </v:ctr>
                        <v:ctr name="XcpConnectionOverEthernet" 
                               type="IDENTIFIABLE">
                          <a:a name="UUID" 
                               value="c37bb5d0-3260-11e2-81c1-0800200c9a74"/>
                          <v:var name="XcpAutoOpenSoCon" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Enables the automatic opening of the Ethernet socket(s) during start-up.&lt;/p&gt;
                                    &lt;p&gt;If enabled, &lt;code&gt;SoAd_OpenSoCon()&lt;/code&gt; is called during &lt;code&gt;Xcp_Init()&lt;/code&gt;
                                       for each configured socket.&lt;/p&gt;
                                    &lt;p&gt;If UDP protocol is used, this parameter must be enabled.&lt;/p&gt;
                                    &lt;p&gt;Note: Ensure that &lt;code&gt;SoAd_Init()&lt;/code&gt; is called before &lt;code&gt;Xcp_Init()&lt;/code&gt;.&lt;/p&gt;
                                    &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                          value for this parameter must be &lt;code&gt;XcpConnectionOverEthernet&lt;/code&gt;.
                                          Otherwise this parameter is not used.&lt;/li&gt;
                                      &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Automatic Open for the Socket Connection"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="a85d51d0-8bd1-11e2-9e96-0800200c9a66"/>
                            <a:da name="DEFAULT" value="true"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="(. != &apos;true&apos;)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                            and (count(../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(../XcpConnectionSoAdConfigRef)                                            and node:refvalid(../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                            and (count(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketAutomaticSoConSetup != &apos;true&apos;)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol != &apos;SoAdSocketUdp&apos;)" 
                                     true="In case the &apos;XcpAutoOpenSoCon&apos; is disabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the &apos;SoAdSocketConnectionGroup&apos; used by Xcp has to be enabled in the SoAd module. The socket has to be managed by SoAd module."/>
                              <a:tst 
                                     expr="(. != &apos;true&apos;)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                            and (count(../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(../XcpConnectionSoAdConfigRef)                                            and node:refvalid(../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                            and (count(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup != &apos;true&apos;)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol != &apos;SoAdSocketUdp&apos;)" 
                                     true="In case the &apos;XcpAutoOpenSoCon&apos; is disabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the &apos;SoAdSocketConnectionGroup&apos; used by Xcp has to be enabled in the SoAd module. The socket has to be managed by SoAd module."/>
                              <a:tst 
                                     expr="(. != &apos;true&apos;)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                            and (count(../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(../XcpConnectionSoAdConfigRef)                                            and node:refvalid(../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                            and (count(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)" 
                                     true="In case UPD protocol is used, &apos;XcpAutoOpenSoCon&apos; must be set to true and &apos;SoAdSocketAutomaticSoConSetup&apos; to false. This is mandatory as we need to reconfigure the port with SoAd_SetRemoteAddr() which rejects the call if &apos;SoAdSocketAutomaticSoConSetup&apos; is true."/>
                              <a:tst 
                                     expr="(. != &apos;true&apos;)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                            and (count(../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(../XcpConnectionSoAdConfigRef)                                            and node:refvalid(../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                            and (count(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)" 
                                     true="In case UPD protocol is used, &apos;XcpAutoOpenSoCon&apos; must be set to true and &apos;SoAdSocketAutomaticSoConSetup&apos; to false. This is mandatory as we need to reconfigure the port with SoAd_SetRemoteAddr() which rejects the call if &apos;SoAdSocketAutomaticSoConSetup&apos; is true."/>
                              <a:tst 
                                     expr="(. = &apos;true&apos;)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                            and (count(../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(../XcpConnectionSoAdConfigRef)                                            and node:refvalid(../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                            and (count(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketAutomaticSoConSetup = &apos;true&apos;)" 
                                     true="In case the &apos;XcpAutoOpenSoCon&apos; is enabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the &apos;SoAdSocketConnectionGroup&apos; used by Xcp should be disabled in the SoAd module. The socket is managed by Xcp module."/>
                              <a:tst 
                                     expr="(. = &apos;true&apos;)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                            and (count(../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(../XcpConnectionSoAdConfigRef)                                            and node:refvalid(../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                            and (count(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                            and (node:ref(node:ref(../XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup = &apos;true&apos;)" 
                                     true="In case the &apos;XcpAutoOpenSoCon&apos; is enabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the &apos;SoAdSocketConnectionGroup&apos; used by Xcp should be disabled in the SoAd module. The socket is managed by Xcp module."/>
                            </a:da>
                          </v:var>
                          <v:var name="XcpPackMultiMsgInOneEthernetFrame" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables the concatenation of multiple XCP messages in one frame,
                                      for Ethernet communication.&lt;/p&gt;
                                   &lt;p&gt;Note: The ASAM specifications specify the support for multiple PDUs
                                   in one frame only for UDP/IP. If the selected communication type is TCP/IP,
                                   ensure that the Xcp master implementation supports multiple packing also for
                                   TCP connections before enabling this feature.&lt;/p&gt;
                                 &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Enable Multiple Xcp Msgs In One Ethernet Frame"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="c28133c0-3261-11e2-81c1-0800200c9a66"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                          <v:var name="XcpMaxEthernetMsgLengthInit" 
                                 type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the initial maximum data length of an Ethernet frame that a specific
                                    slave is able to receive or transmit in a frame. It is measured in bytes.&lt;/p&gt;
                                    &lt;p&gt;The length of the message can be variable. However, the maximum length
                                    of an XCP on Ethernet message is limited to the Ethernet payload length
                                    limits in bytes.&lt;/p&gt;
                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                    &lt;li&gt;8 .. 1454 &lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;p&gt;This parameter is available only if both of the following parameters are enabled:&lt;/p&gt;
                                        &lt;li&gt;
                                          Xcp on Ethernet (&lt;code&gt;XcpOnEthernetEnabled&lt;/code&gt;)
                                        &lt;/li&gt;
                                        &lt;li&gt;
                                          Multiple Xcp Msgs In One Xcp Frame (&lt;code&gt;XcpPackMultiMsgInOneEthernetFrame&lt;/code&gt;)
                                        &lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;p&gt;The default value for this parameter is calculated to always be able to accommodate
                                    1 maximum size CTO plus 5 maximum size DTOs.&lt;/p&gt;
                                    &lt;p&gt;Hint: This parameter should be high enough to accommodate at least
                                    2 maximum size DTOs.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Max Eternet Msg Length Initial"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="c28133c0-3261-11e2-81c1-0800200c9a66"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="node:when((( number(node:when(( number(node:when(node:exists(../../XcpMaxCtoPgm), ../../XcpMaxCtoPgm, 0)) ) &gt; ( ../../XcpMaxCto ), ( number(node:when(node:exists(../../XcpMaxCtoPgm), ../../XcpMaxCtoPgm, 0)) ), ( ../../XcpMaxCto )) + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) )) ) + 5 * ( ../../XcpMaxDto + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )) &lt; 1454, num:i(( number(node:when(( number(node:when(node:exists(../../XcpMaxCtoPgm), ../../XcpMaxCtoPgm, 0)) ) &gt; ( ../../XcpMaxCto ), ( number(node:when(node:exists(../../XcpMaxCtoPgm), ../../XcpMaxCtoPgm, 0)) ), ( ../../XcpMaxCto )) + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) )) ) + 5 * ( ../../XcpMaxDto + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )), num:i(1454))"/>
                            <a:da name="ENABLE" type="XPath" 
                                  expr="../XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=1454"/>
                                <mt:tst expr="&gt;=8"/>
                              </mt:range>
                            </a:da>
                            <a:da name="WARNING" type="XPath" 
                                  expr="((2 * ( ../../XcpMaxDto + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )) &gt; .) and ((2 * ( ../../XcpMaxDto + ( number(node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;,                  0,                  node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;,                           0,                           node:when(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;,                                    node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_8&apos;,                                              1,                                              node:when(../../XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,                                                        2,                                                        4)                                             ),                                   4)                           )                 )       ) ) )) &lt; 1454)" 
                                  true="The XcpPackMultiMsgInOneEthernetFrame is enabled but just one DTO message with maximum size can be sent within one frame. If you want to efficiently use this feature, you should increase the value of XcpMaxEthernetMsgLengthInit to accommodate at least 2 DTOs having the maximum configured size."/>
                          </v:var>
                          <v:ref name="XcpConnectionSoAdConfigRef" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the SoAd interface where the source/destination PDUs,
                                     configured for the selected connection, can be found.&lt;/p&gt;
                                  &lt;p&gt;This reference is used to validate/generate PDU information for the
                                      assigned PDUs for the selected connection over Ethernet.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The 
                                    value selected for this parameter must be &lt;code&gt;XcpConnectionOverEthernet&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;li&gt;A valid SoAd configuration must be available for selection.&lt;/li&gt;
                                    &lt;li&gt;One entry with the name &apos;Xcp&apos;, containing the upper layer configuration for the Xcp module in SoAd,
                                        must be added into the &lt;code&gt;SoAdBswModules&lt;/code&gt; container.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdIf&lt;/code&gt; must be enabled for the dedicated Xcp configuration entry in &lt;code&gt;SoAdBswModules&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdTp&lt;/code&gt; must be disabled for the dedicated Xcp configuration entry in &lt;code&gt;SoAdBswModules&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdIfTxConfirmation&lt;/code&gt; must be enabled for the dedicated Xcp configuration entry in
                                        &lt;code&gt;SoAdBswModules&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdLocalIpAddrAssigmentChg&lt;/code&gt; must be disabled for the dedicated Xcp configuration entry in
                                        &lt;code&gt;SoAdBswModules&lt;/code&gt; (refer to ASAM specifications).&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdIfTriggerTransmit&lt;/code&gt; must be disabled for the dedicated Xcp configuration entry in
                                        &lt;code&gt;SoAdBswModules&lt;/code&gt; (the trigger transmit API is not supported for Ethernet).&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SoAdSoConModeChg&lt;/code&gt; parameter, configured for the dedicated Xcp configuration entry in
                                        &lt;code&gt;SoAdBswModules&lt;/code&gt;, must be:
                                        &lt;ul&gt;
                                          &lt;li&gt;Enabled, if there is configured at least one Xcp connection over TCP/IP.&lt;/li&gt;
                                          &lt;li&gt;Disabled, if there is no Xcp connection over TCP/IP configured.&lt;/li&gt;
                                        &lt;/ul&gt;
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Reference to SoAd configuration"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="c37bb5d0-3260-11e2-81c1-0800200c9a66"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference. A valid reference to an SoAd configuration has to be provided, refer to &apos;SoAdConfig&apos;."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (count(node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]) = 0)" 
                                     true="No entry with the name &apos;Xcp&apos; was found into &apos;SoAdBswModules&apos; container. You should add One entry with the name &apos;Xcp&apos;,                                       into the SoAdBswModules container, containing the UL configuration for Xcp module in SoAd."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdIf != &apos;true&apos;)" 
                                     true="SoAdIf has to be enabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdTp != &apos;false&apos;)" 
                                     true="SoAdTp has to be disabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdIfTxConfirmation != &apos;true&apos;)" 
                                     true="SoAdIfTxConfirmation has to be enabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdLocalIpAddrAssigmentChg != &apos;false&apos;)" 
                                     true="SoAdLocalIpAddrAssigmentChg has to be disabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container(refer to ASAM specifications)."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdIfTriggerTransmit != &apos;false&apos;)" 
                                     true="SoAdIfTriggerTransmit has to be disabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container(the trigger transmit api is not supported for Ethernet)."/>
                              <a:tst 
                                     expr="node:refvalid(.)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                            and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdSoConModeChg != &apos;true&apos;)                                            and (count(../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(../../XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                            and (count(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                            and (node:ref(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)" 
                                     true="SoAdSoConModeChg has to be enabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container,                                            in case at least one Xcp connection over TCP/IP is configured (&apos;SoAdSocketProtocol&apos; = &apos;SoAdSocketTcp&apos;)."/>
                              <a:tst 
                                     expr="node:refvalid(.)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                            and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdSoConModeChg != &apos;false&apos;)                                            and (count(node:ref(.)/SoAdPduRoute/*) &gt; 0)                                            and not(text:contains(node:foreach(../../../*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]/@index,                                                                               &apos;XcpConnectionId&apos;,                                                                               &apos;(count(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef)                                                                                                                  and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                                                                                                  and (count(node:current()/../../../*[$XcpConnectionId + 1]/XcpTxPduConnectionInfo/*) &gt; 0)                                                                                                                  and node:refvalid(node:current()/../../../*[$XcpConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                                                                                                  and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../../*[$XcpConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name)                                                                                                                  and (node:ref(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/../../SoAdSocketProtocol = &amp;apos;SoAdSocketTcp&amp;apos;)                                                                                                                  ]) &gt; 0)&apos;),                                                                 &apos;true&apos;))" 
                                     true="SoAdSoConModeChg has to be disabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container,                                            in case there is no Xcp connection over TCP/IP, configured (&apos;SoAdSocketProtocol&apos; = &apos;SoAdSocketTcp&apos;)."/>
                              <a:tst 
                                     expr="node:refvalid(.)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                            and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdSoConModeChg != &apos;true&apos;)                                            and (count(./../../XcpTxPduConnectionInfo/*) &gt; 0)                                            and node:refvalid(./../../XcpTxPduConnectionInfo/*/XcpMapTxPdu2Connection)                                            and (count(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                            and (node:ref(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../XcpTxPduConnectionInfo/*/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)" 
                                     true="SoAdSoConModeChg has to be enabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container,                                            in case at least one Xcp connection over TCP/IP is configured (&apos;SoAdSocketProtocol&apos; = &apos;SoAdSocketTcp&apos;)."/>
                              <a:tst 
                                     expr="node:refvalid(.)                                            and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                            and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;Xcp&apos;]/SoAdSoConModeChg != &apos;false&apos;)                                            and (count(node:ref(.)/SoAdPduRoute/*) &gt; 0)                                            and not(text:contains(node:foreach(../../../*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]/@index,                                                                               &apos;XcpConnectionId&apos;,                                                                               &apos;(count(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef)                                                                                                                  and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                                                                                                  and (count(node:current()/../../../*[$XcpConnectionId + 1]/XcpTxPduConnectionInfo/*) &gt; 0)                                                                                                                  and node:refvalid(node:current()/../../../*[$XcpConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)                                                                                                                  and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../../*[$XcpConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name)                                                                                                                  and (node:ref(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &amp;apos;SoAdSocketTcp&amp;apos;)                                                                                                                  ]) &gt; 0)&apos;),                                                                 &apos;true&apos;))" 
                                     true="SoAdSoConModeChg has to be disabled, for the dedicated Xcp configuration entry into &apos;SoAdBswModules&apos; container,                                            in case there is no Xcp connection over TCP/IP, configured (&apos;SoAdSocketProtocol&apos; = &apos;SoAdSocketTcp&apos;)."/>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/SoAd/SoAdConfig"/>
                          </v:ref>
                        </v:ctr>
                        <v:ctr name="XcpConnectionOverCDD" type="IDENTIFIABLE">
                          <v:ref name="XcpCddCtoSlavePduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the Xcp Rx PDU belonging to the selected connection.
                                     It is used, by the master, to send CMD packages. &lt;/p&gt;
                                  &lt;p&gt;To configure this parameter, proceed as follows: &lt;/p&gt;
                                  &lt;ol&gt;
                                  &lt;li&gt;Configure the Rx PDU required for the CTO, using the PDU Information tab.
                                      Refer to the parameter dependency below.&lt;/li&gt;
                                  &lt;li&gt;Add the configured Rx PDU to the Xcp Rx PDUs to Connection mapping tab.&lt;/li&gt;
                                  &lt;li&gt;Select the PDU reference from the drop-down list.&lt;/li&gt;
                                  &lt;/ol&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Xcp Rx PDUs to Connection mapping (&lt;code&gt;XcpRxPduConnectionInfo&lt;/code&gt;): At least one
                                    Xcp connection Rx PDU must be configured in the Xcp Rx PDUs to Connection mapping container.
                                    All PDUs configured are listed in the drop-down list next to the
                                    &lt;code&gt;CTO Slave PDU Reference&lt;/code&gt; parameter.
                                    The referenced PDU must support the receiving of CMD packages.&lt;/li&gt;
                                    &lt;li&gt;The referenced node must belong to the same connection.&lt;/li&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The selected
                                    value for this parameter must be &lt;code&gt;XcpConnectionOverCDD&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="CTO Slave PDU Reference (Rx PDU)"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference. A valid reference to an Xcp Rx PDU must be provided."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/XcpPduSupportForCmdCtoType = &apos;false&apos;)" 
                                     true="Invalid reference. The referenced Rx PDU is configured to not supporting CMD CTOs, and thus cannot be used by the master to send CMD CTO packages, refer to &apos;XcpPduSupportForCmdCtoType&apos; parameter."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../@name != ../../@name)" 
                                     true="Invalid reference. The referenced node is not belonging to the same connection."/>
                            </a:da>
                            <a:da name="RANGE" type="XPath" 
                                  expr="node:paths(../../XcpRxPduConnectionInfo/*)"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpRxPduConnectionInfo"/>
                          </v:ref>
                          <v:ref name="XcpCddBroadcastPduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the Xcp Rx PDU belonging to the selected connection.
                                     It is used, by the master, to broadcast the GET_SLAVE_ID command. &lt;/p&gt;
                                  &lt;p&gt;Note: On the referenced ID, only the GET_SLAVE_ID command is accepted.
                                     All other packages received with this PDU are ignored.&lt;/p&gt;

                                  &lt;p&gt;To configure this parameter, proceed as follows: &lt;/p&gt;
                                  &lt;ol&gt;
                                  &lt;li&gt;Configure the Rx PDU required for the CTO, using the PDU Information tab.
                                      Refer to the parameter dependency below.&lt;/li&gt;
                                  &lt;li&gt;Add the configured Rx PDU to the Xcp Rx PDUs to Connection mapping tab.&lt;/li&gt;
                                  &lt;li&gt;Select the PDU reference from the drop-down list.&lt;/li&gt;
                                  &lt;/ol&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Xcp Rx PDUs to Connection mapping (&lt;code&gt;XcpRxPduConnectionInfo&lt;/code&gt;): At least one
                                    Xcp connection Rx PDU must be configured in the Xcp Rx PDUs to Connection mapping container.
                                    All PDUs configured are listed in the drop-down list next to the
                                    &lt;code&gt;CTO Slave PDU Reference&lt;/code&gt; parameter.
                                    The referenced PDU must support the receiving of CMD packages.&lt;/li&gt;
                                    &lt;li&gt;The referenced node must belong to the same connection.&lt;/li&gt;
                                    &lt;li&gt;XCP connection type (&lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;): The 
                                    value selected for this parameter must be &lt;code&gt;XcpConnectionOverCDD&lt;/code&gt;.
                                    Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;XcpPduSupportForStimDtoType&lt;/code&gt; must be disabled for the referenced Xcp PDU,
                                        if the referenced PDU is used only to receive the broadcasted GET_SLAVE_ID command.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Master Broadcast PDU reference (Rx PDU)"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference. A valid reference to an Xcp Rx PDU must be provided."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/XcpPduSupportForCmdCtoType = &apos;false&apos;)" 
                                     true="Invalid reference. The referenced Rx PDU is configured not to supporting CMD CTOs, and thus cannot be used by the master to send CMD CTO packages, refer to &quot;XcpPduSupportForCmdCtoType&quot; parameter."/>
                              <a:tst 
                                     expr="node:refvalid(.) and (node:ref(.)/../../@name != ../../@name)" 
                                     true="Invalid reference. The referenced node is not belonging to the same connection."/>
                              <a:tst 
                                     expr="node:refvalid(.)                                            and node:refvalid(../XcpCddCtoSlavePduRef)                                            and (node:ref(.)/XcpPduSupportForStimDtoType = &apos;true&apos;)                                            and not(contains(node:path(node:ref(.)), node:path(node:ref(../XcpCddCtoSlavePduRef))))" 
                                     true="In case the selected configuration is &apos;XcpConnectionOverCDD&apos;, if the referenced PDU is used only for receiving broadcasted GET_SLAVE_ID, it is not allowed to support STIM packages on this PDU(&apos;XcpPduSupportForStimDtoType&apos; has to be disabled, for the referenced Xcp PDU)."/>
                            </a:da>
                            <a:da name="RANGE" type="XPath" 
                                  expr="node:paths(../../XcpRxPduConnectionInfo/*)"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/Xcp/XcpConfig/XcpConnectionCfg/XcpRxPduConnectionInfo"/>
                          </v:ref>
                          <v:ctr name="XcpCddInformation" type="IDENTIFIABLE">
                            <a:a name="LABEL" value="CDD Information"/>
                            <v:var name="XcpCddShortName" type="STRING">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Short name of the CDD module interacting with Xcp.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="CDD Short Name"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:da name="DEFAULT" value="Cdd"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                                    true="XcpCddShortName must be a valid C identifier."/>
                            </v:var>
                            <v:var name="XcpCddHeaderFile" type="STRING">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the header file for the CDD interface APIs.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="CDD Header File"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:da name="DEFAULT" value="Cdd.h"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="not(text:match(., &apos;^[\w\-\. ]+\.h$&apos;)) and (. != &apos;&apos;)" 
                                    true="Invalid naming for a C header file. Please use a standard .h file name."/>
                            </v:var>
                            <v:var name="XcpCddTransmitFunctionName" 
                                   type="FUNCTION-NAME">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;
                                        Defines the name of 
                                        Cdd_Transmit().
                                      &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="CDD Transmit Function Name"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:da name="DEFAULT" value="Cdd_Transmit"/>
                              <a:da name="ENABLE" value="true"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                                    true="XcpCddTransmitFunctionName must be a valid C function name."/>
                            </v:var>
                          </v:ctr>
                        </v:ctr>
                      </v:chc>
                      <v:ctr name="XcpA2LGenerationSupport" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                            &lt;p&gt;Contains various configuration parameters that are used to generate the A2L file.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="A2L Generation support (CAN/CAN-FD configuration)"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(node:name(../XcpConnectionInterfaceType) = &apos;XcpConnectionOverCAN&apos;) or (node:name(../XcpConnectionInterfaceType) = &apos;XcpConnectionOverCANFD&apos;)"/>
                        <v:var name="XcpSynchEdge" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter corresponds to the A2L parameter SYNC_EDGE.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Synchronization Edge"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="SINGLE"/>
                          <a:da name="RANGE">
                            <a:v>SINGLE</a:v>
                            <a:v>DUAL</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="XcpSampleRate" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter corresponds to the A2L parameter SAMPLE_RATE.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Sample Rate"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="SINGLE"/>
                          <a:da name="RANGE">
                            <a:v>SINGLE</a:v>
                            <a:v>TRIPLE</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="XcpBtlCyclesCan" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter corresponds to the A2L parameter BTL_CYCLES of CAN.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="BTL Cycles of CAN"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="XcpBtlCyclesCanFd" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter corresponds to the A2L parameter BTL_CYCLES of CANFD.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="BTL Cycles of CANFD"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(node:name(../../XcpConnectionInterfaceType) = &apos;XcpConnectionOverCANFD&apos;)"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="XcpMaxBusLoad" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter corresponds to the A2L parameter MAX_BUS_LOAD.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Max Bus Load"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4294967295"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                      <v:lst name="XcpTxPduConnectionInfo" type="MAP">
                        <a:a name="LABEL" value="Xcp Tx PDU connection info"/>
                        <a:a name="TAB" 
                             value="Xcp Tx PDUs to Connection mapping"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="count(*[XcpPduSupportForResErrCtoType = &apos;true&apos;]) = 0" 
                                 true="There should be configured one transmit PDU supporting Res/Err packages, for each connection."/>
                          <a:tst 
                                 expr="(../../../../../XcpGeneral/XcpEventPacketEnabled = &apos;true&apos;) and (count(*[XcpPduSupportForEvServCtoType = &apos;true&apos;]) = 0)" 
                                 true="There should be configured at least one transmit PDU supporting Ev/Serv packages, for each connection, in case sending event package feature is enabled."/>
                          <a:tst 
                                 expr="(../../../../../XcpGeneral/XcpDaqSupported = &apos;true&apos;) and (count(*[XcpPduSupportForDaqDtoType = &apos;true&apos;]) = 0)" 
                                 true="There should be configured at least one transmit PDU supporting DAQ DTO packages, for each connection, in case DAQ list with direction DAQ are configured."/>
                          <a:tst 
                                 expr="count(*[XcpPduSupportForResErrCtoType = &apos;true&apos;]) &gt; 1" 
                                 true="Only one PDU, which is used to transfer RES/ERR CTO data is allowed to be configured."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;)                                        and (../../../../../XcpGeneral/XcpSupportForGetDaqId = &apos;true&apos;)                                        and (count(*[XcpPduSupportForDaqDtoType = &apos;true&apos;]) &gt; 1)" 
                                 true="Only one PDU, which is used to transfer DAQ DTO data, is allowed to be configured, in case the configured communication type is CAN and the GET_DAQ_ID command is supported(refer to XcpSupportForGetDaqId)."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;)                                        and (../../../../../XcpGeneral/XcpSupportForGetDaqId = &apos;true&apos;)                                        and (count(*[XcpPduSupportForDaqDtoType = &apos;true&apos;]) &gt; 1)" 
                                 true="Only one PDU, which is used to transfer DAQ DTO data, is allowed to be configured, in case the configured communication type is CAN-FD and the GET_DAQ_ID command is supported(refer to XcpSupportForGetDaqId)."/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapTxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                        and (count(node:foreach(../../*[(XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;) and (count(XcpTxPduConnectionInfo/*) &gt; 0) and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(node:ref(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef) and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)]/@index, &apos;ConnectionId&apos;,                                                                &apos;contains(node:path(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)), node:path(node:ref(../../*[$ConnectionId + 1]/XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)))                                                                 and (count(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                                                 and (node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketId =                                                                      node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketId)                                                                &apos;)[. = &apos;true&apos;]) &gt; 1)" 
                                 true="It is not allowed to share the same Tx SoAd connection(refer to SoAdSocketConnection) between two Xcp over Ethernet connections."/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapTxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                        and text:contains(node:foreach(*/@index, &apos;TxPduConnectionInfoId&apos;,                                                                       &apos;                                                                        node:refvalid(*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)                                                                        and node:refvalid(node:ref(*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)/XcpTxPduRef)                                                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]) &gt; 0)                                                                        and (node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketId !=                                                                        node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnectionRef)/SoAdSocketId)                                                                       &apos;),                                                         &apos;true&apos;)" 
                                 true="All Tx Pdus, configured for the selected connection, has to belong to the same socket connection(refer to &apos;SoAdSocketConnection&apos;)"/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapTxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                        and (count(node:foreach(../../*[(XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;) and (count(XcpTxPduConnectionInfo/*) &gt; 0) and node:refvalid(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection) and node:refvalid(node:ref(XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef) and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)]/@index, &apos;ConnectionId&apos;,                                                                &apos;contains(node:path(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)), node:path(node:ref(../../*[$ConnectionId + 1]/XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)))                                                                 and (count(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                                                 and (node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpTxPduConnectionInfo/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketId =                                                                      node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketId)                                                                &apos;)[. = &apos;true&apos;]) &gt; 1)" 
                                 true="It is not allowed to share the same Tx SoAd connection(refer to SoAdSocketConnection) between two Xcp over Ethernet connections."/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapTxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                        and text:contains(node:foreach(*/@index, &apos;TxPduConnectionInfoId&apos;,                                                                       &apos;                                                                        node:refvalid(*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)                                                                        and node:refvalid(node:ref(*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)/XcpTxPduRef)                                                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                                                        and (node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketId !=                                                                        node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/*[$TxPduConnectionInfoId + 1]/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/SoAdSocketId)                                                                       &apos;),                                                         &apos;true&apos;)" 
                                 true="All Tx Pdus, configured for the selected connection, has to belong to the same socket connection(refer to &apos;SoAdSocketConnection&apos;)"/>
                        </a:da>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="XcpTxPduConnectionInfo" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                             &lt;p&gt;Groups PDU information, for transmit PDU, related to the selected connection.&lt;/p&gt;
                             &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li&gt;Unusable PDUs are not allowed to be configured. At least one of the following parameters must be enabled
                                   in order to make the PDU usable:
                                 &lt;ul&gt;
                                   &lt;li&gt;&lt;code&gt;XcpPduSupportForResErrCtoType&lt;/code&gt;: enables transmitting RES/ERR packages via the selected PDU&lt;/li&gt;
                                   &lt;li&gt;&lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt;: enables transmitting EV/SERV packages via the selected PDU&lt;/li&gt;
                                   &lt;li&gt;&lt;code&gt;XcpPduSupportForDaqDtoType&lt;/code&gt;: enables transmitting DAQ DTO packages via the selected PDU&lt;/li&gt;
                                 &lt;/ul&gt;
                               &lt;/li&gt;
                               &lt;li&gt;It is required, for each connection, to have just one PDU supporting RES/ERR packages
                                   (refer to &lt;code&gt;XcpPduSupportForResErrCtoType&lt;/code&gt; parameter).&lt;/li&gt;
                               &lt;li&gt;If the sending event packages feature is enabled (&lt;code&gt;XcpEventPacketEnabled&lt;/code&gt;), it is required,
                                   for each connection, to have at least one PDU supporting EV/SERV packages
                                   (refer to &lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt; parameter).&lt;/li&gt;
                               &lt;li&gt;If the processing DAQ list feature is enabled (&lt;code&gt;XcpDaqSupported&lt;/code&gt;), it is required,
                                   for each connection, to have at least one PDU supporting DAQ DTO packages
                                   (refer to &lt;code&gt;XcpPduSupportForDaqDtoType&lt;/code&gt; parameter).&lt;/li&gt;
                               &lt;li&gt;Dependencies on &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt; parameter:
                                 &lt;ul&gt;
                                   &lt;li&gt;It is not allowed to share Xcp Tx PDUs between connections.&lt;/li&gt;
                                   &lt;li&gt;Each Xcp PDU mapped to a connection must be referenced only once into the corresponding transport
                                       layer interface, towards Xcp. In case of Xcp connection over Ethernet, the PDU cannot be shared with another application.&lt;/li&gt;
                                   &lt;li&gt;For each connection, it is allowed to configure just one PDU supporting RES/ERR CTO data (refer to &lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt;).&lt;/li&gt;
                                   &lt;li&gt;For each connection, it is allowed to configure at most one PDU supporting EV/SERV CTO data (refer to &lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt;).&lt;/li&gt;
                                   &lt;li&gt;For each connection, it is allowed to configure any number of PDUs supporting DAQ DTO packages (refer to &lt;code&gt;XcpPduSupportForDaqDtoType&lt;/code&gt;).
                                       But there is one exception to this rule: If the parameter &lt;code&gt;XcpSupportForGetDaqId&lt;/code&gt; is enabled,
                                       and the selected connection is over CAN, then at most one PDU supporting DAQ DTO data is allowed to be configured.&lt;/li&gt;
                                   &lt;li&gt;If the Xcp connection is over FlexRay, the following transport layer specific dependency must be accomplished:
                                     &lt;ul&gt;
                                       &lt;li&gt;&lt;code&gt;FrIfNoneMode&lt;/code&gt;: must be disabled (the transmission is always triggered by Xcp, by calling &lt;If&gt;_Transmit())&lt;/li&gt;
                                     &lt;/ul&gt;
                                   &lt;/li&gt;
                                   &lt;li&gt;If the Xcp connection is over Ethernet, the following transport layer specific dependencies must be accomplished:
                                     &lt;ul&gt;
                                       &lt;li&gt;&lt;code&gt;SoAdSocketConnection&lt;/code&gt;: It is not allowed to share the same Tx SoAd connection between two Xcp connections over the Ethernet.&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;SoAdTxUpperLayerType&lt;/code&gt;: must be equal to &lt;code&gt;IF&lt;/code&gt; (transport protocol is not supported).&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;SoAdPduRouteDest&lt;/code&gt;: It is allowed to have only one child. (To prevent the connection of two clients at the same time,
                                           the PDU cannot be shared to multiple socket connections.)&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;SoAdTxUdpTriggerMode&lt;/code&gt;: must be disabled (only immediate transmit is supported for Ethernet transport layer).&lt;/li&gt;
                                       &lt;li&gt;All PDUs belonging to the same connection must belong to the same socket connection.&lt;/li&gt;
                                     &lt;/ul&gt;
                                   &lt;/li&gt;
                                 &lt;/ul&gt;
                               &lt;/li&gt;
                             &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(XcpPduSupportForResErrCtoType != &apos;true&apos;) and (XcpPduSupportForEvServCtoType != &apos;true&apos;) and (XcpPduSupportForDaqDtoType != &apos;true&apos;)" 
                                   true="Configuring unusable buffers is not supported. You should enable at least one of the following parameters, for the selected Rx PDU buffer: &quot;XcpPduSupportForCmdCtoType&quot;, &quot;XcpPduSupportForStimDtoType&quot;."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and (count(../../../*/XcpTxPduConnectionInfo/*[node:refvalid(XcpMapTxPdu2Connection) and (node:ref(XcpMapTxPdu2Connection)/XcpTxPduId = node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduId)]) &gt; 1)" 
                                   true="It is not allowed to share the same Xcp Tx PDU (XcpMapTxPdu2Connection) between connections. You should define at least one Xcp PDU for each connection(refer to XcpTxPdu)."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and (count(../*[node:refvalid(XcpMapTxPdu2Connection) and (node:ref(XcpMapTxPdu2Connection)/XcpTxPduId= node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduId)]) &gt; 1)" 
                                   true="It is not allowed to configure the same Xcp Tx Pdu (XcpMapTxPdu2Connection), twice, for the same connection."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfTxPduCfg/*[node:refvalid(CanIfTxPduRef) and (node:ref(CanIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;XCP&apos;) or (text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;CDD&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpTxPdu) referenced from the current Xcp (XcpMapTxPdu2Connection) was not found, into the given CanIf init configuration. There should be one entry into CanIf configuration for the referenced EcuC PDU(refer to &apos;CanIfTxPduRef&apos;), with &apos;CanIfTxPduUserTxConfirmationUL&apos; = (&apos;XCP&apos; or &apos;CDD&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfTxPduCfg/*[node:refvalid(CanIfTxPduRef) and (node:ref(CanIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;XCP&apos;) or (text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;CDD&apos;))]) &gt; 1)" 
                                   true="More than one configuration instances for the EcuC PDU(XcpTxPdu) referenced from the current Xcp(XcpMapTxPdu2Connection) were found into the given CanIf init configuration. It is allowed to have that PDU referenced just once (refer to &apos;CanIfTxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfTxPduCfg/*[node:refvalid(CanIfTxPduRef) and (node:ref(CanIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;XCP&apos;) or (text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;CDD&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpTxPdu) referenced from the current Xcp (XcpMapTxPdu2Connection) was not found, into the given CanIf init configuration. There should be one entry into CanIf configuration for the referenced EcuC PDU(refer to &apos;CanIfTxPduRef&apos;), with &apos;CanIfTxPduUserTxConfirmationUL&apos; = (&apos;XCP&apos; or &apos;CDD&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfTxPduCfg/*[node:refvalid(CanIfTxPduRef) and (node:ref(CanIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;XCP&apos;) or (text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;CDD&apos;)) and ((text:toupper(CanIfTxPduCanIdType) = &apos;STANDARD_FD_CAN&apos;) or (text:toupper(CanIfTxPduCanIdType) = &apos;EXTENDED_FD_CAN&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpTxPdu) referenced from the current Xcp (XcpMapTxPdu2Connection) for the CanIf configuration is not configured with &apos;CanIfTxPduCanIdType&apos; = (&apos;STANDARD_FD_CAN&apos; or &apos;EXTENDED_FD_CAN&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfTxPduCfg/*[node:refvalid(CanIfTxPduRef) and (node:ref(CanIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;XCP&apos;) or (text:toupper(CanIfTxPduUserTxConfirmationUL) = &apos;CDD&apos;))]) &gt; 1)" 
                                   true="More than one configuration instances for the EcuC PDU(XcpTxPdu) referenced from the current Xcp(XcpMapTxPdu2Connection) were found into the given CanIf init configuration. It is allowed to have that PDU referenced just once (refer to &apos;CanIfTxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)/FrIfPdu/*[(FrIfPduDirection = &apos;FrIfTxPdu&apos;) and node:refvalid(FrIfPduDirection/FrIfTxPduRef) and (node:ref(FrIfPduDirection/FrIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;XCP&apos;) or (text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;CDD&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpTxPdu) referenced from the current Xcp(XcpMapTxPdu2Connection) was not found, into the given FrIf configuration. There should be one entry into FrIf configuration for the referenced EcuC PDU(refer to &apos;FrIfTxPduRef&apos;), with &apos;FrIfUserTxUL&apos; = (&apos;XCP&apos; or &apos;CDD&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)/FrIfPdu/*[(FrIfPduDirection = &apos;FrIfTxPdu&apos;) and node:refvalid(FrIfPduDirection/FrIfTxPduRef) and (node:ref(FrIfPduDirection/FrIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and node:exists(FrIfPduDirection/FrIfNoneMode) and (FrIfPduDirection/FrIfNoneMode  = &apos;true&apos;)]) &gt; 1)" 
                                   true="The Xcp module implementation does not support the None Mode transmission type over FlexRay. Therefore the &apos;FrIfNoneMode&apos; parameter of the referenced FrIf PDU must be set to false."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)/FrIfPdu/*[(FrIfPduDirection = &apos;FrIfTxPdu&apos;) and node:refvalid(FrIfPduDirection/FrIfTxPduRef) and (node:ref(FrIfPduDirection/FrIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;XCP&apos;) or (text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;CDD&apos;))]) &gt; 1)" 
                                   true="More than one configuration istances for the EcuC PDU(XcpTxPdu) referenced from the current Xcp(XcpMapTxPdu2Connection) were found into the given FrIf configuration. It is allowed to have that PDU referenced just once (refer to &apos;FrIfTxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)/FrIfPdu/*[(FrIfPduDirection = &apos;FrIfTxPdu&apos;) and node:refvalid(FrIfPduDirection/FrIfTxPduRef) and (node:ref(FrIfPduDirection/FrIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;XCP&apos;) or (text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;CDD&apos;))]) &gt; 0)                                          and (node:ref(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)/FrIfPdu/*[(FrIfPduDirection = &apos;FrIfTxPdu&apos;) and node:refvalid(FrIfPduDirection/FrIfTxPduRef) and (node:ref(FrIfPduDirection/FrIfTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and ((text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;XCP&apos;) or (text:toupper(FrIfPduDirection/FrIfUserTxUL) = &apos;CDD&apos;))]/FrIfPduDirection/FrIfNoneMode = &apos;true&apos;)" 
                                   true="The Xcp module implementation does always initiate the transmission. Therefore the &apos;FrIfNoneMode&apos; parameter of the referenced FrIf PDU must be set &apos;false&apos;."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name)]) = 0)" 
                                   true="The EcuC PDU(XcpTxPdu) referenced from the current Xcp(XcpMapTxPdu2Connection) was not found, into the given SoAd configuration. There should be one entry into SoAd configuration for the referenced EcuC PDU(refer to &apos;SoAdTxPduRef&apos;)."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name)]) &gt; 1)" 
                                   true="More than one configuration istances for the EcuC PDU(XcpTxPdu) referenced from the current Xcp(XcpMapTxPdu2Connection) were found into the given SoAd configuration. It is allowed to have that PDU referenced just once (refer to &apos;SoAdTxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name)]) &gt; 0)                                          and (node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name)]/SoAdTxUpperLayerType != &apos;IF&apos;)" 
                                   true="SoAdTxUpperLayerType of the SoAdPduRoute configured for the referenced TX PDU(XcpMapTxPdu2Connection) must be of type &apos;IF&apos; in the SoAd module."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and (count(SoAdPduRouteDest/*) &gt; 1)]) &gt; 0)" 
                                   true="Only one SoAdPduRouteDest entry is allowed to be added, for each referenced TX PDU(XcpMapTxPdu2Connection), into SoAd module. "/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapTxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapTxPdu2Connection)/XcpTxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and (count(SoAdPduRouteDest/*) &gt; 0)]) &gt; 0)                                          and (node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapTxPdu2Connection)/XcpTxPduRef)/@name) and (count(SoAdPduRouteDest/*) &gt; 0)]/SoAdPduRouteDest/*/SoAdTxUdpTriggerMode = &apos;TRIGGER_ALWAYS&apos;)" 
                                   true="SoAdTxUdpTriggerMode of the SoAdPduRoute configured for the referenced TX PDU(XcpMapTxPdu2Connection) must be different than &apos;TRIGGER_ALWAYS&apos; (trigger transmit is not supported for Ethernet connection)."/>
                          </a:da>
                          <a:da name="WARNING" type="XPath">
                            <a:tst 
                                   expr="(../../../../../../XcpGeneral/XcpEventPacketEnabled = &apos;true&apos;) and (XcpPduSupportForEvServCtoType = &apos;false&apos;)" 
                                   true="Setting &apos;XcpPduSupportForEvServCtoType&apos; to &apos;false&apos; will make the buffer unusable for transmitting EV/SERV CTO packages."/>
                            <a:tst 
                                   expr="(../../../../../../XcpGeneral/XcpDaqSupported = &apos;true&apos;) and (XcpPduSupportForDaqDtoType = &apos;false&apos;)" 
                                   true="Setting &apos;XcpPduSupportForDaqDtoType&apos; to &apos;false&apos; will make the buffer unusable for transmitting DAQ DTO packages."/>
                          </a:da>
                          <v:var name="XcpPduSupportForResErrCtoType" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables transmitting &lt;code&gt;RES/ERR CTO&lt;/code&gt; packages via the selected Tx PDU buffer.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Support for transmitting RES/ERR packages"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a75"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="node:when(count(../../*[XcpPduSupportForResErrCtoType = &apos;true&apos;]) = &apos;0&apos;, &apos;true&apos;, &apos;false&apos;)"/>
                          </v:var>
                          <v:var name="XcpPduSupportForEvServCtoType" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables transmitting &lt;code&gt;EV/SERV CTO&lt;/code&gt; packages via the selected Tx PDU buffer.&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                   &lt;ul&gt;
                                     &lt;li&gt;This parameter is configurable only if the support for event packages is enabled
                                     (refer to &lt;code&gt;XcpEventPacketEnabled&lt;/code&gt; parameter).&lt;/li&gt;
                                   &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Support for transmitting EV/SERV packages"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a75"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="node:when(../../../../../../../XcpGeneral/XcpEventPacketEnabled = &apos;true&apos;, node:when(count(../../*[XcpPduSupportForEvServCtoType = &apos;true&apos;]) = &apos;0&apos;, &apos;true&apos;, &apos;false&apos;), &apos;false&apos;)"/>
                            <a:da name="ENABLE" type="XPath" 
                                  expr="../../../../../../../XcpGeneral/XcpEventPacketEnabled = &apos;true&apos;"/>
                          </v:var>
                          <v:var name="XcpPduSupportForDaqDtoType" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables transmitting &lt;code&gt;DAQ DTO&lt;/code&gt; packages via the selected Tx PDU buffer.&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                   &lt;ul&gt;
                                     &lt;li&gt;This parameter is configurable only if the DAQ list processor is enabled
                                     (refer to &lt;code&gt;XcpDaqSupported&lt;/code&gt; parameter).&lt;/li&gt;
                                   &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Support for transmitting DAQ packages"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a75"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="node:when(../../../../../../../XcpGeneral/XcpDaqSupported = &apos;true&apos;, &apos;true&apos;, &apos;false&apos;)"/>
                            <a:da name="ENABLE" type="XPath" 
                                  expr="../../../../../../../XcpGeneral/XcpDaqSupported = &apos;true&apos;"/>
                          </v:var>
                          <v:var name="XcpPduSupportTxFromTxConfirmation" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Support for transmission from Tx confirmation. If enabled, a new transmission
                                      for this PDU is triggered when TxConfirmation is executed.&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Enabling this feature for several PDUs might impact the run-time by
                                    creating a big overhead in the system.&lt;/strong&gt;&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s): none.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Support for transmission from TxConfirmation"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a76"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                          <v:var name="XcpDefaultStateDynamicTxPDU" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;If the use of this parameter is enabled for a PDU, the transmission on this PDU 
                                   at runtime can be enabled/disabled. If this
                                   parameter is not used, the PDU is enabled and static at runtime.&lt;/p&gt;
                                   &lt;p&gt;If this parameter is set, the default state of the dynamic PDU is enabled.&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                     &lt;ul&gt;
                                      &lt;li&gt;
                                        XcpPduSupportForResErrCtoType: If a PDU is used for transmitting RES/ERR
                                        packages, it cannot be configured as dynamic.
                                      &lt;/li&gt;
                                      &lt;li&gt;
                                        XcpSupportDynamicComChannels: This parameter is only available if dynamic communication
                                        channels are used.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="State of dynamic TxPdu"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="true"/>
                            <a:da name="EDITABLE" type="XPath" 
                                  expr="(../XcpPduSupportForResErrCtoType = &apos;false&apos;) and                                       (../../../../../../../XcpGeneral/XcpSupportDynamicComChannels = &apos;true&apos;)"/>
                            <a:da name="ENABLE" value="false"/>
                          </v:var>
                          <v:ref name="XcpMapTxPdu2Connection" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Maps Tx PDUs to an Xcp connection.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to Xcp Tx PDU"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a70"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference. A valid reference to an Xcp transmit PDU has to be provided, refer to &apos;XcpTxPdu&apos;."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Xcp/XcpConfig/XcpPdu/XcpTxPdu"/>
                          </v:ref>
                          <v:var name="XcpCddLowerLayerTxPduId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the lower layer PDU identifier for a connection over CDD, 
                                  which must be used by the Xcp module for Cdd_Transmit().&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="CDD lower layer Tx PduId"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="ENABLE" type="XPath" 
                                  expr="../../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=65535"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                            </a:da>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                      <v:lst name="XcpRxPduConnectionInfo" type="MAP">
                        <a:a name="LABEL" value="Xcp Rx PDU connection info"/>
                        <a:a name="TAB" 
                             value="Xcp Rx PDUs to Connection mapping"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="count(*[XcpPduSupportForCmdCtoType = &apos;true&apos;]) = 0" 
                                 true="There should be configured one receive PDU supporting CMD packages, for each connection."/>
                          <a:tst 
                                 expr="(../../../../../XcpGeneral/XcpStimSupported = &apos;true&apos;) and (count(*[XcpPduSupportForStimDtoType = &apos;true&apos;]) = 0)" 
                                 true="There should be configured at least one receive PDU supporting STIM DTO packages, for each connection, in case DAQ list with direction STIM are configured."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType != &apos;XcpConnectionOverCAN&apos;) and (../XcpConnectionInterfaceType != &apos;XcpConnectionOverCANFD&apos;) and (../XcpConnectionInterfaceType != &apos;XcpConnectionOverCDD&apos;)                                        and (count(*[XcpPduSupportForCmdCtoType = &apos;true&apos;]) &gt; 1)" 
                                 true="Only one PDU, supporting CMD CTOs is allowed to be configured for FlexRay and Ethernet."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;)                                        and (count(*[XcpPduSupportForCmdCtoType = &apos;true&apos;]) &gt; 2)" 
                                 true="At most two PDUs, supporting CMD CTOs, are allowed to be configured for Can(one for receiving broadcasted GET_SLAVE_ID and one for receiving all commands but the broadcasted GET_SLAVE_ID)."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;)                                        and (../../../../../XcpGeneral/XcpSupportForGetDaqId = &apos;true&apos;)                                        and (count(*[XcpPduSupportForStimDtoType = &apos;true&apos;]) &gt; 1)" 
                                 true="In case the configured communication type is &apos;XcpConnectionOverCAN&apos;, only one STIM DTO PDU is allowed to be configured, which is used to transfer STIM direction data(GET_DAQ_ID)."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;)                                        and (count(*[XcpPduSupportForCmdCtoType = &apos;true&apos;]) &gt; 2)" 
                                 true="At most two PDUs, supporting CMD CTOs, are allowed to be configured for CAN-FD(one for receiving broadcasted GET_SLAVE_ID and one for receiving all commands but the broadcasted GET_SLAVE_ID)."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;)                                        and (../../../../../XcpGeneral/XcpSupportForGetDaqId = &apos;true&apos;)                                        and (count(*[XcpPduSupportForStimDtoType = &apos;true&apos;]) &gt; 1)" 
                                 true="In case the configured communication type is &apos;XcpConnectionOverCANFD&apos;, only one STIM DTO PDU is allowed to be configured, which is used to transfer STIM direction data(GET_DAQ_ID)."/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnectionRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapRxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                        and (count(node:foreach(../../*[(XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;) and (count(XcpRxPduConnectionInfo/*) &gt; 0) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection) and node:refvalid(node:ref(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef) and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)]/@index, &apos;ConnectionId&apos;,                                                                &apos;contains(node:path(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)), node:path(node:ref(../../*[$ConnectionId + 1]/XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)))                                                                 and (count(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                                                 and (node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/SoAdSocketId =                                                                      node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/SoAdSocketId)                                                                &apos;)[. = &apos;true&apos;]) &gt; 1)" 
                                 true="It is not allowed to share the same Rx SoAd connection(refer to SoAdSocketConnection) between two Xcp over Ethernet connections."/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnectionRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapRxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                        and text:contains(node:foreach(*/@index, &apos;RxPduConnectionInfoId&apos;,                                                                       &apos;                                                                       node:refvalid(*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)                                                                       and node:refvalid(node:ref(*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)/XcpRxPduRef)                                                                       and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]) &gt; 0)                                                                       and (node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/SoAdSocketId !=                                                                       node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnectionRef)]/SoAdRxSocketConnectionRef)/SoAdSocketId)                                                                       &apos;),                                                          &apos;true&apos;)" 
                                 true="All Rx Pdus, configured for the selected connection, has to belong to the same socket connection(refer to &apos;SoAdSocketConnection&apos;)"/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapRxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                        and (count(node:foreach(../../*[(XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;) and (count(XcpRxPduConnectionInfo/*) &gt; 0) and node:refvalid(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection) and node:refvalid(node:ref(XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef) and node:refvalid(XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)]/@index, &apos;ConnectionId&apos;,                                                                &apos;contains(node:path(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)), node:path(node:ref(../../*[$ConnectionId + 1]/XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)))                                                                 and (count(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                                                 and (node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/../../*[$ConnectionId + 1]/XcpRxPduConnectionInfo/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/SoAdSocketId =                                                                      node:ref(node:ref(node:current()/../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/SoAdSocketId)                                                                &apos;)[. = &apos;true&apos;]) &gt; 1)" 
                                 true="It is not allowed to share the same Rx SoAd connection(refer to SoAdSocketConnection) between two Xcp over Ethernet connections."/>
                          <a:tst 
                                 expr="(count(*) &gt; 0)                                        and node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                        and node:refvalid(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                        and node:refvalid(*[1]/XcpMapRxPdu2Connection)                                        and node:refvalid(node:ref(*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)                                        and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                        and text:contains(node:foreach(*/@index, &apos;RxPduConnectionInfoId&apos;,                                                                       &apos;                                                                       node:refvalid(*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)                                                                       and node:refvalid(node:ref(*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)/XcpRxPduRef)                                                                       and (count(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                                                       and (node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/SoAdSocketId !=                                                                       node:ref(node:ref(../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and node:refvalid(SoAdSocketRouteDest/*/SoAdRxPduRef) and (node:ref(SoAdSocketRouteDest/*/SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/*[$RxPduConnectionInfoId + 1]/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and node:refvalid(SoAdRxSocketConnOrSocketConnBundleRef)]/SoAdRxSocketConnOrSocketConnBundleRef)/SoAdSocketId)                                                                       &apos;),                                                          &apos;true&apos;)" 
                                 true="All Rx Pdus, configured for the selected connection, has to belong to the same socket connection(refer to &apos;SoAdSocketConnection&apos;)"/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;)                                        and (count(*[XcpPduSupportForCmdCtoType = &apos;true&apos;]) &gt; 2)" 
                                 true="At most two PDUs, supporting CMD CTOs, are allowed to be configured for a CDD(one for receiving broadcasted GET_SLAVE_ID and one for receiving all commands but the broadcasted GET_SLAVE_ID)."/>
                          <a:tst 
                                 expr="(../XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;)                                        and (../../../../../XcpGeneral/XcpSupportForGetDaqId = &apos;true&apos;)                                        and (count(*[XcpPduSupportForStimDtoType = &apos;true&apos;]) &gt; 1)" 
                                 true="In case the configured communication type is &apos;XcpConnectionOverCDD&apos;, only one STIM DTO PDU is allowed to be configured, which is used to transfer STIM direction data(GET_DAQ_ID)."/>
                        </a:da>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="XcpRxPduConnectionInfo" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                             &lt;p&gt;Groups PDU information, for receive PDU, related to the selected connection.&lt;/p&gt;
                             &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li&gt;Unusable PDUs are not allowed to be configured. At least one of the following parameters must be enabled
                                   in order to make the PDU usable:
                                 &lt;ul&gt;
                                   &lt;li&gt;&lt;code&gt;XcpPduSupportForCmdCtoType&lt;/code&gt;: enables receiving CMD packages via the selected PDU&lt;/li&gt;
                                   &lt;li&gt;&lt;code&gt;XcpPduSupportForStimDtoType&lt;/code&gt;: enables receiving STIM DTO packages via the selected PDU&lt;/li&gt;
                                 &lt;/ul&gt;
                               &lt;/li&gt;
                               &lt;li&gt;A unique &lt;code&gt;XcpRxLowerLayerHandleId&lt;/code&gt; must be configured per connection.&lt;/li&gt;
                               &lt;li&gt;It is required, for each connection, to have just one PDU supporting CMD packages
                                   (refer to &lt;code&gt;XcpPduSupportForCmdCtoType&lt;/code&gt; parameter).&lt;/li&gt;
                               &lt;li&gt;If processing DAQ list with direction STIM is enabled (&lt;code&gt;XcpStimSupported&lt;/code&gt;), it is required,
                                   for each connection, to have at least one PDU supporting STIM DTO packages
                                   (refer to &lt;code&gt;XcpPduSupportForStimDtoType&lt;/code&gt; parameter).&lt;/li&gt;
                               &lt;li&gt;If a TCP/IP connection over Ethernet is configured, only one Rx PDU is allowed to be configured for each
                                   connection of this type. The Tx and Rx PDUs configured for a TCP/IP connection must belong to the same socket.&lt;/li&gt;
                               &lt;li&gt;Dependencies on &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt; parameter:
                                 &lt;ul&gt;
                                   &lt;li&gt;It is not allowed to share Xcp PDUs between connections.&lt;/li&gt;
                                   &lt;li&gt;Each Xcp PDU mapped to a connection must be referenced, only once, in the corresponding transport
                                       layer interface, towards Xcp. With Xcp connection over Ethernet, the PDU cannot be shared with another application.&lt;/li&gt;
                                   &lt;li&gt;For each connection, it is allowed to have at most one PDU supporting CMD CTO packages
                                       (refer to &lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt;), used for receiving commands from the master.
                                       There is one exception: For Xcp over CAN, it is allowed to have a maximum of two PDUs supporting CMD CTOs:
                                     &lt;ul&gt;
                                       &lt;li&gt;one PDU used to receive all commands but the broadcasted GET_SLAVE_ID (refer to &lt;code&gt;XcpCtoSlavePduRef&lt;/code&gt;)&lt;/li&gt;
                                       &lt;li&gt;one PDU used to receive only the broadcasted GET_SLAVE_ID command (refer to &lt;code&gt;XcpBroadcastPduRef&lt;/code&gt;).&lt;/li&gt;
                                     &lt;/ul&gt;
                                   &lt;/li&gt;
                                   &lt;li&gt;For each connection, it is allowed to configure any number of PDUs supporting STIM DTO packages.
                                       There is one exception: If the parameter &lt;code&gt;XcpSupportForGetDaqId&lt;/code&gt; is enabled,
                                       and the selected connection is over CAN, then at most one PDU, supporting STIM DTO data is allowed to be
                                       configured (refer to &lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt;).&lt;/li&gt;
                                   &lt;li&gt;If the Xcp connection is over CAN, the following transport layer specific dependency must be accomplished:
                                     &lt;ul&gt;
                                       &lt;li&gt;&lt;code&gt;CanIfRxPduCanId&lt;/code&gt;: must be configured for the referenced Xcp Rx PDU.&lt;/li&gt;
                                     &lt;/ul&gt;
                                   &lt;/li&gt;
                                   &lt;li&gt;For each connection, it is allowed to have at most one PDU supporting CMD CTO packages
                                       (refer to &lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt;), used for receiving commands from the master.
                                       There is one exception: For Xcp over CAN-FD, it is allowed to have a maximum of two PDUs supporting CMD CTOs:
                                     &lt;ul&gt;
                                       &lt;li&gt;one PDU used to receive all commands but the broadcasted GET_SLAVE_ID (refer to &lt;code&gt;XcpCanFdCtoSlavePduRef&lt;/code&gt;)&lt;/li&gt;
                                       &lt;li&gt;one PDU used to receive only the broadcasted GET_SLAVE_ID command (refer to &lt;code&gt;XcpCanFdBroadcastPduRef&lt;/code&gt;).&lt;/li&gt;
                                     &lt;/ul&gt;
                                   &lt;/li&gt;
                                   &lt;li&gt;For each connection, it is allowed to configure any number of PDUs supporting STIM DTO packages.
                                       There is one exception: If the parameter &lt;code&gt;XcpSupportForGetDaqId&lt;/code&gt; is enabled,
                                       and the selected connection is over CAN-FD, then at most one PDU, supporting STIM DTO data is allowed to be
                                       configured (refer to &lt;code&gt;XcpPduSupportForEvServCtoType&lt;/code&gt;).&lt;/li&gt;
                                   &lt;li&gt;If the Xcp connection is over CAN-FD, the following transport layer specific dependency must be accomplished:
                                     &lt;ul&gt;
                                       &lt;li&gt;&lt;code&gt;CanIfRxPduCanId&lt;/code&gt;: must be configured for the referenced Xcp Rx PDU.&lt;/li&gt;
                                     &lt;/ul&gt;
                                   &lt;/li&gt;
                                   &lt;li&gt;If the Xcp connection is over Ethernet, the following transport layer specific dependencies must be accomplished:
                                     &lt;ul&gt;
                                       &lt;li&gt;&lt;code&gt;SoAdSocketConnection&lt;/code&gt;: It is not allowed to share the same Tx SoAd connection between two Xcp connections over the Ethernet.&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;SoAdRxUpperLayerType&lt;/code&gt;: must be equal to &lt;code&gt;IF&lt;/code&gt; (transport protocol is not supported).&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;SoAdSocketRouteDest&lt;/code&gt;: it is allowed to have only one child (to prevent broadcasting data
                                           over several PDUs).&lt;/li&gt;
                                       &lt;li&gt;All PDUs belonging to the same connection must belong to the same socket connection.&lt;/li&gt;
                                     &lt;/ul&gt;
                                   &lt;/li&gt;
                                 &lt;/ul&gt;
                               &lt;/li&gt;
                             &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(XcpPduSupportForCmdCtoType != &apos;true&apos;) and (XcpPduSupportForStimDtoType != &apos;true&apos;)" 
                                   true="Configuring unusable buffers is not supported. You should enable at least one of the following parameters, for the selected Rx PDU buffer: &quot;XcpPduSupportForCmdCtoType&quot;, &quot;XcpPduSupportForStimDtoType&quot;."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and (count(../../../*/XcpRxPduConnectionInfo/*[node:refvalid(XcpMapRxPdu2Connection) and (node:ref(XcpMapRxPdu2Connection)/XcpRxPduId = node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduId)]) &gt; 1)" 
                                   true="It is not allowed to share the same Rx PDU between connections (refer to XcpMapRxPdu2Connection). You should define at least one Xcp Rx PDU for each connection(refer to XcpRxPdu)."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and (count(../../*[node:refvalid(XcpMapRxPdu2Connection) and (node:ref(XcpMapRxPdu2Connection)/XcpRxPduId= node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduId)]) &gt; 1)" 
                                   true="It is not allowed to configure the same Xcp Rx Pdu, twice, for the same connection."/>
                            <a:tst 
                                   expr="(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;)                                          and (XcpPduSupportForCmdCtoType = &apos;true&apos;)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpCtoSlavePduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpBroadcastPduRef)                                          and not(contains(node:path(node:ref(../../XcpConnectionInterfaceType/XcpCtoSlavePduRef)), node:path(node:current())))                                          and not(contains(node:path(node:ref(../../XcpConnectionInterfaceType/XcpBroadcastPduRef)), node:path(node:current())))" 
                                   true="In case the selected configuration is &apos;XcpConnectionOverCAN&apos;, if the &apos;XcpPduSupportForCmdCtoType&apos; is enabled, it is required for the PDU to be referenced by one of the following parameters: &apos;XcpCtoSlavePduRef&apos; or &apos;XcpBroadcastPduRef&apos;. Otherwise, the PDU is useless."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpRxPdu) referenced from the current Xcp Rx Pdu(XcpMapRxPdu2Connection) was not found, into the given CanIf init configuration. There should be one entry into CanIf configuration for the referenced EcuC PDU(refer to &apos;CanIfRxPduRef&apos;), with &apos;CanIfRxPduUserRxIndicationUL&apos; = (&apos;XCP&apos; or &apos;CDD&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) &gt; 1)" 
                                   true="More than one configuration instances for the EcuC PDU(XcpRxPdu) referenced from the current Xcp Rx Pdu(XcpMapRxPdu2Connection) were found into the given CanIf init configuration. It is allowed to have that PDU referenced just once (refer to &apos;CanIfRxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) &gt; 0)                                          and not(node:exists(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]/CanIfRxPduCanId))" 
                                   true="CanIfRxPduCanId has to be configured for the referenced Xcp Rx PDU."/>
                            <a:tst 
                                   expr="(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;)                                          and (XcpPduSupportForCmdCtoType = &apos;true&apos;)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpCanFdCtoSlavePduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpCanFdBroadcastPduRef)                                          and not(contains(node:path(node:ref(../../XcpConnectionInterfaceType/XcpCanFdCtoSlavePduRef)), node:path(node:current())))                                          and not(contains(node:path(node:ref(../../XcpConnectionInterfaceType/XcpCanFdBroadcastPduRef)), node:path(node:current())))" 
                                   true="In case the selected configuration is &apos;XcpConnectionOverCANFD&apos;, if the &apos;XcpPduSupportForCmdCtoType&apos; is enabled, it is required for the PDU to be referenced by one of the following parameters: &apos;XcpCanFdCtoSlavePduRef&apos; or &apos;XcpCanFdBroadcastPduRef&apos;. Otherwise, the PDU is useless."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpRxPdu) referenced from the current Xcp Rx Pdu(XcpMapRxPdu2Connection) was not found, into the given CanIf init configuration. There should be one entry into CanIf configuration for the referenced EcuC PDU(refer to &apos;CanIfRxPduRef&apos;), with &apos;CanIfRxPduUserRxIndicationUL&apos; = (&apos;XCP&apos; or &apos;CDD&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;)) and ((text:toupper(CanIfRxPduCanIdType) = &apos;STANDARD_CAN&apos;) or (text:toupper(CanIfRxPduCanIdType) = &apos;STANDARD_FD_CAN&apos;) or (text:toupper(CanIfRxPduCanIdType) = &apos;EXTENDED_CAN&apos;) or (text:toupper(CanIfRxPduCanIdType) = &apos;EXTENDED_FD_CAN&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpRxPdu) referenced from the current Xcp Rx Pdu(XcpMapRxPdu2Connection) referenced to the CanIf Rx Pdu is not configured with &apos;CanIfRxPduCanIdType&apos; = (&apos;STANDARD_CAN&apos; or &apos;STANDARD_FD_CAN&apos; or &apos;EXTENDED_CAN&apos; or &apos;EXTENDED_FD_CAN&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) &gt; 1)" 
                                   true="More than one configuration instances for the EcuC PDU(XcpRxPdu) referenced from the current Xcp Rx Pdu(XcpMapRxPdu2Connection) were found into the given CanIf init configuration. It is allowed to have that PDU referenced just once (refer to &apos;CanIfRxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) &gt; 0)                                          and not(node:exists(node:ref(../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]/CanIfRxPduCanId))" 
                                   true="CanIfRxPduCanId has to be configured for the referenced Xcp Rx PDU."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)/FrIfPdu/*[(FrIfPduDirection = &apos;FrIfRxPdu&apos;) and node:refvalid(FrIfPduDirection/FrIfRxPduRef) and (node:ref(FrIfPduDirection/FrIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(FrIfPduDirection/FrIfUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(FrIfPduDirection/FrIfUserRxIndicationUL) = &apos;CDD&apos;))]) = 0)" 
                                   true="The EcuC PDU(XcpRxPdu) referenced from the current Xcp Rx Pdu(XcpMapRxPdu2Connection) was not found, into the given FrIf configuration. There should be one entry into FrIf configuration for the referenced EcuC Rx PDU(refer to &apos;FrIfRxPduRef&apos;), with &apos;FrIfUserRxIndicationUL&apos; = (&apos;XCP&apos; or &apos;CDD&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionFrIfCfgRef)/FrIfPdu/*[(FrIfPduDirection = &apos;FrIfRxPdu&apos;) and node:refvalid(FrIfPduDirection/FrIfRxPduRef) and (node:ref(FrIfPduDirection/FrIfRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(FrIfPduDirection/FrIfUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(FrIfPduDirection/FrIfUserRxIndicationUL) = &apos;CDD&apos;))]) &gt; 1)" 
                                   true="More than one configuration instances for the EcuC PDU(XcpRxPdu) referenced from the current Xcp were found into the given FrIf configuration. It is allowed to have that PDU referenced just once (refer to &apos;FrIfTxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name)]) &gt; 0)]) = 0)" 
                                   true="The EcuC PDU referenced from the current Xcp was not found, into the given SoAd configuration. There should be one entry into SoAd configuration for the referenced EcuC PDU(refer to &apos;SoAdRxPduRef&apos;)."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and ( (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name)]) = 1)]) &gt; 1)                                                or                                                (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name)]) &gt; 1)]) &gt; 0) )" 
                                   true="More than one configuration instances for the EcuC PDU referenced from the current Xcp were found into the given SoAd configuration. It is allowed to have that PDU referenced just once (refer to &apos;SoAdRxPduRef&apos;)"/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 1) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name)]) &gt; 0)]) &gt; 0)" 
                                   true="Only one children is allowed for the SoAdSocketRouteDest of the SoAdSocketRoute, in case the referenced Rx PDU belongs Xcp."/>
                            <a:tst 
                                   expr="node:refvalid(XcpMapRxPdu2Connection)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                          and node:refvalid(node:ref(XcpMapRxPdu2Connection)/XcpRxPduRef)                                          and (count(node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name)]) &gt; 0)]) &gt; 0)                                          and (node:ref(../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name)]) &gt; 0)]/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/XcpMapRxPdu2Connection)/XcpRxPduRef)/@name)]/SoAdRxUpperLayerType != &apos;IF&apos;)" 
                                   true="SoAdRxUpperLayerType of the SoAdPduRoute configured for the referenced RX PDU must be of type &apos;IF&apos; in the SoAd module."/>
                            <a:tst 
                                   expr="(../../XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;)                                          and (XcpPduSupportForCmdCtoType = &apos;true&apos;)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpCtoSlavePduRef)                                          and node:refvalid(../../XcpConnectionInterfaceType/XcpBroadcastPduRef)                                          and not(contains(node:path(node:ref(../../XcpConnectionInterfaceType/XcpCtoSlavePduRef)), node:path(node:current())))                                          and not(contains(node:path(node:ref(../../XcpConnectionInterfaceType/XcpBroadcastPduRef)), node:path(node:current())))" 
                                   true="In case the selected configuration is &apos;XcpConnectionOverCDD&apos;, if the &apos;XcpPduSupportForCmdCtoType&apos; is enabled, it is required for the PDU to be referenced by one of the following parameters: &apos;XcpCtoSlavePduRef&apos; or &apos;XcpBroadcastPduRef&apos;. Otherwise, the PDU is useless."/>
                          </a:da>
                          <a:da name="WARNING" type="XPath">
                            <a:tst 
                                   expr="(../../../../../../XcpGeneral/XcpStimSupported = &apos;true&apos;) and (XcpPduSupportForStimDtoType = &apos;false&apos;)" 
                                   true="Setting &apos;XcpPduSupportForStimDtoType&apos; to &apos;false&apos; will make the buffer unusable for receiving STIM packages (all STIM packages received via this PDU buffer will be ignored)."/>
                            <a:tst 
                                   expr="count(../*[XcpRxLowerLayerHandleId = node:current()/XcpRxLowerLayerHandleId]) &gt; 1 and                                               (../../../../../../XcpGeneral/XcpSupportForPDURoutingTable = &apos;true&apos;)" 
                                   true="Unique &apos;XcpRxLowerLayerHandleId&apos; has to be configured for all Rx PDU belonging to the same connection."/>
                          </a:da>
                          <v:var name="XcpRxLowerLayerHandleId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                             &lt;p&gt;Xcp lower layer handle ID that is used by the lower layer communication protocol as notification handle ID upon a PDU receive indication notification.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Xcp Lower Layer handle Id"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a69"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="WARNING" type="XPath">
                              <a:tst 
                                     expr="(../../../../../../../XcpGeneral/XcpSupportForPDURoutingTable = &apos;true&apos;)                                            and node:refvalid(../XcpMapRxPdu2Connection)                                            and node:refvalid(node:ref(../XcpMapRxPdu2Connection)/XcpRxPduRef)                                            and node:refvalid(../../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)                                            and (count(node:ref(../../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/../XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) &gt; 0)                                            and (. != node:ref(../../../XcpConnectionInterfaceType/XcpConnectionCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/../XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]/CanIfRxPduId)" 
                                     true="The configured &apos;XcpRxLowerLayerHandleId&apos; is different than the &apos;CanIfRxPduId&apos; configured into the CanIf configuration, for the PDU channel. Therefore, the connection might not work. Is expected to configure the same ID as defined in the CanIf."/>
                              <a:tst 
                                     expr="(../../../../../../../XcpGeneral/XcpSupportForPDURoutingTable = &apos;true&apos;)                                            and node:refvalid(../XcpMapRxPdu2Connection)                                            and node:refvalid(node:ref(../XcpMapRxPdu2Connection)/XcpRxPduRef)                                            and node:refvalid(../../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)                                            and (count(node:ref(../../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/../XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]) &gt; 0)                                            and (. != node:ref(../../../XcpConnectionInterfaceType/XcpConnectionCanFdCanIfCfgRef)/CanIfRxPduCfg/*[node:refvalid(CanIfRxPduRef) and (node:ref(CanIfRxPduRef)/@name = node:ref(node:ref(node:current()/../XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and ((text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;XCP&apos;) or (text:toupper(CanIfRxPduUserRxIndicationUL) = &apos;CDD&apos;))]/CanIfRxPduId)" 
                                     true="The configured &apos;XcpRxLowerLayerHandleId&apos; is different than the &apos;CanIfRxPduId&apos; configured into the CanIf configuration, for the Pdu channel. Therefore, the connection might not work. Is expected to configure the same Id as defined in the CanIf."/>
                              <a:tst 
                                     expr="(../../../../../../../XcpGeneral/XcpSupportForPDURoutingTable = &apos;true&apos;)                                            and node:refvalid(../XcpMapRxPdu2Connection)                                            and node:refvalid(node:ref(../XcpMapRxPdu2Connection)/XcpRxPduRef)                                            and node:refvalid(../../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)                                            and (count(node:ref(../../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/../XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and (node:exists(SoAdRxPduId))]) &gt; 0)]) &gt; 0)                                            and (. != node:ref(../../../XcpConnectionInterfaceType/XcpConnectionSoAdConfigRef)/SoAdSocketRoute/*[(count(SoAdSocketRouteDest/*) &gt; 0) and (count(SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/../XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and (node:exists(SoAdRxPduId))]) &gt; 0)]/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and (node:ref(SoAdRxPduRef)/@name = node:ref(node:ref(node:current()/../XcpMapRxPdu2Connection)/XcpRxPduRef)/@name) and (node:exists(SoAdRxPduId))]/SoAdRxPduId)" 
                                     true="The configured &apos;XcpRxLowerLayerHandleId&apos; is different than the &apos;SoAdRxPduId&apos; configured into the SoAd configuration, for the Pdu channel. Therefore, the connection might not work. Is recommended to configure the same Id as defined in the SoAd."/>
                            </a:da>
                          </v:var>
                          <v:var name="XcpPduSupportForCmdCtoType" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables receiving &lt;code&gt;CMD CTO&lt;/code&gt; packages via the selected Rx PDU buffer.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Support for receiving CMD packages"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a75"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="node:when(count(../../*[XcpPduSupportForCmdCtoType = &apos;true&apos;]) = &apos;0&apos;, &apos;true&apos;, &apos;false&apos;)"/>
                          </v:var>
                          <v:var name="XcpPduSupportForStimDtoType" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables receiving &lt;code&gt;STIM DTO&lt;/code&gt; packages via the selected Rx PDU buffer.&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                   &lt;ul&gt;
                                     &lt;li&gt;This parameter is configurable only if the STIM processor is enabled
                                     (refer to &lt;code&gt;XcpStimSupported&lt;/code&gt; parameter).&lt;/li&gt;
                                   &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Support for receiving STIM packages"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a75"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="node:when(../../../../../../../XcpGeneral/XcpStimSupported = &apos;true&apos;, &apos;true&apos;, &apos;false&apos;)"/>
                            <a:da name="ENABLE" type="XPath" 
                                  expr="../../../../../../../XcpGeneral/XcpStimSupported = &apos;true&apos;"/>
                          </v:var>
                          <v:var name="XcpDefaultStateDynamicRxPDU" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;If the use of this parameter is enabled for a PDU, the reception on this PDU at runtime
                                   can be enabled/disabled. If this
                                   parameter is not used, the PDU is enabled and static at runtime.&lt;/p&gt;
                                   &lt;p&gt;If this parameter is set, the default state of the dynamic PDU is enabled.&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                     &lt;ul&gt;
                                      &lt;li&gt;
                                        XcpPduSupportForCmdCtoType: If a PDU is used for receiving CMD packages,
                                        it cannot be configured as dynamic.
                                      &lt;/li&gt;
                                      &lt;li&gt;
                                        XcpSupportDynamicComChannels: This parameter is only available if dynamic communication
                                        channels are used.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="State of dynamic RxPdu"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="true"/>
                            <a:da name="EDITABLE" type="XPath" 
                                  expr="(../XcpPduSupportForCmdCtoType = &apos;false&apos;) and                                       (../../../../../../../XcpGeneral/XcpSupportDynamicComChannels = &apos;true&apos;)"/>
                            <a:da name="ENABLE" value="false"/>
                          </v:var>
                          <v:var name="XcpPduSupportRxFromRxIndication" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Support for reception from Rx indication. If enabled, a reception
                                      for this PDU is triggered when RxIndication is executed.&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Enabling this feature for several PDUs might impact the run-time by
                                    creating a big overhead in the system.&lt;/strong&gt;&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s): none.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Support for reception from RxIndication"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a76"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                          <v:ref name="XcpMapRxPdu2Connection" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                             &lt;p&gt;Maps Rx PDUs to an Xcp connection.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to Xcp Rx PDU"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="f36e5680-3260-11e2-81c1-1800200c9a70"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference. A valid reference to an Xcp receive PDU has to be provided, refer to &apos;XcpRxPdu&apos;."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Xcp/XcpConfig/XcpPdu/XcpRxPdu"/>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                  <v:ctr name="XcpMemoryAccessArea" type="IDENTIFIABLE">
                    <a:a name="LABEL" value="Xcp Memory Access Areas"/>
                    <a:a name="TAB" value="Xcp Memory Access Areas"/>
                    <v:var name="XcpMemoryAccessAreasSupport" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables memory access areas.&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  true: Memory access areas are enabled. Accesses are allowed only for the memory areas defined. If no memory area is defined, all memory accesses are rejected.
                                &lt;/li&gt;
                                &lt;li&gt;
                                  false: Memory access areas are disabled. All memory accesses are accepted.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Xcp Memory Access Areas Support"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="c99ad440-3261-11e2-81c1-0800200c9a66"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="ENABLE" value="true"/>
                    </v:var>
                    <v:var name="XcpMemoryAccessAreasCallout" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables the memory access areas callout feature.&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  true: The user-specific callout function &lt;code&gt;Xcp_ApplIsMemoryAreaAccessible()&lt;/code&gt; is called in order to verify if the access to a specific memory address is allowed.
                                &lt;/li&gt;
                                &lt;li&gt;
                                  false: The verification of memory accesses is done using the configuration defined in the Xcp Memory Access Areas list.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;
                                  Xcp Memory Access Areas Support (&lt;code&gt;XcpMemoryAccessAreasSupport&lt;/code&gt;) must be enabled.
                                &lt;/li&gt;
                                &lt;li&gt;Xcp Bsw Distribution feature (&lt;code&gt;XcpBswDistribution&lt;/code&gt;) must be disabled.&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Note: Refer to the module documentation for the prototype of the
                                    callout function &lt;code&gt;Xcp_ApplIsMemoryAreaAccessible()&lt;/code&gt;.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Xcp Memory Access Areas Callout"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../XcpMemoryAccessAreasSupport = &apos;true&apos;)"/>
                      <a:da name="INVALID" type="XPath" 
                            expr=". = &apos;true&apos; and node:exists(../../../../XcpBswDistribution)" 
                            true="The memory access areas callout feature is not available if the Bsw Distribution feature is enabled. Please check the Xcp limitations for more information."/>
                    </v:var>
                    <v:lst name="XcpMemoryAccessArea" type="MAP">
                      <a:a name="LABEL" value="Xcp Memory Access Areas"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../XcpMemoryAccessAreasSupport = &apos;true&apos; and ../XcpMemoryAccessAreasCallout = &apos;false&apos;) or (node:exists(../../../../XcpBswDistribution) and ../XcpMemoryAccessAreasSupport = &apos;true&apos;)"/>
                      <a:da name="MIN" value="0"/>
                      <a:da name="WARNING" type="XPath" 
                            expr="count(./*) and (../../../ReportToDem/XcpIllegalMemoryAccessReportToDem = &apos;DISABLE&apos;)" 
                            true="XcpIllegalMemoryAccessReportToDem must be set to either DET or DEM in order to receive the status regarding                                illegal memory accesses for DAQ or STIM operations."/>
                      <v:ctr name="XcpMemoryAccessArea" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the configuration of a range of memory addresses available for reading.&lt;/p&gt;

                                &lt;p&gt;If a Read operation needs to be performed on a certain memory address, the memory range received in the request
                                (&lt;code&gt;memoryAddress&lt;/code&gt; .. &lt;code&gt;memoryAddress&lt;/code&gt; + &lt;code&gt;memorySize&lt;/code&gt; -1) is checked if it
                                is inside the allowed memory ranges, by checking all the configured
                                &lt;code&gt;XcpMemoryAreaStartAddress&lt;/code&gt; .. &lt;code&gt;XcpMemoryAreaStartAddress + XcpMemoryAreaLength&lt;/code&gt; intervals.
                                If it is outside the allowed range, a Negative Response Code is transmitted if the request is a calibration request,
                                or an error ILLEGAL_MEMORY_ACCESS to DEM or DET (depending on the configuration) is issued.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;
                                    Xcp Memory Access Areas Support (&lt;code&gt;XcpMemoryAccessAreasSupport&lt;/code&gt;) must be enabled.
                                  &lt;/li&gt;
                                  &lt;li&gt;
                                    Xcp Memory Access Areas Callout (&lt;code&gt;XcpMemoryAccessAreasCallout&lt;/code&gt;) must be disabled.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <v:var name="XcpMemoryAreaStartAddress" 
                               type="LINKER-SYMBOL">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   &lt;p&gt;Defines the start address of this memory area.&lt;/p&gt;
                                   &lt;p&gt;Enter here a valid C-expression that evaluates to an
                                   address in the slave&apos;s memory, 
                                   e.g. &lt;code&gt;0xEB15C001&lt;/code&gt; for a literal address (recommended)
                                   or &lt;code&gt;&amp;VariableName&lt;/code&gt; for a variable address
                                   (not recommended - we accept this for testing purposes).
                                   Any literal address must point to a valid address in the
                                   slave&apos;s memory.&lt;/p&gt;
                                   &lt;p&gt;If variable names are used, the Xcp module expects all
                                   required symbol declarations and definitions to be available
                                   after including the User Header File, which is specified by
                                   the configuration parameter XcpGeneral/XcpUserHeader.&lt;/p&gt;
                                 &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Memory Area Start Address"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="fa7dfff4-d18d-468d-af5d-e197669ae2ee"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="XPath" expr=". = &apos;&apos;" 
                                true="This parameter cannot be empty because the name/address of the entry is used to calculate the  address into RAM memory."/>
                          <a:da name="WARNING" type="XPath" 
                                expr="(text:match(node:value(.),&apos;^[&amp;][a-zA-Z][a-zA-Z0-9_]*([\[][0-9]+[\]])*$&apos;)) or                                           (text:match(node:value(.),&apos;^[a-zA-Z][a-zA-Z0-9_]*([\[][0-9]+[\]])*$&apos;)) or                                           (text:match(node:value(.),&apos;^[0][xX][a-fA-F0-9]+$&apos;)) or                                           (text:match(node:value(.),&apos;^[0-9]+$&apos;))" 
                                false="Make sure that the configuration is valid."/>
                        </v:var>
                        <v:var name="XcpMemoryAreaLength" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the length of this memory area.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 4294967294&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Memory Area Length"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="4e3a304b-feea-4055-8cb0-d79c807b4432"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=4294967294"/>
                              <mt:tst expr="&gt;0"/>
                            </mt:range>
                          </a:da>
                        </v:var>
                        <v:var name="XcpMemoryAreaAcccessType" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the type of the access that this memory area accepts.&lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;READ_WRITE: accept all memory accesses.&lt;/li&gt;
                                  &lt;li&gt;READ: accept only memory read accesses.&lt;/li&gt;
                                  &lt;li&gt;WRITE: accept only memory write accesses.&lt;/li&gt;
                                &lt;/ul&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Xcp Memory Access Type"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                          <a:da name="DEFAULT" value="READ_WRITE"/>
                          <a:da name="RANGE">
                            <a:v>READ_WRITE</a:v>
                            <a:v>READ</a:v>
                            <a:v>WRITE</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="XcpMemoryAreaAcccessScope" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the scope of the access that this memory area accepts.&lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;ALL: accept all requests.&lt;/li&gt;
                                  &lt;li&gt;CALIBRATION: accept only download/upload/modify bits/build checksum requests.&lt;/li&gt;
                                  &lt;li&gt;DAQ_STIM: accept only DAQ lists requests (DAQ or STIM direction). &lt;/li&gt;
                                &lt;/ul&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Xcp Memory Access Scope"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="3c83bb37-5bd0-43ba-a3bc-62dffe10ab79"/>
                          <a:da name="DEFAULT" value="ALL"/>
                          <a:da name="RANGE">
                            <a:v>ALL</a:v>
                            <a:v>CALIBRATION</a:v>
                            <a:v>DAQ_STIM</a:v>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpMemoryAccessAreaApplicationRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the Os application the Xcp Memory Access Area instance is mapped to.&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Xcp Memory Access Area Application"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="node:exists(../../../../../../XcpBswDistribution)"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(node:refvalid(.))" 
                                false="A valid OsApplication container must be referenced."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                        </v:ref>
                        <v:var name="XcpMemoryAccessAreaReadRAMCallout" 
                               type="STRING">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;The user defined Callout for reading from RAM memory, for the memory Area.&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Custom Read from RAM Callout"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="(../XcpMemoryAreaAcccessType = &apos;READ&apos;) or (../XcpMemoryAreaAcccessType = &apos;READ_WRITE&apos;)"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) != normalize-space(../../../../../../XcpGeneral/XcpReadMemoryRAMCallback)" 
                                false="If enabled, this callout shall be different from the default one"/>
                        </v:var>
                        <v:var name="XcpMemoryAccessAreaWriteRAMCallout" 
                               type="STRING">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;The user defined Callout for writing to RAM memory, for the memory Area.&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Custom Write to RAM Callout"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="EDITABLE" type="XPath" 
                                expr="(../XcpMemoryAreaAcccessType = &apos;WRITE&apos;) or (../XcpMemoryAreaAcccessType = &apos;READ_WRITE&apos;)"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) != normalize-space(../../../../../../XcpGeneral/XcpWriteMemoryRAMCallback)" 
                                false="If enabled, this callout shall be different from the default one"/>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Xcp"/>
              <v:ctr name="RamOptimizations" type="IDENTIFIABLE">
                <a:a name="LABEL" value="RAM Optimizations"/>
                <a:a name="TAB" value="Optimization"/>
                <v:var name="XcpEnableDaqOptimization" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                       &lt;p&gt;Enables RAM optimization if DAQ List Support is enabled.&lt;/p&gt;
                       &lt;p&gt;Can be used to reduce the RAM usage of DAQ lists when a large
                       number of ODT entries is required.&lt;/p&gt;
                       &lt;p&gt;This optimization reduces the RAM consumption regardless of the
                       value parameter XcpDaqConfigType has.&lt;/p&gt;
                       &lt;p&gt;For backwards compatibility w.r.t storing DAQ Lists in non-volatile memory
                       this parameter must be set to FALSE. Otherwise, the Service Needs
                       Assistant needs to be run again as the associated NVM_BLOCK_XCP_DAQ_LISTS NvM block
                       is different than the one produced when XcpEnableDaqOptimization is set to FALSE. At the
                       same time, the data layout inside the block is also different.&lt;/p&gt;
                       &lt;p&gt;&lt;/p&gt;
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Daq Optimization"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../../XcpGeneral/XcpDaqSupported=&apos;true&apos;"/>
                </v:var>
                <v:var name="XcpEnableBitOffset" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                       &lt;p&gt;Enables the bit offset functionality in the context of RAM optimizations provided by 
                       enabling parameter XcpEnableDaqOptimization.&lt;/p&gt;
                       &lt;p&gt;If this parameter is set to FALSE then the memory consumption
                       is reduced at maximum by not storing any information related to bit offsets in RAM.
                       In this case, commands WRITE_DAQ and WRITE_DAQ_MULTIPLE that specify bit offsets different than
                       0xFF are rejected and error response XCP_ERR_OUT_OF_RANGE is sent to the master.&lt;/p&gt;
                       &lt;p&gt;Setting this parameter to TRUE allows the use of bit offsets while still
                       providing some RAM consumption decrease.&lt;/p&gt;
                       &lt;p&gt;Note that if XcpEnableDaqOptimization is set to FALSE then XcpEnableBitOffset cannot be used
                       at all and bit offsets are enabled.&lt;/p&gt;
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Bit Offset"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpEnableDaqOptimization=&apos;true&apos;"/>
                </v:var>
              </v:ctr>
              <v:ctr name="ReportToDem" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      &lt;p&gt;Production error handling&lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Production error handling"/>
                <a:a name="TAB" value="Optimization"/>
                <a:a name="UUID" value="f36e5680-3260-11e2-81c1-0800200c9a66"/>
                <a:da name="TITLE" value="Production error handling"/>
                <v:var name="XcpRetryFailedReportToDem" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_RETRY_FAILED&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Retry Failed Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:a name="UUID" value="fb63b100-3260-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="DEM"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpRetryFailedDemDetErrorId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp Retry Failed
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Retry Failed DET ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="01c9b8f0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="30"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpRetryFailedReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
                <v:var name="XcpIllegalMemoryAccessReportToDem" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_ILLEGAL_MEMORY_ACCESS&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Xcp Illegal Memory Access Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:a name="UUID" value="fb63b101-3260-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpIllegalMemoryAccessDemDetErrorId" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp Illegal Memory Access
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Xcp Illegal Memory Access DET ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="01c9b8f0-3261-1132-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="30"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpIllegalMemoryAccessReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
                <v:var name="XcpPduBufferLockedReportToDem" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_PDU_BUFFER_LOCKED&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Pdu Buffer Locked Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:a name="UUID" value="cfede75c-6baf-4359-b59c-4101a1aeb24b"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpPduBufferLockedDemDetErrorId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp PDU Buffer Locked
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Pdu Buffer Locked DET ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="45f64575-8192-48e8-afed-578013209d1a"/>
                  <a:da name="DEFAULT" value="130"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpPduBufferLockedReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
                <v:var name="XcpRespCTOQueueFullReportToDem" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_RESP_CTO_QUEUE_FULL&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Xcp Response CTO Queue Full Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:a name="UUID" value="7303ff27-b0d3-4b31-b637-675af26630e8"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpRespCTOQueueFullDemDetErrorId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp Response CTO Queue Full
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Response CTO Queue Full ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c208b98f-b08a-4636-8b85-7a3a38c3640e"/>
                  <a:da name="DEFAULT" value="133"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpRespCTOQueueFullReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
                <v:var name="XcpPDUBufferFullReportToDem" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_PDU_BUFFER_FULL&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp PDU Buffer Full Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:a name="UUID" value="66c99472-bd47-4a26-9cd3-9dceeb08f073"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpPDUBufferFullDemDetErrorId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp PDU Buffer Full
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp PDU Buffer Full ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="7a6fb773-f361-4e73-a721-ec845c6686b5"/>
                  <a:da name="DEFAULT" value="129"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpPDUBufferFullReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
                <v:var name="XcpPDULostReportToDem" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_PDU_LOST&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp PDU Lost Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:a name="UUID" value="fe29b7ee-5797-4a10-81a4-90684e91d051"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpPDULostDemDetErrorId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp PDU Lost
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp PDU Lost ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="8f44c120-df05-4eac-aa7f-2b86b1b76fe9"/>
                  <a:da name="DEFAULT" value="131"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpPDULostReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
                <v:var name="XcpStimulationDataLostReportToDem" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_STIMULATION_DATA_LOST&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Xcp Stimulation Data Lost Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:a name="UUID" value="fe29b7ee-5797-4a10-81a4-90684e91d051"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpStimulationDataLostDemDetErrorId" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp Stimulation Data Lost
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Stimulation Data Lost ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="8f44c120-df05-4eac-aa7f-2b86b1b76fe9"/>
                  <a:da name="DEFAULT" value="135"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpStimulationDataLostReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
                <v:var name="XcpAcquisitionDataLostReportToDem" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the handling of the production error:
                        &lt;em&gt;XCP_E_ACQUISITION_DATA_LOST&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Xcp Acquisition Data Lost Reporting Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;false&apos;)" 
                        true="XcpDevErrorDetect is set to false, which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="XcpAcquisitionDataLostDemDetErrorId" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the &lt;code&gt;ErrorId&lt;/code&gt; of the Xcp Acquisition Data Lost
                            error when it is reported to Det instead of Dem.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 30 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Acquisition Data Lost ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="135"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpAcquisitionDataLostReportToDem = &apos;DET&apos;) and (../../XcpGeneral/XcpDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                </v:var>
              </v:ctr>
              <v:ctr name="XcpBswDistribution" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the configuration parameters related to the Bsw distribution functionality.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Xcp Bsw Distribution"/>
                <a:a name="OPTIONAL" value="true"/>
                <a:da name="ENABLE" value="false"/>
                <v:var name="XcpMemoryProxyBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the size of the buffer the memory proxy uses.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Memory Proxy Buffer Size"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../../XcpConfig/*[1]/XcpMemoryAccessArea/XcpMemoryAccessAreasSupport = &apos;true&apos;) and (count(../../XcpConfig/*[1]/XcpMemoryAccessArea/XcpMemoryAccessArea/*) &gt; 0)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range expr="&gt;0"/>
                  </a:da>
                </v:var>
                <v:ref name="XcpMasterApplicationRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the Os application the master Xcp instance is mapped to.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Master Partition"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="INVALID" type="XPath" expr="(node:refvalid(.))" 
                        false="A valid OsApplication container must be referenced."/>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                </v:ref>
                <v:var name="XcpMemProxyNumberOfRequestQueued" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the number of events that can be queued for MemProxy request, while
                            waiting for the current request to be processed.
                            This number is used in generating sizes of internal data, so a great number
                            will affect the RAM usage.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 1 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Memory Proxy Number Of Queued Events"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                  </a:da>
                </v:var>
              </v:ctr>
              <v:ctr name="XcpGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                       &lt;p&gt;Defines the general configuration parameters of the Xcp.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" value="71efada0-79bf-438b-8609-bcfe8dd8aefd"/>
                <a:da name="INVALID" type="XPath">
                  <a:tst 
                         expr="(XcpIdentificationFieldType = &apos;RELATIVE_WORD_ALIGNED&apos;) and (XcpOnCanEnabled = &apos;true&apos;) and (XcpTimestampType = &apos;FOUR_BYTE&apos;)" 
                         true="If CAN is enabled (XcpOnCanEnabled) the maximum size of a packet is 8 bytes, but as the identification field size (XcpIdentificationFieldType) is configured to have 4 bytes plus another 4 bytes the configured timestamp (XcpTimestampType), there is no space left for the actual payload. Reduce either the timestamp size either the identification field size."/>
                  <a:tst 
                         expr="XcpOnCanEnabled = &apos;false&apos; and XcpOnCanFDEnabled = &apos;false&apos; and XcpOnCddEnabled = &apos;false&apos; and XcpOnEthernetEnabled = &apos;false&apos; and XcpOnFlexRayEnabled = &apos;false&apos;" 
                         true="One of the transport layer - CAN (XcpOnCanEnabled), CAN-FD (XcpOnCanFDEnabled), CDD (XcpOnCddEnabled), Ethernet (XcpOnEthernetEnabled) or FlexRay (XcpOnFlexRayEnabled), needs to be enabled."/>
                </a:da>
                <a:da name="TITLE" value="XCP General Configuration"/>
                <v:var name="XcpDaqSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the support of DAQ lists.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: DAQ list support is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: DAQ list support is disabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;
                            To configure DAQ lists, proceed as follows:
                          &lt;/p&gt;
                          &lt;ol&gt;
                            &lt;li&gt;
                              Enable DAQ list support.
                            &lt;/li&gt;
                            &lt;li&gt;
                              If you want to use configurable DAQ lists (i.e. lists
                              that are configured by the Xcp master during runtime),
                              choose via parameter &lt;code&gt;XcpDaqConfigType&lt;/code&gt; if
                              you need &lt;code&gt;DAQ_STATIC&lt;/code&gt; or &lt;code&gt;DAQ_DYNAMIC&lt;/code&gt;
                              lists.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Set the other DAQ list-related parameters in the container
                              &lt;code&gt;XcpGeneral&lt;/code&gt; according to the needs of your
                              configuration (i.e. &lt;code&gt;XcpMinDaq&lt;/code&gt;,
                              &lt;code&gt;XcpOdtEntrySizeDaq&lt;/code&gt;,
                              &lt;code&gt;XcpOdtEntrySizeStim&lt;/code&gt; and - if you set
                              &lt;code&gt;XcpDaqConfigType&lt;/code&gt; to &lt;code&gt;DAQ_DYNAMIC&lt;/code&gt; -
                              &lt;code&gt;XcpDaqCount&lt;/code&gt; and &lt;code&gt;XcpOdtCount&lt;/code&gt;).
                            &lt;/li&gt;
                            &lt;li&gt;
                              If you have preconfigured DAQ lists (i.e. parameter
                              &lt;code&gt;XcpMinDaq&lt;/code&gt; is greater than 0) or if you use
                              static configurable DAQ lists (i.e. parameter
                              &lt;code&gt;XcpDaqConfigType&lt;/code&gt; is set to
                              &lt;code&gt;DAQ_STATIC&lt;/code&gt;), configure the DAQ lists in the
                              &lt;code&gt;XcpDaqList&lt;/code&gt; containers.
                            &lt;/li&gt;
                          &lt;/ol&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the
                              module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the
                              module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the
                              module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="DAQ List Support"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="0a826370-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpStimSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the support of DAQ lists with direction STIM.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Support of DAQ lists with direction STIM is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Support of DAQ lists with direction STIM is disabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;
                            To configure DAQ lists with direction STIM, proceed as follows:
                          &lt;/p&gt;
                          &lt;ol&gt;
                            &lt;li&gt;
                              Enable STIM direction support.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Enable DAQ list support and configure the DAQ lists
                              according to the description for parameter
                              &lt;code&gt;XcpDaqSupported&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ol&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;): STIM direction
                              support is only enabled if DAQ list support is enabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the
                              module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the
                              module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the
                              module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="STIM Direction Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="14570540-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                </v:var>
                <v:var name="XcpDaqConfigType" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the type of configurable DAQ lists.
                          &lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DAQ_STATIC&lt;/code&gt;: DAQ lists are configured statically.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DAQ_DYNAMIC&lt;/code&gt;: DAQ lists are configured dynamically.&lt;/li&gt;
                          &lt;/ul&gt;

                           &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li&gt;
                               DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                               must be enabled in order for this parameter to be editable.
                             &lt;/li&gt;
                           &lt;/ul&gt;
                           &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                               &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                               Setting this parameter to a value of DAQ_STATIC reduces the ROM
                               consumption of the module code.
                             &lt;/li&gt;
                             &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                               &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                               Setting this parameter to a value of DAQ_STATIC reduces the RAM
                               consumption of the module code.
                             &lt;/li&gt;
                           &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="DAQ Configuration Type"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="e63ffe83-da12-4f41-be4d-a3250f653a45"/>
                  <a:da name="DEFAULT" value="DAQ_STATIC"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                  <a:da name="RANGE">
                    <a:v>DAQ_DYNAMIC</a:v>
                    <a:v>DAQ_STATIC</a:v>
                  </a:da>
                </v:var>
                <v:var name="XcpDaqCount" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the number of DAQ lists for &lt;code&gt;DYNAMIC&lt;/code&gt;
                            configurable DAQ list configuration (ASAM parameter:
                            &lt;code&gt;DAQ_COUNT&lt;/code&gt;).
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt; 0 .. 65535 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;
                            Note: &lt;code&gt;XcpDaqCount&lt;/code&gt; + &lt;code&gt;XcpMinDaq&lt;/code&gt; is the
                            total number of DAQ lists (&lt;code&gt;DYNAMIC&lt;/code&gt; and
                            &lt;code&gt;PREDEFINED&lt;/code&gt;) if &lt;code&gt;XcpConfigType&lt;/code&gt; is set
                            to &lt;code&gt;DAQ_DYNAMIC&lt;/code&gt;.
                          &lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DAQ Config Type (&lt;code&gt;XcpDaqConfigType&lt;/code&gt;):
                              this parameter is only used if configurable DAQ lists
                              are &lt;code&gt;DYNAMIC&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              RAM consumption of the module configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              ROM consumption of the module configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              execution time of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Number of DAQ Lists - Dynamic Config"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="080ddc69-8217-42a5-b2bf-fae654f11db9"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="((../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (../XcpDaqSupported = &apos;true&apos;))"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=65535"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="Total number of DAQ list (XcpDaqCount + XcpMinDaq) should be less than or equal to 65535." 
                              expr="(../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (../XcpDaqSupported = &apos;true&apos;) and ((. + (../XcpMinDaq))&gt;65535) and (.&gt;0)"/>
                      <mt:tst 
                              true="If XcpIdentificationFieldType is RELATIVE_BYTE, the number of DAQ lists shall not be greater than 256. This is XcpMinDaq + XcpDaqCount for the DAQ_DYNAMIC configuration." 
                              expr="(../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (../XcpDaqSupported = &apos;true&apos;) and (../XcpIdentificationFieldType = &apos;RELATIVE_BYTE&apos;) and (. + ../XcpMinDaq &gt; 256)"/>
                      <mt:tst 
                              true="Total number of DAQ lists (XcpDaqCount + XcpMinDaq) should be &gt; 0 when DAQ list support is enabled (XcpDaqSupported = TRUE) and XcpDaqConfigType is DYNAMIC." 
                              expr="(../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (../XcpDaqSupported = &apos;true&apos;) and ((. + ../XcpMinDaq) = 0)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="XcpDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables the detection of development errors during development.&lt;/p&gt;
                         &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                         &lt;ul&gt;
                           &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                             &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                             Disabling this parameter reduces the ROM consumption of the module
                             code.
                           &lt;/li&gt;
                           &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                             &lt;strong&gt;Execution time reduction(code):&lt;/strong&gt;
                             Disabling this parameter reduces the execution time of the module
                             code.
                           &lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Development Error Detection"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="6496736d-aff4-4c10-afde-7d42db8ec25e"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="XcpIdentificationFieldType" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the identification field type for data transfer objects
                            (DTOs).&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;ABSOLUTE&lt;/code&gt;: Absolute ODT number, i.e. the ODTs of all DAQ
                              lists shall have one common numbering area that is zero-based and
                              consecutive.
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;RELATIVE_BYTE&lt;/code&gt;: Relative ODT number, absolute DAQ list
                              number (BYTE), i.e. the ODTs of each DAQ list have continuous numbers
                              starting with 0 for each DAQ list. The DAQ list numbers are
                              also zero-based and consecutive and represented as 1-byte value.
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;RELATIVE_WORD&lt;/code&gt;: Relative ODT number, absolute DAQ list
                              number (WORD), i.e. the ODTs of each DAQ list have continuous numbers
                              starting with 0 for each DAQ list. The DAQ list numbers are
                              also zero-based and consecutive and represented as 2-byte value.
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;RELATIVE_WORD_ALIGNED&lt;/code&gt;: Relative ODT number, absolute DAQ
                              list number (WORD, aligned), i.e. the same as &lt;code&gt;RELATIVE_WORD&lt;/code&gt;
                              but the DAQ list number is word-aligned in the DTO.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                           &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li&gt;
                               DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                               must be enabled in order for this parameter to be editable.
                             &lt;/li&gt;
                           &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Identification Field Type"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="74f9b7f2-6b52-4c91-92cd-e48dd64cd583"/>
                  <a:da name="DEFAULT" value="ABSOLUTE"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                  <a:da name="RANGE">
                    <a:v>ABSOLUTE</a:v>
                    <a:v>RELATIVE_BYTE</a:v>
                    <a:v>RELATIVE_WORD</a:v>
                    <a:v>RELATIVE_WORD_ALIGNED</a:v>
                  </a:da>
                </v:var>
                <v:var name="XcpMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the time interval in which the Xcp main function is
                          invoked by the BSW Scheduler.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0.001 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Main Function Period [s]"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="07e99cda-ce0e-4c3b-87b1-d20ba78a08cc"/>
                  <a:da name="DEFAULT" value="0.005"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0.001"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="XcpMaxCto" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;b&gt;This parameter is only used as the default value of the connection-specific XcpMaxCto.&lt;/b&gt;
                          &lt;p&gt;Defines the maximum length of XCP command transfer objects (CTO) in
                          bytes (ASAM parameter: &lt;code&gt;MAX_CTO&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;A CTO packet consists of:&lt;/p&gt;

                          &lt;ul&gt;
                            &lt;li&gt;an Identification Field (the PID containing the CTO Packet code) &lt;/li&gt;
                            &lt;li&gt;the Data Field, which contains the specific payload necessary for
                            the different types of CTO packet.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;The length of the CTO varies according to the needs and the used
                          XCP transport layer.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; CAN: 8 &lt;/li&gt;
                          &lt;li&gt; CAN-FD: 8 .. (maximum data length of a CAN-FD frame)&lt;/li&gt;
                          &lt;li&gt; FlexRay: 8 .. (maximum data length of a FlexRay frame
                          (&lt;code&gt;XcpMaxFlexMsgLengthInit&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                          &lt;li&gt; Ethernet: 8 .. (maximum data length of a Ethernet frame
                          (&lt;code&gt;XcpMaxEthernetMsgLengthInit&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                          &lt;li&gt; CDD: 8 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              RAM consumption of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum CTO Length"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="3100d646-9383-4ece-a2e2-21a6a9c5da4b"/>
                  <a:da name="DEFAULT" value="8"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=8"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The maximum length of XCP command transfer objects must be 8 if CAN is enabled." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;]) &gt; 0) and (. != 8)"/>
                      <mt:tst 
                              true="The maximum length of XCP command transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpCanFdMaxDlc for CAN-FD." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;]) &gt; 0) and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (. &gt; num:min(num:i(../../XcpConfig/*/XcpConnectionCfg/*/XcpConnectionInterfaceType/XcpCanFdMaxDlc))))"/>
                      <mt:tst 
                              true="The maximum length of XCP command transfer objects shall not be greater than or equal to the lowest configured XCP on FlexRay message length or greater than 254 - XCP_FRAME_HEADER_LENGTH." 
                              expr="(../XcpSupportForFlxTPCommands = &apos;false&apos;) and (count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) and (. &gt; (num:min(node:when(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;]) &gt; 0, ../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;]/XcpConnectionInterfaceType/XcpMaxFlexMsgLengthInit, 254)) - ( number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0, 4, ( number(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) * number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;]) &gt; 0,                  4,                  node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;]) &gt; 0,                            2,                            1)                  )        ) ))) )))"/>
                      <mt:tst 
                              true="The maximum length of XCP command transfer objects shall not be greater than or equal to the lowest configured XCP on Ethernet message length - XCP_FRAME_HEADER_LENGTh, or greater than 255." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0) and (. &gt; (num:min(node:when(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;]) &gt; 0, ../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;]/XcpConnectionInterfaceType/XcpMaxEthernetMsgLengthInit - ( number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0, 4, ( number(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) * number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;]) &gt; 0,                  4,                  node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;]) &gt; 0,                            2,                            1)                  )        ) ))) ), 255))))"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="XcpMaxDto" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;b&gt;This parameter is only used as the default value of the connection-specific XcpMaxDto.&lt;/b&gt;
                          &lt;p&gt;Defines the maximum length of XCP Data Transfer Objects (DTO) in bytes
                          (ASAM parameter: &lt;code&gt;MAX_DTO&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;A DTO packet consists of:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;an Identification Field, which varies depending upon the Identification
                            Field Type (&lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;)&lt;/li&gt;
                            &lt;li&gt;an optional Timestamp Field, which varies depending upon the
                            Timestamp Field Type(&lt;code&gt;XcpTimestampType&lt;/code&gt;)&lt;/li&gt;
                            &lt;li&gt;the Data Field, which contains the data for synchronous
                            acquisition and stimulation.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;The length of the CTO varies according to the needs and the used
                          XCP transport layer.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; CAN: 8 &lt;/li&gt;
                          &lt;li&gt; CAN-FD: 8 .. (maximum data length of a CAN-FD frame)&lt;/li&gt;
                          &lt;li&gt; FlexRay: 8 .. (maximum data length of a FlexRay frame
                          (&lt;code&gt;XcpMaxFlexMsgLengthInit&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                          &lt;li&gt; Ethernet: 8 .. (maximum data length of a Ethernet frame
                          (&lt;code&gt;XcpMaxEthernetMsgLengthInit&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                          &lt;li&gt; CDD: 8 .. (maximum data length of a CDD frame)&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              RAM consumption of the module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              RAM consumption of the module config.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              ROM consumption of the module config.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum DTO Length"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c600c19c-ecc5-4ef1-bbb0-e16f30942adf"/>
                  <a:da name="DEFAULT" value="8"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=65535"/>
                      <mt:tst expr="&gt;=8"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The maximum length of XCP data transfer objects must be 8 if CAN is enabled." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;]) &gt; 0) and (. != 8)"/>
                      <mt:tst 
                              true="The maximum length of XCP data transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpCanFdMaxDlc for CAN-FD." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;]) &gt; 0) and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (. &gt; num:min(num:i(../../XcpConfig/*/XcpConnectionCfg/*/XcpConnectionInterfaceType/XcpCanFdMaxDlc))))"/>
                      <mt:tst 
                              true="The maximum length of XCP data transfer objects shall not be greater than or equal to the lowest configured XCP on FlexRay message length or greater than 254 - XCP_FRAME_HEADER_LENGTH." 
                              expr="(../XcpSupportForFlxTPCommands = &apos;false&apos;) and (count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) and (. &gt; (num:min(node:when(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;]) &gt; 0, ../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;]/XcpConnectionInterfaceType/XcpMaxFlexMsgLengthInit, 254)) - ( number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0, 4, ( number(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) * number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;]) &gt; 0,                  4,                  node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;]) &gt; 0,                            2,                            1)                  )        ) ))) )))"/>
                      <mt:tst 
                              true="The maximum length of XCP data transfer objects shall not be greater than or equal to the lowest configured XCP on Ethernet message length or greater than 1454 - XCP_FRAME_HEADER_LENGTH." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0) and (. &gt; (num:min(node:when(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;]) &gt; 0, ../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;]/XcpConnectionInterfaceType/XcpMaxEthernetMsgLengthInit, 1454)) - ( number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0, 4, ( number(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) * number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;]) &gt; 0,                  4,                  node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;]) &gt; 0,                            2,                            1)                  )        ) ))) )))"/>
                      <mt:tst 
                              true="The maximum length of XCP data transfer objects shall not be greater than 1454." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;]) &gt; 0) and (. &gt; 1454)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="XcpMaxEventChannel" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of configured events for DAQ lists (ASAM parameter:
                          &lt;code&gt;MAX_EVENT_CHANNEL&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;Note: This parameter is not editable because the number of event
                          channels is used directly by counting the configured event channels
                          (number of &lt;code&gt;XcpEventChannel&lt;/code&gt;).&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Number of Event Channels"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="3dbc0e5d-1d36-4d7d-93d0-e9889c7d4fee"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="XcpMinDaq" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the number of predefined DAQ lists (ASAM
                            parameter: &lt;code&gt;MIN_DAQ&lt;/code&gt;).
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;0 .. 255&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li&gt;
                               DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                               must be enabled in order for this parameter to be editable.
                             &lt;/li&gt;
                           &lt;/ul&gt;
                           &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                               &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                               Selecting a smaller value for this parameter reduces the
                               RAM consumption of the module configuration.
                             &lt;/li&gt;
                             &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                               &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                               Selecting a smaller value for this parameter reduces the ROM
                               consumption of the module code.
                             &lt;/li&gt;
                             &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                               &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                               Selecting a smaller value for this parameter reduces the ROM
                               consumption of the module configuration.
                             &lt;/li&gt;
                             &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                               &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                               Selecting a smaller value for this parameter reduces the execution
                               time of the module code.
                             &lt;/li&gt;
                           &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Number of Predefined DAQ Lists"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="bf1c38fe-d93c-497c-955c-67d2773fcb21"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath 
                              true="Total number of DAQ list(XcpDaqCount + XcpMinDaq) should be less than or equal to 65535." 
                              expr="(../XcpDaqSupported = &apos;true&apos;) and (../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (((.) + (../XcpDaqCount) )&gt;65535) and (.&gt;0)"/>
                  </a:da>
                </v:var>
                <v:var name="XcpOdtCount" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the number of object descriptor tables (ODTs)
                            allowed for &lt;code&gt;DYNAMIC&lt;/code&gt; DAQ lists.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0 .. 252 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ Config Type (&lt;code&gt;XcpDaqConfigType&lt;/code&gt;):
                              this parameter is only used if configurable DAQ lists
                              are &lt;code&gt;DYNAMIC&lt;/code&gt;.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              When the &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is enabled, not knowing
                              the actual type of the DAQ list at run-time, the decreasing of the ODT range
                              upper limit to &apos;123&apos; must be considered if the direction 
                              becomes &apos;DAQ&apos; at run-time. Therefore, a warning is issued when this limit is exceeded.
                              The following aspects are considered when the ODT
                              range upper limit is calculated:
                              &lt;ul&gt;
                                &lt;li&gt;If the identification field is &apos;ABSOLUTE&apos;, see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;,
                                  all ODTs configured for the DAQ list with a lower ID than the selected one
                                 are considered. Also, all the ODTs with a lower ID than the selected
                                  one are considered, too, in the computation formula.
                                &lt;/li&gt;
                                &lt;li&gt;If the identification field is &apos;RELATIVE[/_]&apos;, see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;,
                                  only the ODTs with a lower ID than the selected one are considered
                                  in the computation formula.
                                  &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              When the &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is disabled, not knowing
                              the actual type of the DAQ list at run-time, the decreasing of the ODT range
                              upper limit to &apos;191&apos; must be considered if the direction
                              becomes &apos;STIM&apos; at run-time. Therefore, a warning is issued when this limit is exceeded.
                              The following aspects are considered when the ODT
                              range upper limit is calculated:
                              &lt;ul&gt;
                                &lt;li&gt;If the identification field is &apos;ABSOLUTE&apos;, see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;,
                                  all ODTs configured for the DAQ list with a lower ID than the selected one
                                  are considered. Also, all the ODTs with a lower ID than the selected
                                  one are considered, too, in the computation formula.
                                &lt;/li&gt;
                                &lt;li&gt;If the identification field is &apos;RELATIVE[/_]&apos;, see &lt;code&gt;XcpIdentificationFieldType&lt;/code&gt;,
                                  only the ODTs with a lower ID than the selected one are considered
                                  in the computation formula.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the ROM
                              consumption of the module configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the RAM
                              consumption of the module configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the execution
                              time of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Number of ODTs - Dynamic Config"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="11b75eca-94c4-424e-aee0-fbf12aac1780"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (../XcpDaqSupported = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=252"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath 
                              true="At least one ODT shall be configured for configured Dynamic DaqLists." 
                              expr="(. = 0) and (../XcpDaqCount &gt; 0)"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr="node:exists(.)                                  and (../XcpSupportForOverloadMSB = &apos;true&apos;)                                  and (../XcpIdentificationFieldType = &apos;ABSOLUTE&apos;)                                  and ((num:f(num:mul(.,../XcpDaqCount)) + count(../../XcpConfig/*[1]/XcpDaqList/*[(XcpDaqListNumber &lt; ../../../../XcpGeneral/XcpMinDaq)]/XcpOdt/*)) &gt; 124)" 
                           true="When XcpSupportForOverloadMSB parameter is enabled, the absolute ODT numbers shall not be greater than 123. To increase the PID range, you can configure the PID as relative number, refer to XcpIdentificationFieldType parameter."/>
                    <a:tst 
                           expr="node:exists(.)                                  and (../XcpSupportForOverloadMSB = &apos;true&apos;)                                  and (../XcpIdentificationFieldType != &apos;ABSOLUTE&apos;)                                  and (num:f(num:mul(.,../XcpDaqCount)) &gt; 124)" 
                           true="When XcpSupportForOverloadMSB parameter is enabled, the relative ODT numbers shall not be greater than 123."/>
                    <a:tst 
                           expr="node:exists(.)                                  and (../XcpSupportForOverloadMSB = &apos;false&apos;)                                  and (../XcpStimSupported = &apos;true&apos;)                                  and (../XcpIdentificationFieldType = &apos;ABSOLUTE&apos;)                                  and ((num:f(num:mul(.,../XcpDaqCount)) + count(../../XcpConfig/*[1]/XcpDaqList/*[(XcpDaqListNumber &lt; ../../../../XcpGeneral/XcpMinDaq)]/XcpOdt/*)) &gt; 192)" 
                           true="The absolute ODT numbers of DAQ lists of type STIM shall not be greater than 191. To increase the PID range you can configure PID relative number, refer to XcpIdentificationFieldType parameter."/>
                    <a:tst 
                           expr="node:exists(.)                                  and (../XcpSupportForOverloadMSB = &apos;false&apos;)                                  and (../XcpStimSupported = &apos;true&apos;)                                  and (../XcpIdentificationFieldType != &apos;ABSOLUTE&apos;)                                  and (num:f(num:mul(.,../XcpDaqCount)) &gt; 192)" 
                           true="The relative ODT numbers of DAQ lists of type STIM shall not be greater than 191."/>
                  </a:da>
                </v:var>
                <v:var name="XcpOdtEntriesCount" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of ODT entries into an object descriptor table (ODT)
                          using dynamic DAQ list configuration.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt; 1 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DAQ Config Type (&lt;code&gt;XcpDaqConfigType&lt;/code&gt;):
                              this parameter is only used if configurable DAQ lists
                              are &lt;code&gt;DYNAMIC&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              RAM consumption of the module configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the ROM
                              consumption of the module configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the execution
                              time of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Number of ODT Entries - Dynamic Config"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="b2bdc2e7-ee9b-4c29-bc16-977da408e6b0"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;) and (../XcpDaqSupported = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="At least one ODTEntry shall be configured for each configured Dynamic ODT." 
                              expr="(. = 0) and (../XcpOdtCount &gt; 0)"/>
                      <mt:tst 
                              true="The number of ODT entries exceeds the maximum possible, which is (max(MAX_DTO) - Identification Field Length)/GRANULARITY_ODT_ENTRY_SIZE. max(MAX_DTO) is the maximum XcpMaxDto of all configured connections; Identification Field Length is based on the XcpIdentificationFieldType parameter; GRANULARITY_ODT_ENTRY_SIZE is based on the XcpGranularityOdtEntrySizeDaq and XcpGranularityOdtEntrySizeStim parameters - whichever is lower." 
                              expr="(count(../../XcpConfig/*[1]/XcpConnectionCfg/*) &gt; 0) and ((. &gt; ((num:max(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) -  ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 )) or (. &gt; ((num:max(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) -  ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 ) ))"/>
                    </mt:xpath>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(count(../../XcpConfig/*[1]/XcpConnectionCfg/*) &gt; 0) and ((. &gt; ((num:min(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) -  ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 )) or (. &gt; ((num:min(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) -  ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 ) ))" 
                        true="The number of ODT entries exceeds the maximum possible, which is (MAX_DTO - Identification Field Length)/GRANULARITY_ODT_ENTRY_SIZE. MAX_DTO can be set for each configured connection individually using parameter XcpMaxDto; Identification Field Length is based on the XcpIdentificationFieldType parameter; GRANULARITY_ODT_ENTRY_SIZE is based on the XcpGranularityOdtEntrySizeDaq and XcpGranularityOdtEntrySizeStim parameters - whichever is lower. Note that the minimum XcpMaxDto of all connections is used, thus this warning might be a false positive."/>
                </v:var>
                <v:var name="XcpOdtEntrySizeDaq" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the maximum size of a DAQ list ODT entry (ASAM
                            parameter: &lt;code&gt;MAX_ODT_ENTRY_SIZE_DAQ&lt;/code&gt;).
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt; 0 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;

                           &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li&gt;
                               DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                               must be enabled in order for this parameter to be editable.
                             &lt;/li&gt;
                           &lt;/ul&gt;
                          &lt;p&gt;
                            Note: This parameter is counted in address granularity (AG,
                            parameter &lt;code&gt;XcpAddressGranularity&lt;/code&gt;) bytes.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum Size for ODT Entry - DAQ"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="875088a1-7be0-4bb4-9b75-85a362f81ff7"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                    <mt:xpath 
                              true="The maximum ODT Entry size of DAQ must not be greater than (max(XcpMaxDto) - XcpIdentificationFieldType). Note that max(XcpMaxDto) refers to the maximum XcpMaxDto of all configured connections." 
                              expr="(count(../../XcpConfig/*[1]/XcpConnectionCfg/*) &gt; 0) and (( (../XcpDaqSupported = &apos;true&apos;) and ( &apos;false&apos;  = &apos;false&apos;) and (. &gt; ((num:max(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 ))) or (( &apos;false&apos;  = &apos;true&apos;) and (. &gt;= (num:max(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) div  1 )) ))"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(count(../../XcpConfig/*[1]/XcpConnectionCfg/*) &gt; 0) and (( (../XcpDaqSupported = &apos;true&apos;) and ( &apos;false&apos;  = &apos;false&apos;) and (. &gt; ((num:min(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 ))) or (( &apos;false&apos;  = &apos;true&apos;) and (. &gt;= (num:min(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) div  1 )) ))" 
                        true="The maximum ODT Entry size of DAQ must not be greater than (XcpMaxDto - XcpIdentificationFieldType). Note that the minimum XcpMaxDto of all connections is used and thus this warning can be a false positive."/>
                </v:var>
                <v:var name="XcpOdtEntrySizeStim" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the maximum size of an ODT entry (ASAM parameter:
                            &lt;code&gt;MAX_ODT_ENTRY_SIZE_STIM&lt;/code&gt;) for DAQ lists with
                            direction STIM.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt; 0 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;

                           &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li&gt;
                               DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                               must be enabled in order for this parameter to be editable.
                             &lt;/li&gt;
                           &lt;/ul&gt;

                          &lt;p&gt;
                            Note: This parameter is counted in address granularity (AG,
                            parameter &lt;code&gt;XcpAddressGranularity&lt;/code&gt;) bytes.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum Size for ODT Entry - STIM"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="3dbe0d51-35ee-4c50-9daa-82545ef0c57f"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpStimSupported = &apos;true&apos;"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                    <mt:xpath 
                              true="The maximum ODT Entry size of STIM must not be greater than (max(XcpMaxDto) - XcpIdentificationFieldType). Note that max(XcpMaxDto) refers to the maximum XcpMaxDto of all configured connections." 
                              expr="(count(../../XcpConfig/*[1]/XcpConnectionCfg/*) &gt; 0) and (( (../XcpDaqSupported = &apos;true&apos;) and ( &apos;false&apos;  = &apos;false&apos;) and (. &gt; ((num:max(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 ))) or (( &apos;false&apos;  = &apos;true&apos;) and (. &gt;= (num:max(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) div  1 )) ))"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(count(../../XcpConfig/*[1]/XcpConnectionCfg/*) &gt; 0) and (( (../XcpDaqSupported = &apos;true&apos;) and ( &apos;false&apos;  = &apos;false&apos;) and (. &gt; ((num:min(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) - ( (num:integer((number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;ABSOLUTE&apos;) * 1) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_BYTE&apos;) * 2) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD&apos;) * 3) + (number(as:modconf(&apos;Xcp&apos;)[1]/XcpGeneral/XcpIdentificationFieldType =&apos;RELATIVE_WORD_ALIGNED&apos;) * 4))) )) div  1 ))) or (( &apos;false&apos;  = &apos;true&apos;) and (. &gt;= (num:min(../../XcpConfig/*[1]/XcpConnectionCfg/*/XcpMaxDto) div  1 )) ))" 
                        true="The maximum ODT Entry size of STIM must not be greater than (XcpMaxDto - XcpIdentificationFieldType). Note that the minimum XcpMaxDto of all connections is used and thus this warning can be a false positive."/>
                </v:var>
                <v:var name="XcpOnCanEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables XCP on a CAN network.&lt;/p&gt;
                         &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                         &lt;ul&gt;
                           &lt;li&gt;At least one connection of &lt;code&gt;XcpConnectionOverCAN&lt;/code&gt; must be configured,
                               if Xcp on CAN is enabled (refer to &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;).&lt;/li&gt;
                           &lt;li&gt;When Xcp on CAN is enabled, the &lt;code&gt;CanIf&lt;/code&gt; module is required.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable XCP on CAN"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="6917b8f0-18a8-4dde-815e-a00fbfe20424"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;]) = 0)" 
                           true="When Xcp on CAN (XcpOnCanEnabled) is enabled, there should be at least one connection configured with the XcpConnectionOverCAN type, refer to XcpConnectionInterfaceType parameter."/>
                    <a:tst expr=". = &apos;true&apos; and count(as:modconf(&apos;CanIf&apos;)) = 0" 
                           true="Xcp on CAN is enabled, but CanIf is not included."/>
                  </a:da>
                </v:var>
                <v:var name="XcpOnCanFDEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables XCP on a CAN-FD network.&lt;/p&gt;
                         &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                         &lt;ul&gt;
                           &lt;li&gt;At least one connection of &lt;code&gt;XcpConnectionOverCANFD&lt;/code&gt; must be configured,
                               if Xcp on CAN-FD is enabled (refer to &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;).&lt;/li&gt;
                           &lt;li&gt;When Xcp on CAN-FD is enabled, the &lt;code&gt;CanIf&lt;/code&gt; module is required.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable XCP on CAN-FD"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="d8f4dc55-143b-4d9f-980b-5d281b325f4a"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCANFD&apos;]) = 0)" 
                           true="When Xcp on CAN-FD (XcpOnCanFDEnabled) is enabled, there should be at least one connection configured with the XcpConnectionOverCANFD type, refer to XcpConnectionInterfaceType parameter."/>
                    <a:tst expr=". = &apos;true&apos; and count(as:modconf(&apos;CanIf&apos;)) = 0" 
                           true="Xcp on CAN-FD is enabled, but CanIf is not included."/>
                  </a:da>
                </v:var>
                <v:var name="XcpOnEthernetEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables XCP on a Ethernet network.&lt;/p&gt;
                         &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                         &lt;ul&gt;
                           &lt;li&gt;At least one connection of &lt;code&gt;XcpConnectionOverEthernet&lt;/code&gt; must be configured,
                               if Xcp on Ethernet is enabled (refer to &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;).&lt;/li&gt;
                           &lt;li&gt;When Xcp on Ethernet is enabled, the &lt;code&gt;SoAd&lt;/code&gt; module is required.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable XCP on Ethernet"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="b2258ad3-ac64-48df-9d6e-f9ff6fc8743e"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) = 0)" 
                           true="When Xcp on Ethernet (XcpOnEthernetEnabled) is enabled, there should be at least one connection configured with the XcpConnectionOverEthernet type, refer to XcpConnectionInterfaceType parameter."/>
                    <a:tst 
                           expr="(. = &apos;true&apos;) and not(node:exists(as:modconf(&apos;SoAd&apos;)[1]))" 
                           true="The SoAd module is needed if XCP on Ethernet is enabled."/>
                  </a:da>
                </v:var>
                <v:var name="XcpOnFlexRayEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables XCP on a FlexRay network.&lt;/p&gt;
                         &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                         &lt;ul&gt;
                           &lt;li&gt;At least one connection of &lt;code&gt;XcpConnectionOverFlexRay&lt;/code&gt; must be configured,
                               if Xcp on FlexRay is enabled (refer to &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;).&lt;/li&gt;
                           &lt;li&gt;When Xcp on FlexRay is enabled, the &lt;code&gt;FrIf&lt;/code&gt; module is required.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable XCP on FlexRay"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="08acfa4f-363a-4af0-b649-125c87b7ef1e"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) = 0)" 
                           true="When Xcp on FlexRay (XcpOnFlexRayEnabled) is enabled, there should be at least one connection configured with the XcpConnectionOverFlexRay type, refer to XcpConnectionInterfaceType parameter."/>
                    <a:tst expr=". = &apos;true&apos; and count(as:modconf(&apos;FrIf&apos;)) = 0" 
                           true="Xcp on FlexRay is enabled, but FrIf is not included."/>
                  </a:da>
                </v:var>
                <v:var name="XcpOnCddEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables XCP on CDD (Complex Device Driver).&lt;/p&gt;
                         &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                         &lt;ul&gt;
                           &lt;li&gt;At least one connection of &lt;code&gt;XcpConnectionOverCDD&lt;/code&gt; must be configured,
                               if Xcp on CDD is enabled (refer to &lt;code&gt;XcpConnectionInterfaceType&lt;/code&gt;).&lt;/li&gt;
                           &lt;li&gt;When Xcp on CDD is enabled, a &lt;code&gt;BusIf&lt;/code&gt; module for the CDD is required.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable XCP on CDD"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="e9404596-42a8-4b02-95ac-057750405951"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCDD&apos;]) = 0)" 
                        true="When Xcp on CDD (XcpOnCddEnabled) is enabled, there should be at least one connection configured with the XcpConnectionOverCDD type, refer to XcpConnectionInterfaceType parameter."/>
                </v:var>
                <v:var name="XcpPrescalerSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the usage of the prescaler in DAQ lists for reducing the
                          transmission period.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Prescaler Supported"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="2b03862c-f9ce-42cd-88df-94a58a02575e"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                </v:var>
                <v:var name="XcpSuppressTxSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the support of suppressing transmission of PDUs per
                          communication channel on or off (via &lt;code&gt;Xcp_SetTransmissionMode()&lt;/code&gt; API).&lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Transmit Suppression"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="e5e832f1-5db4-4d30-be3b-e46a340798be"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" value="true"/>
                </v:var>
                <v:var name="XcpTimestampTicks" type="INTEGER">
                  <a:a name="CALCULATION-FORMULA" value="INFORMAL"/>
                  <a:a name="CALCULATION-LANGUAGE" value="INFORMAL"/>
                  <a:a name="DERIVED" value="TRUE"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the timestamp ticks. &lt;/p&gt;

                          &lt;p&gt;If User Timestamp Support (&lt;code&gt;XcpUserTimestampSupported&lt;/code&gt;) is
                          disabled, the calculation of the timestamp ticks is automatically generated,
                          based upon the value &lt;code&gt;OsSecondsPerTick&lt;/code&gt; of the OS Counter
                          referred by &lt;code&gt;XcpCounterRef&lt;/code&gt;.&lt;/p&gt;
                          &lt;p&gt;The timestamp ticks are calculated as smallest integer number to be
                          multiplied with a power of ten to represent &lt;code&gt;OsSecondsPerTick&lt;/code&gt;
                          .&lt;/p&gt;
                          &lt;p&gt;Example:
                          OsSecondsPerTick = 0.000625 = 625E-6 =&gt; Timestamp ticks is 625
                          (6250 would not be the smallest such number and 62.5 is no integer number
                          at all).&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Timestamp Type (&lt;code&gt;XcpTimestampType&lt;/code&gt;): must be different than
                              &apos;NO_TIME_STAMP&apos; in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              User Timestamp Support (&lt;code&gt;XcpUserTimestampSupported&lt;/code&gt;): must
                              be &apos;true&apos; in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              OS Counter (&lt;code&gt;XcpCounterRef&lt;/code&gt;): must be valid and have
                              &lt;code&gt;OsSecondsPerTick&lt;/code&gt; configured if User Timestamp Support
                              &lt;code&gt;XcpUserTimestampSupported&lt;/code&gt; is &apos;false&apos;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Timestamp Ticks"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="732a588c-f1d8-4827-83d0-f0ca352132e8"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="( (../XcpDaqSupported = &apos;true&apos;) and (../XcpTimestampType != &apos;NO_TIME_STAMP&apos;) and (../XcpUserTimestampSupported = &apos;true&apos;) )"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=65535"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="XcpTimestampType" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of bytes required for timestamp.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;NO_TIME_STAMP&lt;/code&gt;: Timestamp shall not be used.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;ONE_BYTE&lt;/code&gt;: Timestamp shall be of 1 BYTE.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;TWO_BYTE&lt;/code&gt;: Timestamp shall be of 2 BYTE.&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;FOUR_BYTE&lt;/code&gt;: Timestamp shall be of 4 BYTE.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Setting this parameter to a value of NO_TIME_STAMP reduces the
                              ROM consumption of the module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              execution time of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Timestamp Type"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="41935bb1-3121-4c04-bf8e-3d3dc24a8a15"/>
                  <a:da name="DEFAULT" value="NO_TIME_STAMP"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="( . != &apos;NO_TIME_STAMP&apos;) and (count(../../XcpConfig/*[1]/XcpEventChannel/*) = count(../../XcpConfig/*[1]/XcpEventChannel/*[XcpEventChannelConsistency = &apos;ODT&apos;])) and (count(../../XcpConfig/*[1]/XcpEventChannel/*) != 0) " 
                        true="Time stamp cannot be configured for Events with ODT consistency. Since all the configured events have ODT consistency, the value of parameter &apos;Timestamp Type&apos; needs to be changed to &apos;NO_TIME_STAMP&apos;."/>
                  <a:da name="RANGE">
                    <a:v>FOUR_BYTE</a:v>
                    <a:v>NO_TIME_STAMP</a:v>
                    <a:v>ONE_BYTE</a:v>
                    <a:v>TWO_BYTE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. != &apos;NO_TIME_STAMP&apos;) and (count(../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpTimestampEnabled = &apos;true&apos;]) = 0)" 
                        true="XcpTimestampType is set to a value different than NO_TIME_STAMP but there is no connection with XcpTimestampEnabled set to TRUE. This means the timestamp functionality is not used but the Xcp_ApplGetTimestamp callout still needs to be implemented."/>
                </v:var>
                <v:var name="XcpTimestampUnit" type="ENUMERATION">
                  <a:a name="CALCULATION-FORMULA" value="INFORMAL"/>
                  <a:a name="CALCULATION-LANGUAGE" value="INFORMAL"/>
                  <a:a name="DERIVED" value="TRUE"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the timestamp unit. &lt;/p&gt;

                          &lt;p&gt;If User Timestamp Support &lt;code&gt;XcpUserTimestampSupported&lt;/code&gt; is
                          disabled, the calculation of the timestamp unit is automatically generated,
                          based upon the value &lt;code&gt;OsSecondsPerTick&lt;/code&gt; of the OS Counter
                          referred by &lt;code&gt;XcpCounterRef&lt;/code&gt;.&lt;/p&gt;
                          &lt;p&gt;The timestamp unit is chosen as such, that when combined with the
                          timestamp ticks &lt;code&gt;XcpTimestampTicks&lt;/code&gt;, the timestamp matches the
                          value &lt;code&gt;OsSecondsPerTick&lt;/code&gt;.&lt;/p&gt;
                          &lt;p&gt;Example (continued from example at &lt;code&gt;XcpTimestampTicks&lt;/code&gt;):
                          OsSecondsPerTick = 0.000625 = 625E-6 =&gt; Timestamp ticks is 625
                          and timestamp unit is 1 microsecond. &lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Timestamp Type (&lt;code&gt;XcpTimestampType&lt;/code&gt;): must be different than
                              &apos;NO_TIME_STAMP&apos; in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              User Timestamp Support (&lt;code&gt;XcpUserTimestampSupported&lt;/code&gt;): must
                              be &apos;true&apos; in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              OS Counter (&lt;code&gt;XcpCounterRef&lt;/code&gt;): must be valid and have
                              &lt;code&gt;OsSecondsPerTick&lt;/code&gt; configured if User Timestamp Support
                              &lt;code&gt;XcpUserTimestampSupported&lt;/code&gt; is &apos;false&apos;.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Timestamp Unit"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="f34b1897-60a7-4dc4-8a60-6956e46cde83"/>
                  <a:da name="DEFAULT" value="TIMESTAMP_UNIT_1S"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="( (../XcpDaqSupported = &apos;true&apos;) and (../XcpTimestampType != &apos;NO_TIME_STAMP&apos;) and (../XcpUserTimestampSupported = &apos;true&apos;) )"/>
                  <a:da name="RANGE">
                    <a:v>TIMESTAMP_UNIT_100MS</a:v>
                    <a:v>TIMESTAMP_UNIT_100NS</a:v>
                    <a:v>TIMESTAMP_UNIT_100PS</a:v>
                    <a:v>TIMESTAMP_UNIT_100US</a:v>
                    <a:v>TIMESTAMP_UNIT_10MS</a:v>
                    <a:v>TIMESTAMP_UNIT_10NS</a:v>
                    <a:v>TIMESTAMP_UNIT_10PS</a:v>
                    <a:v>TIMESTAMP_UNIT_10US</a:v>
                    <a:v>TIMESTAMP_UNIT_1MS</a:v>
                    <a:v>TIMESTAMP_UNIT_1NS</a:v>
                    <a:v>TIMESTAMP_UNIT_1PS</a:v>
                    <a:v>TIMESTAMP_UNIT_1S</a:v>
                    <a:v>TIMESTAMP_UNIT_1US</a:v>
                  </a:da>
                </v:var>
                <v:var name="XcpVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the version information API (&lt;code&gt;Xcp_GetVersionInfo()&lt;/code&gt;)&lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Version Info API"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="4ef11b93-d27d-4985-b2d2-f7cae2e1b0d3"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:ref name="XcpCounterRef" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the counter that is used by Xcp to provide the timestamp.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Os Seconds Per Tick (&lt;code&gt;OsSecondsPerTick&lt;/code&gt;): The Os Seconds
                              Per Tick parameter of the referenced Os counter must be enabled so
                              that timestamp can be correctly calculated.
                            &lt;/li&gt;
                            &lt;li&gt;
                              User Timestamp Support (&lt;code&gt;XcpUserTimestampSupported&lt;/code&gt;): must
                              be set to &quot;false&quot; in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Timestamp Type (&lt;code&gt;XcpTimestampType&lt;/code&gt;): must be different than
                              &quot;NO_TIME_STAMP&quot; in order for this parameter to be editable.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="OS Counter Reference"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="92a91f0e-5c0c-4ee9-849c-c1c615a0d522"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="( (../XcpDaqSupported = &apos;true&apos;) and (../XcpTimestampType != &apos;NO_TIME_STAMP&apos;) and (../XcpUserTimestampSupported = &apos;false&apos;) )"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="( (../XcpDaqSupported = &apos;true&apos;) and (../XcpTimestampType != &apos;NO_TIME_STAMP&apos;) and (../XcpUserTimestampSupported = &apos;false&apos;) and (node:refvalid(.) != &apos;true&apos;))" 
                           true="XcpCounterRef contains no valid reference to an OS counter. Therefore, the values of XcpTimestampUnit and XcpTimestampTicks cannot be calculated."/>
                    <a:tst 
                           expr="( (../XcpDaqSupported = &apos;true&apos;) and (../XcpTimestampType != &apos;NO_TIME_STAMP&apos;) and (../XcpUserTimestampSupported = &apos;false&apos;) and (node:refvalid(.) = &apos;true&apos;) and not(node:exists(as:ref(.)/OsSecondsPerTick)) )" 
                           true="The referenced Os counter does not have the value of OsSecondsPerTick configured. Therefore, the values of XcpTimestampUnit and XcpTimestampTicks cannot be calculated."/>
                  </a:da>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsCounter"/>
                </v:ref>
                <v:var name="XcpEventTriggerMainFunc" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables separately Event Triggered Main Function.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Enables separately Event Main Function.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Disable separately Event Main Function.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpDaqSupported&lt;/code&gt; must be enabled in order to
                              have the &quot;Xcp Event Triggered Main Function&quot; configurable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpEventChannel&lt;/code&gt; must have at least one child
                              to allow having the &quot;Xcp Event Triggered Main Function&quot; feature
                              configurable, when at least one cyclic event channel has to be configured.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Event Triggered Main Function"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpDaqSupported = &apos;true&apos;) and (count(../../XcpConfig/*[1]/XcpEventChannel/*[XcpEventChannelTimeCycle != 0]) &gt; 0)"/>
                </v:var>
                <v:var name="XcpProcessMultiEventMainFunc" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the processing of multiple events per Xcp_MainFunction.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Xcp processes all events that are assigned
                              on Xcp_MainFunction, on each cycle.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Xcp processes only one event on each Xcp_MainFunction
                              cycle.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpDaqSupported&lt;/code&gt; must be enabled in order to
                              have the &quot;Xcp Process Multiple Events Per Main Function Cycle&quot; configurable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpEventChannel&lt;/code&gt; must have at least one child
                              to allow having the &quot;Xcp Process Multiple Events Per Main Function Cycle&quot; feature
                              configurable, in the following situations:
                              &lt;ul&gt;
                                &lt;li&gt;
                                  at least one sporadic event channel must be configured, or
                                &lt;/li&gt;
                                &lt;li&gt;
                                  &lt;code&gt;XcpEventTriggerMainFunc&lt;/code&gt; is disabled, if
                                  only cyclical event channels are configured.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Xcp Process Multiple Events Per Main Function Cycle"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpDaqSupported = &apos;true&apos;) and count(../../XcpConfig/*[1]/XcpEventChannel/*) &gt; 0 and ((count(../../XcpConfig/*[1]/XcpEventChannel/*[XcpEventChannelTimeCycle = 0]) &gt; 0) or (../XcpEventTriggerMainFunc = &apos;false&apos;))"/>
                </v:var>
                <v:var name="XcpDynamicAreaSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            The size, in bytes, of the memory area used for dynamic DAQ list
                            configuration.
                          &lt;/p&gt;

                          &lt;p&gt;Note: To give a hint on how much size a project would need, here
                            is the consumption of DAQ lists for the Windows platform, using the
                            GCC compiler. Keep in mind that these values can vary, depending on the
                            hardware and compiler, but the magnitude should be similar:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;1 DAQ list: 16 bytes&lt;/li&gt;
                          &lt;li&gt;1 ODT: 8 bytes&lt;/li&gt;
                          &lt;li&gt;1 ODT entry: 8 bytes&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 1 .. 4294967292 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order to make this parameter editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DAQ Config Type (&lt;code&gt;XcpDaqConfigType&lt;/code&gt;):
                              this parameter is only used if configurable DAQ lists
                              are &lt;code&gt;DAQ_DYNAMIC&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the RAM
                              consumption of the module configuration.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Allocated Size for Dynamic DAQ lists"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="f05cf810-984b-11e2-9e96-0800200c9a66"/>
                  <a:da name="DEFAULT" value="1024"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpDaqSupported = &apos;true&apos;) and (../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&gt;=1"/>
                      <mt:tst expr="&lt;=4294967292"/>
                    </mt:range>
                  </a:da>
                  <a:da name="WARNING" type="XPath" expr="../XcpDaqCount = 0" 
                        true="There is no dynamic DAQ list configured (refer to &lt;code&gt;XcpDaqCount&lt;/code&gt; parameter). Therefore, the dynamic DAQ list area will be defined but unused.                                  In case only predefined DAQ lists are configured, to reduce memory consumption it is recommended to choose the option &quot;DAQ_STATIC&quot; (refer to &lt;code&gt;(refer to &lt;code&gt;XcpDaqCount&lt;/code&gt; parameter)&lt;/code&gt; parameter)."/>
                </v:var>
                <v:var name="XcpDynamicMirrorAreaSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            The size, in bytes, of the memory area used for storing a mirror of the data
                            from all configured ODT from a dynamic DAQ list.
                          &lt;/p&gt;

                          &lt;p&gt;Note:
                            To give a hint on how much size a project would need, here
                            is the memory needed to store data for all configured ODT. It is equal to:
                          &lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; XcpDaqCount*XcpOdtCount*XcpOdtEntriesCount*MaximOdtEntry&lt;br/&gt;*Granularity bytes&lt;/li&gt;
                          &lt;li&gt; MaximOdtEntry is the maximum between XcpOdtEntrySizeStim and XcpOdtEntrySizeDaq&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 1 .. 4294967295 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              DAQ Config Type (&lt;code&gt;XcpDaqConfigType&lt;/code&gt;):
                              this parameter is only used if configurable DAQ lists
                              are &lt;code&gt;DAQ_DYNAMIC&lt;/code&gt;.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the RAM
                              consumption of the module configuration.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Allocated Mirror Size for Dynamic DAQ lists"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:da name="DEFAULT" value="1024"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpDaqSupported = &apos;true&apos;) and (../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&gt;=1"/>
                      <mt:tst expr="&lt;=4294967295"/>
                    </mt:range>
                  </a:da>
                  <a:da name="WARNING" type="XPath" expr="../XcpDaqCount = 0" 
                        true="There is no dynamic DAQ list configured (refer to &lt;code&gt;XcpDaqCount&lt;/code&gt; parameter). Therefore, the dynamic mirror area will be defined but unused.                                  In case only predefined DAQ lists are configured, to reduce memory consumption it is recommended to choose the option &quot;DAQ_STATIC&quot; (refer to &lt;code&gt;(refer to &lt;code&gt;XcpDaqCount&lt;/code&gt; parameter)&lt;/code&gt; parameter). "/>
                </v:var>
                <v:var name="XcpCalPagSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the calibration page switching feature.
                             This functionality allows you to control the slave&apos;s logical
                             memory layout (segments, pages).&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: The page switching commands are available.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: The page switching commands are not available.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;The following is the list of the calibration page switching commands
                             together with the names of their callout functions.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;SET_CAL_PAGE&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplSetCalPage()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;GET_CAL_PAGE&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplGetCalPage()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;GET_PAG_PROCESSOR_INFO&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplGetPagProcessorInfo()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;GET_SEGMENT_INFO&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplGetSegmentInfo()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;GET_PAGE_INFO&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplGetPageInfo()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;SET_SEGMENT_MODE&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplSetSegmentMode()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;GET_SEGMENT_MODE&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplGetSegmentMode()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;COPY_CAL_PAGE&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplCopyCalPage()&lt;/code&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;The slave must initialize all its PAGEs for all its SEGMENTs.
                          To do this, an additional callout function is needed:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              SEGMENT/PAGE Initialization. Callout function:
                              &lt;code&gt;Xcp_ApplCalPagInit()&lt;/code&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;The callout functions listed above must be implemented in the application.&lt;/p&gt;
                          &lt;p&gt;
                            Note: Refer to the module documentation for
                            the callout function prototypes.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the
                              module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Calibration Page Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="1a6bdff0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpCalPagStoreSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables the storing of calibration data to non-volatile (NV) memory.&lt;/p&gt;
                         &lt;p&gt;This means that the &lt;code&gt;SET_REQUEST&lt;/code&gt;
                            command &lt;code&gt;STORE_CAL_REQUEST&lt;/code&gt; mode is enabled.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Storing of calibration data to NV memory feature is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Storing of calibration data to NV memory feature is disabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;The &lt;code&gt;FREEZE_SUPPORTED&lt;/code&gt; flag in &lt;code&gt;PAG_PROPERTIES&lt;/code&gt; at &lt;code&gt;GET_PAG_PROCESSOR_INFO&lt;/code&gt;
                            indicates that all SEGMENTS can be put in FREEZE mode.
                            With &lt;code&gt;SET_SEGMENT_MODE&lt;/code&gt;, the master can select a SEGMENT for freezing.
                            With the &lt;code&gt;STORE_CAL_REQ&lt;/code&gt; mode parameter bit set in &lt;code&gt;SET_REQUEST&lt;/code&gt; command,
                            the master requests the slave to save calibration data to NV memory.&lt;/p&gt;
                          &lt;p&gt;This functionality is implemented via the callout function:
                              &lt;code&gt;Xcp_ApplSetReqStoreCalReq()&lt;/code&gt;.
                             This callout function must be implemented in the application.&lt;/p&gt;
                          &lt;p&gt;When the store calibration data request is fulfilled, the &lt;code&gt;STORE_CAL_REQ&lt;/code&gt;
                             bit obtained by &lt;code&gt;GET_STATUS&lt;/code&gt; must be reset and also an &lt;code&gt;EV_STORE_CAL&lt;/code&gt; event
                             packet may be sent by the slave. To do this, the application must
                             call the callback function:
                             &lt;code&gt;Xcp_SetReqStoreCalReqCbk()&lt;/code&gt;.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Calibration Page Switching (&lt;code&gt;XcpCalPagSupported&lt;/code&gt;) must be enabled &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;
                            Note: Refer to the module documentation for the
                            prototype of the callout function
                            &lt;code&gt;Xcp_ApplSetReqStoreCalReq()&lt;/code&gt;
                            and the callback function
                            &lt;code&gt;Xcp_SetReqStoreCalReqCbk()&lt;/code&gt;.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Store Calibration Data Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="029771B0-F520-485D-8E05-7C52019ECE04"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpCalPagSupported = &apos;true&apos;"/>
                </v:var>
                <v:var name="XcpSlaveBlockModeSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;
                           Enables the slave block mode functionality.
                         &lt;/p&gt;
                         &lt;p&gt;Affected command(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;UPLOAD&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Slave Block Mode Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="2083eef0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpPgmSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables the flash programming functionality.&lt;/p&gt;

                         &lt;p&gt;The following is the list of the flash programming commands
                             together with the names of their callout functions.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;PROGRAM_START&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplProgramStart()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;PROGRAM_CLEAR&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplProgramClear()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;PROGRAM/PROGRAM_NEXT/PROGRAM_MAX&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplProgram()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;PROGRAM_RESET&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplProgramReset()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;GET_PGM_PROCESSOR_INFO&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplGetPgmProcessorInfo()&lt;/code&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;GET_SECTOR_INFO&lt;/code&gt;. Callout function:
                              &lt;code&gt;Xcp_ApplGetSectorInfo()&lt;/code&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;The callout functions listed above must be implemented in the application.&lt;/p&gt;
                          &lt;p&gt;
                            Note: Refer to the module documentation for the callout function
                            prototypes.
                          &lt;/p&gt;

                         &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Flash Programming Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Flash Programming"/>
                  <a:a name="UUID" value="28a0aa80-e7ae-11e2-91e2-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpMaxCtoPgm" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;b&gt;This parameter is only used as the default value of the connection specific XcpMaxCtoPgm.&lt;/b&gt;
                          &lt;p&gt;Defines the maximum length of XCP command transfer objects (CTO) in
                          bytes for flash programming (ASAM parameter: &lt;code&gt;MAX_CTO_PGM&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;A CTO packet consists of:&lt;/p&gt;

                          &lt;ul&gt;
                            &lt;li&gt;An Identification Field (the PID containing the CTO Packet code) &lt;/li&gt;
                            &lt;li&gt;And the Data Field which contains the specific payload necessary for
                            the different types of CTO packet.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;The length of the CTO varies according to the needs and the used
                          XCP Transport Layer.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; CAN : 8 &lt;/li&gt;
                          &lt;li&gt; CAN-FD : 8..(maximum data length of a CAN-FD frame&lt;/li&gt;
                          &lt;li&gt; FlexRay : 8..(maximum data length of a FlexRay frame
                          (&lt;code&gt;XcpMaxFlexMsgLengthInit&lt;/code&gt; or &lt;code&gt;XcpFlxBufMaxLenInitValue&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              Flash Programming Support
                              (&lt;code&gt;XcpPgmSupported&lt;/code&gt;): this parameter is editable only if
                              flash programming is enabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: Some older Xcp masters ignore this parameter. If your master is
                             affected, it is advised to configure this parameter to the same value
                             as XcpMaxCto.&lt;/p&gt;

                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the
                              RAM consumption of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Max Cto Pgm"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Flash Programming"/>
                  <a:a name="UUID" value="f5a0d580-e88c-11e2-91e2-0800200c9a66"/>
                  <a:da name="DEFAULT" value="8"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpPgmSupported = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=8"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The maximum length of XCP PGM command transfer objects must be 8 if CAN is enabled." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverCAN&apos;]) &gt; 0) and (. != 8)"/>
                      <mt:tst 
                              true="The maximum length of XCP PGM command transfer objects shall not be greater than or equal to the lowest configured XCP on FlexRay message length or greater than 254 - XCP_FRAME_HEADER_LENGTH." 
                              expr="(../XcpSupportForFlxTPCommands = &apos;false&apos;) and (count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) and (. &gt; (num:min(node:when(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;]) &gt; 0, ../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneFlexRayFrame = &apos;true&apos;]/XcpConnectionInterfaceType/XcpMaxFlexMsgLengthInit, 254)) - ( number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0, 4, ( number(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) * number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;]) &gt; 0,                  4,                  node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;]) &gt; 0,                            2,                            1)                  )        ) ))) )))"/>
                      <mt:tst 
                              true="The maximum length of XCP PGM command transfer objects shall not be greater than or equal to the lowest configured XCP on Ethernet message length or greater than 1454 - XCP_FRAME_HEADER_LENGTH." 
                              expr="(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0) and (. &gt; (num:min(node:when(count(../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;]) &gt; 0, ../../XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpPackMultiMsgInOneEthernetFrame = &apos;true&apos;]/XcpConnectionInterfaceType/XcpMaxEthernetMsgLengthInit, 1454)) - ( number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverEthernet&apos;]) &gt; 0, 4, ( number(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType = &apos;XcpConnectionOverFlexRay&apos;]) &gt; 0) * number(node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;]) &gt; 0,                  4,                  node:when(count(as:modconf(&apos;Xcp&apos;)[1]/XcpConfig/*/XcpConnectionCfg/*[XcpConnectionInterfaceType/XcpFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;]) &gt; 0,                            2,                            1)                  )        ) ))) )))"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="XcpMasterBlockModePgmSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables the master block mode functionality during programming.&lt;/p&gt;

                         &lt;p&gt;Affected command(s):&lt;/p&gt;
                         &lt;ul&gt;
                          &lt;li&gt;PROGRAM&lt;/li&gt;
                          &lt;li&gt;PROGRAM_NEXT&lt;/li&gt;
                         &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              Flash Programming Support
                              (&lt;code&gt;XcpPgmSupported&lt;/code&gt;): this parameter is editable only if
                              flash programming is enabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Master Block Mode Pgm Supported"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Flash Programming"/>
                  <a:a name="UUID" value="10350880-e88d-11e2-91e2-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpPgmSupported = &apos;true&apos;"/>
                </v:var>
                <v:var name="XcpMaxBSPgm" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;b&gt;This parameter is only used as the default value of the connection-specific XcpMaxBSPgm.&lt;/b&gt;
                          &lt;p&gt;
                            Defines the maximum allowed block size as the initial PROGRAM command
                            plus the number of consecutive command packets (PROGRAM_NEXT) in a block
                            sequence for flash programming (ASAM parameter: &lt;code&gt;MAX_BS_PGM&lt;/code&gt;).
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 1 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              Flash Programming Support
                              (&lt;code&gt;XcpPgmSupported&lt;/code&gt;): this parameter is editable only if
                              flash programming is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Master Block Mode Support
                              (&lt;code&gt;XcpMasterBlockModePgmSupported&lt;/code&gt;): this parameter is editable
                              if master block mode support for flash programming is enabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the RAM
                              consumption of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Maximum Block Size for Flash Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Flash Programming"/>
                  <a:a name="UUID" value="20edbbe0-e88d-11e2-91e2-0800200c9a66"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="node:when(node:exists(.), num:i((num:i(../XcpAddressGranularity = &apos;BYTE&apos;) * (ceiling(255 div (../XcpMaxCtoPgm - 2)))) + (num:i(../XcpAddressGranularity = &apos;WORD&apos;) * (ceiling(255 div (floor((../XcpMaxCtoPgm - 2) div 2 ))))) + (num:i(../XcpAddressGranularity = &apos;DWORD&apos;) * (ceiling(255 div (floor((../XcpMaxCtoPgm - 4) div 4 )))))), num:i(1))"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="((../XcpPgmSupported = &apos;true&apos;) and (../XcpMasterBlockModePgmSupported = &apos;true&apos;))"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                  </a:da>
                  <a:da name="WARNING" type="XPath">
                    <a:tst expr="(. = 1)" 
                           true="Setting this parameter to 1 effectively disables block mode and is therefore discouraged."/>
                    <a:tst 
                           expr="((../XcpAddressGranularity = &apos;BYTE&apos;) and (. &gt; (ceiling(255 div (../XcpMaxCtoPgm - 2)))))                                 or ((../XcpAddressGranularity = &apos;WORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCtoPgm - 2) div 2 ))))))                                 or ((../XcpAddressGranularity = &apos;DWORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCtoPgm - 4) div 4 ))))))  " 
                           true="The value configured for XcpMaxBSPgm is too high. It will be reduced during generation to the maximum supported value. If you want to correct the configuration, press the &apos;Calculate value&apos; button to reduce it to the maximum value that is supported."/>
                  </a:da>
                </v:var>
                <v:var name="XcpMinSTPgm" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the required minimum separation time between the flash
                            programming packets of a block transfer from the master device to the
                            slave device in units of 100 microseconds 
                            (ASAM parameter: &lt;code&gt;MIN_ST_PGM&lt;/code&gt;).
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt; 0 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              Flash Programming Support
                              (&lt;code&gt;XcpPgmSupported&lt;/code&gt;): this parameter is editable only if
                              flash programming is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Master Block Mode Support
                              (&lt;code&gt;XcpMasterBlockModePgmSupported&lt;/code&gt;): this parameter is editable
                              if master block mode support for flash programming is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Main Function Period
                              (&lt;code&gt;XcpMainFunctionPeriod&lt;/code&gt;): this parameter must be lower than
                              or equal to the Minimum Programming Separation Time (&lt;code&gt;XcpMinSTPgm&lt;/code&gt;).
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Minimum Separation Time for Flash Programming [100us]"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Flash Programming"/>
                  <a:a name="UUID" value="1d5a8300-e88d-11e2-91e2-0800200c9a66"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="node:when(ceiling(num:f(num:mul(../XcpMainFunctionPeriod, &apos;1E4&apos;))) &lt; 255, num:i(ceiling(num:f(num:mul(../XcpMainFunctionPeriod, &apos;1E4&apos;)))), num:i(255))"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="((../XcpPgmSupported = &apos;true&apos;) and (../XcpMasterBlockModePgmSupported = &apos;true&apos;))"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath 
                              true="The minimum separation time has to be greater than equal &apos;XcpMainFunctionPeriod&apos;. In case the maximum value is set for minimum separation time, you should consider lowering down the value of the Xcp MainFunction period. " 
                              expr="num:f(num:mul(../XcpMainFunctionPeriod, &apos;1E6&apos;)) &gt; num:f(num:mul(., &apos;1E2&apos;))"/>
                  </a:da>
                </v:var>
                <v:var name="XcpAddressGranularity" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the size of an element contained at a
                             single address (ASAM parameter: &lt;code&gt;AG&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;Note: This parameter is not fully supported in the current implementation.&lt;/p&gt;

                          &lt;p&gt;The current implementation supports only BYTE granularity.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Address Granularity"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Unused Options"/>
                  <a:a name="UUID" value="9fdcf250-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="BYTE"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>BYTE</a:v>
                    <a:v>WORD</a:v>
                    <a:v>DWORD</a:v>
                  </a:da>
                </v:var>
                <v:var name="XcpGranularityOdtEntrySizeDaq" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the smallest size of a data element referenced by an ODT entry with DAQ direction (ASAM parameter: &lt;code&gt;GRANULARITY_ODT_ENTRY_SIZE_DAQ&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;Note: This parameter is not fully supported in the current implementation.&lt;/p&gt;

                          &lt;p&gt;The current implementation supports only BYTE granularity.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Granularity for ODT Entry Size - DAQ"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Unused Options"/>
                  <a:a name="UUID" value="9fdcf250-3261-11e2-81c2-0800200c9a66"/>
                  <a:da name="DEFAULT" value="BYTE"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>BYTE</a:v>
                    <a:v>WORD</a:v>
                    <a:v>DWORD</a:v>
                    <a:v>DLONG</a:v>
                  </a:da>
                </v:var>
                <v:var name="XcpGranularityOdtEntrySizeStim" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the smallest size of a data element referenced by an ODT entry with STIM direction (ASAM parameter: &lt;code&gt;GRANULARITY_ODT_ENTRY_SIZE_STIM&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;Note: This parameter is not fully supported in the current implementation.&lt;/p&gt;

                          &lt;p&gt;The current implementation supports only BYTE granularity.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Granularity for ODT Entry Size - STIM"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Unused Options"/>
                  <a:a name="UUID" value="9fdcf250-3261-11e2-81c2-0800200c9a67"/>
                  <a:da name="DEFAULT" value="BYTE"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>BYTE</a:v>
                    <a:v>WORD</a:v>
                    <a:v>DWORD</a:v>
                    <a:v>DLONG</a:v>
                  </a:da>
                </v:var>
                <v:var name="XcpUserHeader" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Defines the header file for user-defined symbols. This file should
                        provide the Xcp with the declarations of variables specified by the
                        ODT Entry Addresses (&lt;code&gt;XcpOdtEntryAddress&lt;/code&gt;).&lt;/p&gt;
                        &lt;p&gt;Note: If the header file for user-defined symbols is not provided,
                        to avoid compilation errors, this parameter should be empty. &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="User Header File"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="3bafa700-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath 
                              true="Invalid naming for a C header file. Please use a standard .h file name." 
                              expr="not(text:match(., &apos;^[\w\-\. ]+\.h$&apos;)) and (. != &apos;&apos;)"/>
                  </a:da>
                </v:var>
                <v:var name="XcpMasterBlockModeSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the master block mode functionality.
                          &lt;/p&gt;
                          &lt;p&gt;Affected command(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;DOWNLOAD&lt;/li&gt;
                            &lt;li&gt;DOWNLOAD_NEXT&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Master Block Mode Support (Download)"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpMinST" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the required minimum separation time between the packets of a
                          block transfer from the master device to the slave device in units of 100
                          microseconds (ASAM parameter: &lt;code&gt;MIN_ST&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              Master Block Mode Support
                              (&lt;code&gt;XcpMasterBlockModeSupported&lt;/code&gt;): The parameter is used only if
                              Master Block Mode Support is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Main Function Period
                              (&lt;code&gt;XcpMainFunctionPeriod&lt;/code&gt;): This parameter must be lower than
                              or equal to the Minimum Separation Time (&lt;code&gt;XcpMinST&lt;/code&gt;).
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Minimum Separation Time [100us]"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="4975a740-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="node:when(ceiling(num:f(num:mul(../XcpMainFunctionPeriod, &apos;1E4&apos;))) &lt; 255, num:i(ceiling(num:f(num:mul(../XcpMainFunctionPeriod, &apos;1E4&apos;)))), num:i(255))"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpMasterBlockModeSupported = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                    <mt:xpath 
                              true="The minimum separation time has to be greater than equal &apos;XcpMainFunctionPeriod&apos;. In case the maximum value is set for minimum separation time, you should consider lowering down the value of the Xcp MainFunction period. " 
                              expr="num:f(num:mul(../XcpMainFunctionPeriod, &apos;1E6&apos;)) &gt; num:f(num:mul(., &apos;1E2&apos;))"/>
                  </a:da>
                </v:var>
                <v:var name="XcpMaxBS" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;b&gt;This parameter is only used as the default value of the connection-specific XcpMaxBS.&lt;/b&gt;
                          &lt;p&gt;
                            Defines the maximum number of blocks in a DOWNLOAD block sequence. Includes the
                            initial DOWNLOAD command (ASAM parameter: &lt;code&gt;MAX_BS&lt;/code&gt;).
                          &lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt; 1 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Selecting a smaller value for this parameter reduces the RAM
                              consumption of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum Blocks"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="node:when(node:exists(.), num:i((num:i(../XcpAddressGranularity = &apos;BYTE&apos;) * (ceiling(255 div (../XcpMaxCto - 2)))) + (num:i(../XcpAddressGranularity = &apos;WORD&apos;) * (ceiling(255 div (floor((../XcpMaxCto - 2) div 2 ))))) + (num:i(../XcpAddressGranularity = &apos;DWORD&apos;) * (ceiling(255 div (floor((../XcpMaxCto - 4) div 4 )))))), num:i(1))"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpMasterBlockModeSupported = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                  </a:da>
                  <a:da name="WARNING" type="XPath">
                    <a:tst expr="(. = 1)" 
                           true="Setting this parameter to 1 disables block mode and is therefore discouraged."/>
                    <a:tst 
                           expr="((../XcpAddressGranularity = &apos;BYTE&apos;) and (. &gt; (ceiling(255 div (../XcpMaxCto - 2)))))                                 or ((../XcpAddressGranularity = &apos;WORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCto - 2) div 2))))))                                 or ((../XcpAddressGranularity = &apos;DWORD&apos;) and (. &gt; (ceiling(255 div (floor((../XcpMaxCto - 4) div 4))))))  " 
                           true="The value configured for XcpMaxBS is too high. It will be reduced during generation to the maximum supported value. If you want to correct the configuration, press the &apos;Calculate value&apos; button to reduce it to the maximum value that is supported."/>
                  </a:da>
                </v:var>
                <v:var name="XcpTimestampFixed" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines whether the Xcp slave always sends DTO packets in
                          timestamped mode (ASAM parameter: &lt;code&gt;TIMESTAMP_FIXED&lt;/code&gt;).&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Timestamp Type (&lt;code&gt;XcpTimestampType&lt;/code&gt;): must be different than
                              NO_TIME_STAMP in order for this parameter to be editable.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Timestamp Fixed"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="54e55b70-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="( (../XcpTimestampType != &apos;NO_TIME_STAMP&apos;) and (../XcpDaqSupported = &apos;true&apos;) )"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*/XcpEventChannel/*[XcpEventChannelConsistency = &apos;ODT&apos;]) != 0)" 
                        true="Time stamp cannot be configured for Events with ODT consistency. Since the parameter Timestamp Fixed (XcpTimestampFixed) is enabled, an event with ODT consistency cannot be configured."/>
                </v:var>
                <v:var name="XcpUserTimestampSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the user timestamp feature.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: The user-specific callout function
                              &lt;code&gt;Xcp_ApplGetTimestamp()&lt;/code&gt; is called to get
                              the current timestamp.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: The Os counter referred to by parameter &lt;code&gt;XcpCounterRef&lt;/code&gt;
                              is used to get the current timestamp.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;):
                              must be enabled in order for this parameter to be editable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              Timestamp Type (&lt;code&gt;XcpTimestampType&lt;/code&gt;): must be different than
                              NO_TIME_STAMP in order for this parameter to be editable.
                            &lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;
                            Note: Refer to the module documentation for the
                            prototype of the callout function
                            &lt;code&gt;Xcp_ApplGetTimestamp()&lt;/code&gt;.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              configuration.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="User Timestamp Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="5e8a3ab0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="( (../XcpTimestampType != &apos;NO_TIME_STAMP&apos;) and (../XcpDaqSupported = &apos;true&apos;) )"/>
                </v:var>
                <v:var name="XcpStoreDaqSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables the support for storing the DAQ lists in non-volatile (NV) memory.&lt;/p&gt;
                         &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;DAQ list support (&lt;code&gt;XcpDaqSupported&lt;/code&gt;): must be enabled
                              to support the use of DAQ lists.&lt;/li&gt;
                          &lt;li&gt;XCP on Ethernet (&lt;code&gt;XcpOnEthernetEnabled&lt;/code&gt;): must be
                              disabled to support the storage of DAQ lists.&lt;/li&gt;
                          &lt;li&gt;NvM block for DAQ storage (&lt;code&gt;XcpStoreDaqNvMBlock&lt;/code&gt;): 
                              must reference an NvM block that is configured in the NVRAM manager module
                              (NvM) for DAQ list storage. &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              configuration.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Store DAQ Lists Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="64cb0760-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr=" (../XcpDaqSupported = &apos;true&apos;) and (../XcpOnEthernetEnabled = &apos;false&apos;)"/>
                </v:var>
                <v:ref name="XcpStoreDaqNvMBlock" type="REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Reference to the NVRAM Manager (NvM) block descriptor that is used to store
                           the DAQ configuration. &lt;/p&gt;
                        &lt;p&gt;The NvM block referenced by this parameter must be configured with the
                           following mandatory values:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; &lt;code&gt;NvMNvBlockLength&lt;/code&gt;: The length must be given as the
                             C code &lt;code&gt;sizeof()&lt;/code&gt; of the &lt;code&gt;Xcp_DaqLists&lt;/code&gt; structure.
                             One way to determine the exact size is to check the length of the symbol
                             &lt;code&gt;Xcp_DaqLists&lt;/code&gt; in the map file generated by the compiler.
                             Note that in some rare cases, e.g. depending on the compiler settings, 
                             the value of sizeof(Xcp_DaqLists) is not the same as the value from the map file.
                             The other way to obtain the value is to place a breakpoint in the 
                             &lt;code&gt;Xcp_InitializeDaqLists()&lt;/code&gt; function (Xcp.c) where the corresponding
                             DET error is thrown.
                          &lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;NvMBlockWriteProt&lt;/code&gt;: false&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;NvMSelectBlockForReadall&lt;/code&gt;: true&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;NvMSingleBlockCallback&lt;/code&gt;: address to the
                              &lt;code&gt;Xcp_NvmStoreDaqSingleCbk()&lt;/code&gt; function&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;p&gt;If RAM optimizations are disabled, the NvMRamBlockDataAddress parameter must be configured as follows:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;NvMRamBlockDataAddress&lt;/code&gt;: address to the runtime
                              DAQ lists structure (&lt;code&gt;XCP_NVM_DAQ_LISTS_RAM_ADDRESS&lt;/code&gt;)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;If RAM optimizations are enabled, the NvMRamBlockDataAddress parameter must not be configured and instead
                        the following parameters must be configured as follows:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;NvMReadRamBlockFromNvCallback&lt;/code&gt;: Xcp_ReadRamBlockFromNvMNativeCbk&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;NvMWriteRamBlockToNvCallback&lt;/code&gt;: Xcp_WriteRamBlockToNvMNativeCbk&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;The NvM block referenced by this parameter is recommended to be
                           configured with the following values:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;NvMBlockUseCrc&lt;/code&gt;: true&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;NvMWriteBlockOnce&lt;/code&gt;: false&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Store DAQ lists support (&lt;code&gt;XcpStoreDaqSupported&lt;/code&gt;): 
                                must be enabled if DAQ lists are to be stored in the NV memory.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="NvM Block for DAQ List Storage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="6b780360-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(node:exists(../XcpStoreDaqSupported) and (../XcpStoreDaqSupported = &apos;true&apos;) )"/>
                  <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                        false="Invalid reference. A valid reference to a NvMBlockDescriptor must be provided."/>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/NvM/NvMBlockDescriptor"/>
                </v:ref>
                <v:var name="XcpTxRetryCount" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of times the data is retried for transmission.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Setting the value ZERO for this parameter reduces the ROM
                              consumption of the module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Setting the value ZERO for this parameter reduces the RAM
                              consumption of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Tx Retry Count"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="b8075140-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="XcpTxBusTimeout" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the maximum allowed time frame for a message to be transmitted
                             from the Xcp slave to the Xcp master.&lt;/p&gt;
                          &lt;p&gt;If no retries (&lt;code&gt;XcpTxBusRetry&lt;/code&gt;) are configured, when the timeout occurs,
                             the Xcp slave autonomously disconnects. Otherwise, the message is re-transmitted for the
                             configured amount of retries. Each re-transmission attempt resets the configured timeout. &lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0.001 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Note: In order to have normal communication behavior between the
                             Xcp master and the Xcp slave, it is recommended to configure the same
                             timeout value for both the Xcp master and the Xcp slave.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Tx Bus Timeout[s]"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="07e99cda-ce0e-4c3b-87b1-d20ba78a08cc"/>
                  <a:da name="DEFAULT" value="2.0"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0.001"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The Xcp Tx Bus Timeout cannot be less than the Xcp&apos;s main function period value provided via parameter &lt;code&gt; XcpMainFunctionPeriod &lt;/code&gt;." 
                              expr=". &lt; ../XcpMainFunctionPeriod"/>
                      <mt:tst 
                              true="The &lt;code&gt; XcpTxBusTimeout &lt;/code&gt; must be a multiple of the Xcp&apos;s main function period value provided via parameter &lt;code&gt; XcpMainFunctionPeriod &lt;/code&gt;." 
                              expr="(. &gt; ../XcpMainFunctionPeriod) and (num:mod(round(node:value(.) * &apos;1E10&apos;), round(node:value(../XcpMainFunctionPeriod) * &apos;1E10&apos;)) != 0)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="XcpTxBusRetry" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of retries that the Xcp slave performs in order to transmit a PDU.&lt;/p&gt;
                          &lt;p&gt;Whenever a PDU is accepted to be transmitted by the lower layer, the
                            Xcp slave waits for &lt;code&gt;XcpTxBusTimeout&lt;/code&gt; time to receive the confirmation of successful transmission.
                            If the timeout occurs, the Xcp slave retries the whole lost PDU transmission for the configured number of times.&lt;/p&gt;
                          &lt;p&gt;When the number of retries expires (if it is not configured with the reserved value of 255 - infinite retries), the Xcp
                          slave autonomously disconnects from the connection.&lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0 .. 254&lt;/li&gt;
                          &lt;li&gt; 255: reserved value for infinite number of retries&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Note: Do not confuse this parameter with &lt;code&gt;XcpTxRetryCount&lt;/code&gt;, which retries only the transmit request rejected by the interface layer
                          (i.e. calls to &lt;code&gt;xxxIf_Transmit()&lt;/code&gt;).&lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Tx Bus Retry"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="07e99cda-ce0e-4c3b-87b1-d21ba78a08cc"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="XcpGetIdType1Callout" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines whether the user-defined callout for the command GET_ID type 1
                            is supported.&lt;/p&gt;
                          &lt;p&gt;Note: The user-defined callout shall have the following prototype:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;Xcp_ApplReturnType Xcp_ApplGetIdentification(uint8* IdBufferPtr, uint8* IdLength)&lt;/code&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;The possible return value is: XCP_APPL_OK Function successful.&lt;/p&gt;
                          &lt;p&gt;Any other return value is interpreted as an error in retrieving the identification information.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="User defined callout for GET_ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpGetIdType1MaxLength" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                       &lt;p&gt;Defines the maximum size for user-defined identification information, in bytes.&lt;/p&gt;
                       &lt;p&gt;Range:
                         &lt;ul&gt;
                           &lt;li&gt;1 .. 0xFF&lt;/li&gt;
                         &lt;/ul&gt;
                       &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Maximum size for the identification information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpGetIdType1Callout = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="XcpASAMMC2Filename" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the ASAM-MC2 filename.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="ASAM-MC2 File Name"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="bd9f33c0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../XcpGetIdType1Callout = &apos;false&apos;)"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(normalize-space(.) = &apos;&apos;)" 
                        true="ASAM-MC2 filename is not specified."/>
                </v:var>
                <v:var name="XcpSeedAndKeyEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables resource protection, i.e. support for the commands
                            &lt;em&gt;GET_SEED&lt;/em&gt; and &lt;em&gt;UNLOCK&lt;/em&gt;.
                          &lt;/p&gt;
                          &lt;p&gt;
                            To use resource protection, proceed as follows:
                            &lt;ol&gt;
                              &lt;li&gt;Enable resource protection.&lt;/li&gt;
                              &lt;li&gt;
                                Implement the two callout functions
                                &lt;code&gt;Xcp_ApplCompareKey()&lt;/code&gt; and
                                &lt;code&gt;Xcp_ApplGetSeed()&lt;/code&gt;.
                              &lt;/li&gt;
                            &lt;/ol&gt;
                          &lt;/p&gt;
                          &lt;p&gt;
                            Note: Refer to the module documentation for the
                            prototypes of the callout functions
                            &lt;code&gt;Xcp_ApplCompareKey()&lt;/code&gt; and
                            &lt;code&gt;Xcp_ApplGetSeed()&lt;/code&gt;.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Seed And Key Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="c6249940-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpEventPacketEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the transmission of event (EV) packets from the slave device to
                          the master device.&lt;/p&gt;

                          &lt;p&gt;Note: This parameter is not fully supported in the current
                          implementation.&lt;/p&gt;

                          &lt;p&gt;The following event packets are implemented&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;&lt;em&gt; EV_DAQ_OVERLOAD &lt;/em&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;em&gt; EV_STIM_TIMEOUT &lt;/em&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;em&gt; EV_STORE_DAQ &lt;/em&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;em&gt; EV_CLEAR_DAQ &lt;/em&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;em&gt; EV_STORE_CAL &lt;/em&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;em&gt; EV_RESUME_MODE &lt;/em&gt;&lt;/li&gt;
                          &lt;li&gt;&lt;em&gt; EV_CMD_PENDING &lt;/em&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Note:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              If &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is enabled, 
                              the overload notification is performed, towards the master,
                              exclusively by setting the most significant bit from PID for the affected
                              DTO package, even if the &lt;code&gt;XcpEventPacketEnabled&lt;/code&gt;
                              parameter is enabled.
                            &lt;/li&gt;
                            &lt;li&gt;
                              In case &lt;code&gt;XcpBswDistribution&lt;/code&gt; is enabled,
                              EV_RESUME_MODE, EV_CLEAR_DAQ and EV_STORE_DAQ events are not available.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Event (EV) Packet Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="c99ad440-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" value="true"/>
                </v:var>
                <v:var name="XcpModifyBitsSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the optional command &lt;code&gt;MODIFY_BITS&lt;/code&gt;.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: The command &lt;code&gt;MODIFY_BITS&lt;/code&gt; is supported.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: The command &lt;code&gt;MODIFY_BITS&lt;/code&gt; is not supported.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="MODIFY_BITS Command Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="08c7eaf7-bac6-468a-8da4-a62321685747"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpWriteDaqMultipleSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the optional command &lt;code&gt;WRITE_DAQ_MULTIPLE&lt;/code&gt;.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: The command &lt;code&gt;WRITE_DAQ_MULTIPLE&lt;/code&gt; is supported.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: The command &lt;code&gt;WRITE_DAQ_MULTIPLE&lt;/code&gt; is not supported.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Note that on connections where XcpMaxCto is less than 10, this command is
                           rejected with an ERR_CMD_SYNTAX error.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="WRITE_DAQ_MULTIPLE Command Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="08c7eaf7-bac6-4683-8da4-a62321685747"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*/XcpConnectionCfg/*[XcpMaxCto &gt;= 10]) = 0)" 
                        true="If XcpWriteDaqMultipleSupported is enabled, there must be at least one connection with XcpMaxCto greater than or equal to 10."/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;true&apos;) and (count(../../XcpConfig/*/XcpConnectionCfg/*[XcpMaxCto &lt; 10]) &gt; 0)" 
                        true="There are some connections for which the WRITE_DAQ_MULTIPLE command will be rejected with the ERR_CMD_SYNTAX error because they have a XcpMaxCto value less than 10 (minimum size required for a WRITE_DAQ_MULTIPLE command)."/>
                </v:var>
                <v:var name="XcpBuildChecksumSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the optional command &lt;code&gt;BUILD_CHECKSUM&lt;/code&gt;.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: The command &lt;code&gt;BUILD_CHECKSUM&lt;/code&gt; is supported.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: The command &lt;code&gt;BUILD_CHECKSUM&lt;/code&gt; is not supported.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Build Checksum Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="cd826eb0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpBuildChecksumType" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines the checksum type to be used for the
                            optional command &lt;code&gt;BUILD_CHECKSUM&lt;/code&gt;.
                          &lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;XCP_CRC_16_CITT&lt;/code&gt;: The AUTOSAR standard CRC 16 CITT algorithm
                              is used.
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;XCP_CRC_32&lt;/code&gt;: The AUTOSAR standard CRC 32 algorithm is
                              used.
                            &lt;/li&gt;
                            &lt;li&gt;
                              &lt;code&gt;XCP_CRC_USER_CALLOUT&lt;/code&gt;: The user-specific callout function
                              &lt;code&gt;Xcp_ApplBuildChecksum()&lt;/code&gt; is called to
                              compute the checksum.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;
                            Note: Refer to the module documentation for the
                            prototype of the callout function
                            &lt;code&gt;Xcp_ApplBuildChecksum()&lt;/code&gt;.
                          &lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;Build Checksum Support (&lt;code&gt;XcpBuildChecksumSupport&lt;/code&gt;) must be
                          enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Choosing a different value than XCP_CRC_USER_CALLOUT for this parameter
                              reduces the ROM consumption of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Checksum Type"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="d04b52b0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="XCP_CRC_16_CITT"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpBuildChecksumSupport = &apos;true&apos;"/>
                  <a:da name="RANGE">
                    <a:v>XCP_CRC_16_CITT</a:v>
                    <a:v>XCP_CRC_32</a:v>
                    <a:v>XCP_CRC_USER_CALLOUT</a:v>
                  </a:da>
                </v:var>
                <v:var name="XcpBuildChecksumMainFunctionSupport" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables separately Build Checksum Main Function.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Enables support for the asynchronous calculation of the build checksum in the
                              Xcp_CrcMainFunction context.
                              If this parameter is enabled, the Xcp_CrcMainFunction runnable is provided for
                              asynchronous calculation of the build checksum operation.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Disables separately Build Checksum Main Function.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;Build Checksum Support (&lt;code&gt;XcpBuildChecksumSupport&lt;/code&gt;) must be
                          enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Build Checksum on Xcp_CrcMainFunction "/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="d04b52b0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpBuildChecksumSupport = &apos;true&apos;"/>
                </v:var>
                <v:var name="XcpCRCMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the time interval in which the Xcp_CrcMainFunction is
                           invoked by the BSW Scheduler.&lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0.001 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Asynchronous Build Checksum Support (&lt;code&gt;XcpBuildChecksumMainFunctionSupport&lt;/code&gt;) must be
                              enabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="CRC Main Function Period [s]"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpBuildChecksumMainFunctionSupport = &apos;true&apos;"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0.001"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="XcpAddressTranslationSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the address translation feature.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                                true: Address Translation is enabled. The user-specific callout
                                function &lt;code&gt;Xcp_ApplGetAddress()&lt;/code&gt; is called to
                                translate the address. This callout function must be aware of any
                                runtime changes made regarding the slave&apos;s memory (e.g.: the active
                                page being changed by a page switching command) in order to perform
                                a correct address translation.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Address Translation is not enabled.
                              The module directly uses the 32-bit address as the
                              physical address for accessing the memory. The address
                              extension is ignored and no address translation is
                              performed.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;
                            Note:
                            &lt;ul&gt;
                              &lt;li&gt;
                                  The 8-bit address extension is not supported.
                              &lt;/li&gt;
                              &lt;li&gt;Refer to the module documentation for the prototype of the
                                  callout function &lt;code&gt;Xcp_ApplGetAddress()&lt;/code&gt;.
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                              &lt;strong&gt;Execution time reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the execution time of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Address Translation Callout Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="d41e7ac0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpSetMtaEndianness" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables support for platform endianness when processing the address DWORD (bytes from position 4 to 7) within a SET_MTA command.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Byte 4 of the SET_MTA command always represents the least significant byte of the final address.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false:
                              &lt;ul&gt;
                                &lt;li&gt;
                                  On big-endian platforms, byte 4 of the SET_MTA command represents the most significant byte of the final address.
                                &lt;/li&gt;
                                &lt;li&gt;
                                  On little-endian platforms, byte 4 of the SET_MTA command represents the least significant byte of the final address.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="SET_MTA endianness support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="b2282f5a-c9af-4abe-b814-9031eac3b587"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpBlockWriteReadMemoryRAMMechanism" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the memory access callout features.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true:
                              &lt;ul&gt;
                                &lt;li&gt;Memory access callout feature &quot;Write data in RAM Memory without MemCopy&quot; is enabled. The user-specific callout
                                function specified in &quot;Write to RAM Callback Function&quot; is called to write data to RAM memory.&lt;/li&gt;
                                &lt;li&gt;
                                Memory access callout feature &quot;Read data from RAM Memory without MemCopy&quot; is enabled. The user-specific callout
                                function specified in &quot;Read from RAM Callback Function&quot; is called to read data from RAM memory.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Memory access callout features &quot;Write data in RAM Memory without MemCopy&quot; and &quot;Read data from RAM Memory without MemCopy&quot; are disabled. Data shall be copied using TS_MemCpy().
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Write/Read RAM Memory Check"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value=""/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos; and node:empty(../XcpWriteMemoryRAMCallback) and node:empty(../XcpReadMemoryRAMCallback))" 
                        true="Write/Read data to/from RAM memory mechanism is enabled!"/>
                </v:var>
                <v:var name="XcpWriteMemoryRAMCallback" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                            &lt;p&gt;Specifies the name of a user-defined callout function that
                            is called by the Xcp, during the processing of download, download next,
                            and modify bits commands, for writing data to RAM.&lt;/p&gt;

                            &lt;p&gt;The callout function shall have the following prototype:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;Xcp_ApplReturnType Xcp_ApplWriteDataToRAM(void* AddressPtr, uint8* DataPtr, uint8 DataLength)&lt;/code&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;The possible return values are: &lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;XCP_APPL_OK: Function successful&lt;/li&gt;
                            &lt;li&gt;XCP_APPL_ERR_OUT_OF_RANGE: Parameter is invalid&lt;/li&gt;
                            &lt;/ul&gt;

                            &lt;p&gt;Options:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt; name of callout function: this function is called to
                            write data to RAM block&lt;/li&gt;
                            &lt;li&gt; empty: no function is called &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;p&gt;
                            Note:
                            &lt;ul&gt;
                              &lt;li&gt;The declaration and definition of this function in user template
                               files is the default name &lt;code&gt;Xcp_ApplWriteDataToRAM()&lt;/code&gt;. If
                               this name is changed at configuration phase, you must provide
                               also the declaration of this function within a user header file.
                               More explicitly, if you declare this callout function as
                               it is specified in the template user file: Xcp_ApplWriteDataToRAM,
                               then you must include the template user header file Xcp_UserCallouts.h
                               in the configuration parameter XcpUserHeader.
                               If you define the name of the callout function, then
                               a header file containing the declaration of the callout function
                               must be included in the configuration parameter XcpUserHeader.
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Write to RAM Callout Function"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value=""/>
                  <a:da name="DEFAULT" value="Xcp_ApplWriteDataToRAM"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpBlockWriteReadMemoryRAMMechanism =&apos;true&apos;"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="((. = &apos;&apos;)) or                                     ((normalize-space(../../XcpGeneral/XcpUserHeader) = &apos;Xcp_UserCallouts.h&apos;) and                                     (normalize-space(.) != &apos;Xcp_ApplWriteDataToRAM&apos;))" 
                        true="If the user decides to use Xcp_UserCallouts.h template user file, then it is mandatory to                                  declare the name of this function as it is used in the template user file: Xcp_ApplWriteDataToRAM."/>
                  <a:da name="WARNING" type="XPath" 
                        expr="text:match(node:value(.),&apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                        false="Check the function name syntax to be a valid &apos;C&apos; name."/>
                </v:var>
                <v:var name="XcpReadMemoryRAMCallback" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                            &lt;p&gt;Specifies the name of a user-defined callout function that
                            is called by the Xcp during the processing of upload, short upload,
                            and modify bits commands, for reading data from RAM.&lt;/p&gt;

                            &lt;p&gt;The callout function must have the following prototype:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;Xcp_ApplReturnType Xcp_ApplReadDataFromRAM(void* AddressPtr, uint8* DataPtr, uint8 DataLength)&lt;/code&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;The possible return values are: &lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;XCP_APPL_OK: Function successful&lt;/li&gt;
                            &lt;li&gt;XCP_APPL_ERR_OUT_OF_RANGE: Parameter is invalid&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;Options:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt; name of call-out function: this function is called to
                            read data from a RAM block&lt;/li&gt;
                            &lt;li&gt; empty: no function is called &lt;/li&gt;
                            &lt;/ul&gt;
                         &lt;p&gt;
                            Note:
                            &lt;ul&gt;
                              &lt;li&gt;The declaration and definition of this function in user template
                               files is the default name &lt;code&gt;Xcp_ApplReadDataFromRAM()&lt;/code&gt;. If
                               this name is changed at configuration phase, you must provide
                               also the declaration of this function within a user header file.
                               More explicitly, if you declare this callout function as
                               it is specified in the template user file: Xcp_ApplReadDataFromRAM,
                               then you must include the template user header file Xcp_UserCallouts.h
                               in the configuration parameter XcpUserHeader.
                               If you define the name of the callout function, then
                               a header file containing the declaration of the callout function
                               must be included in the configuration parameter XcpUserHeader.
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Read from RAM Callout Function"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value=""/>
                  <a:da name="DEFAULT" value="Xcp_ApplReadDataFromRAM"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpBlockWriteReadMemoryRAMMechanism =&apos;true&apos;"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="((. = &apos;&apos;)) or                                     ((normalize-space(../../XcpGeneral/XcpUserHeader) = &apos;Xcp_UserCallouts.h&apos;) and                                     (normalize-space(.) != &apos;Xcp_ApplReadDataFromRAM&apos;))" 
                        true="If the user decides to use Xcp_UserCallouts.h template user file, then it is mandatory to                                  declare the name of this function as it is used in the template user file: Xcp_ApplReadDataFromRAM."/>
                  <a:da name="WARNING" type="XPath" 
                        expr="text:match(node:value(.),&apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                        false="You should check the function name syntax to be a valid &apos;C&apos; name."/>
                </v:var>
                <v:var name="XcpEnableXcpControlApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the control feature. The Xcp_Control() API is available only if this parameter is enabled.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Control functionality is enabled. You can optionally enable or disable the module.
                             &lt;ul&gt;
                               &lt;li&gt;
                                 If you call the control function with the XCP_STATE_ACTIVE command, the module will have full functionality.
                               &lt;/li&gt;
                               &lt;li&gt;
                                 If you call the control function with the XCP_STATE_INACTIVE command, the module will suppress all functionality.
                               &lt;/li&gt;
                             &lt;/ul&gt;

                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Control is not enabled. The functionality is not available.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;
                            Note:
                            &lt;ul&gt;
                              &lt;li&gt;
                                Refer to the module documentation for the prototype of the control function &lt;code&gt;Xcp_Control()&lt;/code&gt;.
                               &lt;/li&gt;
                               &lt;li&gt;
                                &lt;em&gt;
                                  If the module is disabled at precompile time (i.e. both parameters XcpEnableXcpControlApi and XcpDefaultXcpModuleState are set to false), you must not map the main function and events because, with this configuration, the module does not exist.
                                &lt;/em&gt;
                             &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Enable Xcp Control Api"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="d41e7ac0-3261-11e2-81c1-0800200c9a66"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="XcpDefaultXcpModuleState" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Describes the module&apos;s default state.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Xcp default state is Enabled.
                              &lt;ul&gt;
                                &lt;li&gt;
                                  The full functionality of the Xcp module is available for usage.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: Xcp default state is Disabled.
                              &lt;ul&gt;
                                &lt;li&gt;
                                  The Xcp module exists but the functionality is suppressed.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                           &lt;p&gt;
                            Note:
                            &lt;ul&gt;
                              &lt;li&gt;
                                Refer to the module documentation for the prototype of the parameter XCP_DEFAULT_XCP_MODULE_STATE.
                               &lt;/li&gt;
                               &lt;li&gt;
                               &lt;em&gt;
                                  If the module is disabled at precompile time (i.e. both parameters XcpEnableXcpControlApi and XcpDefaultXcpModuleState are set to false), you must not map the main function and events because, with this configuration, the module does not exist.
                               &lt;/em&gt;
                              &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;

                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Xcp Default Xcp Module State"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="029771B0-F520-485D-8E05-7C52019ECE04"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="XcpSupportForOverloadMSB" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables the support for an overload situation, in which the slave
                            may set the Most Significant Bit (MSB) of the PID of the next
                            successfully transmitted packet. When the MSB of the PID is used,
                            the maximum number of (absolute or relative) ODT numbers is limited
                            and must be in the range:
                              0x00 &lt; ODT_NUMBER(DAQ with overrun_msb) &gt; 0x7C
                          &lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpDaqSupported&lt;/code&gt; must be enabled in order to
                              have the Xcp Support for overload MSB configurable.
                            &lt;/li&gt;
                            &lt;li&gt;
                              If &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; is enabled, the
                              overload notification is performed, towards the master,
                              exclusively by setting the MSB from the PID, for the affected
                              DTO package, even if the &lt;code&gt;XcpEventPacketEnabled&lt;/code&gt;
                              parameter is enabled.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Values for &lt;code&gt;XcpSupportForOverloadMSB&lt;/code&gt; parameter:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              true: Xcp support for sending the overload notification to the master via the PID&apos;s MSB.
                            &lt;/li&gt;
                            &lt;li&gt;
                              false: The overload notification is not sent to the master via the PID&apos;s MSB.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Support for Overload MSB"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="DAQ/STIM Setup"/>
                  <a:a name="UUID" value="029771B0-F520-485D-8E05-7C52019ECE04"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpDaqSupported = &apos;true&apos;"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;true&apos;)                                  and (count(../../XcpConfig/*[1]/XcpDaqList/*[(XcpDaqListNumber &lt; ../../../../XcpGeneral/XcpMinDaq) and (XcpDaqListType != &apos;STIM&apos;)]) = 0)                                  and (( ( (../XcpDaqConfigType = &apos;DAQ_STATIC&apos;)                                           and count(../../XcpConfig/*[1]/XcpDaqList/*) &lt;= ../XcpMinDaq)                                         )                                       or( (../XcpDaqConfigType = &apos;DAQ_DYNAMIC&apos;)                                           and (../XcpDaqCount = 0)                                         )                                      )" 
                        true="The enabling of the &lt;code&gt;Support for Overload MSB&lt;code/&gt; feature will have no effect, because there is no DAQ list with direction DAQ or DAQ_STIM configured."/>
                </v:var>
                <v:var name="XcpSupportForGetDaqId" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the support for the GET_DAQ_ID CAN transport layer command.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpOnCanEnabled&lt;/code&gt; or &lt;code&gt;XcpOnCanFDEnabled&lt;/code&gt; and
                              &lt;code&gt;XcpDaqSupported&lt;/code&gt; must be enabled in order to have the support for
                              the transport layer GET_DAQ_ID command.
                            &lt;/li&gt;
                            &lt;li&gt;Values for &lt;code&gt;XcpSupportForGetDaqId&lt;/code&gt;:
                              &lt;ul&gt;
                                &lt;li&gt;Enabled: The maximum number of Xcp PDUs, configured for each Xcp connection over
                                    CAN or CAN-FD (refer to &lt;code&gt;XcpConnectionCfg&lt;/code&gt;), supporting DAQ/STIM packages,
                                    is restricted to 1, for each direction.&lt;/li&gt;
                                &lt;li&gt;Disabled: In this case, there is no restriction for the maximum number of Xcp PDUs,
                                    configured for each Xcp connection over CAN or CAN-FD (refer to
                                    &lt;code&gt;XcpConnectionCfg&lt;/code&gt;), supporting DAQ/STIM packages.
                                    Note: All DTOs can be sent/received on each of the configured PDU supporting DAQ/STIM
                                    packages.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Support for CAN or CAN-FD Transport layer GET_DAQ_ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="029771B0-F520-485D-8E05-7C52019ECE04"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="node:when(node:exists(.),&apos;true&apos;,&apos;false&apos;)"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpOnCanEnabled = &apos;true&apos;) and (../XcpDaqSupported = &apos;true&apos;) or (../XcpOnCanFDEnabled = &apos;true&apos;) and (../XcpDaqSupported = &apos;true&apos;)"/>
                </v:var>
                <v:var name="XcpSupportForFlxTPCommands" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the support for the FlexRay transport layer commands:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;FLX_ASSIGN (Assign/deassign FlexRay LPDU identifiers to buffers)&lt;/li&gt;
                            &lt;li&gt;FLX_ACTIVATE (Activate communication of a FlexRay buffer)&lt;/li&gt;
                            &lt;li&gt;FLX_DEACTIVATE (Deactivate communication of a FlexRay buffer)&lt;/li&gt;
                            &lt;li&gt;GET_DAQ_FLX_BUF (Get DAQ list FlexRay buffer(s))&lt;/li&gt;
                            &lt;li&gt;SET_DAQ_FLX_BUF (Set DAQ list FlexRay buffer(s))&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpOnFlexRayEnabled&lt;/code&gt; must be enabled in order to
                              have the support for FlexRay transport layer commands configurable.
                            &lt;/li&gt;
                            &lt;li&gt;Values for &lt;code&gt;XcpSupportForFlxTPCommands&lt;/code&gt;:
                              &lt;ul&gt;
                                &lt;li&gt;Enabled: The Xcp master can use the FlexRay transport layer commands.&lt;/li&gt;
                                &lt;li&gt;Disabled: The Xcp master cannot use the FlexRay transport layer commands.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Support for FlexRay Transport Layer Commands"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Communication Setup"/>
                  <a:a name="UUID" value="029771B0-F520-485D-8E05-7C52019ECE04"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../XcpOnFlexRayEnabled = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos;) and                     ( as:modconf(&apos;FrIf&apos;)/FrIfGeneral/FrIfReconfigLPduSupport = &apos;false&apos; )" 
                        true="FrIfReconfigLPduSupport must be enabled in order for Xcp to be able to reconfigure the Flexray Hardware buffers"/>
                </v:var>
                <v:var name="XcpSupportDynamicComChannels" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables support for dynamic communication channels. This feature allows
                            you to enable or disable a communication channel at runtime. As this
                            behavior is not specified by ASAM, this feature is implemented by reserving
                            a user-defined command, sub-command code 0x00U.
                          &lt;/p&gt;
                          &lt;p&gt;
                            Format of the user command to be received:
                            Command_Code SubCommand_Code Direction PduId PduState
                            &lt;ul&gt;
                              &lt;li&gt;Command Code: 0xF1 - user command&lt;/li&gt;
                              &lt;li&gt;SubCommand Code: 0x00 - reserved sub-command code&lt;/li&gt;
                              &lt;li&gt;PDU Direction: 0x00 - transmission; 0x01 - reception&lt;/li&gt;
                              &lt;li&gt;PduId: Configured index for Xcp PDU&lt;/li&gt;
                              &lt;li&gt;State: State requested for a specific PDU: 0x00 - Disabled, 0x01 - Enabled&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;
                              &lt;code&gt;XcpUserCommand&lt;/code&gt; sub-command code 0x00 must be configured as below:
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;XcpSubCommandCode: &lt;/code&gt;0&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;XcpSubCommandLength: &lt;/code&gt;3&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;XcpSubCommandResponseLength: &lt;/code&gt;0&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;XcpSubCommandCallout: &lt;/code&gt;Xcp_EnableCommunicationChannel&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Values for &lt;code&gt;XcpSupportDynamicComChannels&lt;/code&gt;:
                              &lt;ul&gt;
                                &lt;li&gt;Enabled: You can use a reserved user command in order to enable
                                    or disable Xcp PDUs at runtime.&lt;/li&gt;
                                &lt;li&gt;Disabled: All configured Xcp PDUs are static.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Support dynamic communication channels"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos;) and                     ( count(../../XcpUserCommand/*) = 0 or                      (num:integer(../../XcpUserCommand/*[1]/XcpSubCommandCode) != 0) or  (num:integer(../../XcpUserCommand/*[1]/XcpSubCommandLength) != 3) or (num:integer(../../XcpUserCommand/*[1]/XcpSubCommandResponseLength) != 0) or (../../XcpUserCommand/*[1]/XcpSubCommandCallout != &apos;Xcp_EnableCommunicationChannel&apos;) )" 
                        true="User sub command code 0 is reserved and has to be configured accordingly"/>
                </v:var>
                <v:var name="XcpSupportComMainFunctions" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines whether additional main processing functions shall
                          be used for transmission and reception in Xcp. If this feature is enabled,
                          &lt;code&gt;Xcp_MainFunctionTx&lt;/code&gt; and &lt;code&gt;Xcp_MainFunctionRx&lt;/code&gt; are
                          scheduled functions with the periodicity defined by this parameter.&lt;/p&gt;
                          &lt;p&gt;If this parameter is enabled, the value configured for the periodicity has
                          to be higher than 0.0.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Support for Tx and Rx MainFunctions "/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range expr="&gt;=0.001"/>
                  </a:da>
                </v:var>
                <v:var name="XcpSupportForPDURoutingTable" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the support for an Xcp-internal PDU routing table. If this parameter is enabled,
                          a table for switching from lower layer PduId to Xcp PduId is generated. This option should
                          be used if callback functions from the lower layer get as parameter the PduId of the lower layer
                          and not the PduId of Xcp.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Values for &lt;code&gt;XcpSupportForPDURoutingTable&lt;/code&gt;:
                              &lt;ul&gt;
                                &lt;li&gt;Enabled: Callback functions from the lower layer are called with the PduId of the lower layer.
                                A table for switching from lower layer PduId to Xcp PduId is generated in Xcp.&lt;/li&gt;
                                &lt;li&gt;Disabled: Callback functions from the lower layer are called with the Xcp PduId. A table for
                                switching from lower layer PduId to Xcp PduId is not generated in Xcp.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Support for PDU routing"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="19D06D5E-6792-11E5-9D70-FEFF819CDC9F"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpServiceWrapper" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;By enabling this feature, the Xcp module generates a wrapper.&lt;/p&gt;
                          &lt;p&gt;The wrapper functions must be called by all other modules, and all
                          Xcp-external interfaces must only be called by the wrapper. Xcp only exports
                          the wrapper schedulable entity and this is the MainFunction that must be
                          mapped in the RTE.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Values for &lt;code&gt;XcpServiceWrapper&lt;/code&gt;:
                              &lt;ul&gt;
                                &lt;li&gt;Enabled: XcpW is generated and is the only caller
                                of Xcp interfaces. The user-defined callout function App_Xcp_Wrapper_IsXcpUsed
                                must be provided within the user header file.&lt;/li&gt;
                                &lt;li&gt;Disabled: No wrapper is generated - normal use case.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="XCP Service Wrapper"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="19D06D5E-6792-11E5-9D70-FEFF819CDC9F"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpFlexRaySyncTimeout" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the maximum allowed time frame until the Xcp slave disconnects from the master if a loss of FlexRay synchronization occurs.&lt;/p&gt;
                          &lt;p&gt;FlexRay synchronization is retried at each main function cycle execution. This option is used to prevent a freeze situation that can occur when FlexRay synchronization continues to fail indefinitely.&lt;/p&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="FlexRay Sync Timeout[s]"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="EE4C43B7-C9E9-41B0-B3A0-0902915C6BDA"/>
                  <a:da name="DEFAULT" value="2.0"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0.001"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The FlexRay Sync Timeout cannot be less than the Xcp&apos;s main function period value provided via parameter XcpMainFunctionPeriod." 
                              expr=". &lt; ../XcpMainFunctionPeriod"/>
                      <mt:tst 
                              true="The XcpFlexRaySyncTimeout must be a multiple of the Xcp&apos;s main function period value provided via parameter XcpMainFunctionPeriod." 
                              expr="(. &gt; ../XcpMainFunctionPeriod) and (num:mod(round(node:value(.) * &apos;1E10&apos;), round(node:value(../XcpMainFunctionPeriod) * &apos;1E10&apos;)) != 0)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="XcpMulticastCommands" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables multicast commands. The only supported multicast command is GET_SLAVE_ID over Ethernet UDP.&lt;/p&gt;
                          &lt;p&gt;Note: At least one Ethernet Ipv4 UDP connection needs to be configured in order to use this option.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Multicast Commands Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="5C271EFE-965B-4E01-B91C-1551834C581C"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpMulticastToUnicastRetry" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of retries that the Xcp slave performs to change back the
                          address and port to unicast, before it autonomously disconnects from the master.&lt;/p&gt;
                          &lt;p&gt;The change to unicast is retried at each main function cycle execution.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Tx Multicast to Unicast Retry"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:a name="UUID" value="41C4B40F-AE36-43E2-97D3-D86AD5748749"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../XcpMulticastCommands = &apos;true&apos;"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="XcpSynchReceivedCallout" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Enables the usage of the user callout function Xcp_ApplSynchReceived.&lt;/p&gt;
                        &lt;p&gt;Xcp calls this function when a SYNCH command is received.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Synch Received Callout"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:lst name="XcpUserCommand" type="MAP">
                <a:a name="LABEL" value="Xcp User Defined Commands"/>
                <a:a name="TAB" value="User Commands"/>
                <v:ctr name="XcpUserCommand" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;This container contains the configuration parameters
                            of Xcp user commands.&lt;/p&gt;
                          &lt;p&gt;User commands must not be used to implement functionalities
                            done by other services.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <v:var name="XcpSubCommandCode" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;This parameter indicates sub-command code.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="Xcp User Defined Commands"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="num:integer(../@index)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=255"/>
                        <mt:tst expr="&gt;=0"/>
                      </mt:range>
                    </a:da>
                  </v:var>
                  <v:var name="XcpSubCommandLength" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Represents the number of bytes to be sent by the master within
                            the command. It does not include the number of bytes reserved for the command and
                            sub-command code. It consists of the number of bytes that you want to send
                            as parameters for a specific sub-command.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="Xcp User Defined Commands"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="count(../../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpMaxCto &gt;= (node:current() + 2)]) = 0" 
                          true="There must be at least one connection with an XcpMaxCto larger or equal than (XcpSubCommandLength + 2)"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpMaxCto &lt; (node:current() + 2)]) &gt; 0" 
                          true="There is at least one connection with an XcpMaxCto smaller than (XcpSubCommandLength + 2). On such connections it is not possible to execute this user-defined command."/>
                  </v:var>
                  <v:var name="XcpSubCommandResponseLength" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Represents the number of bytes to be received by the master within
                            the command. It does not include the number of bytes reserved for a positive response.
                            It only consists of the number of data bytes to be sent from slave to the master as response.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="Xcp User Defined Commands"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="count(../../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpMaxCto &gt;= (node:current() + 1)]) = 0" 
                          true="There must be at least one connection with an XcpMaxCto larger or equal than (XcpSubCommandResponseLength + 1)"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="count(../../../XcpConfig/*[1]/XcpConnectionCfg/*[XcpMaxCto &lt; (node:current() + 1)]) &gt; 0" 
                          true="There is at least one connection with an XcpMaxCto smaller than (XcpSubCommandResponseLength + 1). On such connections it is not possible to execute this user-defined command."/>
                  </v:var>
                  <v:var name="XcpSubCommandCallout" type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                              &lt;p&gt;Specifies the name of a user-defined callout function
                              to be called by Xcp for a specific user command.&lt;/p&gt;
                              &lt;p&gt;The callout function must have the following prototype:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;FUNC (uint8, XCP_CODE) XXX_UserCallout(
                                            P2CONST( uint8, AUTOMATIC, XCP_APPL_DATA ) ParamPtr,
                                            uint8 Length,
                                            P2VAR( uint8, AUTOMATIC, XCP_APPL_DATA ) SubCmdResponse,
                                            uint8 RespLength
                                            )     &lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;The possible return value is: E_OK Function successful&lt;/p&gt;
                              &lt;p&gt;For any other value, the command is ignored.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="User Defined Sub-Command Callout"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="Xcp User Defined Commands"/>
                    <a:da name="INVALID" type="XPath" expr=". = &apos;&apos;" 
                          true="This parameter cannot be empty because the name is used as a function name."/>
                    <a:da name="WARNING" type="XPath" 
                          expr="text:match(node:value(.),&apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                          false="Make sure that the function name syntax is a valid &apos;C&apos; name."/>
                  </v:var>
                  <v:var name="XcpSubCommandSeedSupport" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Indicates the type of resource to be unlocked for executing
                            the sub-command.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="TAB" value="Xcp User Defined Commands"/>
                    <a:da name="DEFAULT" value="RESOURCE_UNLOCKED"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="(../../../XcpGeneral/XcpSeedAndKeyEnabled = &apos;true&apos;)"/>
                    <a:da name="RANGE">
                      <a:v>RESOURCE_PGM</a:v>
                      <a:v>RESOURCE_STIM</a:v>
                      <a:v>RESOURCE_DAQ</a:v>
                      <a:v>RESOURCE_CAL_PAG</a:v>
                      <a:v>RESOURCE_UNLOCKED</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:lst>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
