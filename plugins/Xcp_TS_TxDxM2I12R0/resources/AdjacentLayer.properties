### General properties and properties for ACG-6.3 and later --------------------

# AdjacentLayer.properties file of module Xcp.
#
# The background for designing property files can be found in
# http://wiki.elektrobit.com/index.php/Project:AutoCore_Module_Properties
#
# The module name corresponds to the name of attribute 'categoryType' in the plugin.xml of the
# adjacent module and must be identical to the PduRBswModules Container-short name.
#
# The properties in 'Module Type Dependent Data' must be provided in dependence on particles
# ForUpperLayer|ForLowerLayer, If|Tp ('If' for handling nonTP-PDUs, 'Tp' for handling
# TP-PDUs) and Rx/Tx. If it's not provided it’s considered as 'Unsupported'.
#
# 'Mandatory', 'Unsupported' and 'Optional' are considered as possible values with the
# following meaning:
# - Mandatory: module supports this API, API shall be used by adjacent layer module
# - Optional: module supports this API (depending on the configuration),
#   API can be used by adjacent layer module
# - Unsupported: module doesn't support this API, API shall not be used by adjacent layer module
# The XPath expressions to the references of the relevant PDUs or PDUIDs shall be restricted by
# conditions if possible.
#
# The properties for the 'API Names' are optional:
# - if no value is provided, default name is assigned (<Callee>_<Caller><ApiName>)
#   where <ApiName> is the name of the API with API type (e.g. IfRxindication, TpRxindication,...) and
# - those APIs provided by the adjacent layer module shall start with '<Callee>_'.
#
# The following lists all property names available.
#
# To design a suitable AdjacentLayer.properties file out of this template,
# the '<Modulename>' shall be replaced by the name of the module throughout the file.
# For those property names needed, the respective values shall be set if different to the default value.
# Property names not needed may be removed (e.g. for a Tp module like CanTp
# remove all unnecessary property names related to If).
# '<AdjacentLayerName>' shall be replaced by the name of the adjacent layer name if
# adjacent layer's API names shall be overruled.
# Store the template file as 'AdjacentLayer.properties' in the Xcp's resources folder.

# !!!
# This file was updated only for the Ethernet implementation. For CAN and FlexRay we are awaiting
# response whether we need to update this file or not.
# !!!

# ------------------------------------------
# ------------  General Data  --------------
# ------------------------------------------

# Name of module configuration (i.e name which can be used with as:modconf('<ModuleConfigName>'))
Xcp.AdjacentLayerConfig.ModuleConfigName:Xcp

# Supported AUTOSAR Handle ID Version (allowed values: AUTOSAR32, AUTOSAR40)
Xcp.AdjacentLayerConfig.HandleIDPolicyVersion:AUTOSAR40

# Name of include file(s)
# Multiple header files are separated by comma.
# If no header file is provided no property value shall be configured.
Xcp.AdjacentLayerConfig.IncludeFileNames.V1.If.ForLowerLayer:Xcp_Cbk.h

# Information which services (If/Tp) a module (optionally) provides for an upper or lower layer.
# (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
Xcp.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForLowerLayer:Optional

# List of modules which are possible as upper or lower layer modules
# (comma separated list or use empty property if module has a generic layer support)
# List is only valid if respective LayerServiceSupport exists.
Xcp.AdjacentLayerConfig.LayerSupportList.V1.ForLowerLayer:SoAd

# --------------------------------------------
# -------  Module Type Dependent Data  -------
# --------------------------------------------

# Information on whether a module (optionally) provides a given API feature to its adjacent layer modules.
# (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
Xcp.AdjacentLayerConfig.ProvidedApiFeature.V1.ForLowerLayer.IfRxIndication:Optional
Xcp.AdjacentLayerConfig.ProvidedApiFeature.V1.ForLowerLayer.IfTxConfirmation:Optional
Xcp.AdjacentLayerConfig.ProvidedApiFeature.V1.ForLowerLayer.SoConModeChg:Optional

# Information on whether a module (optionally) requires a given API feature from its adjacent layer modules.
# (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
Xcp.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.IfTransmit:Optional


# ------- Data to referenced global Rx I-PDUs (ForLowerLayer, If-module) -------
# XPath-expression to all references of the relevant Rx I-PDUs
Xcp.AdjacentLayerConfig.AbsXPathPduRef.V1.ForLowerLayer.If.Rx:as:modconf('Xcp')[1]/XcpConfig/*[1]/XcpPdu/*[@name='XcpRxPdu']/XcpRxPduRef

# relative XPath-expression to associated PduId of above referenced Rx I-PDU
Xcp.AdjacentLayerConfig.RelXPathPduId.V1.ForLowerLayer.If.Rx:../XcpRxPduId


# ------- Data to referenced global Tx I-PDUs (ForLowerLayer, If-module) -------
# XPath-expression to all references of the relevant Tx I-PDUs
Xcp.AdjacentLayerConfig.AbsXPathPduRef.V1.ForLowerLayer.If.Tx:as:modconf('Xcp')[1]/XcpConfig/*[1]/XcpPdu/*[@name='XcpTxPdu']/XcpTxPduRef

# relative XPath-expression to associated PduId of above referenced Tx I-PDU
Xcp.AdjacentLayerConfig.RelXPathPduId.V1.ForLowerLayer.If.Tx:../XcpTxPduId


# ------------------------------------------
# ------------    API Names   --------------
# ------------------------------------------

Xcp.AdjacentLayerConfig.ApiName.V1.IfRxIndication:Xcp_SoAdIfRxIndication
Xcp.AdjacentLayerConfig.ApiName.V1.IfTxConfirmation:Xcp_SoAdIfTxConfirmation
Xcp.AdjacentLayerConfig.ApiName.V1.SoConModeChg:Xcp_SoAdSoConModeChg
Xcp.AdjacentLayerConfig.ApiName.V1.LocalIpAddrAssignmentChg:NULL_PTR
