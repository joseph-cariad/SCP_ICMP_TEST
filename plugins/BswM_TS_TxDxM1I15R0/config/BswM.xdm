<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM1I15R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="BswM" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC" 
                   value="Configuration of the BswM (Basic SW Mode Manager) module."/>
              <a:a name="LOWER-MULTIPLICITY" value="0"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="ECUC:98c4844c-a16a-4b8b-9928-d9846dcb2d25"/>
              <a:da name="INVALID" type="XPath" 
                    expr="asc_bswm:isPartitionRefConfiguredOk(.) = &apos;false&apos;" 
                    true="If there are multiple BswM configurations, the BswMPartitionRef parameter needs to be configured for all of them."/>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                        Specifies the variant of the BswM used in the current project.
                        If EcuM module from EB is used it is mandatory to have the
                        PbcfgM module present in the project too.
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="EDITABLE" value="true"/>
                <a:da name="RANGE">
                  <a:v>VariantPreCompile</a:v>
                  <a:v>VariantPostBuild</a:v>
                </a:da>
              </v:var>
              <v:var name="POST_BUILD_VARIANT_USED" type="BOOLEAN">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                        This parameter can be used to bypass the postbuild selectable variant awareness of BswM.
                        If set to FALSE, BswM will not be variant aware (default behaviour).
                        If set to TRUE, BswM will be variant aware and will produce variant dependent artifacts
                        (ie. different .xgen and PBcfg files for each variant).
                        This parameter is useful for the situations where postbuild selectable variants exist in
                        the project but the BswM doesn&apos;t have any variant specific configuration.
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                </a:a>
                <a:a name="LABEL" value="Post Build Variant Used"/>
                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                <a:da name="DEFAULT" value="false"/>
                <a:da name="INVALID" type="Multi">
                  <mt:xpath>
                    <mt:tst 
                            true="There are no postbuild selectable variants defined!" 
                            expr=". = &apos;true&apos; and variant:size() = 0"/>
                    <mt:tst 
                            true="POST_BUILD_VARIANT_USED can only be set to true if IMPLEMENTATION_CONFIG_VARIANT is set to VariantPostBuild." 
                            expr=". = &apos;true&apos; and ../IMPLEMENTATION_CONFIG_VARIANT = &apos;VariantPreCompile&apos;"/>
                  </mt:xpath>
                </a:da>
              </v:var>
              <v:lst name="BswMConfig" type="MAP">
                <a:a name="LABEL" value="Configuration"/>
                <a:da name="INVALID" type="XPath" 
                      expr="count(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*[count(BswMModeControl/BswMAction/*[BswMAvailableActions = &apos;BswMDeadlineMonitoringControl&apos; or BswMAvailableActions = &apos;BswMPduGroupSwitch&apos;]) &gt; 0]) &gt; 1" 
                      true="Only a single BswM instance is allowed to contain BswMPduGroupSwitch and BswMDeadlineMonitoringControl actions."/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="BswMConfig" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        This container contains the configuration parameters
                        and sub containers of the AUTOSAR BswM module.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" 
                       value="ECUC:80f40234-216b-48cd-a96c-4eeab986d79c"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="not(node:exists(./BswMPartitionRef)) and node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) &gt; 1" 
                        true="On a multi-core ECU (where Os/OsOS/OsNumberOfCores is set to a value larger than 1) it is mandatory to configure the BswMPartitionRef parameter."/>
                  <v:ref name="BswMPartitionRef" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          This references the partition the BswM shall run inside.
                          On a single-core ECU it is not required to configure this parameter.
                          In case of a multi-core ECU it is mandatory to configure this parameter
                          even if there is only one BswM instance.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      <icc:v class="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="ECUC:ccb58836-3b8d-11e5-a151-feff819cdc9f"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="(node:refvalid(.))" 
                          false="A valid OsApplication container must be referenced."/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                  </v:ref>
                  <v:ctr name="BswMArbitration" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;This container includes all configuration sub-
                          containers and parameters related to the mode
                          arbitration functionality of the BswM.&lt;/p&gt;
                          &lt;p&gt;The arbitration functionality detects changes in the request- and
                          indication-states of available sources and computes if, and if yes
                          which actions the BswM shall perform as reaction.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="ECUC:1bb152a0-b36c-460c-bada-c3347399266e"/>
                    <v:lst name="BswMLogicalExpression" type="MAP">
                      <a:da name="INVALID" type="Multi">
                        <mt:xpath>
                          <mt:tst true="Loop detected in logical expressions!" 
                                  expr="asc_bswm:isLoopLogicalExpressions(.) = &apos;true&apos;"/>
                          <mt:tst 
                                  true="A mode condition which references a Mode Request Port of type BswMDcmApplicationUpdatedIndication,  BswMWdgMRequestPartitionReset or BswMNmIfCarWakeUpIndication was used together with another mode condition, via nested logical expressions." 
                                  expr="asc_bswm:isEventConditionUsedInComplexExpression(.) = &apos;true&apos;"/>
                        </mt:xpath>
                      </a:da>
                      <v:ctr name="BswMLogicalExpression" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This container describes the logical expressions
                              that can be used for the mode arbitration.&lt;/p&gt;
                              &lt;p&gt;The logical expressions are built of a set of
                              arguments and a logical operator.&lt;/p&gt;
                              &lt;p&gt;Each argument can either be a mode condition or a
                              sub-expression to allow definition of more complex
                              logical expressions.&lt;/p&gt;
                              &lt;p&gt;The AND and OR operator accept an unlimited number of
                              arguments; NAND and XOR are not associative, so only two
                              argument are allowed.&lt;/p&gt;
                              &lt;p&gt;Note that the order of evaluation of the expressions
                              is not defined.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:24badaf3-6672-43f0-b3b0-3343c67796e6"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="count(BswMArgumentRef/*[node:value(.) = concat(&apos;ASPath:&apos;,as:path(node:current()))]) &gt; 0" 
                                 true="A logical expression must not reference itself as an argument."/>
                          <a:tst 
                                 expr="node:exists(./BswMLogicalOperator) and count(./BswMArgumentRef/*) &lt; 2" 
                                 true="If an expression operator is defined, more than one argument must be configured."/>
                        </a:da>
                        <v:var name="BswMLogicalOperator" type="ENUMERATION">
                          <a:a name="DESC" 
                               value="This parameter specifies the logical operator to be used in the logical expression. If the expression only consists of a single condition this parameter shall not be used."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:71652a7c-9360-42b3-9432-2cd58bfe7949"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="RANGE">
                            <a:v>BSWM_AND</a:v>
                            <a:v>BSWM_NAND</a:v>
                            <a:v>BSWM_OR</a:v>
                            <a:v>BSWM_XOR</a:v>
                          </a:da>
                        </v:var>
                        <v:lst name="BswMArgumentRef">
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(count(*) &gt; 1) and not(node:exists(../BswMLogicalOperator))" 
                                   true="If no BswMLogicalOperator is defined, only one ArgumentRef is allowed."/>
                            <a:tst 
                                   expr="(count(*) &gt; 2) and node:exists(../BswMLogicalOperator) and ((../BswMLogicalOperator = &apos;BSWM_NAND&apos;) or (../BswMLogicalOperator = &apos;BSWM_XOR&apos;))" 
                                   true="The operators NAND and XOR are not associative, so only two ArgumentRefs are allowed to be referenced by them since the order of evaluation is not defined."/>
                          </a:da>
                          <a:da name="MIN" value="1"/>
                          <v:ref name="BswMArgumentRef" type="CHOICE-REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a choice reference either to a
                                  mode condition or a sub-expression.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              <icc:v class="Link">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:509833cd-a9df-4ffb-ba49-a4fea4761bf3"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:xpath>
                                <mt:tst 
                                        false="The expression argument reference is not valid." 
                                        expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                                <mt:tst 
                                        true="Referencing artifacts from other BswM configurations is not allowed!" 
                                        expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                                <mt:tst 
                                        true="A logical expression can reference only one mode condition whose BswMConditionMode references a mode request port of type BswMDcmApplicationUpdatedIndication, BswMWdgMRequestPartitionReset or BswMNmIfCarWakeUpIndication." 
                                        expr="(node:refvalid(.)) and ((node:name(as:ref(.)/..) = &apos;BswMModeCondition&apos;) and node:refvalid(node:ref(.)/BswMConditionMode) and ((node:ref(node:ref(.)/BswMConditionMode)/BswMModeRequestSource = &apos;BswMDcmApplicationUpdatedIndication&apos;) or (node:ref(node:ref(.)/BswMConditionMode)/BswMModeRequestSource = &apos;BswMWdgMRequestPartitionReset&apos;) or (node:ref(node:ref(.)/BswMConditionMode)/BswMModeRequestSource = &apos;BswMNmIfCarWakeUpIndication&apos;)) and (count(../*) &gt; 1))"/>
                              </mt:xpath>
                            </a:da>
                            <a:da name="RANGE" type="XPath">
                              <a:tst 
                                     expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMArbitration/BswMModeCondition/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                              <a:tst 
                                     expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMArbitration/BswMLogicalExpression/*[(asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())) and (node:name(.) != node:name(node:current()/../..))])"/>
                            </a:da>
                            <a:da name="REF">
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMLogicalExpression</a:v>
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMModeCondition</a:v>
                            </a:da>
                          </v:ref>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="BswMModeCondition" type="MAP">
                      <v:ctr name="BswMModeCondition" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                  &lt;p&gt;This container describes the BswM mode
                                  conditions that can be used either by
                                  itself to form a rule or as a part
                                  of a logical expression.&lt;/p&gt;
                                  &lt;p&gt;A mode condition compares a mode request
                                  port state with some predefined value and
                                  results in a boolean value.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:55038f0f-7e6c-49bf-a155-df75c068efe5"/>
                        <v:var name="BswMConditionType" type="ENUMERATION">
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:4f137728-854d-4d76-aa9c-311449567f09"/>
                          <a:da name="RANGE" type="XPath" 
                                expr="asc_bswm:getConditionTypeRange(../BswMConditionMode)"/>
                        </v:var>
                        <v:ref name="BswMConditionMode" type="CHOICE-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                This parameter references the mode
                                request port that is used for the condition.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      false="A valid BswMModeRequestPort or BswMEventRequestPort must be referenced." 
                                      expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                              <mt:tst 
                                      true="Referencing artifacts from other BswM configurations is not allowed!" 
                                      expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                            </mt:xpath>
                          </a:da>
                          <a:da name="RANGE" type="XPath" 
                                expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMArbitration/*[node:name(.) = &apos;BswMEventRequestPort&apos; or node:name(.) = &apos;BswMModeRequestPort&apos;]/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                          <a:da name="REF">
                            <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMModeRequestPort</a:v>
                            <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMEventRequestPort</a:v>
                          </a:da>
                        </v:ref>
                        <v:chc name="BswMConditionValue" type="IDENTIFIABLE">
                          <a:a name="DESC" 
                               value="This container holds the parameters and references necessary to identify the mode type and the value that the mode request is compared to."/>
                          <a:a name="UUID" 
                               value="ECUC:6dfef60d-1d6f-4b42-a4ae-f32d9a3df94f"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="node:refvalid(../BswMConditionMode) and (not(node:exists(node:ref(../BswMConditionMode)/BswMEventRequestSource)) and ((node:ref(../BswMConditionMode)/BswMModeRequestSource != &apos;BswMDcmApplicationUpdatedIndication&apos;) and (node:ref(../BswMConditionMode)/BswMModeRequestSource != &apos;BswMWdgMRequestPartitionReset&apos;) and (node:ref(../BswMConditionMode)/BswMModeRequestSource != &apos;BswMNmIfCarWakeUpIndication&apos;)))"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      true="For BswMTimer ports only BswMBswMode can be used to configure the condition value." 
                                      expr="node:refvalid(../BswMConditionMode) and node:ref(../BswMConditionMode)/BswMModeRequestSource = &apos;BswMTimer&apos; and . != &apos;BswMBswMode&apos;"/>
                              <mt:tst 
                                      true="For BswMJ1939DcmBroadcastStatus ports only BswMBswMode can be used to configure the condition value." 
                                      expr="node:refvalid(../BswMConditionMode) and node:ref(../BswMConditionMode)/BswMModeRequestSource = &apos;BswMJ1939DcmBroadcastStatus&apos; and .!=&apos;BswMBswMode&apos;"/>
                            </mt:xpath>
                          </a:da>
                          <v:ctr name="BswMBswMode" type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This container defines the value and type of a mode in the BSW."/>
                            <a:a name="UUID" 
                                 value="ECUC:a9aa03c3-81c2-4949-b63a-a84a134a3291"/>
                            <v:var name="BswMBswRequestedMode" type="STRING">
                              <a:a name="DESC" 
                                   value="This parameter contains the symbolic name (as a string) of a certain mode/state that can be requested/indicated by the BSW modules."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:04a0b0ee-322c-48dc-a12d-2287e87e2e44"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          true="The only allowed condition modes for BswMTimer ports are BSWM_TIMER_STOPPED, BSWM_TIMER_STARTED or BSWM_TIMER_EXPIRED." 
                                          expr="node:refvalid(../../BswMConditionMode) and node:ref(../../BswMConditionMode)/BswMModeRequestSource = &apos;BswMTimer&apos; and not(.=&apos;BSWM_TIMER_STOPPED&apos; or .=&apos;BSWM_TIMER_STARTED&apos; or .=&apos;BSWM_TIMER_EXPIRED&apos;)"/>
                                  <mt:tst 
                                          true="Mode conditions referencing BswMJ1939DcmBroadcastStatus ports shall only accept 0 or 1 for parameter BswMBswRequestedMode." 
                                          expr="node:refvalid(../../BswMConditionMode) and node:ref(../../BswMConditionMode)/BswMModeRequestSource = &apos;BswMJ1939DcmBroadcastStatus&apos; and .!=&apos;0&apos; and .!=&apos;1&apos;"/>
                                </mt:xpath>
                              </a:da>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMCompuScaleModeValue" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: This container contains parameters used to define a mode value."/>
                            <a:a name="UUID" 
                                 value="2dc3db6c-76ad-4c84-94e3-978a151caf44"/>
                            <v:var name="BswMCompuConstText" type="STRING">
                              <a:a name="DESC" 
                                   value="EN: The value of this parameter shall match the VT member of a CompuConst defined within the referenced CompuMethod (BswMCompuMethodRef). The interval value of the corresponding CompuScale shall be used as the mode request value."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="2bd87080-a0be-4b28-9acb-c7de347f90c8"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst true="This value cannot be empty." 
                                          expr="node:value(.)=&apos;&apos;"/>
                                  <mt:tst true="Invalid value." 
                                          expr="node:value(.)!=&apos;&apos; and not(node:refvalid(../BswMCompuMethodRef))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="asc_bswm:getCompuMethodsVT(../BswMCompuMethodRef)"/>
                            </v:var>
                            <v:ref name="BswMCompuMethodRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a foreign reference to the CompuMethod used for mode requests. The CompuMethod category shall be TEXTTABLE."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="UUID" 
                                   value="1d1b0831-81da-450a-b63c-1d716fa20da9"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid CompuMethod must be referenced."/>
                              <a:da name="REF" value="ASTyped:CompuMethod"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMModeDeclaration" type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="When the mode corresponds to a mode request or mode indication interface the mode is defined by a mode declaration. The mode declarations are defined in the SW-C Template and hence a foreign reference to the corresponding Mode Declaration is used."/>
                            <a:a name="UUID" 
                                 value="ECUC:2ed5817c-df9e-47bd-a384-c5c818caf935"/>
                            <v:ref name="BswMModeValueRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC" 
                                   value="This is a foreign reference to the Mode Declaration used for the mode requests corresponding to this condition."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:16d03c04-047d-4b09-b573-5986fdeff4ed"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(node:refvalid(.))" 
                                    false="A valid Mode Declaration must be referenced."/>
                              <a:da name="REF" value="ASTyped:ModeDeclaration"/>
                            </v:ref>
                          </v:ctr>
                        </v:chc>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="BswMEventRequestPort" type="MAP">
                      <a:da name="INVALID" type="XPath" 
                            expr="(count(./*[BswMEventRequestProcessing = &apos;BSWM_DEFERRED&apos;]) = 0) or node:exists(../../../../BswMGeneral/BswMMainFunctionPeriod)" 
                            false="BswMGeneral/BswMMainFunctionPeriod needs to be enabled as BswMEventRequestPort with deferred processing are configured."/>
                      <v:ctr name="BswMEventRequestPort" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              Each instance of this container defines an event which can be sent to the
                              BswM. Basic Software Modules may send these events to the BswM by calling
                              the corresponding BswM C-API (for example: BswM_ComM_InitiateReset()).
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <v:var name="BswMEventRequestProcessing" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                This parameter defines if the processing of the mode arbitration shall be done
                                immediately when an event request is received or if it shall be deferred to the
                                processing of the main function of BswM.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:da name="RANGE">
                            <a:v>BSWM_DEFERRED</a:v>
                            <a:v>BSWM_IMMEDIATE</a:v>
                          </a:da>
                        </v:var>
                        <v:chc name="BswMEventRequestSource" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                This choice container specifies the source of the event request. The sender of the event
                                can be another BSW Module, such as ComM.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <v:ctr name="BswMComMInitiateReset" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication from the ComM to signal a shutdown.
                                &lt;/html&gt;</a:v>
                            </a:a>
                          </v:ctr>
                        </v:chc>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="BswMModeRequestPort" type="MAP">
                      <a:da name="INVALID" type="XPath" 
                            expr="(count(./*[BswMRequestProcessing = &apos;BSWM_DEFERRED&apos;]) = 0) or node:exists(../../../../BswMGeneral/BswMMainFunctionPeriod)" 
                            false="BswMGeneral/BswMMainFunctionPeriod needs to be enabled as BswMModeRequestPorts with deferred processing are configured."/>
                      <v:ctr name="BswMModeRequestPort" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Each instance of this container defines a mode
                              request interface that is used to requests
                              or indicate modes from/to the BswM.&lt;/p&gt;
                              &lt;p&gt;These interfaces are implemented as ports or as
                              ordinary C-functions based upon if the request
                              is made by an SW-C or a BSW module.&lt;/p&gt;
                              &lt;em&gt;There are different types of mode requests:&lt;/em&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Mode requests from the SW-C:s&lt;/li&gt;
                                &lt;li&gt;Mode Requests from other BSW modules such as
                                the DCM.&lt;/li&gt;
                                &lt;li&gt;State/mode indications from the RTE or other BSW modules
                                such as the bus specific State Managers&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;em&gt;Note : BswM treats all request and indications
                              in the exact same way.&lt;/em&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:46239dbf-b616-4d8e-be72-4e2f06f0c7df"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath>
                            <mt:tst 
                                    true="If BswMLegacyDcmEnabled is set to FALSE mode request ports of type BswMDcmComModeRequest, BswMDcmResetModeRequest or BswMDcmSessionModeRequest cannot be used." 
                                    expr="(../../../../BswMGeneral/BswMLegacyDcmEnabled = &apos;false&apos;) and ((BswMModeRequestSource = &apos;BswMDcmComModeRequest&apos;) or (BswMModeRequestSource = &apos;BswMDcmResetModeRequest&apos;) or (BswMModeRequestSource = &apos;BswMDcmSessionModeRequest&apos;))"/>
                            <mt:tst 
                                    true="If BswMTimer ports are used the BswMMainFunctionPeriod parameter must be enabled!" 
                                    expr="BswMModeRequestSource = &apos;BswMTimer&apos; and not(node:exists(../../../../../BswMGeneral/BswMMainFunctionPeriod))"/>
                          </mt:xpath>
                        </a:da>
                        <a:da name="WARNING" type="XPath" 
                              expr="BswMModeRequestSource = &apos;BswMTimer&apos; and count(../../../BswMModeControl/BswMAction/*[BswMAvailableActions=&apos;BswMTimerControl&apos;]/BswMAvailableActions[node:refvalid(BswMTimerRef) and node:path(node:current()) = node:path(node:ref(BswMTimerRef))]) = 0" 
                              true="Timer not referenced by any BswMTimerControl action, configuration seems to be incomplete."/>
                        <v:var name="BswMRequestProcessing" type="ENUMERATION">
                          <a:a name="DESC" 
                               value="This parameter defines if the processing of the mode arbitration shall be done immediately when a mode request is received or if it shall be deferred to the processing of the main function of BswM."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:a853591d-e671-4863-aa10-0082efe4dda1"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(. = &apos;BSWM_DEFERRED&apos;) and ((../BswMModeRequestSource = &apos;BswMDcmApplicationUpdatedIndication&apos;) or (../BswMModeRequestSource = &apos;BswMWdgMRequestPartitionReset&apos;) or (../BswMModeRequestSource = &apos;BswMNmIfCarWakeUpIndication&apos;))" 
                                true="If the BswMModeRequestSource is BswMDcmApplicationUpdatedIndication, BswMWdgMRequestPartitionReset or BswMNmIfCarWakeUpIndication, the BswMRequestProcessing cannot be BSWM_DEFERRED."/>
                          <a:da name="RANGE">
                            <a:v>BSWM_DEFERRED</a:v>
                            <a:v>BSWM_IMMEDIATE</a:v>
                          </a:da>
                        </v:var>
                        <v:chc name="BswMModeInitValue" type="IDENTIFIABLE">
                          <a:a name="DESC" 
                               value="This container defines the initial mode value that is used by BswM for the corresponding mode request after initialization. This container is optional and shall only be used for Mode Requests that do not already have an initial value."/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:a780195c-9698-494b-810e-d6f1b56cef30"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      true="BswMTimer mode request ports have an implicit initial value of BSWM_TIMER_STOPPED which cannot be overridden." 
                                      expr="../BswMModeRequestSource = &apos;BswMTimer&apos;"/>
                              <mt:tst 
                                      true="If the BswMModeRequestSource is BswMDcmApplicationUpdatedIndication, BswMWdgMRequestPartitionReset or BswMNmIfCarWakeUpIndication, the BswMModeInitValue cannot be enabled." 
                                      expr="(../BswMModeRequestSource = &apos;BswMDcmApplicationUpdatedIndication&apos;) or (../BswMModeRequestSource = &apos;BswMWdgMRequestPartitionReset&apos;) or (../BswMModeRequestSource = &apos;BswMNmIfCarWakeUpIndication&apos;)"/>
                              <mt:tst 
                                      true="Only BswMBswModeInitValue can be used to configure initial values in case of BswMJ1939DcmBroadcastStatus mode request ports." 
                                      expr="(.!=&apos;BswMBswModeInitValue&apos;) and (../BswMModeRequestSource = &apos;BswMJ1939DcmBroadcastStatus&apos;)"/>
                            </mt:xpath>
                          </a:da>
                          <v:ctr name="BswMBswModeInitValue" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This is the choice for a initial mode value used for the initialization of mode requests in case the request is made by a BSW module."/>
                            <a:a name="UUID" 
                                 value="ECUC:6b72e37c-506c-4dee-91b5-84f3dfabcf3b"/>
                            <v:var name="BswMBswModeInitValueMode" 
                                   type="STRING">
                              <a:a name="DESC" 
                                   value="This parameter defines the initial mode value that is used by BswM for the corresponding mode request after initialization."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:ce82e9c7-09eb-4a12-8e46-aaa2333a3fb7"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          true="In case of Postbuild Binary generation, the BswMBswModeInitValueMode can only be a numerical value." 
                                          expr="as:modconf(&apos;BswM&apos;)[1]/BswMGeneral/BswMBinaryGenerationVerified = &apos;true&apos; and as:modconf(&apos;BswM&apos;)[1]/IMPLEMENTATION_CONFIG_VARIANT = &apos;VariantPostBuild&apos; and not(num:isnumber(.))"/>
                                  <mt:tst 
                                          true="Empty strings are not allowed as initial values. Disable the BswMBswModeInitValue container in order to specify that this port doesn&apos;t have an initial value." 
                                          expr=". =&apos;&apos;"/>
                                  <mt:tst 
                                          true="BswMJ1939DcmBroadcastStatus mode request ports can only have an initial value of 0 or 1." 
                                          expr="(../../BswMModeRequestSource = &apos;BswMJ1939DcmBroadcastStatus&apos;) and ((.!=&apos;0&apos;) and (.!=&apos;1&apos;))"/>
                                </mt:xpath>
                              </a:da>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMCompuScaleModeValue" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: This container contains parameters used to define a mode value."/>
                            <a:a name="UUID" 
                                 value="c8e20358-4467-416c-a860-46cad5782d35"/>
                            <v:var name="BswMCompuConstText" type="STRING">
                              <a:a name="DESC" 
                                   value="EN: The value of this parameter shall match the VT member of a CompuConst defined within the referenced CompuMethod (BswMCompuMethodRef). The interval value of the corresponding CompuScale shall be used as the mode request value."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="0341a5bc-b458-4b16-8c0a-194576f9148b"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst true="This value cannot be empty." 
                                          expr="node:value(.)=&apos;&apos;"/>
                                  <mt:tst true="Invalid value." 
                                          expr="node:value(.)!=&apos;&apos; and not(node:refvalid(../BswMCompuMethodRef))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="asc_bswm:getCompuMethodsVT(../BswMCompuMethodRef)"/>
                            </v:var>
                            <v:ref name="BswMCompuMethodRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a foreign reference to the CompuMethod used for mode requests. The CompuMethod category shall be TEXTTABLE."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="UUID" 
                                   value="a4eba0f1-3d4f-4b9e-a6b3-a5f84435164d"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid CompuMethod must be referenced."/>
                              <a:da name="REF" value="ASTyped:CompuMethod"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSwcModeInitValue" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This is the choice for a foreign reference to the Mode Declaration used for the initialization of mode requests in case the request is made by a SW-C."/>
                            <a:a name="UUID" 
                                 value="ECUC:9100ba60-b7ab-4c63-9121-f9c057463ebf"/>
                            <v:ref name="BswMSwcModeInitValueRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC" 
                                   value="This is a foreign reference to the Mode Declaration used for the initialization of mode requests."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:087f03c1-56f6-4fdf-bba4-1050c4d08f8a"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(node:refvalid(.))" 
                                    false="A valid Mode Declaration must be referenced."/>
                              <a:da name="REF" value="ASTyped:ModeDeclaration"/>
                            </v:ref>
                          </v:ctr>
                        </v:chc>
                        <v:chc name="BswMModeRequestSource" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;This choice container specifies the source of the
                                mode request or state/mode indication.&lt;/p&gt;
                                &lt;p&gt;The requester of a mode can be both SW-C:s and
                                other BSW Modules, such as the bus specific
                                State Managers.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="ECUC:dd5d5587-bfd1-4960-a654-bcbc222aca93"/>
                          <v:ctr name="BswMBswModeNotification" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="The source of the mode request is a Bsw Module."/>
                            <a:a name="UUID" 
                                 value="ECUC:a9fda01e-f3ad-46c3-affd-8a4e594a80e0"/>
                            <v:ref 
                                   name="BswMBswModeDeclarationGroupPrototypeRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC" 
                                   value="This is a foreign reference to the Mode Declaration Group Prototype."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:d1c204e5-6c8a-45e9-a191-7cc780db6f12"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid Mode Declaration Group Prototype must be referenced." 
                                          expr="node:refvalid(.)"/>
                                  <mt:tst 
                                          true="There is no DataTypeMappingSet referencing this Mode Group." 
                                          expr="node:refvalid(.) and asc_bswm:modeGroupInDataTypeMapping(.)=&apos;false&apos;"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASTyped:ModeDeclarationGroupPrototype"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMCanSMIndication" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication of the current state of
                                  the CAN State Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:60c83276-d2ab-4077-9e33-d59f361ac518"/>
                            <v:ref name="BswMCanSMChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the CanSM channel handle
                                    that the mode request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:45faeefb-4d0e-4a75-bac3-3fe76ff15822"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMComMIndication" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication of the current communication
                                  mode of a channel in the Communication Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:873fd64c-17e3-44f6-84a5-b045a48b8dc0"/>
                            <v:ref name="BswMComMChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the Communication Manager
                                    channel handle that the indication corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:4ad44a4c-b49e-4bff-99ef-aa813a13ee6e"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMComMPncRequest" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a request of the current communication mode of a
                                  Partial Network Cluster in the Communication Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:48cb0816-8ced-4ad5-a493-2a63540eae85"/>
                            <v:ref name="BswMComMPncRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the Communication Manager PNC
                                    handle of the Partial Network Cluster that the request
                                    corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:7b2f53bf-0115-4dc2-bd73-2ad6a4eac383"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(node:refvalid(.))" 
                                    false="A valid ComM PNC handle must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMPnc"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMDcmApplicationUpdatedIndication" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;This is a request to update application data from the DCM.&lt;/p&gt;
                                &lt;p&gt;This container does not contain any parameters since there
                                are no further configuration needed for this type of request.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:ccb455cd-746c-48e3-a406-201cc4294c40"/>
                          </v:ctr>
                          <v:ctr name="BswMDcmComModeCurrentState" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  The source of the mode request is the Diagnostic
                                  Communication Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:f00a68aa-b64e-4d58-b694-f815644860a2"/>
                            <v:ref name="BswMDcmComMChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the Communication Manager
                                    channel handle that the indication corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:4ad44a4c-b49e-4bff-99ef-aa813a13ee6e"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMDcmComModeRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  The source of the mode request is the Diagnostic
                                  Communication Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="077f76e5-caed-432d-a114-a23066ce5e1c"/>
                            <v:ref name="BswMDcmComMChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the Communication Manager
                                    channel handle that the indication corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:4ad44a4c-b49e-4bff-99ef-aa813a13ee6e"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                            <v:var name="BswMDcmComMNetwork" type="STRING">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This configuration parameter is not used.  The
                                    reference to the ComM channel shall be defined
                                    within the parameter BswMDcmComMChannelRef.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="6ef50113-f2d9-41d2-9cf2-abf37a265969"/>
                              <a:da name="EDITABLE" value="false"/>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMDcmResetModeRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;This is a reset mode request from the DCM.&lt;/p&gt;
                                    &lt;p&gt;This container does not contain any parameters
                                    since there are no further configuration needed
                                    for this type of request.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="6187c9f3-9427-452e-9f05-f332086755ba"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="count(../../*[BswMModeRequestSource = &apos;BswMDcmResetModeRequest&apos;]) &gt; 1" 
                                  true="There must be only one ModeRequestPort with BswMModeRequestSource BswMDcmResetModeRequest configured."/>
                          </v:ctr>
                          <v:ctr name="BswMDcmSessionModeRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;This is a session mode request from the DCM.&lt;/p&gt;
                                  &lt;p&gt;This container does not contain any parameters
                                  since there are no further configuration needed
                                  for this type of request.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="baf7144a-0ce2-4451-92e0-6ddee212fe6b"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="count(../../*[BswMModeRequestSource = &apos;BswMDcmSessionModeRequest&apos;]) &gt; 1" 
                                  true="There must be only one ModeRequestPort with BswMModeRequestSource BswMDcmSessionModeRequest configured."/>
                          </v:ctr>
                          <v:ctr name="BswMEcuMIndication" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;This is a notification of the current operation
                                  mode of the ECU State Manager.&lt;/p&gt;
                                  &lt;p&gt;This container does not contain any parameters
                                  since there are no further configuration needed
                                  for this type of request.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:90275834-804e-460b-9d2b-0a066e5130ef"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="count(../../*[BswMModeRequestSource = &apos;BswMEcuMIndication&apos;]) &gt; 1" 
                                  true="There must be only one ModeRequestPort with BswMModeRequestSource BswMEcuMIndication configured."/>
                          </v:ctr>
                          <v:ctr name="BswMEcuMWakeupSource" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a notification of the current state
                                  of an ECU State Manager wakeup source.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:fedcd4b6-8179-4135-b1eb-0d4ed3702d3a"/>
                            <v:ref name="BswMEcuMWakeupSrcRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the ECU State Manager
                                    Wakeup Source that the indication corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:c11bd4c1-5ed5-4ed5-8d1d-4d1370aeef89"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid EcuM wakeup source must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMWakeupSource"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMEthIfPortGroupLinkStateChg" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication from the EthIf if the link state of a Ethernet interface
                                  switch port group has changed.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:ref name="BswMEthIfSwitchPortGroupRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the Ethernet Interface Switch Port Group that the
                                    indication corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid EthIf Switch Port Group must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EthIf/EthIfConfigSet/EthIfSwitchPortGroup"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMEthSMIndication" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication of the current state
                                  of the Ethernet State Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:c7a1a655-ad99-4506-8f61-328c655fc837"/>
                            <v:ref name="BswMEthSMChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the ComM channel respectively the
                                    EthSM channel that the mode request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:1276bcab-5dc0-4704-b50b-7b714bdcbf4a"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMFrSMIndication" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication of the current state
                                  of the FlexRay State Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:bacadd7e-ce13-40d0-bd5e-2a656b772fbd"/>
                            <v:ref name="BswMFrSMChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="This is a reference to the  FlexRay Cluster handle that the mode request corresponds to."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:58be722e-6d43-4ed1-b1f0-441da75ea1cc"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMGenericRequest" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This mode request originates from a requester that
                                  is not among the list of standardized mode requesters
                                  (i.e. the different resource managers).
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:92e6a2bd-21cc-446c-abf1-172371d7a891"/>
                            <v:var name="BswMModeRequesterId" type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameters identifies the different users
                                    of the generic mode request interface.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:418ab994-a918-4944-ad81-e4720ddd8b56"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=65535"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath 
                                          false="The BswMModeRequesterIds within a BswM configuration must be unique." 
                                          expr="text:uniq(../../../*[BswMModeRequestSource=&apos;BswMGenericRequest&apos;]/BswMModeRequestSource/BswMModeRequesterId, .)"/>
                              </a:da>
                            </v:var>
                            <v:var name="BswMRequestedModeMax" type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter is not used in the current BswM implementation.
                                    The upper limit for the requested modes is 65535.
                                    The BswM_ModeType is statically defined as uint16.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:5a53cdcf-97de-4ac2-9526-ecc1e037bad0"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="READONLY" value="true"/>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMJ1939DcmBroadcastStatus" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a notification of the desired broadcast status per network, triggered via DM13.
                                  Note that these ports can only have values 0 or 1 due to how the BswM_J1939DcmBroadcastStatus
                                  transmits information (via a single 16 bit parameter where each bit represent a ComM channel).
                                  This imposes further restrictions regarding mode conditions or initial values.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:ref name="BswMJ1939DcmChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Reference to the communication channel which is affected by this mode request.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid ComM channel must be referenced." 
                                          expr="node:refvalid(.)"/>
                                  <mt:tst 
                                          true="Only ComM channels with ComMChannelId less than 16 can be configured for BswMJ1939DcmBroadcastStatus ports." 
                                          expr="node:refvalid(.) and node:ref(.)/ComMChannelId &gt; 15"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMJ1939NmIndication" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication of the current state of the J1939 network management module.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:ref name="BswMJ1939NmChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the J1939Nm channel handle that the mode request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                            <v:ref name="BswMJ1939NmNodeRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the node that the mode request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid J1939NmNode must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmNode"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMLinScheduleIndication" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication of the currently active
                                  LIN Schedule Table for a specific LIN Interface.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:b605a404-6163-4591-8c3c-0832afb197ce"/>
                            <v:ref name="BswMLinScheduleRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the LIN Schedule Table
                                    handle that the mode request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:a377f06e-9872-4bba-9040-e413f8949261"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid LinSM schedule must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/LinSM/LinSMConfigSet/LinSMChannel/LinSMSchedule"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMLinSMIndication" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is an indication of the current state of
                                  the LIN State Manager.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:17fe2db3-4d90-462a-9e6b-d1ba8d923419"/>
                            <v:ref name="BswMLinSMChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the LIN channel handle that
                                    the mode request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:806494fe-5721-4700-9aff-afb9b96842f4"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMLinTpModeRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a LinTp mode request from the LinIf.
                                  This port corresponds to a call of the &lt;code&gt;BswM_LinTp_RequestMode&lt;/code&gt; API.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:34b88433-6423-4a7c-9d50-73e217a7730a"/>
                            <v:ref name="BswMLinTpChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the LIN Interface
                                    Channel that the mode request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:2d8c4b55-134e-4e91-8aa2-8990b56a74c3"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid LinIf channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/LinIf/LinIfGlobalConfig/LinIfChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMNmIfCarWakeUpIndication" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This is an indication of a CarWakeup from the NmIf."/>
                            <v:ref name="BswMNmChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the channel handle that the indication corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid reference to a ComMChannel must be provided."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMNvMJobModeIndication" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="Indicates the current status of the multiblock job. The job is identified via BswMNvmService, e.g. 0x0c for NvmReadAll, 0x0d for NvmWriteAll. Possible Values are:"/>
                            <a:a name="UUID" 
                                 value="ECUC:2452616b-0819-4fa3-9a20-28c9fd64b6fe"/>
                            <v:var name="BswMNvmService" type="ENUMERATION">
                              <a:a name="DESC" 
                                   value="Identifies the Nvm job which is related to the mode request."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:ac4b5a2a-a386-4bb4-b7b8-58a5baaefe2c"/>
                              <a:da name="RANGE">
                                <a:v>NvmReadAll</a:v>
                                <a:v>NvmWriteAll</a:v>
                              </a:da>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMNvMRequest" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a mode request for a NvM Block.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:7e2e5f6f-6b37-4408-8b4b-fb66169315d4"/>
                            <v:ref name="BswMNvMBlockRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the NvM Block
                                    Descriptor that the request corresponds to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:63b81990-3e16-437b-84f5-08451acf7709"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid NvM block must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/NvM/NvMBlockDescriptor"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMRteSwitchAckNotification" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a notification from the RTE that a mode transition has been completed.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:ref name="BswMSwitchPortRef" type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    References the switch port which will receive the notification.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a BswMSwitchPort must be provided." 
                                          expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                                  <mt:tst 
                                          true="Referencing artifacts from other BswM configurations is not allowed!" 
                                          expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMSwitchPort/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMSwitchPort"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSdClientServiceCurrentState" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: Used by Service Discovery module to indicate current state of the Client Service (available/down)."/>
                            <a:a name="UUID" 
                                 value="ECUC:50aef4e4-a2d3-4889-8919-426c680c9a2b"/>
                            <v:ref name="BswMSdClientMethodsRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a reference to a client service in the Sd module."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:34852b2c-d29d-9676-1dfb-0c2b7cac581c"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid Sd Client Service must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Sd/SdConfig/SdInstance/SdClientService"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSdConsumedEventGroupCurrentState" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: Used by Service Discovery to indicate current status of the EventHandler (requested/released)."/>
                            <a:a name="UUID" 
                                 value="ECUC:23513082-5b20-4a0e-8994-6419491d2d20"/>
                            <v:ref name="BswMSdConsumedEventGroupRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a reference to an eventGroup that is defined within a client service in the Sd module."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:8a14383b-1d75-9127-1f1f-333f3f5776a9"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid Sd Consumed EventGroup must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Sd/SdConfig/SdInstance/SdClientService/SdConsumedEventGroup"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSdEventHandlerCurrentState" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: Used by Service Discovery to indicate current status of the EventHandler (requested/released)."/>
                            <a:a name="UUID" 
                                 value="ECUC:197f8cd2-970f-4108-8f43-16ab69ef8bf2"/>
                            <v:ref name="BswMSdEventHandlerRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a reference to an event handler that is defined within a server service in the Sd module."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:110e42ca-f0b7-49d3-9085-39468a363f90"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid Sd EventHandler must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Sd/SdConfig/SdInstance/SdServerService/SdEventHandler"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSwcModeNotification" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This is a mode switch notification associated with a RTE switch interface."/>
                            <a:a name="UUID" 
                                 value="ECUC:2f25796e-4212-4187-a4fd-5cae123930de"/>
                            <v:ref 
                                   name="BswMSwcModeNotificationModeDeclarationGroupPrototypeRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC" 
                                   value="This is a foreign reference to the ModeDeclarationGroupPrototype."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:5aa3f84f-623b-4f8a-846d-b0f2f8506bd5"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a ModeDeclarationGroupPrototype must be provided." 
                                          expr="node:refvalid(.)"/>
                                  <mt:tst 
                                          true="There is no DataTypeMappingSet referencing this Mode Group." 
                                          expr="node:refvalid(.) and asc_bswm:modeGroupInDataTypeMapping(.)=&apos;false&apos;"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASTyped:ModeDeclarationGroupPrototype"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSwcModeRequest" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  The source of the mode request is a SW Component.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:cec88478-df6b-44b1-9036-edb5f3e101eb"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:xpath 
                                        true="You need to enable either the Mode Declaration Group Prototype Reference or the Variable Data Type Reference." 
                                        expr="(node:exists(BswMSwcModeRequestModeDeclarationGroupPrototypeRef) and node:exists(BswMSwcModeRequestVariableDataPrototypeRef)) or (not(node:exists(BswMSwcModeRequestModeDeclarationGroupPrototypeRef)) and not(node:exists(BswMSwcModeRequestVariableDataPrototypeRef)))"/>
                            </a:da>
                            <v:ref 
                                   name="BswMSwcModeRequestModeDeclarationGroupPrototypeRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;This is a foreign reference to the ModeDeclarationGroupPrototype. As the mode request is SR-Communication the BswM shall provide a SR-Interface which corresponds to the ModeDeclarationGroupPrototype.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:106e96eb-0779-4153-b2f9-b05730aa991a"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a ModeDeclarationGroupPrototype must be provided." 
                                          expr="node:refvalid(.)"/>
                                  <mt:tst 
                                          true="There is no DataTypeMappingSet referencing this Mode Group." 
                                          expr="node:refvalid(.) and asc_bswm:modeGroupInDataTypeMapping(.)=&apos;false&apos;"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASTyped:ModeDeclarationGroupPrototype"/>
                            </v:ref>
                            <v:ref 
                                   name="BswMSwcModeRequestVariableDataPrototypeRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;This is a foreign reference to the VariableDataPrototype. It&apos;s the SWC&apos;s responsability
                                    to define a SR-Interface.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:1fcabaec-05ff-11e5-a6c0-1697f925ec7b"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid reference to a VariableDataPrototype must be provided."/>
                              <a:da name="REF" 
                                    value="ASTyped:VariableDataPrototype"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMTimer" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This is a timer which can be used for time dependent rules.
                                  In order to start/stop this timer, a BswMTimerControl action with
                                  BswMTimerAction = BSWM_TIMER_START/BSWM_TIMER_STOP must reference it.
                                  This mode request port can be used normally in mode conditions.
                                  Note that the initial value of this mode request port is BSWM_TIMER_STOPPED
                                  and is not configurable.
                                  Mode conditions referencing this mode request port shall only use
                                  BSWM_TIMER_STOPPED, BSWM_TIMER_STARTED or BSWM_TIMER_EXPIRED as
                                  mode values.
                                &lt;/html&gt;</a:v>
                            </a:a>
                          </v:ctr>
                          <v:ctr name="BswMWdgMRequestPartitionReset" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;This is a Partition Reset request from from the WdgM.&lt;/p&gt;
                                  &lt;p&gt;This port corresponds to a call of the
                                  &lt;code&gt;BswM_WdgM_RequestPartitionReset&lt;/code&gt; API.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:77b44dcd-e54f-4030-bdbc-ecdd6e569ce4"/>
                            <v:ref name="BswMWdgMOsApplicationRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the Os application that requests the reset.
                                    If this parameter is not enabled (eg. the default application is used),
                                    then the BswM will react to a call of BswM_WdgM_RequestPartitionReset
                                    only if the application id is 0 (default application).
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="UUID" 
                                   value="ECUC:3a50ad36-c739-11e4-8731-1681e6b88ec1"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid Os application must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                            </v:ref>
                            <v:ref name="BswMWdgMRequestPartitionResetRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the partition that shall be reset.
                                    This parameter is not used. Instead, the BswMWdgMOsApplicationRef
                                    parameter can be used to specify the application for which
                                    the reset shall be done.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:6770d76c-a522-43c4-961f-26d1d6e61afa"/>
                              <a:da name="READONLY" value="true"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                            </v:ref>
                          </v:ctr>
                        </v:chc>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="BswMRule" type="MAP">
                      <v:ctr name="BswMRule" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Each instance of this container describes a BswM
                              arbitration rule.&lt;/p&gt;
                              &lt;p&gt;The rule either consists of a simple mode condition
                              or a more complex logical expression which in turn
                              calculates a boolean value from multiple  mode conditions.&lt;/p&gt;
                              &lt;p&gt;This container also references the action lists
                              that shall be invoked when the rule is evaluated
                              to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:9711550f-8c6a-4c9d-a1bd-b6d3828a9ce5"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refexists(./BswMRuleFalseActionList) or node:refexists(./BswMRuleTrueActionList)" 
                              false="Either a valid FalseActionList or a valid TrueActionList has to exist for each rule, since a rule that triggers no action list does not make sense."/>
                        <v:var name="BswMNestedExecutionOnly" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;This parameter determines if the current rule is independent or subordinate.&lt;/p&gt;
                                &lt;p&gt;If BswMNestedExecutionOnly = FALSE (default), the current rule is considered independent and it
                                   will be evaluated either at the BswM_MainFunction (if its logical expressions reference
                                   deferred mode request ports) or as soon as the state of one of the referenced mode request
                                   ports changes (in case they are immediate).&lt;/p&gt;
                                &lt;p&gt;If BswMNestedExecutionOnly = TRUE, the current rule is considered subordinate and it will only
                                   evaluated as part of an action list execution.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:75ab5231-5ebb-4aec-a088-bc956ba35023"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="BswMRuleInitState" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;This parameter is a part of the reset/initialization
                                behavior of BswM.&lt;/p&gt;
                                &lt;p&gt;Action lists are executed when the result of
                                a rule evaluation have changed since the last evaluation.&lt;/p&gt;
                                &lt;p&gt;This parameter defines the previous evaluation result
                                of a rule to be used after initialization of the BswM.&lt;/p&gt;
                                &lt;p&gt;If this parameter is set to &lt;code&gt;BSWM_TRUE&lt;/code&gt;, the evaluation
                                result is treated as changed if the rule is evaluated to false.&lt;/p&gt;
                                &lt;p&gt;If this parameter is set to &lt;code&gt;BSWM_FALSE&lt;/code&gt;, the evaluation result
                                is treated as changed if the rule is evaluated to true.&lt;/p&gt;
                                &lt;p&gt;If this parameter is set to &lt;code&gt;BSWM_UNDEFINED&lt;/code&gt;,the evaluation
                                result is always treated as changed at the first evaluation
                                of the rule after initialization.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:42592c03-2e60-4cb0-8357-5a711cba0547"/>
                          <a:da name="RANGE">
                            <a:v>BSWM_FALSE</a:v>
                            <a:v>BSWM_TRUE</a:v>
                            <a:v>BSWM_UNDEFINED</a:v>
                          </a:da>
                        </v:var>
                        <v:ref name="BswMRuleExpressionRef" type="REFERENCE">
                          <a:a name="DESC" 
                               value="This is a reference to the logical expression that is evaluated for each rule."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:f734f4cd-0746-4a1b-85b4-2791ac9d910e"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      false="A valid logical expression must be referenced." 
                                      expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                              <mt:tst 
                                      true="Referencing artifacts from other BswM configurations is not allowed!" 
                                      expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                            </mt:xpath>
                          </a:da>
                          <a:da name="RANGE" type="XPath" 
                                expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMArbitration/BswMLogicalExpression/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMLogicalExpression"/>
                        </v:ref>
                        <v:ref name="BswMRuleFalseActionList" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                This is a reference to the action list that
                                shall be executed when the rule is evaluated to &lt;code&gt;False&lt;/code&gt;.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:cd76267f-738a-4738-ac2c-7b7d38b31ffa"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      false="A valid reference to a BswMActionList must be provided." 
                                      expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                              <mt:tst 
                                      true="Referencing artifacts from other BswM configurations is not allowed!" 
                                      expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                              <mt:tst 
                                      true="If a rule references a mode request port of type BswMDcmApplicationUpdatedIndication, BswMWdgMRequestPartitionReset or BswMNmIfCarWakeUpIndication, it can not have a false action list." 
                                      expr="node:refvalid(../BswMRuleExpressionRef) and (count(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*) = 1) and (node:refexists(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])) and (node:name(as:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/..) = &apos;BswMModeCondition&apos;) and node:refvalid(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode) and ((node:ref(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode)/BswMModeRequestSource = &apos;BswMDcmApplicationUpdatedIndication&apos;) or (node:ref(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode)/BswMModeRequestSource = &apos;BswMWdgMRequestPartitionReset&apos;) or (node:ref(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode)/BswMModeRequestSource = &apos;BswMNmIfCarWakeUpIndication&apos;))"/>
                            </mt:xpath>
                          </a:da>
                          <a:da name="RANGE" type="XPath" 
                                expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMActionList/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMActionList"/>
                        </v:ref>
                        <v:ref name="BswMRuleTrueActionList" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                This is a reference to the action list that
                                shall be executed when the rule is evaluated to &lt;code&gt;True&lt;/code&gt;.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:309d8777-fea3-4ded-a73e-980296f093aa"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      false="A valid reference to a BswMActionList must be provided." 
                                      expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                              <mt:tst 
                                      true="Referencing artifacts from other BswM configurations is not allowed!" 
                                      expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                              <mt:tst 
                                      true="If a rule references a mode request port of type BswMDcmApplicationUpdatedIndication, BswMWdgMRequestPartitionReset or BswMNmIfCarWakeUpIndication, the BswMActionListExecution of its referenced true action list can only be BSWM_CONDITION." 
                                      expr="(node:refvalid(../BswMRuleExpressionRef) and (count(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*) = 1) and (node:refexists(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])) and (node:name(as:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/..) = &apos;BswMModeCondition&apos;) and node:refvalid(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode) and ((node:ref(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode)/BswMModeRequestSource = &apos;BswMDcmApplicationUpdatedIndication&apos;) or (node:ref(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode)/BswMModeRequestSource = &apos;BswMWdgMRequestPartitionReset&apos;) or (node:ref(node:ref(node:ref(../BswMRuleExpressionRef)/BswMArgumentRef/*[1])/BswMConditionMode)/BswMModeRequestSource = &apos;BswMNmIfCarWakeUpIndication&apos;))) and node:refvalid(.) and (node:ref(.)/BswMActionListExecution = &apos;BSWM_TRIGGER&apos;)"/>
                            </mt:xpath>
                          </a:da>
                          <a:da name="RANGE" type="XPath" 
                                expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMActionList/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMActionList"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                  <v:ctr name="BswMDataTypeMappingSets" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="Collection of references to DataTypeMappingSet."/>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="ECUC:fd679d55-8201-4daf-8762-a432eb79cb8c"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:lst name="BswMDataTypeMappingSetRef">
                      <a:da name="MIN" value="1"/>
                      <v:ref name="BswMDataTypeMappingSetRef" 
                             type="FOREIGN-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              Reference to DataTypeMappingSet.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="Link">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="ECUC:f0b7d567-bfdf-47c7-8459-32f20d811612"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" 
                              false="A valid reference to a DataTypeMappingSet must be provided."/>
                        <a:da name="REF" value="ASTyped:DataTypeMappingSet"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                  <v:ctr name="BswMModeControl" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="This container includes all configuration sub-containers and parameters related to the mode control functionality of the BswM."/>
                    <a:a name="UUID" 
                         value="ECUC:0f9b55d8-de62-4333-96a5-061519c7ffc1"/>
                    <v:lst name="BswMAction" type="MAP">
                      <v:ctr name="BswMAction" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Each container of this type defines an action.&lt;/p&gt;
                              &lt;p&gt;These actions can be part of one or several action lists.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:add00e45-e97c-4d9a-8208-befcbfbfd3e1"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath 
                                    true="BswMSchMSwitch actions cannot be left unused if BswMActionsOptimization = false." 
                                    expr="../../../../../IMPLEMENTATION_CONFIG_VARIANT = &apos;VariantPostBuild&apos; and ../../../../../BswMGeneral/BswMActionsOptimization = &apos;false&apos; and BswMAvailableActions = &apos;BswMSchMSwitch&apos; and count(../../BswMActionList/*/BswMActionListItem/*[node:refvalid(BswMActionListItemRef) and node:name(node:ref(BswMActionListItemRef)) = node:name(node:current())]) = 0"/>
                        </a:da>
                        <a:da name="WARNING" type="XPath" 
                              expr="count(../../BswMActionList/*/BswMActionListItem/*[./BswMActionListItemRef = concat(&apos;ASPath:&apos;,as:path(node:current()))]) = 0" 
                              true="This action is not used in any action list. Please check this is intended."/>
                        <v:chc name="BswMAvailableActions" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                Choice container including the available actions
                                to be used in the action lists.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <v:ctr name="BswMClearEventRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container contains a reference to a BswMEventRequestPort which will
                                  be cleared (i.e. set to CLEAR state) when this action is executed.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:ref name="BswMClearEventRequestPortRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter references the BswMEventRequestPort which will be cleared.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="RANGE" type="XPath" 
                                    expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMArbitration/BswMEventRequestPort/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMEventRequestPort"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMComMAllowCom" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters for the action to
                                  allow or to block communication for a ComM Channel.
                                  ComM_CommunicationAllowed is called when this action is
                                  configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:0ce4c9d3-b52a-4bf4-8268-aebdfac80f52"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="../../../../../../BswMGeneral/BswMComMEnabled = &apos;false&apos;" 
                                  true="BswMComMEnabled must be set to TRUE if a BswMComMAllowCom action is used."/>
                            <v:var name="BswMComAllowed" type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;The parameter BswMComMAllowChannelRef refers to a
                                    channel which will allow or block communication using the
                                    function ComM_CommunicationAllowed()
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:a75f55aa-9e34-48e5-9c33-8e121ac7f7d8"/>
                              <a:da name="DEFAULT" value="false"/>
                            </v:var>
                            <v:ref name="BswMComMAllowChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the ComM Channel for which
                                    communication shall be allowed or blocked.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:cfa3f8ee-4192-4364-a046-f5ef39f8626f"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid reference to a ComMChannel must be provided."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMComMModeLimitation" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This container includes all parameters related to a limitation of communication mode for a ComM Channel. ComM_LimitChannelToNoComMode is called when this action is configured."/>
                            <a:a name="UUID" 
                                 value="ECUC:93ede02b-24af-4c08-a0ef-1e3a636fbbcc"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="../../../../../../BswMGeneral/BswMComMEnabled = &apos;false&apos;" 
                                  true="BswMComMEnabled must be set to TRUE if a BswMComMModeLimitation action is used."/>
                            <v:var name="BswMComMLimitMode" type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter specifies if the channel referenced by
                                    the BswMComMLimitChannelRef shall be limited to NoCom
                                    (true) or if the limitation shall be lifted (false).
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:a90697cd-02ca-46c7-b4d9-3561ac126656"/>
                            </v:var>
                            <v:ref name="BswMComMLimitChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the ComM channel for
                                    which the communication mode should be limited.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:dfb83a13-105c-4ad9-b65d-8465bcad8ddd"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid reference to a ComMChannel must be provided."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMComMModeSwitch" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to a switch
                                  of communication mode for a ComM User. ComM_RequestComMode
                                  is called when this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:5c07eb69-9db2-4f5c-8e08-36329bcf4dc9"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="../../../../../../BswMGeneral/BswMComMEnabled = &apos;false&apos;" 
                                  true="BswMComMEnabled must be set to TRUE if a BswMComMModeSwitch action is used."/>
                            <v:var name="BswMComMRequestedMode" 
                                   type="ENUMERATION">
                              <a:a name="DESC" 
                                   value="This parameter specifies if the requested communication mode."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:a8479736-a047-4a2e-a9de-9de9d1fe5e26"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_FULL_COM</a:v>
                                <a:v>BSWM_NO_COM</a:v>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMComMUserRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the ComM User that is
                                    associated to the Communication channel for
                                    which the communication mode should be requested.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:38ab9166-a9b6-4666-8064-b0fe9192d7af"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid reference to a ComM user must be provided."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMUser"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMDeadlineMonitoringControl" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to enabling
                                  and disabling of deadline monitoring for one or several PDUs in COM.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:22778ab5-dd84-4876-b8f8-3baced96702a"/>
                            <v:lst name="BswMDisabledDMPduGroupRef">
                              <a:da name="INVALID" type="XPath" 
                                    expr="((count(*) + count(../BswMEnabledDMPduGroupRef/*) = 0))" 
                                    true="For a BswMDeadlineMonitoringControl action at least one valid reference BswMDisabledDMPduGroupRef or one valid reference BswMEnabledDMPduGroupRef must be provided"/>
                              <v:ref name="BswMDisabledDMPduGroupRef" 
                                     type="SYMBOLIC-NAME-REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      This is a reference to a PDU Group for which the
                                      Deadline Monitoring should be disabled.
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" 
                                     value="true"/>
                                <a:a name="UUID" 
                                     value="ECUC:858f665d-7fc6-49e4-a22a-b512c6e0b69b"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="A valid reference to a ComIPduGroup must be provided."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Com/ComConfig/ComIPduGroup"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="BswMEnabledDMPduGroupRef">
                              <v:ref name="BswMEnabledDMPduGroupRef" 
                                     type="SYMBOLIC-NAME-REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      This is a reference to a PDU Group for which
                                      the Deadline Monitoring should be enabled.
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" 
                                     value="true"/>
                                <a:a name="UUID" 
                                     value="ECUC:489675a3-4dfa-43b5-8f8e-48609a142a1d"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="A valid reference to a ComIPduGroup must be provided."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Com/ComConfig/ComIPduGroup"/>
                              </v:ref>
                            </v:lst>
                          </v:ctr>
                          <v:ctr name="BswMEcuMGoDown" type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This container defines the UserId which shall be forwarded to the GoDown request."/>
                            <a:a name="UUID" 
                                 value="ECUC:88eb34f2-e877-4fd8-8ecb-b5f8ee97123d"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="../../../../../../BswMGeneral/BswMEcuMEnabled = &apos;false&apos;" 
                                  true="BswMEcuMEnabled must be set to TRUE if a BswMEcuMGoDown action is used."/>
                            <v:ref name="BswMEcuMUserIdRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to a EcuM UserId.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:5bf3393d-903b-435c-822a-e8df76b79337"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid reference to an EcuMFlexUserConfig must be provided."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMEcuMSelectShutdownTarget" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container defines the shutdown target.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:20f34f5e-3ff3-4e97-8120-ed86c17c2351"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="../../../../../../BswMGeneral/BswMEcuMEnabled = &apos;false&apos;" 
                                  true="BswMEcuMEnabled must be set to TRUE if a BswMEcuMSelectShutdownTarget action is used."/>
                            <v:var name="BswMEcuMShutdownTarget" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    Selects the EcuM shutdown target type.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:b0783d19-a6d0-4699-ac8c-a4049b4d461e"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          true="If ECUM_STATE_RESET is selected the BswMEcuMResetModeRef parameter must also be configured." 
                                          expr="(. = &apos;ECUM_STATE_RESET&apos;) and not(node:exists(../BswMEcuMResetModeRef))"/>
                                  <mt:tst 
                                          true="If ECUM_STATE_SLEEP is selected the BswMEcuMSleepModeRef parameter must also be configured." 
                                          expr="(. = &apos;ECUM_STATE_SLEEP&apos;) and not(node:exists(../BswMEcuMSleepModeRef))"/>
                                  <mt:tst 
                                          true="If ECUM_STATE_SLEEP is selected the BswMEcuMResetModeRef parameter should not be enabled." 
                                          expr="(. = &apos;ECUM_STATE_SLEEP&apos;) and node:exists(../BswMEcuMResetModeRef)"/>
                                  <mt:tst 
                                          true="If ECUM_STATE_RESET is selected the BswMEcuMSleepModeRef parameter should not be enabled." 
                                          expr="(. = &apos;ECUM_STATE_RESET&apos;) and node:exists(../BswMEcuMSleepModeRef)"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE">
                                <a:v>ECUM_STATE_SLEEP</a:v>
                                <a:v>ECUM_STATE_RESET</a:v>
                                <a:v>ECUM_STATE_OFF</a:v>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMEcuMResetModeRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to a reset mode.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:46e261aa-5ab4-40c3-8b60-5242f58edfb2"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(node:refvalid(.))" 
                                    false="A valid EcuM reset mode must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMResetMode"/>
                            </v:ref>
                            <v:ref name="BswMEcuMShutdownTargetRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This configuration parameter is not used. The
                                    configuration parameter BswMEcuMShutdownTargetRef
                                    has been renamed to BswMEcuMSleepModeRef and the
                                    parameter BswMEcuMResetModeRef has been introduced.
                                    Rationale: A BswMEcuMShutdownTarget may reference a
                                    SleepMode or a ResetMode.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:46e261aa-240e-40c3-8b60-5242f58edfb2"/>
                              <a:da name="EDITABLE" value="false"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMSleepMode"/>
                            </v:ref>
                            <v:ref name="BswMEcuMSleepModeRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to a sleep mode.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:20f34f5e-3ff3-4e97-8120-ed86c17c2351"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(node:refvalid(.))" 
                                    false="A valid EcuM sleep mode must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMSleepMode"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMEthIfSwitchPortGroupRequestMode" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to requesting a mode for the EthIfSwtPortGroup.
                                  The EthIf_SwitchPortGroupRequestMode API is called when this action is executed.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:var name="BswMEthTrcvMode" type="ENUMERATION">
                              <a:a name="DESC" 
                                   value="This parameter contains the mode which will be requested."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_ETHTRCV_MODE_ACTIVE</a:v>
                                <a:v>BSWM_ETHTRCV_MODE_DOWN</a:v>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMEthIfSwitchPortGroupRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the Ethernet Interface Switch Port Group which
                                    will receive the request.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid EthIf Switch Port Group must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EthIf/EthIfConfigSet/EthIfSwitchPortGroup"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMJ1939DcmStateSwitch" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to a switch of the J1939
                                  Diagnostic Communication Managers network state for a J1939 node.
                                  J1939Dcm_SetState is called when this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:var name="BswMJ1939DcmRequestedState" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter describes the communication state of the J1939 Diagnostic
                                    Communication Manager and corresponds to the parameter &quot;newState&quot; of the
                                    function J1939Dcm_SetState.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_J1939DCM_STATE_OFFLINE</a:v>
                                <a:v>BSWM_J1939DCM_STATE_ONLINE</a:v>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMJ1939DcmChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This reference points to the unique channel defined by the ComMChannel
                                    and provides access to the unique channel index value in ComMChannelId.
                                    This reference corresponds to the parameter &quot;channel&quot; of the function J1939Dcm_SetState.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                            <v:ref name="BswMJ1939DcmNodeRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This reference points to a J1939NmNode and provides access to the
                                    unique J1939NmNodeId.This reference corresponds to the parameter
                                    &quot;node&quot; of the function J1939Dcm_SetState.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid J1939NmNode must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmNode"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMJ1939RmStateSwitch" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to a switch of the J1939
                                  Request Managers network state for a J1939 node. J1939Rm_SetState is
                                  called when this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:var name="BswMJ1939RmRequestedState" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter describes the communication state of the J1939 Request Manager
                                    and corresponds to the parameter &quot;new state&quot; of the function J1939Rm_SetState.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_J1939RM_STATE_OFFLINE</a:v>
                                <a:v>BSWM_J1939RM_STATE_ONLINE</a:v>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMJ1939RmChannelRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This reference points to the unique channel defined by the ComMChannel
                                    and provides access to the unique channel index value in ComMChannelId.
                                    This reference corresponds to the parameter &quot;channel&quot; of the function J1939Rm_SetState.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                            <v:ref name="BswMJ1939RmNodeRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This reference points to a J1939NmNode and provides access to the unique J1939NmNodeId.
                                    This reference corresponds to the parameter &quot;node&quot; of the function J1939Rm_SetState.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid J1939NmNode must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmNode"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMLinScheduleSwitch" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to a switch
                                  of LIN schedule table. LinSM_ScheduleRequest is called when
                                  this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:23b5f4bd-fb88-4b60-b666-96efbced6dcc"/>
                            <v:ref name="BswMLinScheduleRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the LIN schedule table that the
                                    LIN SM shall change to.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="UUID" 
                                   value="ECUC:32b27d57-fa6d-4f23-a0c7-f872b0d789a0"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(node:refvalid(.))" 
                                    false="A valid LinSM schedule table must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/LinSM/LinSMConfigSet/LinSMChannel/LinSMSchedule"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMNMControl" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;This container includes all parameters related
                                  to enabling and disabling of Network Management
                                  communication.&lt;/p&gt;
                                  &lt;p&gt;Disabling of NM communication can be requested by DCM.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:d44540a9-aa53-4e68-a8b5-ea3a59dcff78"/>
                            <v:var name="BswMNMAction" type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter specifies if the communication of the
                                    corresponding NM channel should be enabled or disabled.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:b0783d19-a6d0-4699-ac8c-a4049b4d461e"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_NM_DISABLE</a:v>
                                <a:v>BSWM_NM_ENABLE</a:v>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMComMNetworkHandleRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This reference points to the unique channel defined by the
                                    ComMChannel and provides access to the unique channel
                                    index value in ComMChannelId.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:71f03668-a386-4d49-b226-dd2c739ebc06"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid ComM channel must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMPduGroupSwitch" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes references to the PDU groups that
                                  shall be enabled and disabled. Com_IpduGroupControl is
                                  called when this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:b7e1d5b8-cc18-4508-bbbf-9257454d5c80"/>
                            <v:var name="BswMPduGroupSwitchReinit" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter defines if the values of timers,
                                    memorized last values etc. are
                                    retained or reinitialized during a PDU Group Switch.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:b6fb3fbb-cb5c-4d7a-9560-c5bc39a5da54"/>
                              <a:da name="DEFAULT" value="false"/>
                            </v:var>
                            <v:lst name="BswMDisabledPduGroupRef">
                              <a:da name="INVALID" type="XPath" 
                                    expr="((count(*) + count(../BswMEnabledPduGroupRef/*) = 0))" 
                                    true="For a BswMPduGroupSwitch action at least one valid reference BswMDisabledPduGroupRef or one valid reference BswMEnabledPduGroupRef must be provided"/>
                              <v:ref name="BswMDisabledPduGroupRef" 
                                     type="SYMBOLIC-NAME-REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      This is a reference to a PDU Group that should be disabled.
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" 
                                     value="true"/>
                                <a:a name="UUID" 
                                     value="ECUC:d63a77a6-da9d-467a-9c2f-6879f96a8b50"/>
                                <a:da name="INVALID" type="Multi">
                                  <mt:xpath>
                                    <mt:tst 
                                            false="A valid ComIPduGroup must be referenced!" 
                                            expr="node:refvalid(.)"/>
                                    <mt:tst 
                                            true="A ComIPduGroup shouldn&apos;t be enabled and disabled in the same action." 
                                            expr="node:refvalid(.) and count(../../BswMEnabledPduGroupRef/*[node:current() = .]) &gt; 0"/>
                                  </mt:xpath>
                                </a:da>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Com/ComConfig/ComIPduGroup"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="BswMEnabledPduGroupRef">
                              <v:ref name="BswMEnabledPduGroupRef" 
                                     type="SYMBOLIC-NAME-REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      This is a reference to a PDU Group that should be enabled.
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" 
                                     value="true"/>
                                <a:a name="UUID" 
                                     value="ECUC:754e70f9-ccd0-4a90-8e06-58d065bb4184"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="A valid ComIPduGroup must be referenced!"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Com/ComConfig/ComIPduGroup"/>
                              </v:ref>
                            </v:lst>
                          </v:ctr>
                          <v:ctr name="BswMPduRouterControl" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to enabling
                                  and disabling of routing of Routing Path Groups in the PDU
                                  Router. PduR_EnableRouting or PduR_DisableRouting is
                                  called when this action is configured.&lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:40e0c9d2-b19e-4c8a-b501-1aac72a34ff5"/>
                            <v:var name="BswPduRouterAction" type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter specifies if the routing of
                                    the corresponding PDU should be enabled or disabled.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:7a7d7b39-fdff-4f16-9aa1-9ea5d6b3f02f"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_PDUR_DISABLE</a:v>
                                <a:v>BSWM_PDUR_ENABLE</a:v>
                              </a:da>
                            </v:var>
                            <v:lst name="BswMPduRoutingPathGroupRef">
                              <a:da name="MIN" value="1"/>
                              <v:ref name="BswMPduRoutingPathGroupRef" 
                                     type="SYMBOLIC-NAME-REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      This is a reference to the PDU Routing Path Group for which
                                      the routing in the PDU Router should be enabled or disabled.
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" 
                                     value="true"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="UUID" 
                                     value="ECUC:edbfb25c-322b-4d20-93f0-b1e32d0f50f5"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="A valid reference to a PduRRoutingPathGroup must be provided."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/PduR/PduRRoutingTables/PduRRoutingPathGroup"/>
                              </v:ref>
                            </v:lst>
                          </v:ctr>
                          <v:ctr name="BswMRteModeRequest" type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: This container defines a mode request that the BswM may send to a SW-C which is acting as a mode-manager. RTE_Write is called when this action is configured."/>
                            <a:a name="UUID" 
                                 value="81a5ff93-48ed-403a-931c-a5181e8f6ec3"/>
                            <v:ref name="BswMRequestedModeRef" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a foreign reference to the Mode Declaration used for the mode request"/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="c1b40beb-59b1-4294-bef6-3009ca7baee2"/>
                              <a:da name="REF" value="ASTyped:ModeDeclaration"/>
                            </v:ref>
                            <v:ref name="BswMRteModeRequestPortRef" 
                                   type="REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a reference to a BswMRteModeRequestPort."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="3ebe521e-53ce-43a7-90dd-ef85d9b15481"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid Rte Mode Request Port must be referenced." 
                                          expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                                  <mt:tst 
                                          true="Referencing artifacts from other BswM configurations is not allowed!" 
                                          expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMRteModeRequestPort/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMRteModeRequestPort"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMRteSwitch" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container defines a mode switch indication that the
                                  BswM provides to the SW-C that need to be notified about the
                                  mode switch. Rte_Switch is called when this action is
                                  configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:3d4d94e4-a15a-4442-88ce-2c30ccbffbee"/>
                            <v:ref name="BswMSwitchedMode" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter references a Mode Declaration of a Mode
                                    Declaration Group.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a Mode Declaration must be provided." 
                                          expr="node:refvalid(.)"/>
                                  <mt:tst 
                                          true="The configured mode declaration is not compatible with the mode switch interface of the configured switch port." 
                                          expr="node:refvalid(.) and asc_bswm:isModeDeclarationCompatible(.,../BswMRteSwitchPortRef)=&apos;false&apos;"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="asc_bswm:getCompatibleModeDeclarations(../BswMRteSwitchPortRef)"/>
                              <a:da name="REF" value="ASTyped:ModeDeclaration"/>
                            </v:ref>
                            <v:ref name="BswMRteSwitchPortRef" type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the BswMSwitchPort.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:4642d375-9c6d-4db5-84c5-fb8e6d59972c"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a BswMSwitchPort must be provided." 
                                          expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                                  <mt:tst 
                                          true="Referencing artifacts from other BswM configurations is not allowed!" 
                                          expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMSwitchPort/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMSwitchPort"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSchMSwitch" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container defines a mode switch indication that the BswM
                                  provides to the SW-C that need to be notified about the mode
                                  switch. SchM_Switch is called when this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:07525aab-f7a7-4e5b-a6b0-762131ec234d"/>
                            <v:ref name="BswMSchMSwitchedMode" 
                                   type="FOREIGN-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter contains the integer value that corresponds to a certain mode in a Mode Declaration Group.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a Mode Declaration must be provided." 
                                          expr="node:refvalid(.)"/>
                                  <mt:tst 
                                          true="The configured mode declaration is not compatible with the mode switch interface of the configured switch port." 
                                          expr="node:refvalid(.) and asc_bswm:isModeDeclarationCompatible(.,../BswMSchMSwitchPortRef)=&apos;false&apos;"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="asc_bswm:getCompatibleModeDeclarations(../BswMSchMSwitchPortRef)"/>
                              <a:da name="REF" value="ASTyped:ModeDeclaration"/>
                            </v:ref>
                            <v:ref name="BswMSchMSwitchPortRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This is a reference to the BswMSwitchPort.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:e18f3107-9272-4ace-95ac-cfce6556be97"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a BswMSwitchPort must be provided." 
                                          expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                                  <mt:tst 
                                          true="Referencing artifacts from other BswM configurations is not allowed!" 
                                          expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMSwitchPort/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMSwitchPort"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMSdClientServiceModeRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: This container includes all parameters related to the selection of an client service of Sd. Sd_ClientServiceSetState is called when this action is configured."/>
                            <a:a name="UUID" 
                                 value="ECUC:810b987b-0f74-4aaf-a085-9e710bbbc456"/>
                            <v:ref name="BswMSdClientMethodsRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a reference to a client service in the Sd module."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:64e1cec3-3f3e-989c-3567-6830205b8247"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid Sd Client Service must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Sd/SdConfig/SdInstance/SdClientService"/>
                            </v:ref>
                            <v:var name="BswMSdClientServiceState" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter specifies if the corresponding client service
                                    shall be released or requested.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:b0783d19-a6d0-4699-ac8c-a4049b4d461e"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_SD_CLIENT_SERVICE_RELEASED</a:v>
                                <a:v>BSWM_SD_CLIENT_SERVICE_REQUESTED</a:v>
                              </a:da>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMSdConsumedEventGroupModeRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: This container includes all parameters related to the selection of a consumed EventGroup of Sd. Sd_ConsumedEventGroupSetState is called when this action is configured."/>
                            <a:a name="UUID" 
                                 value="ECUC:c9b2c771-cb6a-42cb-851d-ccad562fec04"/>
                            <v:ref name="BswMSdConsumedEventGroupRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a reference to an eventGroup that is defined within a client service in the Sd module."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:3075cf2a-8dbf-89e4-1aa8-9bd34c6a358d"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid Sd Consumed EventGroup must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Sd/SdConfig/SdInstance/SdClientService/SdConsumedEventGroup"/>
                            </v:ref>
                            <v:var name="BswMSdConsumedEventGroupState" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter specifies if the corresponding consumed
                                    event group shall be released or requested.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:b0783d19-a6d0-4699-ac8c-a4049b4d461e"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_SD_CONSUMED_EVENTGROUP_RELEASED</a:v>
                                <a:v>BSWM_SD_CONSUMED_EVENTGROUP_REQUESTED</a:v>
                              </a:da>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMSdServerServiceModeRequest" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="EN: This container includes all parameters related to the selection of a server service of Sd. Sd_ServerServiceSetState is called when this action is configured."/>
                            <a:a name="UUID" 
                                 value="ECUC:8f559f0e-0d39-426c-9604-d38eead59bca"/>
                            <v:ref name="BswMSdServerMethodsRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="EN: This is a reference to a server service in the Sd module."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:705cafe5-af0d-460a-85df-04e1b5f5f0c7"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid Sd Server Service must be referenced."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Sd/SdConfig/SdInstance/SdServerService"/>
                            </v:ref>
                            <v:var name="BswMSdServerServiceState" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter specifies if the corresponding server service
                                    shall be down or available.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:b0783d19-a6d0-4699-ac8c-a4049b4d461e"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_SD_SERVER_SERVICE_DOWN</a:v>
                                <a:v>BSWM_SD_SERVER_SERVICE_AVAILABLE</a:v>
                              </a:da>
                            </v:var>
                          </v:ctr>
                          <v:ctr name="BswMSwitchIPduMode" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to the
                                  selection of the transmission mode an I-PDU to be sent by COM.
                                  Com_SwitchIpduTxMode is called when this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:239dfa77-aac8-4c83-a5e7-1be8c85669a5"/>
                            <v:var name="BswMSwitchIPduModeValue" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    This parameter defines which transmission mode shall be
                                    selected during this call.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:75026229-698c-4fbc-a905-6652e28355d6"/>
                            </v:var>
                            <v:ref name="BswMSwitchIPduModeRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC" 
                                   value="This is a reference to an I-PDU for which the transmission mode shall be set."/>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="UUID" 
                                   value="ECUC:2629fedf-9668-4d93-af1e-99e2346f915f"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid reference to a ComIPdu must be provided." 
                                          expr="node:refvalid(.)"/>
                                  <mt:tst 
                                          true="The referenced IPdu must have ComIPduDirection = SEND." 
                                          expr="node:refvalid(.) and node:ref(.)/ComIPduDirection != &apos;SEND&apos;"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Com/ComConfig/ComIPdu"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMTimerControl" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                This container includes all parameters for the action to
                                start or to stop a timer.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <v:var name="BswMTimerAction" type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                  Specify the action for the timer. The timer can be started or stopped.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="DEFAULT" value="BSWM_TIMER_START"/>
                              <a:da name="RANGE">
                                <a:v>BSWM_TIMER_START</a:v>
                                <a:v>BSWM_TIMER_STOP</a:v>
                              </a:da>
                            </v:var>
                            <v:var name="BswMTimerValue" type="FLOAT">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                  Specify the timer value (in seconds) that is used when the timer is started.
                                  Note that this value must be a multiple of BswMMainFunctionPeriod.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="ENABLE" type="XPath" 
                                    expr="../BswMTimerAction=&apos;BSWM_TIMER_START&apos;"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0.001"/>
                                </mt:range>
                                <mt:xpath 
                                          true="BswMTimerValue must be a multiple of BswMMainFunctionPeriod!" 
                                          expr="node:exists(../../../../../../../BswMGeneral/BswMMainFunctionPeriod) and ((num:i(. * 1000) mod num:i(../../../../../../../BswMGeneral/BswMMainFunctionPeriod * 1000)) != 0)"/>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMTimerRef" type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                  Specify the Timer for which the timer action shall be executed.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="A valid Mode Request Port must be referenced." 
                                          expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                                  <mt:tst 
                                          true="Referencing artifacts from other BswM configurations is not allowed!" 
                                          expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                                  <mt:tst 
                                          true="Only a BswMTimer port can be configured here!" 
                                          expr="node:refvalid(.) and node:ref(.)/BswMModeRequestSource != &apos;BswMTimer&apos;"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath" 
                                    expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current()) and BswMModeRequestSource = &apos;BswMTimer&apos;])"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMModeRequestPort"/>
                            </v:ref>
                          </v:ctr>
                          <v:ctr name="BswMTriggerIPduSend" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  This container includes all parameters related to the
                                  triggering of an I-PDU to be sent by COM. Com_TriggerIPDUSend
                                  is called when this action is configured.
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="ECUC:5e313869-250f-44b6-964e-4dbda0dc8af8"/>
                            <v:lst name="BswMTriggeredIPduRef">
                              <a:da name="MIN" value="1"/>
                              <v:ref name="BswMTriggeredIPduRef" 
                                     type="SYMBOLIC-NAME-REFERENCE">
                                <a:a name="DESC" 
                                     value="This is a reference to an I-PDU that should be triggered for transmission."/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" 
                                     value="true"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="UUID" 
                                     value="ECUC:bf813042-367e-403f-849e-eb3d8b1c950f"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="A valid reference to a ComIPdu must be provided."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Com/ComConfig/ComIPdu"/>
                              </v:ref>
                            </v:lst>
                          </v:ctr>
                          <v:ctr name="BswMUserCallout" type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This container includes all details needed for a user defined function call."/>
                            <a:a name="UUID" 
                                 value="ECUC:1c998532-6f53-42ea-9dad-4825df61605a"/>
                            <v:var name="BswMUserCalloutFunction" type="STRING">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Specifies a complete function call (including parameters) the BswM will make when this action
                                    is executed. A semicolon for ending the statement is not needed.&lt;/p&gt;
                                    &lt;p&gt;Note that the return value of this function is completely ignored.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="Link">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:40b9feb6-e998-4e06-a351-81f431b4850e"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="text:match(., &apos;^[a-zA-Z_]+[a-zA-Z_0-9]*\s*\((.)*\)\s*$&apos;)" 
                                    false="Invalid function call."/>
                              <a:da name="WARNING" type="XPath" 
                                    expr="count(./../../../../../../../BswMGeneral/BswMUserIncludeFiles/BswMUserIncludeFile/*[not(node:empty(.))]) = 0" 
                                    true="A user callout is used, but no BswMUserIncludeFiles are configured."/>
                            </v:var>
                          </v:ctr>
                        </v:chc>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="BswMActionList" type="MAP">
                      <v:ctr name="BswMActionList" type="IDENTIFIABLE">
                        <a:a name="DESC" 
                             value="Each instance of this container defines an action list that is invoked based on the BswM Rules. An action list contains a list of numbered action items to be processed. An action list can also include other action lists."/>
                        <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:407b970e-46be-4d6b-b8ad-157663aa5d94"/>
                        <v:var name="BswMActionListExecution" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   This parameter controls if the corresponding action list shall be executed every time the rule is evaluated or only when the result of the evaluation changes. 
                                   This parameter does not have an effect when this action list is executed within another action list. Possible values:
                                     &lt;ul&gt;
                                        &lt;li&gt;BSWM_CONDITION: action list shall be executed every time the rule is evaluated&lt;/li&gt;
                                        &lt;li&gt;BSWM_TRIGGER: action list shall be executed every time the result of the evaluation changes&lt;/li&gt;
                                     &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:e6f03759-bac9-40cb-816c-4432a6d70644"/>
                          <a:da name="RANGE">
                            <a:v>BSWM_CONDITION</a:v>
                            <a:v>BSWM_TRIGGER</a:v>
                          </a:da>
                        </v:var>
                        <v:lst name="BswMActionListItem" type="MAP">
                          <a:da name="MIN" value="1"/>
                          <v:ctr name="BswMActionListItem" type="IDENTIFIABLE">
                            <a:a name="DESC" 
                                 value="This container defines an item in an action list."/>
                            <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                            <a:a name="POSTBUILDVARIANTMULTIPLICITY" 
                                 value="true"/>
                            <a:a name="UUID" 
                                 value="ECUC:57ce84a2-0f20-4dd5-85a3-4fd44d75b91a"/>
                            <v:var name="BswMAbortOnFail" type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;This parameter defines if the execution of the action
                                      list shall be aborted if this specific action returns &lt;code&gt;E_NOT_OK&lt;/code&gt;. &lt;/p&gt;
                                      &lt;p&gt;&lt;em&gt;Note that this is only applicable for actions that have
                                      &lt;code&gt;E_NOT_OK&lt;/code&gt; as a possible return value.&lt;/em&gt;&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:79c629de-d4aa-49d9-b686-9a6bd7347aec"/>
                              <a:da name="DEFAULT" value="false"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(. = &apos;true&apos;) and (node:refvalid(../BswMActionListItemRef)) and                                 (node:name(as:ref(../BswMActionListItemRef)/..) != &apos;BswMAction&apos;)" 
                                       true="ActionLists or Rules cannot &apos;fail&apos;, so AbortOnFail must not be set if ActionLists or Rules are referenced as an ActionListItem."/>
                                <a:tst 
                                       expr="(. = &apos;true&apos;) and (node:refvalid(../BswMActionListItemRef)) and                                 ( (node:name(as:ref(../BswMActionListItemRef)/..) = &apos;BswMAction&apos;) ) and (                                 (( (node:name(as:ref(../BswMActionListItemRef)/BswMAvailableActions)) ) = &apos;BswMUserCallout&apos;)                                 or                                 (( (node:name(as:ref(../BswMActionListItemRef)/BswMAvailableActions)) ) = &apos;BswMComMAllowCom&apos;)                                 or                                 (( (node:name(as:ref(../BswMActionListItemRef)/BswMAvailableActions)) ) = &apos;BswMDeadlineMonitoringControl&apos;)                                 or                                 (( (node:name(as:ref(../BswMActionListItemRef)/BswMAvailableActions)) ) = &apos;BswMTriggerIPduSend&apos;)                                 or                                 (( (node:name(as:ref(../BswMActionListItemRef)/BswMAvailableActions)) ) = &apos;BswMPduGroupSwitch&apos;)                                 )" 
                                       true="User callouts have no return value and cannot fail, therefore. AbortOnFail must not be set for user callouts."/>
                              </a:da>
                              <a:da name="WARNING" type="XPath" 
                                    expr="(count(../../*) = 1) and (. = &apos;true&apos;)" 
                                    true="Setting the AbortOnFail option to true (to abort ActionList-execution after this item if the action fails) makes no sense since this action is the only action in the ActionList."/>
                            </v:var>
                            <v:var name="BswMActionListItemIndex" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;This parameter defines the index of the action in the
                                    action list. &lt;/p&gt;
                                    &lt;p&gt;It is used define in which order the actions shall be
                                    performed.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ECUC:d2944d1c-b5c4-4d6b-bc4c-ae6c1a89e946"/>
                              <a:da name="DEFAULT" type="XPath" 
                                    expr="../@index"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath 
                                          false="The BswMActionListItemIndex must be unique in the action list." 
                                          expr="text:uniq(../../*/BswMActionListItemIndex, .)"/>
                              </a:da>
                            </v:var>
                            <v:ref name="BswMActionListItemRef" 
                                   type="CHOICE-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    The action item can either be an atomic action
                                    or a reference to another action list or rule.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:a name="UUID" 
                                   value="ECUC:756c431f-9e65-40e8-b3a3-47599991abcb"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="ActionListItem references must be valid." 
                                          expr="node:refvalid(.) and starts-with(node:value(.),&apos;ASPath:/BswM/BswM/&apos;)"/>
                                  <mt:tst 
                                          true="Referencing artifacts from other BswM configurations is not allowed!" 
                                          expr="node:refvalid(.) and (asc_bswm:getBswMConfig(.) != asc_bswm:getBswMConfig(node:ref(.)))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="RANGE" type="XPath">
                                <a:tst 
                                       expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMAction/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                                <a:tst 
                                       expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMModeControl/BswMActionList/*[(asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())) and (node:name(.) != node:name(node:current()/../../..))])"/>
                                <a:tst 
                                       expr="node:paths(as:modconf(&apos;BswM&apos;)[1]/BswMConfig/*/BswMArbitration/BswMRule/*[asc_bswm:getBswMConfig(.) = asc_bswm:getBswMConfig(node:current())])"/>
                              </a:da>
                              <a:da name="REF">
                                <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMAction</a:v>
                                <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMModeControl/BswMActionList</a:v>
                                <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig/BswMArbitration/BswMRule</a:v>
                              </a:da>
                            </v:ref>
                            <v:ref name="BswMReportFailToDemRef" 
                                   type="SYMBOLIC-NAME-REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    If the reference is given, the DEM event shall be reported
                                    failed if this specific action returns E_NOT_OK; it shall
                                    be reported passed if this specific action returns E_OK.
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="PreCompile">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:5b95c4bb-7e3b-4788-bb34-eaf73a792725"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="A valid reference to a DemEventParameter must be provided."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                            </v:ref>
                          </v:ctr>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="BswMRteModeRequestPort" type="MAP">
                      <v:ctr name="BswMRteModeRequestPort" type="IDENTIFIABLE">
                        <a:a name="DESC" 
                             value="EN: This container defines a mode request port which the BswM may utilize to send a mode request to a SW-C which is acting as a mode-manager.  If this container is referenced by a BswMRteModeRequest, the BswM shall create a corresponding PPort in its service description."/>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="c7ef011d-1fcc-457e-9326-9a4acfcad728"/>
                        <v:lst name="BswMRteModeRequestPortInterfaceMappingRef">
                          <a:da name="MAX" value="1"/>
                          <v:ref 
                                 name="BswMRteModeRequestPortInterfaceMappingRef" 
                                 type="FOREIGN-REFERENCE">
                            <a:a name="DESC" 
                                 value="EN: This is a foreign reference to the variable and parameter interface mapping used for the mode request."/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="Link">VariantPostBuild</icc:v>
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="1da5442e-e7a8-40ce-b21c-bf2368d4988c"/>
                            <a:da name="REF" 
                                  value="ASTyped:VariableAndParameterInterfaceMapping"/>
                          </v:ref>
                        </v:lst>
                        <v:ctr name="BswMRteModeRequestPortInterfaceRef" 
                               type="INSTANCE">
                          <a:a name="DESC" 
                               value="EN: This is an instance reference to the variable data prototype used for the mode request."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="a4a1e079-31e7-43ff-8b53-dde4d206abc0"/>
                          <v:ref name="TARGET" type="REFERENCE">
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="22bd128f-420e-4b9e-a960-b07b3c76d634"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="A valid reference to a VariableDataPrototype must be provided."/>
                            <a:da name="REF" 
                                  value="ASTyped:VariableDataPrototype"/>
                          </v:ref>
                          <v:lst name="CONTEXT">
                            <v:ref name="CONTEXT" type="REFERENCE">
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="2b3a5781-db81-4366-a7a8-5156d82b604e"/>
                              <a:da name="RANGE" type="IRefCtxt">
                                <a:tst expr="SW-COMPONENT-PROTOTYPE*"/>
                                <a:tst expr="PORT-PROTOTYPE"/>
                              </a:da>
                            </v:ref>
                          </v:lst>
                        </v:ctr>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="BswMSwitchPort" type="MAP">
                      <v:ctr name="BswMSwitchPort" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              This container specifies PPorts and/or providedModeDeclarationGroups
                              , which the BswM has to create in its SWCD resp. BSWMD.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath 
                                    true="A single BswMRteSwitchAckNotification is allowed to reference this BswMSwitchPort." 
                                    expr="count(../../../BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource=&apos;BswMRteSwitchAckNotification&apos;]/BswMModeRequestSource[node:refvalid(BswMSwitchPortRef) and node:path(node:ref(BswMSwitchPortRef))=node:path(node:current())]) &gt; 1"/>
                        </a:da>
                        <v:ref name="BswMModeSwitchInterfaceRef" 
                               type="FOREIGN-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                Reference to the ModeSwitchInterface of this BswMModeSwitchPort.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:868ddf33-9a9f-4e55-9dcb-598cd2bed53a"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      false="ModeSwitchInterface references must be valid." 
                                      expr="node:refvalid(.)"/>
                              <mt:tst 
                                      true="There is no DataTypeMappingSet referencing the Mode Group defined by this interface." 
                                      expr="node:refvalid(.) and asc_bswm:interfaceInDataTypeMapping(.)=&apos;false&apos;"/>
                            </mt:xpath>
                          </a:da>
                          <a:da name="REF" value="ASTyped:ModeSwitchInterface"/>
                        </v:ref>
                        <v:var name="BswMModeSwitchQueueLength" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                This parameters defines the queue length of the
                                mode switch port.
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:0c1bdac0-e861-11e2-91e2-0800200c9a66"/>
                          <a:da name="DEFAULT" value="1"/>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <v:ctr name="BswMGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                        General configuration parameters of the Basic SW Mode Manager.
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" 
                     value="ECUC:fa61d6da-9eb0-40f5-91ad-14a6c6302f8f"/>
                <v:var name="BswMBinaryGenerationVerified" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        If this parameter is TRUE and the selected variant is VariantPostBuild then
                        symbolic names are not allowed as valid values for the BswMBswModeInitValueMode
                        parameter.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:7b6c7b90-1d4a-11e4-8c21-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="BswMCanSMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enable/disable CanSM module related BswM API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:20b09b71-af6c-4742-bc19-d7be46ef2c56"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;CanSM&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMCanSMIndication&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMCanSMIndication&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If CanSM-related ModeRequestPorts are used, CanSM support must be enabled."/>
                </v:var>
                <v:var name="BswMComMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enable/disable ComM module related BswM API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:5cf2bda7-4d17-4ce1-82ce-f766c3b72a24"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;ComM&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMComMIndication&apos;) or (BswMModeRequestSource = &apos;BswMComMPncRequest&apos;)]) &gt; 0 or count(../../BswMConfig/*/BswMArbitration/BswMEventRequestPort/*[BswMEventRequestSource = &apos;BswMComMInitiateReset&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMComMIndication&apos;) or (BswMModeRequestSource = &apos;BswMComMPncRequest&apos;)]) &gt; 0 or count(../../BswMConfig/*/BswMArbitration/BswMEventRequestPort/*[BswMEventRequestSource = &apos;BswMComMInitiateReset&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If ComM-related ModeRequestPorts (BswMComMIndication, BswMComMPncRequest) or EventRequestPorts (BswMComMInitiateReset) are used, ComM support must be enabled."/>
                </v:var>
                <v:var name="BswMDcmEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enable/disable Dcm module related BswM API:
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;BswM_Dcm_CommunicationMode_CurrentState&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;BswM_Dcm_ApplicationUpdated (stub only)&lt;/code&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:541b52fa-ca18-4b78-80ce-d3465511157e"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;Dcm&apos;)) = 1) or (count(../../BswMConfig/BswMArbitration/BswMModeRequestPort/*[starts-with(BswMModeRequestSource,&apos;BswMDcm&apos;)]) &gt; 0)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath>
                      <mt:tst 
                              true="If DCM-related ModeRequestPorts are used, DCM support must be enabled." 
                              expr="(count(../../BswMConfig/BswMArbitration/BswMModeRequestPort/*[starts-with(BswMModeRequestSource,&apos;BswMDcm&apos;)]) &gt; 0) and (. = &apos;false&apos;)"/>
                      <mt:tst 
                              true="If BswMDcmEnabled is set to false then BswMLegacyDcmEnabled also needs to be set to false." 
                              expr="(. = &apos;false&apos;) and (../BswMLegacyDcmEnabled = &apos;true&apos;) "/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="BswMLegacyDcmEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enable/disable the 4.0.2 legacy Dcm related API:
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;BswM_Dcm_RequestCommunicationMode&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;BswM_Dcm_RequestSessionMode&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;BswM_Dcm_RequestResetMode&lt;/code&gt;&lt;/li&gt;
                          &lt;/ul&gt;
                          Note that a 4.0.2 compatible Dcm is needed in order for
                          the BswM to produce compilable code.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="node:exists(as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId) and (as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId = 1) and node:exists(as:modconf(&apos;Dcm&apos;)/DcmConfigSet/*[1]/DcmGeneral/DcmModeDeclarationSupport) and node:value(as:modconf(&apos;Dcm&apos;)/DcmConfigSet/*[1]/DcmGeneral/DcmModeDeclarationSupport) = &apos;false&apos; and node:value(../BswMDcmEnabled) = &apos;true&apos;"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath 
                              true="If DcmModeDeclarationSupport is FALSE BswMLegacyDcmEnabled needs to be set to TRUE in order for the Dcm to be able to provide mode change notifications using the legacy 4.0.2 BswM API (BswM_Dcm_RequestCommunicationMode, BswM_Dcm_RequestSessionMode, BswM_Dcm_RequestResetMode)." 
                              expr="node:exists(as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId) and (as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId = 1) and node:exists(as:modconf(&apos;Dcm&apos;)/DcmConfigSet/*[1]/DcmGeneral/DcmModeDeclarationSupport) and node:value(as:modconf(&apos;Dcm&apos;)/DcmConfigSet/*[1]/DcmGeneral/DcmModeDeclarationSupport) = &apos;false&apos; and (. = &apos;false&apos;) and (../BswMDcmEnabled = &apos;true&apos;)"/>
                  </a:da>
                  <a:da name="WARNING" type="Multi">
                    <mt:xpath>
                      <mt:tst 
                              true="If DcmModeDeclarationSupport is set to TRUE BswMLegacyDcmEnabled should be set to FALSE as the Dcm will never use the legacy 4.0.2 BswM API (BswM_Dcm_RequestCommunicationMode, BswM_Dcm_RequestSessionMode, BswM_Dcm_RequestResetMode)." 
                              expr="node:exists(as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId) and (as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId = 1) and node:exists(as:modconf(&apos;Dcm&apos;)/DcmConfigSet/*[1]/DcmGeneral/DcmModeDeclarationSupport) and node:value(as:modconf(&apos;Dcm&apos;)/DcmConfigSet/*[1]/DcmGeneral/DcmModeDeclarationSupport) = &apos;true&apos; and (. = &apos;true&apos;) and (../BswMDcmEnabled = &apos;true&apos;)"/>
                      <mt:tst 
                              true="Setting the BswMLegacyDcmEnabled parameter to TRUE can result in uncompilable BswM code in case the Dcm module doesn&apos;t provide support for 4.0.2 mode change notifications (BswM_Dcm_RequestCommunicationMode, BswM_Dcm_RequestSessionMode, BswM_Dcm_RequestResetMode)." 
                              expr="((node:exists(as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId) = &apos;false&apos;) or (node:exists(as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId) and (as:modconf(&apos;Dcm&apos;)/CommonPublishedInformation/VendorId != 1))) and (. = &apos;true&apos;) and (../BswMDcmEnabled = &apos;true&apos;)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="BswMDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Switches the Development Error Detection and Notification ON or OFF.
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled / ON&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled / OFF&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:d8e85281-44c8-4346-9f78-2dc8123999ce"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="BswMEcuMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables EcuM-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:4b8a67a5-6cb4-410f-a920-88f95b9b6135"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;EcuM&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMEcuMIndication&apos;) or (BswMModeRequestSource = &apos;BswMEcuMWakeupSource&apos;)]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMEcuMIndication&apos;) or (BswMModeRequestSource = &apos;BswMEcuMWakeupSource&apos;)]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If EcuM-related ModeRequestPorts are used, EcuM support must be enabled."/>
                </v:var>
                <v:var name="BswMEthIfEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables EthIf-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;EthIf&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMEthIfPortGroupLinkStateChg&apos;)]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMEthIfPortGroupLinkStateChg&apos;)]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If EthIf-related ModeRequestPorts are used, EthIf support must be enabled."/>
                </v:var>
                <v:var name="BswMEthSMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables EthSM-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:9c14cece-710b-491c-881c-3f26036d5934"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;EthSM&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMEthSMIndication&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMEthSMIndication&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If EthSM-related ModeRequestPorts are used, EthSM support must be enabled."/>
                </v:var>
                <v:var name="BswMFrSMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables FrSM-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:470ff123-9312-48f9-9437-fa492139535d"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;FrSM&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMFrSMIndication&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMFrSMIndication&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If FrSM-related ModeRequestPorts are used, FrSM support must be enabled."/>
                </v:var>
                <v:var name="BswMGenericRequestEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables GenericRequest-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:9a887940-d041-456c-8f7b-1275123155f8"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMGenericRequest&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMGenericRequest&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                           true="If GenericRequest-related ModeRequestPorts are used, GenericRequest support must be enabled."/>
                    <a:tst 
                           expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMGenericRequest&apos;]) = 0) and (. = &apos;true&apos;)" 
                           true="If GenericRequest-related ModeRequestPorts are not used, GenericRequest support must not be enabled."/>
                  </a:da>
                </v:var>
                <v:var name="BswMJ1939DcmEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enable/disable J1939Dcm module related BswM API:
                          true: Enabled
                          false: Disabled
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;J1939Dcm&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMJ1939DcmBroadcastStatus&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMJ1939DcmBroadcastStatus&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If BswMJ1939DcmBroadcastStatus ports are used, BswMJ1939DcmEnabled must be set to TRUE."/>
                </v:var>
                <v:var name="BswMJ1939NmEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enable/disable J1939Nm module related BswM API.
                          true: Enabled
                          false: Disabled
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;J1939Nm&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMJ1939NmIndication&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMJ1939NmIndication&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If BswMJ1939NmIndication ports are used, BswMJ1939NmEnabled must be set to TRUE."/>
                </v:var>
                <v:var name="BswMLinSMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables LinSM-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:bfacb96c-1654-4a15-8bf0-ab9450e57349"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;LinSM&apos;)) = 1) or (((count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMLinSMIndication&apos;) or (BswMModeRequestSource = &apos;BswMLinScheduleIndication&apos;)]) &gt; 0)) or ((count(../../BswMConfig/*/BswMModeControl/BswMAction/*[BswMAvailableActions = &apos;BswMLinScheduleSwitch&apos;]) &gt; 0)))"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMLinSMIndication&apos;) or (BswMModeRequestSource = &apos;BswMLinScheduleIndication&apos;)]) &gt; 0) and (. = &apos;false&apos;)" 
                           true="If LinSM-related ModeRequestPorts are used, LinSM support must be enabled."/>
                    <a:tst 
                           expr="(count(../../BswMConfig/*/BswMModeControl/BswMAction/*[BswMAvailableActions = &apos;BswMLinScheduleSwitch&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                           true="If a BswMAction of type &apos;BswMLinScheduleSwitch&apos; is used, LinSM support must be enabled."/>
                  </a:da>
                </v:var>
                <v:var name="BswMLinTPEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables LinTP-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2e5c6fe7-5142-49a1-aab3-f8f6d46572bb"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;LinTP&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMLinTpModeRequest&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMLinTpModeRequest&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If LinTP-related ModeRequestPorts are used, LinTP support must be enabled."/>
                </v:var>
                <v:var name="BswMLogicalExpressionsOptimization" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          This parameter controls the optimization of logical expressions w.r.t ROM consumption.
                          If set to TRUE, BswM will only generate linktime artifacts for the expressions which are
                          directly referenced by rules, ignoring unused or nested expressions.
                          If set to FALSE, BswM will generate linktime artifacts for all expressions.
                          This parameter is ignored and treated as TRUE if IMPLEMENTATION_CONFIG_VARIANT = VariantPreCompile.
                          IMPORTANTE NOTE: If BswMLogicalExpressionsOptimization = TRUE, rules cannot be assigned
                          a previously unused expression or an expression which is part of another logical expresson at postbuild time.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="Link">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:value(../../IMPLEMENTATION_CONFIG_VARIANT) = &apos;VariantPostBuild&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="BswMActionsOptimization" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          This parameter controls the optimization of actions w.r.t ROM consumption.
                          If set to TRUE, BswM will only generate linktime artifacts for the actions which
                          are actually used and ignoring all others.
                          If set to FALSE, BswM will generate linktime artifacts for all actions.
                          This parameter is ignored and treated as TRUE if IMPLEMENTATION_CONFIG_VARIANT = VariantPreCompile.
                          IMPORTANTE NOTE: If BswMActionsOptimization = TRUE, action list items cannot be assigned
                          previously unused actions at postbuild time.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="Link">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="../../IMPLEMENTATION_CONFIG_VARIANT = &apos;VariantPreCompile&apos;"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="node:value(../../IMPLEMENTATION_CONFIG_VARIANT) = &apos;VariantPostBuild&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="BswMMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          The cycle time of the periodic main function
                          of BswM defined in seconds .
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="Link">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:abcfbdc1-fe8b-436d-91b9-4ddc763395c4"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0.001"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="BswMMaxNumActionLists" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          The maximum number of BswM action lists supported by this configuration.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:a76eb98b-afc8-4157-b84a-1e845c54a338"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="num:max(node:foreach(../../BswMConfig/*/@index, &apos;i&apos;, &apos;count(../../BswMConfig/*[$i+1]/BswMModeControl/BswMActionList/*)&apos;))"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*) &gt; 0) and (num:max(node:foreach(../../BswMConfig/*/@index, &apos;i&apos;, &apos;number(count(../../BswMConfig/*[$i+1]/BswMModeControl/BswMActionList/*) &gt; .)&apos;)) &gt; 0)" 
                        true="The number of action lists configured in each BswM configuration must be less or equal than the maximum number of action lists!"/>
                </v:var>
                <v:var name="BswMMaxNumRules" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          The maximum number of BswM rules supported by this configuration.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:9aff426a-4cb0-44ff-b2d3-12907f54308b"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="num:max(node:foreach(../../BswMConfig/*/@index, &apos;i&apos;, &apos;count(../../BswMConfig/*[$i+1]/BswMArbitration/BswMRule/*)&apos;))"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*) &gt; 0) and (num:max(node:foreach(../../BswMConfig/*/@index, &apos;i&apos;, &apos;number(count(../../BswMConfig/*[$i+1]/BswMArbitration/BswMRule/*) &gt; .)&apos;)) &gt; 0)" 
                        true="The number of rules configured in each BswM configuration must be less or equal than the maximum number of rules!"/>
                </v:var>
                <v:var name="BswMNmEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables NM-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;Nm&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMNmIfCarWakeUpIndication&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMNmIfCarWakeUpIndication&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If Nm-related ModeRequestPorts are used, Nm support must be enabled."/>
                </v:var>
                <v:var name="BswMNvMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables NvM-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:036412df-b35c-43c0-b986-10d000024996"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;NvM&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMNvMRequest&apos;) or (BswMModeRequestSource = &apos;BswMNvMJobModeIndication&apos;)]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMNvMRequest&apos;) or (BswMModeRequestSource = &apos;BswMNvMJobModeIndication&apos;)]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If NvM-related ModeRequestPorts are used, NvM support must be enabled."/>
                </v:var>
                <v:var name="BswMRelocatablePbcfgEnable" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         Enables/disable support for relocatable post-build configuration.
                         &lt;ul&gt;
                           &lt;li&gt;True: Postbuild configuration relocatable in memory.&lt;/li&gt;
                           &lt;li&gt;False: Postbuild configuration not relocatable in memory.&lt;/li&gt;
                         &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(node:contains(node:refs(as:modconf(&apos;PbcfgM&apos;)/PbcfgMBswModules/*/PbcfgMBswModuleRef), as:modconf(&apos;BswM&apos;)) = &apos;true&apos;)" 
                        true="false" false="true"/>
                </v:var>
                <v:var name="BswMRteUsage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;This parameter enables the usage of the RTE for this module.&lt;/p&gt;
                         &lt;p&gt;For an easy integration it is recommended to disable the usage
                            of the RTE at the beginning of the integration work.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Rte Usage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMModeControl/BswMAction/*[(BswMAvailableActions = &apos;BswMRteSwitch&apos;) or ((BswMAvailableActions = &apos;BswMRteModeRequest&apos;))]) &gt; 0) or                                (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMSwcModeRequest&apos;) or (BswMModeRequestSource = &apos;BswMSwcModeNotification&apos;) or (BswMModeRequestSource = &apos;BswMRteSwitchAckNotification&apos;)]) &gt; 0)"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath>
                      <mt:tst 
                              true="BswMRteUsage should be set to TRUE if RteSwitch actions, RteModeRequest actions, SwcModeRequest ports or SwcModeNotification ports are used." 
                              expr="(. = &apos;false&apos;) and ((count(../../BswMConfig/*/BswMModeControl/BswMAction/*[(BswMAvailableActions = &apos;BswMRteSwitch&apos;) or ((BswMAvailableActions = &apos;BswMRteModeRequest&apos;))]) &gt; 0) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMSwcModeRequest&apos;) or (BswMModeRequestSource = &apos;BswMSwcModeNotification&apos;) or (BswMModeRequestSource = &apos;BswMRteSwitchAckNotification&apos;)]) &gt; 0))"/>
                      <mt:tst 
                              true="BswMRteUsage should be set to FALSE if no RteSwitch actions, RteModeRequest actions, SwcModeRequest ports or SwcModeNotification ports are used." 
                              expr="(. = &apos;true&apos;) and ((count(../../BswMConfig/*/BswMModeControl/BswMAction/*[(BswMAvailableActions = &apos;BswMRteSwitch&apos;) or ((BswMAvailableActions = &apos;BswMRteModeRequest&apos;))]) = 0) and (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMSwcModeRequest&apos;) or (BswMModeRequestSource = &apos;BswMSwcModeNotification&apos;) or (BswMModeRequestSource = &apos;BswMRteSwitchAckNotification&apos;)]) = 0))"/>
                    </mt:xpath>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr=". = &apos;true&apos; and count(as:modconf(&apos;Rte&apos;)) = 0" 
                        true="The usage of the RTE is enabled for the BswM, but RTE is disabled or missing."/>
                </v:var>
                <v:var name="BswMSchMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          This parameter is disabled and its default
                          value is always &apos;true&apos; as the SchM interface
                          is always needed by the BswM.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:cc68af98-14aa-460e-a4cd-b26655bf0148"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="READONLY" value="true"/>
                </v:var>
                <v:var name="BswMSdEnabled" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="EN: enable/disable Sd module related BswM_Sd_CurrentState API:"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:680dabe7-1575-43b6-96ec-1087cff51ae3"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;Sd&apos;)) = 1) or ((count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMSdClientServiceCurrentState&apos;) or (BswMModeRequestSource = &apos;BswMSdConsumedEventGroupCurrentState&apos;) or (BswMModeRequestSource = &apos;BswMSdEventHandlerCurrentState&apos;) ]) &gt; 0) or                                (count(../../BswMConfig/*/BswMModeControl/BswMAction/*[(BswMAvailableActions = &apos;BswMSdClientServiceModeRequest&apos;) or (BswMAvailableActions = &apos;BswMSdConsumedEventGroupModeRequest&apos;) or (BswMAvailableActions = &apos;BswMSdServerServiceModeRequest&apos;)]) &gt; 0))"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[(BswMModeRequestSource = &apos;BswMSdClientServiceCurrentState&apos;) or (BswMModeRequestSource = &apos;BswMSdConsumedEventGroupCurrentState&apos;) or (BswMModeRequestSource = &apos;BswMSdEventHandlerCurrentState&apos;) ]) &gt; 0) and (. = &apos;false&apos;)" 
                           true="If Sd-related ModeRequestPorts are used, Sd support must be enabled."/>
                    <a:tst 
                           expr="(count(../../BswMConfig/*/BswMModeControl/BswMAction/*[(BswMAvailableActions = &apos;BswMSdClientServiceModeRequest&apos;) or (BswMAvailableActions = &apos;BswMSdConsumedEventGroupModeRequest&apos;) or (BswMAvailableActions = &apos;BswMSdServerServiceModeRequest&apos;)]) &gt; 0) and (. = &apos;false&apos;)" 
                           true="If Sd-related BswMActions are used, Sd support must be enabled."/>
                  </a:da>
                </v:var>
                <v:var name="BswMVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Switches the possibility to read the version information with the
                          service &lt;code&gt;BswM_GetVersionInfo()&lt;/code&gt;.&lt;/p&gt;
                        &lt;/html&gt;
                        &lt;ul&gt;
                          &lt;li&gt;true: Enabled&lt;/li&gt;
                          &lt;li&gt;false: Disabled&lt;/li&gt;
                        &lt;/ul&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:dd2c4266-ade2-43ac-a7a3-adba2f1ca684"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="BswMWdgMEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/Disables WdgM-related API
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; : Enabled&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Disabled&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:393d1df2-c7d9-4d1b-9b1f-37b58840b592"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="(count(as:modconf(&apos;WdgM&apos;)) = 1) or (count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMWdgMRequestPartitionReset&apos;]) &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(count(../../BswMConfig/*/BswMArbitration/BswMModeRequestPort/*[BswMModeRequestSource = &apos;BswMWdgMRequestPartitionReset&apos;]) &gt; 0) and (. = &apos;false&apos;)" 
                        true="If WdgM-related ModeRequestPorts are used, WdgM support must be enabled."/>
                </v:var>
                <v:ctr name="BswMQueuedArbitration" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          This optional container controls the queued mode arbitration feature which ensures
                          that the processing of an immediate request of any type or the processing of the
                          BswM_MainFunction cannot be interrupted by other requests. This is achieved by queueing
                          the requests which interrupt the processing of the existing immediate request or the
                          processing of the BswM_MainFunction. The queued requests are executed in the order of
                          their arrival after the processing they interrupted has been completed.
                          If the container is disabled (by default), BswM&apos;s behaviour remains the same as before.
                          If the container is enabled, the queued mode arbitration feature is enabled and can be
                          finely tuned via the provided parameters.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:var name="BswMArbitrationQueueLength" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            This parameter controls the size of the arbitration queue.
                            By default, the value of this parameter is the maximum number
                            of mode request ports in all BswM configurations but this can
                            be manually changed in order to fit the project&apos;s requirements.
                            In case the arbitration queue is full and a new request needs
                            to be enqueued, it will be rejected and a DET error will be reported
                            if BswMDevErrorDetect is set to TRUE.
                            Note that a larger queue will also increase the RAM usage of BswM.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="num:max(node:foreach(../../../BswMConfig/*/@index, &apos;i&apos;, &apos;count(../../../BswMConfig/*[$i+1]/BswMArbitration/BswMModeRequestPort/*)&apos;))"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=255"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="BswMQueueDeferredRequests" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            This parameter can be used to exclude or include deferred mode request ports
                            from being queued.
                            If set to FALSE, only immediate mode request ports will be queued.
                            If set to TRUE, both immediate and deferred mode request ports will be queued.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="BswMDelayMainFunction" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            This parameter can be used to handle the situation when the
                            BswM_MainFunction interrupts the execution of an immediate mode
                            request.
                            If set to FALSE, the BswM_MainFunction will execute even if there is
                            an immediate request being processed (thus bypassing the arbitration feature).
                            If set to TRUE, the BswM_MainFunction will be delayed until the processing
                            of the immediate mode request is completed. Note that any other request
                            interrupting the processing of the immediate request the BswM_MainFunction
                            interrupted will also be processed before the BswM_MainFunction.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="BswMUserIncludeFiles" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Collection of header file names which shall be included by the BswM.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" 
                       value="ECUC:b1c3db6a-2121-452d-aaa1-51f63963bb03"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:lst name="BswMUserIncludeFile">
                    <a:da name="MIN" value="1"/>
                    <v:var name="BswMUserIncludeFile" type="STRING">
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:2bfbd962-d945-4d4a-84c5-3fe3a3e06004"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="text:match(., &apos;^.+\.h$&apos;)" 
                            false="BswMUserCalloutHeaderFile must be a valid header file name without spaces and end with &apos;.h&apos;."/>
                    </v:var>
                  </v:lst>
                </v:ctr>
              </v:ctr>
              <v:ctr name="ReportToDem" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      Production error handling
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Production error handling"/>
                <a:a name="TAB" value="Optimization"/>
                <a:da name="TITLE" value="Production error handling"/>
                <v:var name="BswMActionFailedReportToDem" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Selects the handling of the production error:
                        &lt;em&gt;&lt;code&gt;BSWM_E_ACTION_FAILED&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="BswM Action Failure"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../BswMGeneral/BswMDevErrorDetect = &apos;false&apos;)" 
                        true="BswMDevErrorDetect is set to false which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="BswMActionFailedReportToDemDetErrorId" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;This parameter is used to report Dem to Det.
                          It shall be checked that the variable
                          &lt;code&gt;BswMActionFailedReportToDemDetErrorId&lt;/code&gt;
                          is set to a value between 15 and 255; the default value shall be 15.
                          A preprocessor define &lt;code&gt;BSWM_E_ACTION_FAILED&lt;/code&gt; shall be generated
                          holding the value of &lt;code&gt;BswMActionFailedReportToDemDetErrorId&lt;/code&gt;.&lt;/p&gt;
                          &lt;p&gt;Dependencies:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;The identifier to report Dem to Det
                              must not be zero-based.&lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="BswM Action Failed DemToDet ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="15"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../BswMActionFailedReportToDem = &apos;DET&apos;) and                     (../../BswMGeneral/BswMDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=15"/>
                  </a:da>
                </v:var>
              </v:ctr>
              <v:ctr name="BswMDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                  &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="BswMDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;Enables or disables the defensive
                      programming feature for the module BswM.&lt;/p&gt;
                      &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                      To use the defensive programming feature, proceed as follows:
                      &lt;ol&gt;
                      &lt;li&gt;Enable development error detection&lt;/li&gt;
                      &lt;li&gt;Enable defensive programming&lt;/li&gt;
                      &lt;li&gt;Enable assertions as required&lt;/li&gt;
                      &lt;/ol&gt;
                      &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../BswMGeneral/BswMDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="BswMPrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables handling of precondition assertion checks reported from
                    the module BswM.&lt;/p&gt;
                    &lt;p&gt;Dependency on parameter(s):
                    &lt;ul&gt;
                    &lt;li&gt;Enable Development Error Detection (&lt;code&gt;BswMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                    &lt;li&gt;Enable Defensive Programming (&lt;code&gt;BswMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../BswMGeneral/BswMDevErrorDetect = &apos;true&apos;) and (../BswMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="BswMPostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables handling of postcondition assertion checks reported from
                    the module BswM.&lt;/p&gt;
                    &lt;p&gt;Dependency on parameter(s):
                    &lt;ul&gt;
                    &lt;li&gt;Enable Development Error Detection (&lt;code&gt;BswMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                    &lt;li&gt;Enable Defensive Programming (&lt;code&gt;BswMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../BswMGeneral/BswMDevErrorDetect = &apos;true&apos;) and (../BswMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="BswMStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables handling of static assertion checks reported from
                    the module BswM.&lt;/p&gt;
                    &lt;p&gt;Dependency on parameter(s):
                    &lt;ul&gt;
                    &lt;li&gt;Enable Development Error Detection (&lt;code&gt;BswMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                    &lt;li&gt;Enable Defensive Programming (&lt;code&gt;BswMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../BswMGeneral/BswMDevErrorDetect = &apos;true&apos;) and (../BswMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="BswMUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables handling of unreachable code assertion checks
                    reported from the module BswM.&lt;/p&gt;
                    &lt;p&gt;Dependency on parameter(s):
                    &lt;ul&gt;
                    &lt;li&gt;Enable Development Error Detection (&lt;code&gt;BswMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                    &lt;li&gt;Enable Defensive Programming (&lt;code&gt;BswMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../BswMGeneral/BswMDevErrorDetect = &apos;true&apos;) and (../BswMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="BswMInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables handling of invariant assertion checks
                    reported from functions of the module BswM.&lt;/p&gt;
                    &lt;p&gt;Dependency on parameter(s):
                    &lt;ul&gt;
                    &lt;li&gt;Enable Development Error Detection (&lt;code&gt;BswMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                    &lt;li&gt;Enable Defensive Programming (&lt;code&gt;BswMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../BswMGeneral/BswMDevErrorDetect = &apos;true&apos;) and (../BswMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/BswM"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="15"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="6"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="42"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the BswM can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
