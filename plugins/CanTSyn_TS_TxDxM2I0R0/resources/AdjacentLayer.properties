# AdjacentLayer.properties file of module CanTSyn.
#
# The background for designing property files can be found in
# http://wiki.elektrobit.com/index.php/Project:AutoCore_Module_Properties
#
# The module name corresponds to the name of attribute 'categoryType' in the plugin.xml of the
# adjacent module and must be identical to the PduRBswModules Container-short name.
#
# The properties in 'Module Type Dependent Data' must be provided in dependence on particles
# ForUpperLayer|ForLowerLayer, If|Tp ('If' for handling nonTP-PDUs, 'Tp' for handling
# TP-PDUs) and Rx/Tx. If it's not provided it's considered as 'Unsupported'.
#
# 'Mandatory', 'Unsupported' and 'Optional' are considered as possible values with the
# following meaning:
# - Mandatory: module supports this API, API shall be used by adjacent layer module
# - Optional: module supports this API (depending on the configuration), API can be used by adjacent layer module
# - Unsupported: module doesn't support this API, API shall not be used by adjacent layer module
# The XPath expressions to the references of the relevant PDUs or PDUIDs shall be restricted by
# conditions if possible.
#
# The properties for the 'API Names' are optional:
# - if no value is provided, default name is assigned (<Callee>_<Caller><ApiName>)
#   where <ApiName> is the name of the API with API type (e.g. IfRxindication, TpRxindication,...) and
# - those APIs provided by the adjacent layer module shall start with '<Callee>_'.



# ------------------------------------------
# ------------  General Data  --------------
# ------------------------------------------

# Name of module configuration (i.e name which can be used with as:modconf('<ModuleConfigName>'))
CanTSyn.AdjacentLayerConfig.ModuleConfigName:CanTSyn

# Supported AUTOSAR Handle ID Version (allowed values: AUTOSAR32, AUTOSAR40)
CanTSyn.AdjacentLayerConfig.HandleIDPolicyVersion:AUTOSAR40

# Name of include file(s)
# Multiple header files are separated by comma.
# If no header file is provided no property value shall be configured.
CanTSyn.AdjacentLayerConfig.IncludeFileNames.V1.If.ForUpperLayer:CanTSyn.h

# --------------------------------------------
# -------  Module Type Dependent Data  -------
# --------------------------------------------

# ------- Data of time donains -------

CanTSyn.AdjacentLayerConfig.AbsXPathGeneric.V1.TimeBaseRefsMaster:as:modconf('CanTSyn')[1]/CanTSynGlobalTimeDomain/*[node:exists(CanTSynGlobalTimeMaster)]/CanTSynSynchronizedTimeBaseRef

CanTSyn.AdjacentLayerConfig.AbsXPathGeneric.V1.TimeBaseRefsSlave:as:modconf('CanTSyn')[1]/CanTSynGlobalTimeDomain/*[node:exists(CanTSynGlobalTimeSlave)]/CanTSynSynchronizedTimeBaseRef

# XPath-expression to the global time stamp support parameter. Might contain <configIndex>
# There are three possibilities to set the timestamps support status:
# 1.) The module can activate/deactivate timestamp support only as global parameter. The Xpath expression must contain the path to
#     this global paarameter (e.g. as:modconf('CanTSyn')[1]/CanTSynGeneral/CanTSynHardwareTimestampSupport)
# 2.) The module can announce a timestamp support for every time domain seperately. The Xpath expression must contain the <configIndex>
#     free variable. The syntax is: Define a XPath expression for the timestamp support parameter of all time domains referring to
#     the StbM time base with the ID equal to <configIndex> (e.g.
#     CanTSyn.AdjacentLayerConfig.AbsXPathGeneric.V1.TimeStampSupport:
# 3.) The module does not support timestamping. Don't define the key or define an empty value for the key.
CanTSyn.AdjacentLayerConfig.AbsXPathGeneric.V1.TimeStampSupport:

