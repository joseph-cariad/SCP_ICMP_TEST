# AdjacentLayer.properties file of module Mirror.
#
# The background for designing property files can be found in
# http://wiki.elektrobit.com/index.php/Project:AutoCore_Module_Properties
#
# The module name corresponds to the name of attribute 'categoryType' in the plugin.xml of the
# adjacent module and must be identical to the PduRBswModules Container-short name.
#
# The properties in 'Module Type Dependent Data' must be provided in dependence on particles
# ForUpperLayer|ForLowerLayer, If|Tp ('If' for handling nonTP-PDUs, 'Tp' for handling
# TP-PDUs) and Rx/Tx. If it's not provided it’s considered as 'Unsupported'.
#
# 'Mandatory', 'Unsupported' and 'Optional' are considered as possible values with the
# following meaning:
# - Mandatory: module supports this API, API shall be used by adjacent layer module
# - Optional: module supports this API (depending on the configuration), API can be used by adjacent layer module
# - Unsupported: module doesn't support this API, API shall not be used by adjacent layer module
# The XPath expressions to the references of the relevant PDUs or PDUIDs shall be restricted by
# conditions if possible.
#
# The properties for the 'API Names' are optional:
# - if no value is provided, default name is assigned (<Callee>_<Caller><ApiName>)
#   where <ApiName> is the name of the API with API type (e.g. IfRxindication, TpRxindication,...) and
# - those APIs provided by the adjacent layer module shall start with '<Callee>_'.



# ------------------------------------------
# ------------  General Data  --------------
# ------------------------------------------

# Name of module configuration (i.e name which can be used with as:modconf('<ModuleConfigName>'))
Mirror.AdjacentLayerConfig.ModuleConfigName:Mirror

# Supported AUTOSAR Handle ID Version (allowed values: AUTOSAR32, AUTOSAR40)
Mirror.AdjacentLayerConfig.HandleIDPolicyVersion:AUTOSAR40

# Name of include file(s)
# Multiple header files are separated by comma.
# If no header file is provided no property value shall be configured.
Mirror.AdjacentLayerConfig.IncludeFileNames.V1.If.ForLowerLayer:Mirror_Cbk.h

# Information which services (If/Tp) a module (optionally) provides for an upper or lower layer. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
Mirror.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForUpperLayer:Unsupported
Mirror.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForLowerLayer:Mandatory
Mirror.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForUpperLayer:Unsupported
Mirror.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForLowerLayer:Unsupported

# List of modules which are possible as upper or lower layer modules
# (comma separated list or use empty property if module has a generic layer support)
# List is only valid if respective LayerServiceSupport exists.
Mirror.AdjacentLayerConfig.LayerSupportList.V1.ForLowerLayer:PduR

# Information about the multi-core and/or partition support capabilities of the module
# Support for allocation the module to multiple partitions (allowed values: Single, Multiple, default: Single)
Mirror.AdjacentLayerConfig.MulticoreAndPartitionSupport.V1.PartitionAllocationType:Multiple
# Support for allocation the module to multiple cores (allowed values: Single, Multiple, default: Single)
Mirror.AdjacentLayerConfig.MulticoreAndPartitionSupport.V1.CoreAllocationType:Multiple

# --------------------------------------------
# -------  Module Type Dependent Data  -------
# --------------------------------------------

# Information on whether a module (optionally) provides a given API feature to its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.ProvidedApiFeature.V1.<layerType>.<apiFeature>
Mirror.AdjacentLayerConfig.ProvidedApiFeature.V1.ForLowerLayer.IfTxConfirmation:optional
Mirror.AdjacentLayerConfig.ProvidedApiFeature.V1.ForLowerLayer.IfTriggerTransmit:Unsupported

# Information on whether a module (optionally) requires a given API feature from its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.RequiredApiFeature.V1.<layerType>.<apiFeature>
Mirror.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.IfCancelTransmit:Unsupported
Mirror.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.TpChangeParameter:Unsupported
Mirror.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.TpCancelReceive:Unsupported
Mirror.AdjacentLayerConfig.RequiredApiFeature.V1.ForLowerLayer.TpCancelTransmit:Unsupported

# ------- Data to referenced global Tx I-PDUs (ForLowerLayer, If-module) -------
# XPath-expression to all references of the relevant Tx I-PDUs
Mirror.AdjacentLayerConfig.AbsXPathPduRef.V1.ForLowerLayer.If.Tx:as:modconf('Mirror')[1]/MirrorConfigSet/MirrorDestNetwork/*/MirrorDestPdu/*/MirrorDestPduRef

# relative XPath-expression to associated PduId of above referenced Rx/Tx I-PDU
Mirror.AdjacentLayerConfig.RelXPathPduId.V1.ForLowerLayer.If.Tx:as:modconf('Mirror')[1]/MirrorConfigSet/MirrorDestNetwork/*/MirrorDestPdu/*/MirrorDestPduId

# ------------------------------------------
# ------------    API Names   --------------
# ------------------------------------------

# API functions are provided by the callee module to the caller module with
# default pattern <callee>_<caller><name> where <name> reflects the particle of property
# <caller>.AdjacentLayerConfig.ApiName.V1.<name>
#Mirror.AdjacentLayerConfig.ApiName.V1.IfRxIndication:Mirror_RxIndication
Mirror.AdjacentLayerConfig.ApiName.V1.IfTxConfirmation:Mirror_TxConfirmation
#Mirror.AdjacentLayerConfig.ApiName.V1.IfTriggerTransmit:Mirror_TriggerTransmit
#Mirror.AdjacentLayerConfig.ApiName.V1.TpStartOfReception:Mirror_StartOfReception
#Mirror.AdjacentLayerConfig.ApiName.V1.TpCopyRxData:Mirror_CopyRxData
#Mirror.AdjacentLayerConfig.ApiName.V1.TpRxIndication:Mirror_TpRxIndication
#Mirror.AdjacentLayerConfig.ApiName.V1.TpCopyTxData:Mirror_CopyTxData
#Mirror.AdjacentLayerConfig.ApiName.V1.TpTxConfirmation:Mirror_TpTxConfirmation

# Overrule API names provided by the adjacent layer's <AdjacentLayerName> property file,
# e.g. to overrule the default API name PduR_MirrorIfTransmit of the PduR by PduR_MirrorTransmit
# of the Mirror properties file.
PduR.AdjacentLayerConfig.ApiName.V1.IfTransmit.Mirror:PduR_MirrorTransmit
#PduR.AdjacentLayerConfig.ApiName.V1.TpTransmit.Mirror:PduR_MirrorTpTransmit
# PduR.AdjacentLayerConfig.ApiName.V1.TpCancelReceive.Mirror:PduR_MirrorCancelReceive
# PduR.AdjacentLayerConfig.ApiName.V1.TpCancelTransmit.Mirror:PduR_MirrorCancelTransmit

