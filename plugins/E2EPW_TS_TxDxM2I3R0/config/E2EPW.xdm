<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM2I3R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="E2EPW" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>2.3.20</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2021-07-14T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>EN: 
                    &lt;html&gt;
                      Virtual module to collect ECU Configuration specific / global configuration information.
                    &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="3"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="20"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="VendorSpecific" type="IDENTIFIABLE">
                <a:a name="TAB" value="Vendor Specific"/>
                <v:var name="GenerateE2EUnconnectedPorts" type="BOOLEAN">
                  <a:a name="COLUMN_TITLE" 
                       value="Enable Generation of E2E unconnected ports"/>
                  <a:a name="COLUMN_WIDTH" value="100"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Activates/Deactivates the generation of E2E unconnected protected sender / receiver ports.
                          This feature is only used for specific development purposes and shall be deactivated for mass production projects.
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Generation of E2E unconnected ports is activated.
                            In this case E2EPW code for pure Intra-ECU communication is generated for
                            all unconnected ports that are referenced by an E2E description&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Generation of E2E unconnected ports is deactivated.
                            In this case no E2EPW code is generated for unconnected ports
                            that are referenced by an E2E description&lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable Generation of E2E unconnected ports"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:c5770570-79da-11e3-981f-0800200c9a66"/>
                  <a:a name="VISIBLE" value="true"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="WARNING" type="XPath" expr=". = &apos;true&apos;" 
                        true="GenerateE2EUnconnectedPorts is enabled. Please consider that it shall only be used for specific development purposes and shall be deactivated for mass production projects."/>
                </v:var>
                <v:var name="VerifyGeneratedCode" type="BOOLEAN">
                  <a:a name="COLUMN_WIDTH" value="100"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Activates/Deactivates the automatic code verification of generated code
                          by call to E2EPWCheck tool at the post-generation step.
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Automatic code verification is activated.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Automatic code verification is deactivated.&lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" 
                       value="ECUC:a4162f80-7f77-11e3-baa7-0800200c9a66"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="WARNING" type="XPath" expr=". = &apos;false&apos; " 
                        true="Automatic code verification is deactivated. The generated code shall only be used for development."/>
                </v:var>
                <v:var name="E2EByPass" type="BOOLEAN">
                  <a:a name="COLUMN_TITLE" 
                       value="Disable E2E Protection (E2E bypass)"/>
                  <a:a name="COLUMN_WIDTH" value="100"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Activates/Deactivates the E2E Protection.
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: E2E Protection is deactivated.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: E2E Protection is activated.&lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Disable E2E Protection (E2E bypass)"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:a5a4de00-f419-11e0-be50-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="node:value(.) = &apos;true&apos; and node:value(../TxSignalGroupArrayAccess) = &apos;true&apos;" 
                        true="Deactivation of the E2E Protection (ByPass mode) is not supported if TxSignalGroupArrayAccess is enabled."/>
                  <a:da name="WARNING" type="XPath" expr=". = &apos;true&apos; " 
                        true="E2E Protection is disabled (E2E bypass mode).                        The generated code shall only be used for development."/>
                </v:var>
                <v:var name="WrapperMode" type="ENUMERATION">
                  <a:a name="COLUMN_TITLE" value="Wrapper Mode"/>
                  <a:a name="COLUMN_WIDTH" value="100"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Globally defines if either single channel or redundant channel
                          E2E Protection wrapper routines shall be generated.
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;SingleChannel&lt;/code&gt;: Single channel wrapper routines are generated.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;RedundantChannel&lt;/code&gt;: Redundant channel wrapper routines are generated.&lt;/li&gt;
                          &lt;/ul&gt;
                         &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Wrapper Mode"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:b0f54a60-f419-11e0-be50-0800200c9a66"/>
                  <a:da name="DEFAULT" value="SingleChannel"/>
                  <a:da name="RANGE">
                    <a:v>SingleChannel</a:v>
                    <a:v>RedundantChannel</a:v>
                  </a:da>
                </v:var>
                <v:var name="UsingRteIsUpdated" type="ENUMERATION">
                  <a:a name="COLUMN_TITLE" value="Usage of RteIsUpdated"/>
                  <a:a name="COLUMN_WIDTH" value="100"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Defines if the Rte API &lt;code&gt;Rte_IsUpdated_p_o()&lt;/code&gt; shall
                          be used for the E2E Protection.
                          Note that this API is not available in all AUTOSAR versions.
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;RteIsUpdatedUnused&lt;/code&gt;: &lt;code&gt;Rte_IsUpdated_p_o()&lt;/code&gt; is not used.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;RteIsUpdatedUsed&lt;/code&gt;: &lt;code&gt;Rte_IsUpdated_p_o()&lt;/code&gt; is used.&lt;/li&gt;
                          &lt;/ul&gt;
                         &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Usage of RteIsUpdated"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:bb1ec2f0-f419-11e0-be50-0800200c9a66"/>
                  <a:da name="DEFAULT" value="RteIsUpdatedUnused"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="node:value(.) = &apos;RteIsUpdatedUsed&apos; and node:value(../WrapperMode) = &apos;RedundantChannel&apos;" 
                        true="The usage of the Rte API Rte_IsUpdated in combination with redundant channel wrappers is not supported by AUTOSAR."/>
                  <a:da name="RANGE">
                    <a:v>RteIsUpdatedUnused</a:v>
                    <a:v>RteIsUpdatedUsed</a:v>
                  </a:da>
                </v:var>
                <v:var name="TxSignalGroupArrayAccess" type="BOOLEAN">
                  <a:a name="COLUMN_TITLE" value="TxSignalGroupArrayAccess"/>
                  <a:a name="COLUMN_WIDTH" value="100"/>
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Activates/Deactivates the E2E data flow optimization at
                          the sender-side. That is, Rte_WriteArray_p_o() is called
                          with the serialized byte array instead of Rte_Write_p_o().
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: E2E data flow optimization is activated.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: E2E data flow optimization is deactivated.&lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="TxSignalGroupArrayAccess"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:18a1d1d0-dc41-11e3-9c1a-0800200c9a66"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XDISFile" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         The name of the XDIS file as given in the Import Assistant for OEM specific Projects.
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" 
                       value="ECUC:c924d655-f8a3-4a62-b9ee-c15d81ea4a50"/>
                  <a:a name="VISIBLE" value="false"/>
                  <a:da name="DEFAULT" value=""/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:lst name="CRCRegex">
                  <a:a name="LABEL" value="List of CRC Regular Expressions"/>
                  <a:a name="TAB" value="CRC Regex"/>
                  <v:var name="CRCRegex" type="STRING">
                    <a:a name="COLUMN_TITLE" value="CRC Regex"/>
                    <a:a name="COLUMN_WIDTH" value="100"/>
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            List of CRC regular Expressions for identifying the CRC member
                            of a protected complex Data Element in case of pure intra-ECU communication.
                            If regular expressions apply on several different or no Data Element members,
                            an error is reported and no wrappers are generated.
                            For example, if the regex &lt;code&gt;CRC_&lt;/code&gt; is configured and
                            a complex Data Element contains the members
                            &lt;code&gt;CRC_signal, SEQ_counter, and SIG_mysignal1&lt;/code&gt;, then
                            &lt;code&gt;CRC_signal&lt;/code&gt; is identified to be the
                            CRC member. This is a simple example but the full range of regular expression 
							functionality is supported here.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:d4887fb0-f419-11e0-be50-0800200c9a66"/>
                    <a:da name="DEFAULT" value="CRC_"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="asc_E2EPW:isValidRegularExpression(node:value(.))" 
                          false="CRCRegex must be a valid regular expression."/>
                  </v:var>
                </v:lst>
                <v:lst name="CounterRegex">
                  <a:a name="LABEL" value="List of Counter Regular Expressions"/>
                  <a:a name="TAB" value="Counter Regex"/>
                  <v:var name="CounterRegex" type="STRING">
                    <a:a name="COLUMN_TITLE" value="Counter Regex"/>
                    <a:a name="COLUMN_WIDTH" value="100"/>
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            List of Counter regular expressions for identifying the Counter member
                            of a protected complex Data Element in case of pure intra-ECU communication.
                            If regular expressions apply on several different or no Data Element members,
                            an error is reported and no wrappers are generated.
                            For example, if the regular expression &lt;code&gt;SEQ_&lt;/code&gt; is configured and
                            a complex Data Element contains the members
                            &lt;code&gt;CRC_signal, SEQ_counter, and SIG_mysignal1&lt;/code&gt;, then
                            &lt;code&gt;SEQ_signal&lt;/code&gt; is identified to be the
                            Counter member. This is a simple example but the full range of regular expression 
							functionality is supported here.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:dc1e7c20-f419-11e0-be50-0800200c9a66"/>
                    <a:da name="DEFAULT" value="SEQ_"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="asc_E2EPW:isValidRegularExpression(node:value(.))" 
                          false="CounterRegex must be a valid regular expression."/>
                  </v:var>
                </v:lst>
                <v:lst name="DataIDNibbleRegex">
                  <a:a name="LABEL" 
                       value="List of DataID Nibble Regular Expressions"/>
                  <a:a name="TAB" value="DataID Nibble Regex"/>
                  <v:var name="DataIDNibbleRegex" type="STRING">
                    <a:a name="COLUMN_TITLE" value="DataID Nibble Regex"/>
                    <a:a name="COLUMN_WIDTH" value="100"/>
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            List of DataID Nibble Regular Expressions for identifying the DataID member
                            of a protected complex Data Element in case of pure intra-ECU communication
                            (only relevant for specific Profiles making use of explicit transmission
                            of the DataID).
                            If regular expressions apply on several different or no Data Element members,
                            an error is reported and no wrappers are generated.
                            For example, if the regex &lt;code&gt;DID_&lt;/code&gt; is configured and
                            a complex Data Element contains the members
                            &lt;code&gt;CRC_signal, DID_counter, and SIG_mysignal1&lt;/code&gt;, then
                            &lt;code&gt;DID_counter&lt;/code&gt; is identified to be the
                            DataID Nibble member. This is a simple example but the full range of regular expression 
							functionality is supported here.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:621e76c0-9542-11e2-9e96-0800200c9a66"/>
                    <a:da name="DEFAULT" value="DID_"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="asc_E2EPW:isValidRegularExpression(node:value(.))" 
                          false="DataIDNibbleRegex must be a valid regular expression."/>
                  </v:var>
                </v:lst>
                <v:lst name="CRCPrefix">
                  <a:a name="LABEL" value="List of CRC Prefixes"/>
                  <a:a name="TAB" value="CRC Prefixes"/>
                  <v:var name="CRCPrefix" type="STRING">
                    <a:a name="COLUMN_TITLE" value="CRC Prefix"/>
                    <a:a name="COLUMN_WIDTH" value="100"/>
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            List of CRC prefixes for identifying the CRC member
                            of a protected complex Data Element in case of pure intra-ECU communication.
                            If prefixes apply on several different or no Data Element members,
                            an error is reported and no wrappers are generated.
                            For example, if the prefix &lt;code&gt;CRC_&lt;/code&gt; is configured and
                            a complex Data Element contains the members
                            &lt;code&gt;CRC_signal, SEQ_counter, and SIG_mysignal1&lt;/code&gt;, then
                            &lt;code&gt;CRC_signal&lt;/code&gt; is identified to be the
                            CRC member.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:d4887fb0-f419-11e0-be50-0800200c9a66"/>
                    <a:da name="DEFAULT" value="CRC_"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="text:match(node:value(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                          false="CRCPrefix must be a valid C identifier."/>
                  </v:var>
                </v:lst>
                <v:lst name="CounterPrefix">
                  <a:a name="LABEL" value="List of Counter Prefixes"/>
                  <a:a name="TAB" value="Counter Prefixes"/>
                  <v:var name="CounterPrefix" type="STRING">
                    <a:a name="COLUMN_TITLE" value="Counter Prefix"/>
                    <a:a name="COLUMN_WIDTH" value="100"/>
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            List of Counter prefixes for identifying the Counter member
                            of a protected complex Data Element in case of pure intra-ECU communication.
                            If prefixes apply on several different or no Data Element members,
                            an error is reported and no wrappers are generated.
                            For example, if the prefix &lt;code&gt;SEQ_&lt;/code&gt; is configured and
                            a complex Data Element contains the members
                            &lt;code&gt;CRC_signal, SEQ_counter, and SIG_mysignal1&lt;/code&gt;, then
                            &lt;code&gt;SEQ_signal&lt;/code&gt; is identified to be the
                            Counter member.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:dc1e7c20-f419-11e0-be50-0800200c9a66"/>
                    <a:da name="DEFAULT" value="SEQ_"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="text:match(node:value(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                          false="CounterPrefix must be a valid C identifier."/>
                  </v:var>
                </v:lst>
                <v:lst name="DataIDNibblePrefix">
                  <a:a name="LABEL" value="List of DataID Nibble Prefixes"/>
                  <a:a name="TAB" value="DataID Nibble Prefixes"/>
                  <a:a name="VISIBLE" type="XPath" 
                       expr="lic:feature(&apos;E2EPW_FEATURE_ProfileBMW&apos;)" 
                       true="true" false="false"/>
                  <v:var name="DataIDNibblePrefix" type="STRING">
                    <a:a name="COLUMN_TITLE" value="DataID Nibble Prefix"/>
                    <a:a name="COLUMN_WIDTH" value="100"/>
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            List of DataID Nibble prefixes for identifying the DataID member
                            of a protected complex Data Element in case of pure intra-ECU communication
                            (only relevant for specific Profiles making use of explicit transmission
                            of the DataID).
                            If prefixes apply on several different or no Data Element members,
                            an error is reported and no wrappers are generated.
                            For example, if the prefix &lt;code&gt;DID_&lt;/code&gt; is configured and
                            a complex Data Element contains the members
                            &lt;code&gt;CRC_signal, DID_counter, and SIG_mysignal1&lt;/code&gt;, then
                            &lt;code&gt;DID_counter&lt;/code&gt; is identified to be the
                            DataID Nibble member.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:621e76c0-9542-11e2-9e96-0800200c9a66"/>
                    <a:da name="DEFAULT" value="DID_"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="text:match(node:value(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                          false="DataIDNibblePrefix must be a valid C identifier."/>
                  </v:var>
                </v:lst>
                <v:lst name="ConfigurableE2ERxProperties" type="MAP">
                  <a:a name="LABEL" value="Configurable E2E Rx Properties"/>
                  <a:a name="TAB" value="Configurable E2E Rx Properties"/>
                  <v:ctr name="ConfigurableE2ERxProperties" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            Unique short name for triple of software component type, port, data element.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="ECUC:e7bba8f0-f419-11e0-be50-0800200c9a66"/>
                    <v:var name="E2EProtection" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            Shortname of the E2E Protection element that defines the
                            protection of this triple (SWC, Port, DataElement).
                         &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:b4562550-1078-11e1-be50-0800200c9a66"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="text:match(node:value(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                            false="E2EProtection name must be a valid C identifier.                           Please run the Unattended Wizards in order to update                           the list of E2E Rx Properties or check the correct syntax                           in the imported System / Software Component Description files."/>
                    </v:var>
                    <v:var name="SWC" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            Shortname of the protected software component types.
                         &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:f8a94f00-f419-11e0-be50-0800200c9a66"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="text:match(node:value(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                            false="SWC name must be a valid C identifier.                           Please run the Unattended Wizards in order to update                           the list of E2E Rx Properties or check the correct syntax                           in the imported System / Software Component Description files."/>
                    </v:var>
                    <v:var name="Port" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            Shortname of the protected receiver port associated
                            to the specified software componen type.
                         &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:fdc21670-f419-11e0-be50-0800200c9a66"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="text:match(node:value(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                            false="Port name must be a valid C identifier.                           Please run the Unattended Wizards in order to update                           the list of E2E Rx Properties or check the correct syntax                           in the imported System / Software Component Description files."/>
                    </v:var>
                    <v:var name="DataElement" type="STRING">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            Shortname of the protected data element associated
                            to the specified port and software component type.
                         &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:01a989d0-f41a-11e0-be50-0800200c9a66"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="text:match(node:value(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                            false="DataElement name must be a valid C identifier.                           Please run the Unattended Wizards in order to update                           the list of E2E Rx Properties or check the correct syntax                           in the imported System / Software Component Description files."/>
                    </v:var>
                    <v:var name="MaxDeltaCounterInit" type="INTEGER">
                      <a:a name="COLUMN_WIDTH" value="100"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            E2E Description parameter MaxDeltaCounterInit associated
                            to the receiver specified with the triple
                            software component type, port, data element.
                         &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:05d188a0-f41a-11e0-be50-0800200c9a66"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="(. &lt; 0) or (. &gt; 15)" 
                               true="Only values in range [0..15] are allowed for this parameter."/>
                        <a:tst 
                               expr="node:exists(../../*[E2EProtection = node:current()/../E2EProtection][SWC = node:current()/../SWC][MaxDeltaCounterInit != node:current()/../MaxDeltaCounterInit])" 
                               true="MaxDeltaCounterInit shall be equal for all protected receiver ports of a software component associated to the same E2E Protection"/>
                      </a:da>
                    </v:var>
                    <v:var name="MaxNoNewOrRepeatedData" type="INTEGER">
                      <a:a name="COLUMN_WIDTH" value="100"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                           &lt;p&gt;
                            E2E Description parameter MaxNoNewOrRepeatedData associated
                            to the receiver specified with the triple
                            software component type, port, data element.
                           &lt;/p&gt;
                           &lt;p&gt;
                            This parameter defines the maximum amount of missing
                            or repeated Data which the receiver does not expect
                            to exceed under normal communication conditions.
                           &lt;/p&gt;
                           &lt;p&gt;
                            Note: In order to be application-wise backward compatible to the
                            E2E_PxxCheck()-function of earlier AUTOSAR releases,
                            this configuration parameter must be set to the maximum allowed
                            counter value (i.e. 14 for Profile 1 variants, else 15).
                           &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:e46bd8f0-c5d3-11e1-9b21-0800200c9a66"/>
                      <a:da name="DEFAULT" value="15"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="(. &lt; 0) or (. &gt; 15)" 
                               true="Only values in range [0..15] are allowed for this parameter."/>
                        <a:tst 
                               expr="node:exists(../../*[E2EProtection = node:current()/../E2EProtection][SWC = node:current()/../SWC][MaxNoNewOrRepeatedData != node:current()/../MaxNoNewOrRepeatedData])" 
                               true="MaxNoNewOrRepeatedData shall be equal for all protected receiver ports of a software component associated to the same E2E Protection"/>
                      </a:da>
                    </v:var>
                    <v:var name="SyncCounterInit" type="INTEGER">
                      <a:a name="COLUMN_WIDTH" value="100"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                           &lt;p&gt;
                            E2E Description parameter SyncCounterInit associated
                            to the receiver specified with the triple
                            software component type, port, data element.
                           &lt;/p&gt;
                           &lt;p&gt;
                            This parameter defines the number of Data required for validating
                            the consistency of the counter that must be received with a
                            valid counter (i.e. counter within the allowed lock-in range)
                            after the detection of an unexpected behavior of a received counter.
                           &lt;/p&gt;
                           &lt;p&gt;
                            Note: In order to be application-wise backward compatible to the
                            E2E_PxxCheck()-function of earlier AUTOSAR releases,
                            this configuration parameter must be set to 0.
                           &lt;/p&gt;
                         &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:e46bd8f1-c5d3-11e1-9b21-0800200c9a66"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="(. &lt; 0) or (. &gt; 15)" 
                               true="Only values in range [0..15] are allowed for this parameter."/>
                        <a:tst 
                               expr="node:exists(../../*[E2EProtection = node:current()/../E2EProtection][SWC = node:current()/../SWC][SyncCounterInit != node:current()/../SyncCounterInit])" 
                               true="SyncCounterInit shall be equal for all protected receiver ports of a software component associated to the same E2E Protection"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the E2EPW can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
