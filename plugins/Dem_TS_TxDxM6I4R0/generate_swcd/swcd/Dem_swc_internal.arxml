[!AUTOSPACING!]
[!//
[!MACRO "Create_Interface_Vars", "VarsAsrVersion", "VarsInterfaceName"!]
  [!IF "$VarsAsrVersion = 'AUTOSAR_42'"!]
    [!VAR "Dem_GetEventFreezeFrameData" = "'Dem_ASR42_GetEventFreezeFrameData'"!]
    [!VAR "CSDataServices" = "'DataServices_'"!]
  [!ELSE!][!//
    [!VAR "Dem_GetEventFreezeFrameData" = "'Dem_GetEventFreezeFrameData'"!]
    [!VAR "CSDataServices" = "'CSDataServices_'"!]
  [!ENDIF!]
  [!IF "$InterfaceName != ''"!]
    [!VAR "InterfacePrefix" = "concat('Dem_', $InterfaceName)"!]
  [!ELSE!][!//
    [!VAR "InterfacePrefix" = "''"!]
  [!ENDIF!]
  [!VAR "DiagnosticMonitor" = "concat($InterfacePrefix, 'DiagnosticMonitor')"!]
  [!VAR "DiagnosticInfo" = "concat($InterfacePrefix, 'DiagnosticInfo')"!]
  [!VAR "GeneralDiagnosticInfo" = "concat($InterfacePrefix, 'GeneralDiagnosticInfo')"!]
  [!VAR "CallbackInitMonitorForEvent" = "concat($InterfacePrefix, 'CallbackInitMonitorForEvent')"!]
  [!VAR "CallbackEventStatusChange" = "concat($InterfacePrefix, 'CallbackEventStatusChange')"!]
  [!VAR "GeneralCallbackEventStatusChange" = "concat($InterfacePrefix, 'GeneralCallbackEventStatusChange')"!]
  [!VAR "CallbackDTCStatusChange" = "concat($InterfacePrefix, 'CallbackDTCStatusChange')"!]
  [!VAR "CallbackEventDataChanged" = "concat($InterfacePrefix, 'CallbackEventDataChanged')"!]
  [!VAR "GeneralCallbackEventDataChanged" = "concat($InterfacePrefix, 'GeneralCallbackEventDataChanged')"!]
  [!VAR "OperationCycle" = "concat($InterfacePrefix, 'OperationCycle')"!]
  [!VAR "AgingCycle" = "concat($InterfacePrefix, 'AgingCycle')"!]
  [!VAR "ExternalAgingCycle" = "concat($InterfacePrefix, 'ExternalAgingCycle')"!]
  [!VAR "EnableCondition" = "concat($InterfacePrefix, 'EnableCondition')"!]
  [!VAR "StorageCondition" = "concat($InterfacePrefix, 'StorageCondition')"!]
  [!VAR "IndicatorStatus" = "concat($InterfacePrefix, 'IndicatorStatus')"!]
  [!VAR "EvMemOverflowIndication" = "concat($InterfacePrefix, 'EvMemOverflowIndication')"!]
  [!VAR "DTCSuppression" = "concat($InterfacePrefix, 'DTCSuppression')"!]
  [!VAR "EventAvailable" = "concat($InterfacePrefix, 'EventAvailable')"!]
  [!VAR "PowerTakeOff" = "concat($InterfacePrefix, 'PowerTakeOff')"!]
  [!VAR "CallbackGetFaultDetectCounter" = "concat($InterfacePrefix, 'CallbackGetFaultDetectCounter')"!]
  [!VAR "CallbackClearEventAllowed" = "concat($InterfacePrefix, 'CallbackClearEventAllowed')"!]
  [!VAR "PfcCyclePfcCycleQualified" = "concat($InterfacePrefix, 'PfcCyclePfcCycleQualified')"!]
  [!VAR "ResetReadiness" = "concat($InterfacePrefix, 'ResetReadiness')"!]
  [!VAR "EventStatus" = "concat($InterfacePrefix, 'EventStatus')"!]
  [!IF "$InterfaceName = ''"!]
    [!VAR "RE_GetEventFreezeFrameData" = "'RE_GetEventFreezeFrameData'"!]
  [!ELSE!][!//
    [!IF "( $BaseServiceAPIVersion = $VarsAsrVersion )"!]
      [!VAR "RE_GetEventFreezeFrameData" = "'RE_GetEventFreezeFrameData'"!]
    [!ELSE!][!//
      [!VAR "RE_GetEventFreezeFrameData" = "concat($InterfaceName,'RE_GetEventFreezeFrameData')"!]
    [!ENDIF!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "CalculateQueueLength"!]
  [!VAR "QueueLength_EventGroupRteCalculated" = "'true'"!]
  [!VAR "QueueLength_EventInfoGroupRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetWIRStatusRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetOperationCycleStateRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetAgingCycleRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetEnableConditionRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetStorageConditionRteCalculated" = "'true'"!]
  [!VAR "QueueLength_GetIndicatorStatusRteCalculated" = "'true'"!]
  [!VAR "QueueLength_OverflowIndicationGroupRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetDTCSuppressionRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetEventAvailableRteCalculated" = "'true'"!]
  [!VAR "QueueLength_ClearDTCRteCalculated" = "'true'"!]
  [!VAR "QueueLength_SetPtoStatusRteCalculated" = "'true'"!]
  [!VAR "QueueLength_PfcCycleQualifiedGroupRteCalculated" = "'true'"!]
  [!VAR "QueueLength_ResetReadinessRteCalculated" = "'true'"!]

  [!IF "DemGeneral/DemEventPort/DemCSEventGroupRteCalculated = 'false'"!]
    [!/* queue length values of operations will be the one configured by the user */!][!//
    [!VAR "QueueLength_SetEventStatus" = "num:integer(DemGeneral/DemEventPort/DemCSQueueLengthSetEventStatus)"!]
    [!VAR "QueueLength_ResetEventStatus" = "num:integer(DemGeneral/DemEventPort/DemCSQueueLengthResetEventStatus)"!]
    [!VAR "QueueLength_ResetEventDebounceStatus" = "num:integer(DemGeneral/DemEventPort/DemCSQueueLengthResetEventDebounceStatus)"!]
    [!VAR "QueueLength_PrestoreFreezeFrame" = "num:integer(DemGeneral/DemEventPort/DemCSQueueLengthPrestoreFreezeFrame)"!]
    [!VAR "QueueLength_ClearPrestoredFreezeFrame" = "num:integer(DemGeneral/DemEventPort/DemCSQueueLengthClearPrestoredFreezeFrame)"!]
    [!IF "$OBDSupport = 'true'"!]
      [!VAR "QueueLength_SetEventDisabled" = "num:integer(DemGeneral/DemEventPort/DemCSQueueLengthSetEventDisabled)"!]
    [!ENDIF!]
    [!VAR "QueueLength_EventGroupRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemEventInfoPort/DemCSEventInfoGroupRteCalculated = 'false'"!]
    [!/* queue length values of operations will be the one configured by the user */!][!//
    [!VAR "QueueLength_GetEventStatus" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetEventStatus)"!]
    [!VAR "QueueLength_GetEventFailed" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetEventFailed)"!]
    [!VAR "QueueLength_GetEventTested" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetEventTested)"!]
    [!VAR "QueueLength_GetDTCOfEvent" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetDTCOfEvent)"!]
    [!VAR "QueueLength_GetFaultDetectionCounter" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetFaultDetectionCounter)"!]
    [!NOCODE!]
    [!/* GetEventFreezeFrameData and GetEventExtendedDataRecord are only used if for AUTOSAR_40 and AUTOSAR_42 */!][!//
    [!ENDNOCODE!]
    [!IF "$DefaultASRServiceAPI != 'AUTOSAR_43'"!]
      [!VAR "QueueLength_GetEventFreezeFrameData" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetEventFreezeFrameData)"!]
      [!VAR "QueueLength_GetEventExtendedDataRecord" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetEventExtendedDataRecord)"!]
    [!ENDIF!]
    [!IF "(as:modconf('Dem')[1]/DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true') or
          ($BaseServiceAPIVersion = 'AUTOSAR_42')"!]
      [!VAR "QueueLength_GetEventFreezeFrameDataEx" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetEventFreezeFrameDataEx)"!]
      [!VAR "QueueLength_GetEventExtendedDataRecordEx" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetEventExtendedDataRecordEx)"!]
      [!VAR "QueueLength_GetDebouncingOfEvent" = "num:integer(DemGeneral/DemEventInfoPort/DemCSQueueLengthGetDebouncingOfEvent)"!]
    [!ENDIF!]
    [!VAR "QueueLength_EventInfoGroupRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemUserControlledWIRBitSupport = 'true'"!]
    [!IF "DemGeneral/DemEventStatusPort/DemCSQueueLengthSetWIRStatusRteCalculated = 'false'"!]
      [!/* queue length value of Dem_SetWIRStatus will be the one configured by the user */!][!//
      [!VAR "QueueLength_SetWIRStatus" = "num:integer(DemGeneral/DemEventStatusPort/DemCSQueueLengthSetWIRStatus)"!]
      [!VAR "QueueLength_SetWIRStatusRteCalculated" = "'false'"!]
    [!ENDIF!]
  [!ENDIF!]

  [!IF "DemGeneral/DemOpCyclePort/DemCSQueueLengthSetOperationCycleStateRteCalculated = 'false'"!]
    [!/* queue length value of Dem_SetOperationCycleState will be the one configured by the user */!][!//
    [!VAR "QueueLength_SetOperationCycleState" = "num:integer(DemGeneral/DemOpCyclePort/DemCSQueueLengthSetOperationCycleState)"!]
    [!VAR "QueueLength_SetCycleQualified" = "num:integer(DemGeneral/DemOpCyclePort/DemCSQueueLengthSetCycleQualified)"!]
    [!VAR "QueueLength_SetOperationCycleStateRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemAgingCyclePort/DemCSQueueLengthSetAgingCycleRteCalculated = 'false'"!]
    [!/* queue length values of operation will be the one configured by the user */!][!//
    [!IF "DemGeneral/DemAgingCycleCounterProcessing = 'DEM_PROCESS_AGINGCTR_INTERN'"!]
      [!VAR "QueueLength_SetAgingCycle" = "num:integer(DemGeneral/DemAgingCyclePort/DemCSQueueLengthSetAgingCycleState)"!]
    [!ELSE!]
      [!VAR "QueueLength_SetAgingCycle" = "num:integer(DemGeneral/DemAgingCyclePort/DemCSQueueLengthSetAgingCycleCounterValue)"!]
    [!ENDIF!]
    [!VAR "QueueLength_SetAgingCycleRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemEnableCondPort/DemCSQueueLengthSetEnableConditionRteCalculated = 'false'"!]
    [!/* queue length value of Dem_SetEnableCondition will be the one configured by the user */!][!//
    [!VAR "QueueLength_SetEnableCondition" = "num:integer(DemGeneral/DemEnableCondPort/DemCSQueueLengthSetEnableCondition)"!]
    [!VAR "QueueLength_SetEnableConditionRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemStorageCondPort/DemCSQueueLengthSetStorageConditionRteCalculated = 'false'"!]
    [!/* queue length value of Dem_SetStorageCondition will be the one configured by the user */!][!//
    [!VAR "QueueLength_SetStorageCondition" = "num:integer(DemGeneral/DemStorageCondPort/DemCSQueueLengthSetStorageCondition)"!]
    [!VAR "QueueLength_SetStorageConditionRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemIndStatusPort/DemCSQueueLengthGetIndicatorStatusRteCalculated = 'false'"!]
    [!/* queue length value of Dem_GetIndicatorStatus will be the one configured by the user */!][!//
    [!VAR "QueueLength_GetIndicatorStatus" = "num:integer(DemGeneral/DemIndStatusPort/DemCSQueueLengthGetIndicatorStatus)"!]
    [!VAR "QueueLength_GetIndicatorStatusRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemOverflowIndPort/DemCSOverflowIndicationGroupRteCalculated = 'false'"!]
    [!/* queue length values of operation will be the one configured by the user */!][!//
    [!VAR "QueueLength_GetEventMemoryOverflow" = "num:integer(DemGeneral/DemOverflowIndPort/DemCSQueueLengthGetEventMemoryOverflow)"!]
    [!VAR "QueueLength_GetNumberOfEventMemoryEntries" = "num:integer(DemGeneral/DemOverflowIndPort/DemCSQueueLengthGetNumberOfEventMemoryEntries)"!]
    [!VAR "QueueLength_OverflowIndicationGroupRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemControlDTCSuppressionPort/DemCSQueueLengthSetDTCSuppressionRteCalculated = 'false'"!]
    [!/* queue length values of Dem_SetDTCSuppression will be the one configured by the user */!][!//
    [!VAR "QueueLength_SetDTCSuppression" = "num:integer(DemGeneral/DemControlDTCSuppressionPort/DemCSQueueLengthSetDTCSuppression)"!]
    [!VAR "QueueLength_SetDTCSuppressionRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "DemGeneral/DemControlEventAvailablePort/DemCSQueueLengthSetEventAvailableRteCalculated = 'false'"!]
    [!VAR "QueueLength_SetEventAvailable" = "num:integer(DemGeneral/DemControlEventAvailablePort/DemCSQueueLengthSetEventAvailable)"!]
    [!VAR "QueueLength_SetEventAvailableRteCalculated" = "'false'"!]
  [!ENDIF!]

  [!IF "$BaseServiceAPIVersion = 'AUTOSAR_42'"!]
    [!IF "DemGeneral/DemCddIfPort/DemCSQueueLengthClearDTCRteCalculated = 'false'"!]
      [!/* queue length values of Dem_ClearDTC will be the one configured by the user */!][!//
      [!VAR "QueueLength_ClearDTC" = "num:integer(DemGeneral/DemCddIfPort/DemCSQueueLengthClearDTC)"!]
      [!VAR "QueueLength_ClearDTCRteCalculated" = "'false'"!]
    [!ENDIF!]
  [!ENDIF!]

  [!IF "$OBDSupport = 'true'"!]
    [!IF "DemGeneral/DemPowerTakeOffStatusPort/DemCSQueueLengthSetPtoStatusRteCalculated = 'false'"!]
      [!/* queue length values of Dem_SetPtoStatus will be the one configured by the user */!][!//
      [!VAR "QueueLength_SetPtoStatus" = "num:integer(DemGeneral/DemPowerTakeOffStatusPort/DemCSQueueLengthSetPtoStatus)"!]
      [!VAR "QueueLength_SetPtoStatusRteCalculated" = "'false'"!]
    [!ENDIF!]

    [!IF "DemGeneral/DemPfcCycleQualifiedPort/DemCSPfcCycleQualifiedGroupRteCalculated = 'false'"!]
      [!/* queue length values of operations will be the one configured by the user */!][!//
      [!VAR "QueueLength_SetPfcCycleQualified" = "num:integer(DemGeneral/DemPfcCycleQualifiedPort/DemCSQueueLengthSetPfcCycleSetPfcCycleQualified)"!]
      [!VAR "QueueLength_GetPfcCycleQualified" = "num:integer(DemGeneral/DemPfcCycleQualifiedPort/DemCSQueueLengthGetPfcCycleQualified)"!]
      [!VAR "QueueLength_PfcCycleQualifiedGroupRteCalculated" = "'false'"!]
    [!ENDIF!]

    [!IF "DemGeneral/DemResetReadinessPort/DemCSQueueLengthResetReadinessRteCalculated = 'false'"!]
      [!/* queue length values of Dem_ResetReadiness will be the one configured by the user */!][!//
      [!VAR "QueueLength_ResetReadiness" = "num:integer(DemGeneral/DemResetReadinessPort/DemCSQueueLengthResetReadiness)"!]
      [!VAR "QueueLength_ResetReadinessRteCalculated" = "'false'"!]
    [!ENDIF!]
  [!ENDIF!]

[!ENDMACRO!]
[!//
[!//
[!MACRO "Calculate_QueueLength", "Version"!]
  [!IF "$Version = 0"!]
    [!VAR "QueueLength" = "1"!]
  [!ELSE!]
    [!VAR "QueueLength" = "$Version"!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_Ports", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
  [!LOOP "node:order(DemConfigSet/*/DemEventParameter/*, 'DemEventId')"!]
                <!-- *** Ports concerning Event '[!"name(.)"!]' ([!"DemEventKind"!]) *** -->
    [!IF "DemEventKind = 'DEM_EVENT_KIND_SWC'"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]Event_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
      [!/* check if the queue length of the Event Port operations will be calculated by Rte */!][!//
      [!IF "$QueueLength_EventGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/SetEventStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetEventStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/ResetEventStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_ResetEventStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/PrestoreFreezeFrame</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_PrestoreFreezeFrame"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/ClearPrestoredFreezeFrame</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_ClearPrestoredFreezeFrame"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
        [!IF "$OBDSupport = 'true'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/SetEventDisabled</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetEventDisabled"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
        [!ENDIF!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/ResetEventDebounceStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_ResetEventDebounceStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
    [!ENDIF!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the EventInfo Port operations will be calculated by Rte */!][!//
    [!IF "$QueueLength_EventInfoGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventFailed</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventFailed"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventTested</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventTested"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetDTCOfEvent</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetDTCOfEvent"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetFaultDetectionCounter</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetFaultDetectionCounter"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!NOCODE!]
      [!/* GetEventFreezeFrameData and GetEventExtendedDataRecord are only used if for AUTOSAR_40 and AUTOSAR_42 */!][!//
      [!ENDNOCODE!]
      [!IF "$DefaultASRServiceAPI != 'AUTOSAR_43'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventFreezeFrameData</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventFreezeFrameData"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventExtendedDataRecord</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventExtendedDataRecord"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!ENDIF!]
      [!IF "$AsrVersion = 'AUTOSAR_42'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetDebouncingOfEvent</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetDebouncingOfEvent"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventExtendedDataRecordEx</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventExtendedDataRecordEx"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventFreezeFrameDataEx</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventFreezeFrameDataEx"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!ENDIF!]
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>

    [!IF "as:modconf('Dem')[1]/DemGeneral/DemUserControlledWIRBitSupport = 'true'"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]EventStatus_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
      [!/* check if the queue length of the EventStatus Port operation will be calculated by Rte */!][!//
      [!IF "$QueueLength_SetWIRStatusRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EventStatus"!]/SetWIRStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetWIRStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EventStatus"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
    [!ENDIF!]

    [!IF "as:modconf('Dem')[1]/DemGeneral/DemAvailabilitySupport = 'DEM_EVENT_AVAILABILITY'"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]ControlEventAvailable_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
      [!IF "$QueueLength_SetEventAvailableRteCalculated = 'false'"!]
                      <SERVER-COM-SPEC>
                        <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EventAvailable"!]/SetEventAvailable</OPERATION-REF>
                        <QUEUE-LENGTH>[!"$QueueLength_SetEventAvailable"!]</QUEUE-LENGTH>
                      </SERVER-COM-SPEC>
      [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EventAvailable"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
    [!ENDIF!]

    [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
      [!IF "node:exists(DemCallbackInitMForE)"!]
        [!IF "not(node:exists(DemCallbackInitMForE/DemCallbackInitMForEFnc))"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]CBInitEvt_[!"name(.)"!]</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackInitMonitorForEvent"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
        [!ENDIF!]
      [!ENDIF!]
      [!VAR "RunningNr" = "0"!]
      [!LOOP "DemCallbackEventStatusChanged/*[not(node:exists(DemCallbackEventStatusChangedFnc))]"!]
        [!VAR "RunningNr" = "num:integer($RunningNr + 1)"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]CBStatusEvt_[!"name(../../.)"!]_[!"$RunningNr"!]</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackEventStatusChange"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
      [!ENDLOOP!]
      [!IF "node:exists(DemCallbackEventDataChanged)"!]
        [!IF "not(node:exists(DemCallbackEventDataChanged/DemCallbackEventDataChangedFnc))"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]CBDataEvt_[!"name(.)"!]</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackEventDataChanged"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
        [!ENDIF!]
      [!ENDIF!]
      [!IF "DemEventClass/DemDebounceAlgorithmClass = 'DemDebounceMonitorInternal'"!]
        [!IF "node:exists(DemEventClass/DemDebounceAlgorithmClass/DemCallbackGetFDC)"!]
          [!IF "not(node:exists(DemEventClass/DemDebounceAlgorithmClass/DemCallbackGetFDC/DemCallbackGetFDCFnc))"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]CBFaultDetectCtr_[!"name(.)"!]</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackGetFaultDetectCounter"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
          [!ENDIF!]
        [!ENDIF!]
      [!ENDIF!]
      [!IF "node:exists(DemCallbackClearEventAllowed)"!]
        [!IF "not(node:exists(DemCallbackClearEventAllowed/DemCallbackClearEventAllowedFnc))"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]CBClrEvt_[!"name(.)"!]</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackClearEventAllowed"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
        [!ENDIF!]
      [!ENDIF!]
    [!ENDIF!][!/* default interface */!][!//

  [!ENDLOOP!]
                <!-- *** Ports concerning General Event *** -->
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]GeneralEvtInfo</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
  [!/* check if the queue length of the EventInfo Port operations will be calculated by Rte */!][!//
  [!IF "$QueueLength_EventInfoGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventFailed</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventFailed"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventTested</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventTested"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetDTCOfEvent</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetDTCOfEvent"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetFaultDetectionCounter</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetFaultDetectionCounter"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!NOCODE!]
    [!/* GetEventFreezeFrameData and GetEventExtendedDataRecord are only used if for AUTOSAR_40 and AUTOSAR_42 */!][!//
    [!ENDNOCODE!]
    [!IF "$DefaultASRServiceAPI != 'AUTOSAR_43'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventFreezeFrameData</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventFreezeFrameData"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventExtendedDataRecord</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventExtendedDataRecord"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
    [!IF "$AsrVersion = 'AUTOSAR_42'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetDebouncingOfEvent</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetDebouncingOfEvent"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventExtendedDataRecordEx</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventExtendedDataRecordEx"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventFreezeFrameDataEx</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventFreezeFrameDataEx"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
  [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>

  [!VAR "UsePortGeneralCBStatusEvt" = "'false'"!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!IF "count(DemConfigSet/*/DemEventParameter/*/DemCallbackEventStatusChanged/*[not(node:exists(DemCallbackEventStatusChangedFnc))]) > 0"!]
      [!VAR "UsePortGeneralCBStatusEvt" = "'true'"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]GeneralCBStatusEvt</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralCallbackEventStatusChange"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>

    [!ENDIF!]
  [!ENDIF!]
  [!VAR "UsePortGeneralCBDataEvt" = "'false'"!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!IF "count(DemConfigSet/*/DemEventParameter/*/DemCallbackEventDataChanged[not(node:exists(DemCallbackEventDataChangedFnc))]) > 0"!]
      [!VAR "UsePortGeneralCBDataEvt" = "'true'"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]GeneralCBDataEvt</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralCallbackEventDataChanged"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>

    [!ENDIF!]
  [!ENDIF!]
                <!-- *** Ports concerning DTC status change callbacks *** -->
  [!IF "count(DemGeneral/DemCallbackDTCStatusChanged/*) = 0"!]
                  <!-- none -->
  [!ENDIF!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!VAR "RunningNr" = "0"!]
    [!LOOP "DemGeneral/DemCallbackDTCStatusChanged/*[not(node:exists(DemCallbackDTCStatusChangedFnc))]"!]
      [!VAR "RunningNr" = "num:integer($RunningNr + 1)"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]CBStatusDTC_[!"$RunningNr"!]</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackDTCStatusChange"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
    [!ENDLOOP!]
  [!ENDIF!]

                <!-- *** Ports *** -->
  [!LOOP "DemGeneral/DemOperationCycle/*"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]OpCycle_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the OpCycle Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_SetOperationCycleStateRteCalculated = 'false'"!]

      [!IF "../../../DemGeneral/DemOperationCycleProcessing = 'DEM_PROCESS_OPCYC_STATE'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$OperationCycle"!]/SetOperationCycleState</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetOperationCycleState"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!ELSE!][!/* DemOperationCycleProcessing = 'DEM_PROCESS_OPCYC_COUNTER' */!][!//
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$OperationCycle"!]/SetOperationCycleCntValue</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetOperationCycleState"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!ENDIF!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$OperationCycle"!]/SetCycleQualified</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetCycleQualified"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$OperationCycle"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDLOOP!]

                <!-- *** Ports concerning Aging Cycles *** -->
  [!IF "DemGeneral/DemAgingCycleCounterProcessing = 'DEM_PROCESS_AGINGCTR_INTERN'"!]
    [!IF "count(DemGeneral/DemAgingCycle/*) = 0"!]
                  <!-- none -->
    [!ENDIF!]
    [!LOOP "DemGeneral/DemAgingCycle/*"!]
              <P-PORT-PROTOTYPE>
                <SHORT-NAME>[!"$InterfaceName"!]AgingCycle_[!"name(.)"!]</SHORT-NAME>
                <PROVIDED-COM-SPECS>
      [!/* check if the queue length of the AgingCycle Port operation will be calculated by Rte */!][!//
      [!IF "$QueueLength_SetAgingCycleRteCalculated = 'false'"!]
                  <SERVER-COM-SPEC>
                    <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$AgingCycle"!]/SetAgingCycleState</OPERATION-REF>
                    <QUEUE-LENGTH>[!"$QueueLength_SetAgingCycle"!]</QUEUE-LENGTH>
                  </SERVER-COM-SPEC>
      [!ENDIF!]
                </PROVIDED-COM-SPECS>
                <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$AgingCycle"!]</PROVIDED-INTERFACE-TREF>
              </P-PORT-PROTOTYPE>
    [!ENDLOOP!]
  [!ELSE!][!/* DemGeneral/DemAgingCycleCounterProcessing = 'DEM_PROCESS_AGINGCTR_EXTERN' */!][!//
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]ExtAgingCycle</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the AgingCycle Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_SetAgingCycleRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$ExternalAgingCycle"!]/SetAgingCycleCounterValue</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetAgingCycle"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$ExternalAgingCycle"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDIF!]

                <!-- *** Ports concerning Enable Conditions *** -->
  [!IF "count(DemGeneral/DemEnableCondition/*) = 0"!]
                  <!-- none -->
  [!ENDIF!]
  [!LOOP "DemGeneral/DemEnableCondition/*"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]EnableCond_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the EnableCond Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_SetEnableConditionRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EnableCondition"!]/SetEnableCondition</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetEnableCondition"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EnableCondition"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDLOOP!]

                <!-- *** Ports concerning Storage Conditions *** -->
  [!IF "count(DemGeneral/DemStorageCondition/*) = 0"!]
                  <!-- none -->
  [!ENDIF!]
  [!LOOP "DemGeneral/DemStorageCondition/*"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]StorageCond_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the StorageCond Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_SetStorageConditionRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$StorageCondition"!]/SetStorageCondition</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetStorageCondition"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$StorageCondition"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDLOOP!]

                <!-- *** Ports concerning Indicators *** -->
  [!IF "count(DemGeneral/DemIndicator/*) = 0"!]
                  <!-- none -->
  [!ENDIF!]
  [!LOOP "DemGeneral/DemIndicator/*"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]IndStatus_[!"name(.)"!]</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the IndStatus Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_GetIndicatorStatusRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$IndicatorStatus"!]/GetIndicatorStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetIndicatorStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$IndicatorStatus"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDLOOP!]

                <!-- *** Ports concerning Overflow Indication *** -->
[!/* DemMaxNumberEventEntryPrimary is always > 0 */!][!//
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]OverflowIndPrimaryMemory</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
  [!/* check if the queue length of the OverflowIndication Port operation will be calculated by Rte */!][!//
  [!IF "$QueueLength_OverflowIndicationGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventMemoryOverflow"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetNumberOfEventMemoryEntries</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetNumberOfEventMemoryEntries"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
  [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!IF "DemGeneral/DemMaxNumberEventEntrySecondary > 0"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]OverflowIndSecondaryMemory</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the OverflowIndication Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_OverflowIndicationGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventMemoryOverflow"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetNumberOfEventMemoryEntries</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetNumberOfEventMemoryEntries"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDIF!]
  [!IF "DemGeneral/DemMaxNumberEventEntryMirror > 0"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]OverflowIndMirrorMemory</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the OverflowIndication Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_OverflowIndicationGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventMemoryOverflow"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetNumberOfEventMemoryEntries</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetNumberOfEventMemoryEntries"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDIF!]
  [!IF "DemGeneral/DemMaxNumberEventEntryPermanent > 0"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]OverflowIndPermanentMemory</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the OverflowIndication Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_OverflowIndicationGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetEventMemoryOverflow"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDIF!]

                <!-- *** Ports concerning DTC Suppression *** -->
                <!-- !LINKSTO Dem608_Implicit1,1 -->
  [!IF "DemGeneral/DemSuppressionSupport = 'DEM_DTC_SUPPRESSION'"!]
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]ControlDTCSuppression</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the ControlDTCSuppression Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_SetDTCSuppressionRteCalculated = 'false'"!]
                      <SERVER-COM-SPEC>
                        <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DTCSuppression"!]/SetDTCSuppression</OPERATION-REF>
                        <QUEUE-LENGTH>[!"$QueueLength_SetDTCSuppression"!]</QUEUE-LENGTH>
                      </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DTCSuppression"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ELSE!]
                <!-- none -->
  [!ENDIF!]

  [!IF "$InterfaceName = ''"!][!/* generated ONLY for default interface */!][!//
    [!IF "$AsrVersion = 'AUTOSAR_42'"!]
                <!-- *** Ports concerning Cdd Interfacing *** -->
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>CddIf</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
      [!/* check if the queue length of the CddIf Port operation will be calculated by Rte */!][!//
      [!IF "$QueueLength_ClearDTCRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/CddIf/ClearDTC</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_ClearDTC"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
      [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/CddIf</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>

    [!ENDIF!]
  [!ENDIF!]
                <!-- *** Ports concerning IUMPR Numerator *** -->
  [!IF "count(DemGeneral/DemRatioId/*) = 0"!]
                  <!-- none -->
  [!ENDIF!]

                <!-- *** Ports concerning IUMPR Denominator *** -->
  [!IF "count(DemGeneral/DemRatioId/*) = 0"!]
                  <!-- none -->
  [!ENDIF!]

  <!-- !LINKSTO Dem_OBD_0001,2 -->
  [!IF "$OBDSupport = 'true'"!]
                <!-- *** Ports concerning Permanent Fault Code (PFC) *** -->
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]PfcCycleQualified</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the PfcCycleQualified Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_PfcCycleQualifiedGroupRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PfcCyclePfcCycleQualified"!]/SetPfcCycleSetPfcCycleQualified</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetPfcCycleQualified"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PfcCyclePfcCycleQualified"!]/GetPfcCycleQualified</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_GetPfcCycleQualified"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PfcCyclePfcCycleQualified"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDIF!]

  [!IF "$OBDSupport = 'true'"!]
                <!-- *** Ports concerning Reset Readiness *** -->
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]ResetReadiness</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
    [!/* check if the queue length of the ResetReadiness Port operation will be calculated by Rte */!][!//
    [!IF "$QueueLength_ResetReadinessRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$ResetReadiness"!]/ResetReadiness</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_ResetReadiness"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
    [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$ResetReadiness"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDIF!]

  [!IF "$OBDSupport = 'true'"!]
                <!-- *** Ports concerning Power Take Off *** -->
                <P-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]PowerTakeOffStatus</SHORT-NAME>
                  <PROVIDED-COM-SPECS>
  [!/* check if the queue length of the PowerTakeOffStatus Port operation will be calculated by Rte */!][!//
  [!IF "$QueueLength_SetPtoStatusRteCalculated = 'false'"!]
                    <SERVER-COM-SPEC>
                      <OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PowerTakeOff"!]/SetPtoStatus</OPERATION-REF>
                      <QUEUE-LENGTH>[!"$QueueLength_SetPtoStatus"!]</QUEUE-LENGTH>
                    </SERVER-COM-SPEC>
  [!ENDIF!]
                  </PROVIDED-COM-SPECS>
                  <PROVIDED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PowerTakeOff"!]</PROVIDED-INTERFACE-TREF>
                </P-PORT-PROTOTYPE>
  [!ENDIF!]

                <!-- *** Ports concerning Data Services *** -->
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "DemGeneral/DemDataElementClass/*[. = 'DemExternalCSDataElementClass' and DemDataElementUsePort = 'true']"!]
      [!VAR "SyncDataElement" = "name(.)"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]CBReadData_[!"$SyncDataElement"!]</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CSDataServices"!][!"$SyncDataElement"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
    [!ENDLOOP!]
    [!IF "$SRDataElementNumber > 0"!]
      [!LOOP "DemGeneral/DemDataElementClass/*[. = 'DemExternalSRDataElementClass']"!]
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>[!"$InterfaceName"!]SRDataServices_[!"name(.)"!]</SHORT-NAME>
                  <REQUIRED-COM-SPECS>
                    <NONQUEUED-RECEIVER-COM-SPEC>
                      <DATA-ELEMENT-REF DEST="VARIABLE-DATA-PROTOTYPE">/AUTOSAR_Dem/PortInterfaces/SRDataServices_[!"name(.)"!]/data</DATA-ELEMENT-REF>
                      <HANDLE-OUT-OF-RANGE>DEFAULT</HANDLE-OUT-OF-RANGE>
                      <USES-END-TO-END-PROTECTION>false</USES-END-TO-END-PROTECTION>
                      <ALIVE-TIMEOUT>0</ALIVE-TIMEOUT>
                      <ENABLE-UPDATE>false</ENABLE-UPDATE>
                      <HANDLE-NEVER-RECEIVED>false</HANDLE-NEVER-RECEIVED>
                      <HANDLE-TIMEOUT-TYPE>NONE</HANDLE-TIMEOUT-TYPE>
                      <INIT-VALUE>
        [!VAR "DataTypeSize" = "(substring-after(./DemDataElementDataType, 'UINT')) div 8"!][!//
        [!VAR "ArraySize" = "num:integer((./DemDataElementDataSize + $DataTypeSize - 1) div $DataTypeSize)"!][!//
        [!IF "(./DemDataElementDataSize > $DataTypeSize)"!]
                        <ARRAY-VALUE-SPECIFICATION>
                          <ELEMENTS>
          [!FOR "i" = "0" TO "$ArraySize - 1"!]
                            <NUMERICAL-VALUE-SPECIFICATION>
                              <VALUE>0</VALUE>
                            </NUMERICAL-VALUE-SPECIFICATION>
          [!ENDFOR!]
                          </ELEMENTS>
                        </ARRAY-VALUE-SPECIFICATION>
        [!ELSE!]
                        <NUMERICAL-VALUE-SPECIFICATION>
                          <VALUE>0</VALUE>
                        </NUMERICAL-VALUE-SPECIFICATION>
        [!ENDIF!]
                      </INIT-VALUE>
                    </NONQUEUED-RECEIVER-COM-SPEC>
                  </REQUIRED-COM-SPECS>
                  <REQUIRED-INTERFACE-TREF DEST="SENDER-RECEIVER-INTERFACE">/AUTOSAR_Dem/PortInterfaces/SRDataServices_[!"name(.)"!]</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
      [!ENDLOOP!]
    [!ENDIF!]
    [!IF "as:modconf('Dem')[1]/DemGeneral/DemOBDSupportKind = 'DEM_OBD_MASTER_ECU'"!]
                <!-- !LINKSTO SWS_Dem_01018,1 -->
                <!-- R-port description of Dem_SetClearDTC_master interface for SetClearDTC -->
                <R-PORT-PROTOTYPE>
                  <SHORT-NAME>SetClearDTC_master</SHORT-NAME>
                  <REQUIRED-INTERFACE-TREF DEST="CLIENT-SERVER-INTERFACE">[!"$TopLevelPackage"!]/PortInterfaces/SetClearDTC</REQUIRED-INTERFACE-TREF>
                </R-PORT-PROTOTYPE>
    [!ENDIF!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_OperationInvokedEvents", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
  [!LOOP "node:order(DemConfigSet/*/DemEventParameter/*, 'DemEventId')"!]
                    <!-- *** Operation-Invoked-Events concerning Event '[!"name(.)"!]' ([!"DemEventKind"!]) *** -->
    [!IF "DemEventKind = 'DEM_EVENT_KIND_SWC'"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetEventStatus_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetEventStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]Event_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/SetEventStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_ResetEventStatus_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_ResetEventStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]Event_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/ResetEventStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_PrestoreFreezeFrame_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_PrestoreFreezeFrame</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]Event_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/PrestoreFreezeFrame</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_ClearPrestoredFF_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_ClearPrestoredFreezeFrame</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]Event_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/ClearPrestoredFreezeFrame</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
      [!IF "$OBDSupport = 'true'"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetEventDisabled_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetEventDisabled</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]Event_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/SetEventDisabled</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
      [!ENDIF!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_ResetEventDebounceStatus_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_ResetEventDebounceStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]Event_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticMonitor"!]/ResetEventDebounceStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
    [!ENDIF!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventStatus_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventFailed_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventFailed</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventFailed</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventTested_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventTested</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventTested</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetDTCOfEvent_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetDTCOfEvent</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetDTCOfEvent</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetFDC_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetFaultDetectionCounter</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetFaultDetectionCounter</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
    [!NOCODE!]
    [!/* GetEventFreezeFrameData and GetEventExtendedDataRecord are only used if for AUTOSAR_40 and AUTOSAR_42 */!][!//
    [!ENDNOCODE!]
    [!IF "$DefaultASRServiceAPI != 'AUTOSAR_43'"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventFF_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/[!"$RE_GetEventFreezeFrameData"!]</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventFreezeFrameData</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventEDR_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventExtendedDataRecord</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventExtendedDataRecord</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
    [!ENDIF!]
    [!IF "$AsrVersion = 'AUTOSAR_42'"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetDebouncingOfEvent_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetDebouncingOfEvent</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetDebouncingOfEvent</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventFFEx_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventFreezeFrameDataEx</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventFreezeFrameDataEx</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventEDREx_Evt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventExtendedDataRecordEx</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DiagnosticInfo"!]/GetEventExtendedDataRecordEx</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
    [!ENDIF!]

    [!IF "as:modconf('Dem')[1]/DemGeneral/DemUserControlledWIRBitSupport = 'true'"!]
                    <!-- *** Operation-Invoked-Events concerning user controlled WIR-bit  *** -->
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetWIRStatus_EventStatus[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetWIRStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EventStatus_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EventStatus"!]/SetWIRStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
    [!ENDIF!]

    [!IF "as:modconf('Dem')[1]/DemGeneral/DemAvailabilitySupport = 'DEM_EVENT_AVAILABILITY'"!]
                    <!-- *** Operation-Invoked-Events concerning event availability *** -->
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetEventAvailable[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetEventAvailable</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]ControlEventAvailable_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EventAvailable"!]/SetEventAvailable</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
   [!ENDIF!]

  [!ENDLOOP!]
                    <!-- *** Operation-Invoked-Events concerning General Event *** -->
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventStatus_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventFailed_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventFailed</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventFailed</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventTested_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventTested</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventTested</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetDTCOfEvent_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetDTCOfEvent</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetDTCOfEvent</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetFDC_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetFaultDetectionCounter</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetFaultDetectionCounter</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!NOCODE!]
  [!/* GetEventFreezeFrameData and GetEventExtendedDataRecord are only used if for AUTOSAR_40 and AUTOSAR_42 */!][!//
  [!ENDNOCODE!]
  [!IF "$DefaultASRServiceAPI != 'AUTOSAR_43'"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventFF_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/[!"$RE_GetEventFreezeFrameData"!]</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventFreezeFrameData</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventEDR_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventExtendedDataRecord</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventExtendedDataRecord</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]
  [!IF "$AsrVersion = 'AUTOSAR_42'"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetDebouncingOfEvent_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetDebouncingOfEvent</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetDebouncingOfEvent</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventFFEx_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventFreezeFrameDataEx</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventFreezeFrameDataEx</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventEDREx_GeneralEvt</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventExtendedDataRecordEx</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralEvtInfo</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralDiagnosticInfo"!]/GetEventExtendedDataRecordEx</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]

                    <!-- *** Operation-Invoked-Events concerning Operation Cycles *** -->
  [!LOOP "DemGeneral/DemOperationCycle/*"!]
                    <OPERATION-INVOKED-EVENT>
      [!IF "../../../DemGeneral/DemOperationCycleProcessing = 'DEM_PROCESS_OPCYC_STATE'"!]
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetOperationCycleState_OpCyc[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetOperationCycleState</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OpCycle_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$OperationCycle"!]/SetOperationCycleState</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
      [!ELSE!][!/* DemOperationCycleProcessing = 'DEM_PROCESS_OPCYC_COUNTER' */!][!//
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetOperationCycleCntValue_OpCyc[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetOperationCycleCntValue</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OpCycle_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$OperationCycle"!]/SetOperationCycleCntValue</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
      [!ENDIF!]
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetCycleQualified_OpCyc[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetCycleQualified</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OpCycle_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$OperationCycle"!]/SetCycleQualified</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDLOOP!]

                    <!-- *** Operation-Invoked-Events concerning Aging Cycles *** -->
  [!IF "DemGeneral/DemAgingCycleCounterProcessing = 'DEM_PROCESS_AGINGCTR_INTERN'"!]
    [!LOOP "DemGeneral/DemAgingCycle/*"!]
                  <OPERATION-INVOKED-EVENT>
                    <SHORT-NAME>[!"$InterfaceName"!]EV_SetAgingCycleState_AgingCyc[!"name(.)"!]</SHORT-NAME>
                    <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetAgingCycleState</START-ON-EVENT-REF>
                    <OPERATION-IREF>
                      <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]AgingCycle_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                      <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$AgingCycle"!]/SetAgingCycleState</TARGET-PROVIDED-OPERATION-REF>
                    </OPERATION-IREF>
                  </OPERATION-INVOKED-EVENT>
    [!ENDLOOP!]
  [!ELSE!][!/* DemGeneral/DemAgingCycleCounterProcessing = 'DEM_PROCESS_AGINGCTR_EXTERN' */!][!//
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetAgingCycleCounterValue</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetAgingCycleCounterValue</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]ExtAgingCycle</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$ExternalAgingCycle"!]/SetAgingCycleCounterValue</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]

                    <!-- *** Operation-Invoked-Events concerning Enable Conditions *** -->
  [!LOOP "DemGeneral/DemEnableCondition/*"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetEnableCondition_EnCond[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetEnableCondition</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EnableCond_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EnableCondition"!]/SetEnableCondition</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDLOOP!]

                    <!-- *** Operation-Invoked-Events concerning Storage Conditions *** -->
  [!LOOP "DemGeneral/DemStorageCondition/*"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetStorageCondition_StCond[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetStorageCondition</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]StorageCond_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$StorageCondition"!]/SetStorageCondition</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDLOOP!]

                    <!-- *** Operation-Invoked-Events concerning Indicators *** -->
  [!LOOP "DemGeneral/DemIndicator/*"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetIndicatorStatus_IndSt[!"name(.)"!]</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetIndicatorStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]IndStatus_[!"name(.)"!]</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$IndicatorStatus"!]/GetIndicatorStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDLOOP!]

                    <!-- *** Operation-Invoked-Events concerning Overflow Indication *** -->
[!/* DemMaxNumberEventEntryPrimary is always > 0 */!][!//
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventMemoryOverflow_Primary</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventMemoryOverflow</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndPrimaryMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetNumberOfEventMemoryEntries_Primary</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetNumberOfEventMemoryEntries</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndPrimaryMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetNumberOfEventMemoryEntries</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!IF "DemGeneral/DemMaxNumberEventEntrySecondary > 0"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventMemoryOverflow_Secondary</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventMemoryOverflow</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndSecondaryMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetNumberOfEventMemoryEntries_Secondary</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetNumberOfEventMemoryEntries</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndSecondaryMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetNumberOfEventMemoryEntries</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]
  [!IF "DemGeneral/DemMaxNumberEventEntryMirror > 0"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventMemoryOverflow_Mirror</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventMemoryOverflow</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndMirrorMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetNumberOfEventMemoryEntries_Mirror</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetNumberOfEventMemoryEntries</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndMirrorMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetNumberOfEventMemoryEntries</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]
  [!IF "DemGeneral/DemMaxNumberEventEntryPermanent > 0"!]
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetEventMemoryOverflow_Permanent</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetEventMemoryOverflow</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndPermanentMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetEventMemoryOverflow</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetNumberOfEventMemoryEntries_Permanent</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetNumberOfEventMemoryEntries</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndPermanentMemory</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$EvMemOverflowIndication"!]/GetNumberOfEventMemoryEntries</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]

  [!IF "DemGeneral/DemSuppressionSupport = 'DEM_DTC_SUPPRESSION'"!]
                    <!-- *** Operation-Invoked-Events concerning DTC Suppression *** -->
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetDTCSuppression</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetDTCSuppression</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]ControlDTCSuppression</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$DTCSuppression"!]/SetDTCSuppression</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]

  [!IF "$InterfaceName = ''"!][!/* generated ONLY for default interface */!][!//
    [!IF "$AsrVersion = 'AUTOSAR_42'"!]
                    <!-- *** Operation-Invoked-Events concerning Cdd Interfacing *** -->
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>EV_ClearDTC</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_CddIfClearDTC</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/CddIf</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/CddIf/ClearDTC</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
    [!ENDIF!]
  [!ENDIF!]
                    <!-- *** Operation-Invoked-Events concerning IUMPR Numerator *** -->
  [!IF "count(DemGeneral/DemRatioId/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]

                    <!-- *** Operation-Invoked-Events concerning IUMPR Denominator *** -->
  [!IF "count(DemGeneral/DemRatioId/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]
  <!-- !LINKSTO Dem_OBD_0001,2 -->
  [!IF "$OBDSupport = 'true'"!]
                    <!-- *** Operation-Invoked-Events concerning the PFC cycle *** -->
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetPfcCycleQualified</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetPfcCycleQualified</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]PfcCycleQualified</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PfcCyclePfcCycleQualified"!]/SetPfcCycleSetPfcCycleQualified</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>

                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_GetPfcCycleQualified</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_GetPfcCycleQualified</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]PfcCycleQualified</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PfcCyclePfcCycleQualified"!]/GetPfcCycleQualified</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]

  [!IF "$OBDSupport = 'true'"!]
                    <!-- *** Operation-Invoked-Events concerning ResetReadiness *** -->

                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_ResetReadiness</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_ResetReadiness</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]ResetReadiness</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$ResetReadiness"!]/ResetReadiness</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
                    <!-- *** Operation-Invoked-Events concerning Power Take Off *** -->
                    <OPERATION-INVOKED-EVENT>
                      <SHORT-NAME>[!"$InterfaceName"!]EV_SetPtoStatus</SHORT-NAME>
                      <START-ON-EVENT-REF DEST="RUNNABLE-ENTITY">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh/RE_SetPtoStatus</START-ON-EVENT-REF>
                      <OPERATION-IREF>
                        <CONTEXT-P-PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]PowerTakeOffStatus</CONTEXT-P-PORT-REF>
                        <TARGET-PROVIDED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$PowerTakeOff"!]/SetPtoStatus</TARGET-PROVIDED-OPERATION-REF>
                      </OPERATION-IREF>
                    </OPERATION-INVOKED-EVENT>
  [!ENDIF!]

[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_PortApiOptions", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
  [!LOOP "node:order(DemConfigSet/*/DemEventParameter/*, 'DemEventId')"!]
                    <!-- *** Port-API options concerning Event '[!"name(.)"!]' ([!"DemEventKind"!]) *** -->
    [!IF "DemEventKind = 'DEM_EVENT_KIND_SWC'"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DemConf_DemEventParameter_[!"name(.)"!]</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]EventIdType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]Event_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
    [!ENDIF!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DemConf_DemEventParameter_[!"name(.)"!]</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]EventIdType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EvtInfo_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
    [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
      [!IF "node:exists(DemCallbackInitMForE)"!]
        [!IF "not(node:exists(DemCallbackInitMForE/DemCallbackInitMForEFnc))"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBInitEvt_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
        [!ENDIF!]
      [!ENDIF!]
      [!VAR "RunningNr" = "0"!]
      [!LOOP "DemCallbackEventStatusChanged/*[not(node:exists(DemCallbackEventStatusChangedFnc))]"!]
        [!VAR "RunningNr" = "num:integer($RunningNr + 1)"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBStatusEvt_[!"name(../../.)"!]_[!"$RunningNr"!]</PORT-REF>
                    </PORT-API-OPTION>
      [!ENDLOOP!]
      [!IF "node:exists(DemCallbackEventDataChanged)"!]
        [!IF "not(node:exists(DemCallbackEventDataChanged/DemCallbackEventDataChangedFnc))"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBDataEvt_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
        [!ENDIF!]
      [!ENDIF!]
      [!IF "DemEventClass/DemDebounceAlgorithmClass = 'DemDebounceMonitorInternal'"!]
        [!IF "node:exists(DemEventClass/DemDebounceAlgorithmClass/DemCallbackGetFDC)"!]
          [!IF "not(node:exists(DemEventClass/DemDebounceAlgorithmClass/DemCallbackGetFDC/DemCallbackGetFDCFnc))"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBFaultDetectCtr_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
          [!ENDIF!]
        [!ENDIF!]
      [!ENDIF!]
      [!IF "node:exists(DemCallbackClearEventAllowed)"!]
        [!IF "not(node:exists(DemCallbackClearEventAllowed/DemCallbackClearEventAllowedFnc))"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBClrEvt_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
        [!ENDIF!]
      [!ENDIF!]
    [!ENDIF!][!/* default interface */!][!//

    [!IF "as:modconf('Dem')[1]/DemGeneral/DemUserControlledWIRBitSupport = 'true'"!]
    <!-- *** Port-API options concerning user controlled WIR-bit *** -->
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DemConf_DemEventParameter_[!"name(.)"!]</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]EventIdType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EventStatus_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
    [!ENDIF!]

    [!IF "as:modconf('Dem')[1]/DemGeneral/DemAvailabilitySupport = 'DEM_EVENT_AVAILABILITY'"!]
    <!-- !LINKSTO SWS_Dem_01011,1 -->
    <!-- *** Port-API options concerning event availability *** -->
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <NUMERICAL-VALUE-SPECIFICATION>
                              <VALUE>[!"num:integer(DemEventId)"!]</VALUE>
                            </NUMERICAL-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]EventIdType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]ControlEventAvailable_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
    [!ENDIF!]

  [!ENDLOOP!]
                    <!-- *** Port-API options concerning DTC status change *** -->
  [!IF "count(DemGeneral/DemCallbackDTCStatusChanged/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!VAR "RunningNr" = "0"!]
    [!LOOP "DemGeneral/DemCallbackDTCStatusChanged/*[not(node:exists(DemCallbackDTCStatusChangedFnc))]"!]
      [!VAR "RunningNr" = "num:integer($RunningNr + 1)"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBStatusDTC_[!"$RunningNr"!]</PORT-REF>
                    </PORT-API-OPTION>
    [!ENDLOOP!]
  [!ENDIF!]

                    <!-- *** Port-API options concerning Operation Cycles *** -->
  [!LOOP "DemGeneral/DemOperationCycle/*"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>[!"name(.)"!]</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ImplementationDataTypes/Dem_OperationCycleIdType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OpCycle_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
  [!ENDLOOP!]

                    <!-- *** Port-API options concerning Aging Cycles *** -->
  [!IF "count(DemGeneral/DemAgingCycle/*) = 0"!]
                      <!-- none -->
  [!ELSE!] <!-- *** At least one aging cycle is configured ***-->
    [!VAR "AgingCtr" = "0"!]
    [!LOOP "DemGeneral/DemAgingCycle/*"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <!-- No usage of a TextValueSpecification possible.
                                 According to 'constr_1224' a TextValueSpecification shall only be used
                                 in the context of an AutosarDataType that references a CompuMethod'
                                 The used type 'uint8' belongs to 'AUTOSAR_Platform' and can't modified. -->
                            <NUMERICAL-VALUE-SPECIFICATION>
                              <VALUE>[!"num:integer($AgingCtr)"!]</VALUE>
                            </NUMERICAL-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]AgingCycle_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
      [!VAR "AgingCtr" = "$AgingCtr + 1"!]
    [!ENDLOOP!]
  [!ENDIF!]

                    <!-- *** Port-API options concerning Enable Conditions *** -->
  [!IF "count(DemGeneral/DemEnableCondition/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]
  [!LOOP "DemGeneral/DemEnableCondition/*"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                          <!-- No usage of a TextValueSpecification possible.
                               According to 'constr_1224' a TextValueSpecification shall only be used
                               in the context of an AutosarDataType that references a CompuMethod'
                               The used type 'uint8' belongs to 'AUTOSAR_Platform' and can't modified. -->
                            <NUMERICAL-VALUE-SPECIFICATION>
                              <VALUE>[!"num:integer(DemEnableConditionId)"!]</VALUE>
                            </NUMERICAL-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]EnableCond_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
  [!ENDLOOP!]

                    <!-- *** Port-API options concerning Storage Conditions *** -->
  [!IF "count(DemGeneral/DemStorageCondition/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]
  [!LOOP "DemGeneral/DemStorageCondition/*"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <NUMERICAL-VALUE-SPECIFICATION>
                              <VALUE>[!"num:integer(DemStorageConditionId)"!]</VALUE>
                            </NUMERICAL-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]StorageCond_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
  [!ENDLOOP!]

                    <!-- *** Port-API options concerning Indicators *** -->
  [!IF "count(DemGeneral/DemIndicator/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]
  [!LOOP "DemGeneral/DemIndicator/*"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DemConf_DemIndicator_[!"name(.)"!]</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ImplementationDataTypes/Dem_IndicatorIdType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]IndStatus_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
  [!ENDLOOP!]

                    <!-- *** Port-API options Overflow Indication *** -->
[!/* DemMaxNumberEventEntryPrimary is always > 0 */!][!//
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DEM_DTC_ORIGIN_PRIMARY_MEMORY</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]DTCOriginType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndPrimaryMemory</PORT-REF>
                    </PORT-API-OPTION>
  [!IF "DemGeneral/DemMaxNumberEventEntrySecondary > 0"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DEM_DTC_ORIGIN_SECONDARY_MEMORY</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]DTCOriginType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndSecondaryMemory</PORT-REF>
                    </PORT-API-OPTION>
  [!ENDIF!]
  [!IF "DemGeneral/DemMaxNumberEventEntryMirror > 0"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DEM_DTC_ORIGIN_MIRROR_MEMORY</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]DTCOriginType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndMirrorMemory</PORT-REF>
                    </PORT-API-OPTION>
  [!ENDIF!]
  [!IF "DemGeneral/DemMaxNumberEventEntryPermanent > 0"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>false</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-ARG-VALUES>
                        <PORT-DEFINED-ARGUMENT-VALUE>
                          <VALUE>
                            <TEXT-VALUE-SPECIFICATION>
                              <VALUE>DEM_DTC_ORIGIN_PERMANENT_MEMORY</VALUE>
                            </TEXT-VALUE-SPECIFICATION>
                          </VALUE>
                          <VALUE-TYPE-TREF DEST="IMPLEMENTATION-DATA-TYPE">[!"$TopLevelPackage"!]/ImplementationDataTypes/Dem_[!"$InterfaceName"!]DTCOriginType</VALUE-TYPE-TREF>
                        </PORT-DEFINED-ARGUMENT-VALUE>
                      </PORT-ARG-VALUES>
                      <PORT-REF DEST="P-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]OverflowIndPermanentMemory</PORT-REF>
                    </PORT-API-OPTION>
  [!ENDIF!]

                    <!-- *** Port-API options concerning IUMPR Numerator *** -->
  [!IF "count(DemGeneral/DemRatioId/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]

                    <!-- *** Port-API options concerning IUMPR Denominator *** -->
  [!IF "count(DemGeneral/DemRatioId/*) = 0"!]
                      <!-- none -->
  [!ENDIF!]

                    <!-- *** Port-API options concerning Data Services *** -->
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "DemGeneral/DemDataElementClass/*[. = 'DemExternalCSDataElementClass' and DemDataElementUsePort = 'true']"!]
      [!VAR "SyncDataElement" = "name(.)"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBReadData_[!"$SyncDataElement"!]</PORT-REF>
                    </PORT-API-OPTION>
    [!ENDLOOP!]
    [!IF "$SRDataElementNumber > 0"!]
      [!LOOP "DemGeneral/DemDataElementClass/*[. = 'DemExternalSRDataElementClass']"!]
                    <PORT-API-OPTION>
                      <ENABLE-TAKE-ADDRESS>true</ENABLE-TAKE-ADDRESS>
                      <INDIRECT-API>false</INDIRECT-API>
                      <PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]SRDataServices_[!"name(.)"!]</PORT-REF>
                    </PORT-API-OPTION>
      [!ENDLOOP!]
    [!ENDIF!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "node:order(DemConfigSet/*/DemEventParameter/*, 'DemEventId')"!]
      [!VAR "RunningNr" = "0"!]
      [!LOOP "DemCallbackEventStatusChanged/*"!]
        [!IF "not(node:exists(DemCallbackEventStatusChangedFnc))"!]
          [!VAR "RunningNr" = "num:integer($RunningNr + 1)"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBStEvt[!"name(../../.)"!]_[!"$RunningNr"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBStatusEvt_[!"name(../../.)"!]_[!"$RunningNr"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackEventStatusChange"!]/EventStatusChanged</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
        [!ENDIF!]
      [!ENDLOOP!]
    [!ENDLOOP!]
    [!IF "$UsePortGeneralCBStatusEvt = 'true'"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_GeneralCBStatusEvt</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralCBStatusEvt</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralCallbackEventStatusChange"!]/EventStatusChanged</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
    [!ENDIF!]
  [!ENDIF!][!/* default interface */!][!//
                        <!-- *** Synchronous-Server-Call-Points concerning DTC status change *** -->
  [!IF "count(DemGeneral/DemCallbackDTCStatusChanged/*) = 0"!]
                          <!-- none -->
  [!ENDIF!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!VAR "RunningNr" = "0"!]
    [!LOOP "DemGeneral/DemCallbackDTCStatusChanged/*[not(node:exists(DemCallbackDTCStatusChangedFnc))]"!]
      [!VAR "RunningNr" = "num:integer($RunningNr + 1)"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBStDTC_[!"$RunningNr"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBStatusDTC_[!"$RunningNr"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackDTCStatusChange"!]/DTCStatusChanged</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
    [!ENDLOOP!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_InitMonitorCB"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Init monitor for event *** -->
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "node:order(DemConfigSet/*/DemEventParameter/*, 'DemEventId')"!]
      [!IF "node:exists(DemCallbackInitMForE)"!]
        [!IF "not(node:exists(DemCallbackInitMForE/DemCallbackInitMForEFnc))"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBInitEvt[!"name(.)"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBInitEvt_[!"name(.)"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackInitMonitorForEvent"!]/InitMonitorForEvent</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
        [!ENDIF!]
      [!ENDIF!]
    [!ENDLOOP!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_ClearEventAllowedCB"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Clear event allowed *** -->
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "node:order(DemConfigSet/*/DemEventParameter/*, 'DemEventId')"!]
      [!IF "node:exists(DemCallbackClearEventAllowed)"!]
        [!IF "not(node:exists(DemCallbackClearEventAllowed/DemCallbackClearEventAllowedFnc))"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBClrEvt[!"name(.)"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBClrEvt_[!"name(.)"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackClearEventAllowed"!]/ClearEventAllowed</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
        [!ENDIF!]
      [!ENDIF!]
    [!ENDLOOP!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_Runnables", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
  [!IF "($InterfaceName = '') or ( $BaseServiceAPIVersion != $AsrVersion )"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetDTCOfEvent</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DTCFormat</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DTCOfEvent</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetDTCOfEvent</SYMBOL>
                    </RUNNABLE-ENTITY>
    [!NOCODE!]
    [!/* GetEventFreezeFrameData is only used if for AUTOSAR_40 and AUTOSAR_42 */!][!//
    [!ENDNOCODE!]
    [!IF "$DefaultASRServiceAPI != 'AUTOSAR_43'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>[!"$RE_GetEventFreezeFrameData"!]</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>RecordNumber</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>ReportTotalRecord</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DataId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DestBuffer</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>[!"$Dem_GetEventFreezeFrameData"!]</SYMBOL>
                    </RUNNABLE-ENTITY>
    [!ENDIF!]
    [!IF "DemGeneral/DemSuppressionSupport = 'DEM_DTC_SUPPRESSION'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetDTCSuppression</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DTC</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DTCFormat</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>SuppressionStatus</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetDTCSuppression</SYMBOL>
                    </RUNNABLE-ENTITY>
    [!ENDIF!]
    [!IF "DemGeneral/DemAvailabilitySupport = 'DEM_EVENT_AVAILABILITY'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetEventAvailable</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>AvailableStatus</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetEventAvailable</SYMBOL>
                    </RUNNABLE-ENTITY>
    [!ENDIF!]
  [!ENDIF!]
  [!IF "$InterfaceName = ''"!][!/* generated ONLY for default interface */!][!//
    [!IF "$AsrVersion = 'AUTOSAR_42'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_CddIfClearDTC</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_ASR42_ClearDTC</SYMBOL>
                    </RUNNABLE-ENTITY>
    [!ENDIF!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_For_CBDataEvt"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Event data change & general *** -->
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "DemConfigSet/*/DemEventParameter/*/DemCallbackEventDataChanged[not(node:exists(DemCallbackEventDataChangedFnc))]"!]
      [!VAR "SyncDataElement" = "name(../.)"!][!//
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBDataEvt[!"$SyncDataElement"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBDataEvt_[!"$SyncDataElement"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackEventDataChanged"!]/EventDataChanged</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
    [!ENDLOOP!]
    [!IF "$UsePortGeneralCBDataEvt = 'true'"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_GeneralCBDataEvt</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]GeneralCBDataEvt</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$GeneralCallbackEventDataChanged"!]/EventDataChanged</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
    [!ENDIF!]
  [!ENDIF!][!/* default interface */!][!//
[!ENDMACRO!]
[!MACRO "Build_SSCPs_For_ReadData"!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!CALL "Build_DataElementList"!]
    [!LOOP "text:split($DataElementList, '#')"!]
      [!VAR "SyncDataElement" = "."!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBReadData[!"$SyncDataElement"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBReadData_[!"$SyncDataElement"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CSDataServices"!][!"$SyncDataElement"!]/ReadData</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
    [!ENDLOOP!]
  [!ENDIF!][!/* default interface */!][!//
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_DataElementList"!]
  [!VAR "DataElementList" = "'#'"!]
  [!LOOP "(node:refs(node:refs(node:refs(DemConfigSet/*/DemEventParameter/*[DemEventKind='DEM_EVENT_KIND_SWC']/DemExtendedDataClassRef)/DemExtendedDataRecordClassRef/*)/DemDataElementClassRef/*)) | (node:refs(node:refs(node:refs(DemConfigSet/*/DemEventParameter/*[DemEventKind='DEM_EVENT_KIND_SWC']/DemFreezeFrameClassRef)/DemDidClassRef/*)/DemDidDataElementClassRef/*))"!]
    [!IF ". = 'DemExternalCSDataElementClass' and DemDataElementUsePort = 'true'"!]
      [!IF "not(contains($DataElementList, concat('#', name(.), '#')))"!]
        [!VAR "DataElementList" = "concat($DataElementList, name(.), '#')"!]
      [!ENDIF!]
    [!ENDIF!]
  [!ENDLOOP!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_SetEventStatus", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general *** -->
  [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$AsrVersion", "InterfaceName"="$InterfaceName", "TopLevelPackage"="$TopLevelPackage"!]
  [!IF "DemGeneral/DemExtendedDataCapture = 'DEM_TRIGGER_TESTFAILED' and DemGeneral/DemFreezeFrameCapture = 'DEM_TRIGGER_TESTFAILED'"!]
    [!CALL "Build_SSCPs_For_CBDataEvt"!]
    [!CALL "Build_SSCPs_For_ReadData"!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_PrestoreFreezeFrame", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Data Services *** -->
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "DemGeneral/DemDataElementClass/*[. = 'DemExternalCSDataElementClass' and DemDataElementUsePort = 'true']"!]
      [!VAR "SyncDataElement" = "name(.)"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBReadData[!"$SyncDataElement"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBReadData_[!"$SyncDataElement"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CSDataServices"!][!"$SyncDataElement"!]/ReadData</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
    [!ENDLOOP!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_GetFaultDetectionCounter", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Fault detect counter *** -->
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "node:order(DemConfigSet/*/DemEventParameter/*, 'DemEventId')"!]
      [!IF "DemEventClass/DemDebounceAlgorithmClass = 'DemDebounceMonitorInternal'"!]
        [!IF "node:exists(DemEventClass/DemDebounceAlgorithmClass/DemCallbackGetFDC)"!]
          [!IF "not(node:exists(DemEventClass/DemDebounceAlgorithmClass/DemCallbackGetFDC/DemCallbackGetFDCFnc))"!]
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>[!"$InterfaceName"!]sscp_CBFaultDetectCtr[!"name(.)"!]</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]CBFaultDetectCtr_[!"name(.)"!]</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/[!"$CallbackGetFaultDetectCounter"!]/GetFaultDetectionCounter</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
          [!ENDIF!]
        [!ENDIF!]
      [!ENDIF!]
    [!ENDLOOP!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_SetOperationCycleState", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
  [!CALL "Build_SSCPs_InitMonitorCB"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general *** -->
  [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$AsrVersion", "InterfaceName"="$InterfaceName", "TopLevelPackage"="$TopLevelPackage"!]
  [!CALL "Build_SSCPs_For_CBDataEvt"!]
[!ENDMACRO!]
[!MACRO "Build_SSCPs_SetCycleQualified", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general *** -->
  [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$AsrVersion", "InterfaceName"="$InterfaceName", "TopLevelPackage"="$TopLevelPackage"!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_SetAgingCycleState", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general *** -->
  [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$AsrVersion", "InterfaceName"="$InterfaceName", "TopLevelPackage"="$TopLevelPackage"!]
  [!CALL "Build_SSCPs_For_CBDataEvt"!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_ClearDTC", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
[!/* Required Synchronous-Server-Call-Points concerning EventStatusChange & InitMonitorForEvent are already added to Build_SSCPs_MainFunction */!][!//
  [!CALL "Build_SSCPs_ClearEventAllowedCB"!]
  [!IF "as:modconf('Dem')[1]/DemGeneral/DemOBDSupportKind = 'DEM_OBD_MASTER_ECU'"!]
                        <!-- !LINKSTO dsn.Dem.OBD.Mode04.Master.SyncSetClearDTCOperationInvoke.0001,1 -->
                        <SYNCHRONOUS-SERVER-CALL-POINT>
                          <SHORT-NAME>sscp_SetClearDTC_master</SHORT-NAME>
                          <OPERATION-IREF>
                            <CONTEXT-R-PORT-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/SetClearDTC_master</CONTEXT-R-PORT-REF>
                            <TARGET-REQUIRED-OPERATION-REF DEST="CLIENT-SERVER-OPERATION">[!"$TopLevelPackage"!]/PortInterfaces/SetClearDTC/SetClearDTC</TARGET-REQUIRED-OPERATION-REF>
                          </OPERATION-IREF>
                          <TIMEOUT>0.0</TIMEOUT>
                        </SYNCHRONOUS-SERVER-CALL-POINT>
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_SSCPs_MainFunction", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
                        <!-- *** InitMonitorForEvent callback is triggered by Dem_MainFunction if the DTC setting is re-enabled or during ClearDTC processing *** -->
  [!CALL "Build_SSCPs_InitMonitorCB"!]
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general *** -->
  [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$AsrVersion", "InterfaceName"="$InterfaceName", "TopLevelPackage"="$TopLevelPackage"!]
  [!CALL "Build_SSCPs_For_CBDataEvt"!]
                        <!-- GetFDC callback is triggered by RunnableEntity GetNextFilteredDTCAndFDC. Adding SSCP for GetFDC here is a work-around as this will be updated as a part of Dcm interfacing -->
  [!CALL "Build_SSCPs_GetFaultDetectionCounter", "AsrVersion"="$AsrVersion", "InterfaceName"="$InterfaceName", "TopLevelPackage"="$TopLevelPackage"!]
  [!CALL "Build_SSCPs_PrestoreFreezeFrame", "AsrVersion" = "$AsrVersion", "InterfaceName" = "$InterfaceName", "TopLevelPackage" = "$TopLevelPackage"!]
                        <!-- Synchronous-Server-Call-Points concerning ClearDTC -->
  [!CALL "Build_SSCPs_ClearDTC", "AsrVersion" = "$AsrVersion", "InterfaceName" = "$InterfaceName", "TopLevelPackage" = "$TopLevelPackage"!]
[!ENDMACRO!]
[!//
[!//
[!MACRO "Build_VAs_For_SRDataServices", "AsrVersion", "InterfaceName" = "''", "TopLevelPackage" = "'/AUTOSAR_Dem'"!]
  [!CALL "Create_Interface_Vars", "VarsAsrVersion"="$AsrVersion", "VarsInterfaceName"="$InterfaceName"!]
  [!IF "($InterfaceName = '')"!][!/* default interface */!][!//
    [!LOOP "DemGeneral/DemDataElementClass/*[. = 'DemExternalSRDataElementClass']"!]
                        <VARIABLE-ACCESS>
                          <SHORT-NAME>[!"$InterfaceName"!]VA_SRDataServices_[!"name(.)"!]_data</SHORT-NAME>
                          <ACCESSED-VARIABLE>
                            <AUTOSAR-VARIABLE-IREF>
                              <PORT-PROTOTYPE-REF DEST="R-PORT-PROTOTYPE">/AUTOSAR_Dem/SwComponentTypes/Dem/[!"$InterfaceName"!]SRDataServices_[!"name(.)"!]</PORT-PROTOTYPE-REF>
                              <TARGET-DATA-PROTOTYPE-REF DEST="VARIABLE-DATA-PROTOTYPE">/AUTOSAR_Dem/PortInterfaces/SRDataServices_[!"name(.)"!]/data</TARGET-DATA-PROTOTYPE-REF>
                            </AUTOSAR-VARIABLE-IREF>
                          </ACCESSED-VARIABLE>
                        </VARIABLE-ACCESS>
    [!ENDLOOP!]
  [!ENDIF!]
[!ENDMACRO!]
[!//
[!//
[!NOCODE!]
[!VAR "OBDSupport" = "DemGeneral/DemOBDSupport"!]
[!/* Determine the AUTOSAR version to be used as base for service API's */!][!//
[!/* Because the AUTOSAR_43 is very similar to AUTOSAR_42, only small differences for the requested API's */!][!//
[!/* we have 2 major versions to be used as base versions: AUTOSAR_40 and AUTOSAR_42 */!][!//
[!IF "DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI != 'NONE'"!][!//
  [!IF "DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = 'AUTOSAR_42'"!][!//
    [!/* base versions for creating the service API's will be AUTOSAR_42 */!][!//
    [!VAR "BaseServiceAPIVersion" = "'AUTOSAR_42'"!][!//
    [!/* default configured value for service API's will be AUTOSAR_42 */!][!//
    [!VAR "DefaultASRServiceAPI" = "'AUTOSAR_42'"!][!//
  [!ELSEIF "DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI = 'AUTOSAR_43'"!][!//
    [!/* base versions for creating the service API's will be AUTOSAR_42 */!][!//
    [!VAR "BaseServiceAPIVersion" = "'AUTOSAR_42'"!][!//
    [!/* default configured value for service API's will be AUTOSAR_43 */!][!//
    [!VAR "DefaultASRServiceAPI" = "'AUTOSAR_43'"!][!//
  [!ELSE!][!//
    [!/* base versions for creating the service API's will be AUTOSAR_40 */!][!//
    [!VAR "BaseServiceAPIVersion" = "'AUTOSAR_40'"!][!//
    [!/* default configured value for service API's will be AUTOSAR_40 */!][!//
    [!VAR "DefaultASRServiceAPI" = "'AUTOSAR_40'"!][!//
  [!ENDIF!][!//
[!ELSE!][!//
  [!/* base versions for creating the service API's will be NONE */!][!//
  [!VAR "BaseServiceAPIVersion" = "'NONE'"!][!//
  [!/* default configured value for service API's will be NONE */!][!//
  [!VAR "DefaultASRServiceAPI" = "'NONE'"!][!//
[!ENDIF!][!//
[!VAR "SRDataElementNumber" = "count(DemGeneral/DemDataElementClass/*[. = 'DemExternalSRDataElementClass'])"!]
[!ENDNOCODE!]
<?xml version="1.0" encoding="UTF-8"?>
<AUTOSAR xmlns="http://autosar.org/schema/r4.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://autosar.org/schema/r4.0 AUTOSAR_4-0-3_STRICT_COMPACT.xsd">
[!/* do not generate this file if RTE is not used */!][!//
[!SKIPFILE "DemGeneral/DemRteUsage = 'false'"!]
[!CALL "CalculateQueueLength"!]

  <AR-PACKAGES>
    <!-- AUTOSAR_Dem -->
    <AR-PACKAGE>
      <SHORT-NAME>AUTOSAR_Dem</SHORT-NAME>
      <ELEMENTS/>
      <AR-PACKAGES>
        <AR-PACKAGE>
          <SHORT-NAME>DataConstrs</SHORT-NAME>
          <ELEMENTS>

            <!-- !LINKSTO Dem.RteTypes_Implicit10,1 -->
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_OperationCycleIdType</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:i(count(DemGeneral/DemOperationCycle/*) - 1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>

[!IF "count(DemGeneral/DemAgingCycle/*) != 0"!]
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_AgingCycleIdType</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:i(count(DemGeneral/DemAgingCycle/*) - 1)"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>
[!ENDIF!]

[!IF "count(DemGeneral/DemIndicator/*) > 0"!]
  [!VAR "IndicatorIdTypeMax" = "num:i(count(DemGeneral/DemIndicator/*) - 1)"!]
[!ELSE!][!//
  [!VAR "IndicatorIdTypeMax" = "num:i(0)"!]
[!ENDIF!]
            <!-- !LINKSTO Dem.RteTypes_Implicit11,1 -->
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_IndicatorIdType</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"$IndicatorIdTypeMax"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>

[!IF "count(DemGeneral/DemRatioId/*) > 0"!]
  [!VAR "RatioIdTypeMax" = "num:i(count(DemGeneral/DemRatioId/*) - 1)"!]
[!ELSE!][!//
  [!VAR "RatioIdTypeMax" = "num:i(0)"!]
[!ENDIF!]
            <!-- !LINKSTO Dem.RteTypes_Implicit12,1 -->
            <DATA-CONSTR>
              <SHORT-NAME>CONSTR_RatioIdType</SHORT-NAME>
              <DATA-CONSTR-RULES>
                <DATA-CONSTR-RULE>
                  <INTERNAL-CONSTRS>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">0</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"$RatioIdTypeMax"!]</UPPER-LIMIT>
                  </INTERNAL-CONSTRS>
                </DATA-CONSTR-RULE>
              </DATA-CONSTR-RULES>
            </DATA-CONSTR>

          </ELEMENTS>
        </AR-PACKAGE>

        <AR-PACKAGE>
          <SHORT-NAME>CompuMethods</SHORT-NAME>
          <ELEMENTS>
[!IF "count(DemGeneral/DemIndicator/*) != 0"!]
            <!-- !LINKSTO Dem.RteTypes_Implicit11,1 -->
            <COMPU-METHOD>
              <SHORT-NAME>CM_IndicatorIdType</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
  [!LOOP "DemGeneral/DemIndicator/*"!]
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(DemIndicatorID)"!]</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(DemIndicatorID)"!]</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DemConf_DemIndicator_[!"name(.)"!]</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
  [!ENDLOOP!]
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
[!ENDIF!]
            <!-- !LINKSTO Dem.RteTypes_Implicit10,1 -->
            <COMPU-METHOD>
              <SHORT-NAME>CM_OperationCycleIdType</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
[!VAR "CycCtr" = "0"!]
[!LOOP "DemGeneral/DemOperationCycle/*"!]
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($CycCtr)"!]</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($CycCtr)"!]</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>[!"name(.)"!]</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
  [!VAR "CycCtr" = "$CycCtr + 1"!]
[!ENDLOOP!]
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>

[!IF "count(DemGeneral/DemAgingCycle/*) != 0"!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_AgingCycleIdType</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
  [!VAR "AgingCtr" = "0"!]
  [!LOOP "DemGeneral/DemAgingCycle/*"!]
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($AgingCtr)"!]</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer($AgingCtr)"!]</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>[!"name(.)"!]</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
    [!VAR "AgingCtr" = "$AgingCtr + 1"!]
  [!ENDLOOP!]
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
[!ENDIF!]
[!IF "count(DemGeneral/DemEnableCondition/*) != 0"!]
            <COMPU-METHOD>
              <SHORT-NAME>CM_EnableConditionType</SHORT-NAME>
              <CATEGORY>TEXTTABLE</CATEGORY>
              <COMPU-INTERNAL-TO-PHYS>
                <COMPU-SCALES>
  [!LOOP "DemGeneral/DemEnableCondition/*"!]
                  <COMPU-SCALE>
                    <LOWER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(DemEnableConditionId)"!]</LOWER-LIMIT>
                    <UPPER-LIMIT INTERVAL-TYPE="CLOSED">[!"num:integer(DemEnableConditionId)"!]</UPPER-LIMIT>
                    <COMPU-CONST>
                      <VT>DemConf_DemEnableCondition_[!"name(.)"!]</VT>
                    </COMPU-CONST>
                  </COMPU-SCALE>
  [!ENDLOOP!]
                </COMPU-SCALES>
              </COMPU-INTERNAL-TO-PHYS>
            </COMPU-METHOD>
[!ENDIF!]
          </ELEMENTS>
        </AR-PACKAGE>

        <AR-PACKAGE>
          <SHORT-NAME>ImplementationDataTypes</SHORT-NAME>
          <ELEMENTS>

            <!-- definition of internal types -->

            <!-- !LINKSTO Dem.RteTypes_Implicit10,1 -->
            <IMPLEMENTATION-DATA-TYPE>
              <SHORT-NAME>Dem_OperationCycleIdType</SHORT-NAME>
              <CATEGORY>TYPE_REFERENCE</CATEGORY>
              <SW-DATA-DEF-PROPS>
                <SW-DATA-DEF-PROPS-VARIANTS>
                  <SW-DATA-DEF-PROPS-CONDITIONAL>
                    <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_OperationCycleIdType</COMPU-METHOD-REF>
                    <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_OperationCycleIdType</DATA-CONSTR-REF>
                    <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                  </SW-DATA-DEF-PROPS-CONDITIONAL>
                </SW-DATA-DEF-PROPS-VARIANTS>
              </SW-DATA-DEF-PROPS>
            </IMPLEMENTATION-DATA-TYPE>

[!IF "count(DemGeneral/DemAgingCycle/*) != 0"!]
            <IMPLEMENTATION-DATA-TYPE>
              <SHORT-NAME>Dem_AgingCycleIdType</SHORT-NAME>
              <CATEGORY>TYPE_REFERENCE</CATEGORY>
              <SW-DATA-DEF-PROPS>
                <SW-DATA-DEF-PROPS-VARIANTS>
                  <SW-DATA-DEF-PROPS-CONDITIONAL>
                    <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_AgingCycleIdType</COMPU-METHOD-REF>
                    <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_AgingCycleIdType</DATA-CONSTR-REF>
                    <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                  </SW-DATA-DEF-PROPS-CONDITIONAL>
                </SW-DATA-DEF-PROPS-VARIANTS>
              </SW-DATA-DEF-PROPS>
            </IMPLEMENTATION-DATA-TYPE>
[!ENDIF!]

            <!-- !LINKSTO Dem.RteTypes_Implicit11,1 -->
            <!-- Dem_IndicatorIdType is always available, but the compuMethod property cannot be
                 generated if there are no indicators, as it needs configured values and names of
                 the actual indicators -->
            <IMPLEMENTATION-DATA-TYPE>
              <SHORT-NAME>Dem_IndicatorIdType</SHORT-NAME>
              <CATEGORY>TYPE_REFERENCE</CATEGORY>
              <SW-DATA-DEF-PROPS>
                <SW-DATA-DEF-PROPS-VARIANTS>
                  <SW-DATA-DEF-PROPS-CONDITIONAL>
[!IF "count(DemGeneral/DemIndicator/*) != 0"!]
                    <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_IndicatorIdType</COMPU-METHOD-REF>
[!ENDIF!]
                    <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_IndicatorIdType</DATA-CONSTR-REF>
                    <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                  </SW-DATA-DEF-PROPS-CONDITIONAL>
                </SW-DATA-DEF-PROPS-VARIANTS>
              </SW-DATA-DEF-PROPS>
            </IMPLEMENTATION-DATA-TYPE>

            <!-- !LINKSTO Dem.RteTypes_Implicit12,1 -->
            <IMPLEMENTATION-DATA-TYPE>
              <SHORT-NAME>Dem_RatioIdType</SHORT-NAME>
              <CATEGORY>TYPE_REFERENCE</CATEGORY>
              <SW-DATA-DEF-PROPS>
                <SW-DATA-DEF-PROPS-VARIANTS>
                  <SW-DATA-DEF-PROPS-CONDITIONAL>
                    <DATA-CONSTR-REF DEST="DATA-CONSTR">/AUTOSAR_Dem/DataConstrs/CONSTR_RatioIdType</DATA-CONSTR-REF>
                    <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                  </SW-DATA-DEF-PROPS-CONDITIONAL>
                </SW-DATA-DEF-PROPS-VARIANTS>
              </SW-DATA-DEF-PROPS>
            </IMPLEMENTATION-DATA-TYPE>

            <IMPLEMENTATION-DATA-TYPE>
              <SHORT-NAME>Dem_EnableConditionType</SHORT-NAME>
              <CATEGORY>TYPE_REFERENCE</CATEGORY>
              <SW-DATA-DEF-PROPS>
                <SW-DATA-DEF-PROPS-VARIANTS>
                  <SW-DATA-DEF-PROPS-CONDITIONAL>
[!IF "count(DemGeneral/DemEnableCondition/*) != 0"!]
                    <COMPU-METHOD-REF DEST="COMPU-METHOD">/AUTOSAR_Dem/CompuMethods/CM_EnableConditionType</COMPU-METHOD-REF>
[!ENDIF!]
                    <IMPLEMENTATION-DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Platform/ImplementationDataTypes/uint8</IMPLEMENTATION-DATA-TYPE-REF>
                  </SW-DATA-DEF-PROPS-CONDITIONAL>
                </SW-DATA-DEF-PROPS-VARIANTS>
              </SW-DATA-DEF-PROPS>
            </IMPLEMENTATION-DATA-TYPE>

          </ELEMENTS>
        </AR-PACKAGE>
        <AR-PACKAGE>
          <SHORT-NAME>SwComponentTypes</SHORT-NAME>
          <ELEMENTS>

            <!-- definition of service component -->

            <SERVICE-SW-COMPONENT-TYPE>
              <SHORT-NAME>Dem</SHORT-NAME>
              <PORTS>
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                        <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_Ports", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                        <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_Ports", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                        <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_Ports", "AsrVersion"="$BaseServiceAPIVersion"!]
[!ENDIF!]
              </PORTS>

              <!-- definition of internal behavior -->

              <INTERNAL-BEHAVIORS>
                <SWC-INTERNAL-BEHAVIOR>
                  <SHORT-NAME>DemIntBeh</SHORT-NAME>
                  <EVENTS>
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                            <!-- Provide AUTOSAR 4.0 service interface -->
                    [!CALL "Build_OperationInvokedEvents", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                            <!-- Provide AUTOSAR 4.2 service interface -->
                    [!CALL "Build_OperationInvokedEvents", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                            <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                    [!CALL "Build_OperationInvokedEvents", "AsrVersion"="$BaseServiceAPIVersion"!]
[!ENDIF!]
                  </EVENTS>

                  <HANDLE-TERMINATION-AND-RESTART>NO-SUPPORT</HANDLE-TERMINATION-AND-RESTART>

                  <!-- generate Compu-Method defines of data types used in optional port interfaces -->
                  <INCLUDED-DATA-TYPE-SETS>
                    <INCLUDED-DATA-TYPE-SET>
                      <DATA-TYPE-REFS>
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                        <!-- Provide AUTOSAR 4.0 service interface -->
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ASR40/ImplementationDataTypes/Dem_ASR40_EventStatusType</DATA-TYPE-REF>
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ASR40/ImplementationDataTypes/Dem_ASR40_InitMonitorReasonType</DATA-TYPE-REF>
                        <!-- Compu-Method defines of Dem_IndicatorStatusType are neither generated nor used if no indicator links are configured, but shall be available for all configurations. -->
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ASR40/ImplementationDataTypes/Dem_ASR40_IndicatorStatusType</DATA-TYPE-REF>
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                        <!-- Provide AUTOSAR 4.2 service interface -->
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ASR42/ImplementationDataTypes/Dem_ASR42_EventStatusType</DATA-TYPE-REF>
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ASR42/ImplementationDataTypes/Dem_ASR42_InitMonitorReasonType</DATA-TYPE-REF>
                        <!-- Compu-Method defines of Dem_IndicatorStatusType are neither generated nor used if no indicator links are configured, but shall be available for all configurations. -->
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ASR42/ImplementationDataTypes/Dem_ASR42_IndicatorStatusType</DATA-TYPE-REF>
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                        <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ImplementationDataTypes/Dem_EventStatusType</DATA-TYPE-REF>
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ImplementationDataTypes/Dem_InitMonitorReasonType</DATA-TYPE-REF>
                        <!-- Compu-Method defines of Dem_IndicatorStatusType are neither generated nor used if no indicator links are configured, but shall be available for all configurations. -->
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ImplementationDataTypes/Dem_IndicatorStatusType</DATA-TYPE-REF>
[!ENDIF!]
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ImplementationDataTypes/Dem_EnableConditionType</DATA-TYPE-REF>
[!IF "count(DemGeneral/DemAgingCycle/*) != 0"!]
                        <DATA-TYPE-REF DEST="IMPLEMENTATION-DATA-TYPE">/AUTOSAR_Dem/ImplementationDataTypes/Dem_AgingCycleIdType</DATA-TYPE-REF>
[!ENDIF!]
                        <!-- Compu-Method defines of Dem_OperationCycleStateType will be generated always, as DEM_PROCESS_OPCYC_COUNTER is not supported. -->
                        <!-- data types used in mandatory ports
                        Dem_EventStatusExtendedType
                        Dem_DTCOriginType
                        Dem_DTCFormatType
                        End of: data types used in mandatory ports -->
                      </DATA-TYPE-REFS>
                    </INCLUDED-DATA-TYPE-SET>
                  </INCLUDED-DATA-TYPE-SETS>
                  <PORT-API-OPTIONS>
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                            <!-- Provide AUTOSAR 4.0 service interface -->
                    [!CALL "Build_PortApiOptions", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                            <!-- Provide AUTOSAR 4.2 service interface -->
                    [!CALL "Build_PortApiOptions", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                            <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                    [!CALL "Build_PortApiOptions", "AsrVersion"="$BaseServiceAPIVersion"!]
[!ENDIF!]
                  </PORT-API-OPTIONS>
                  <RUNNABLES>
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                            <!-- Provide AUTOSAR 4.0 service interface -->
                            [!CALL "Build_Runnables", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                            <!-- Provide AUTOSAR 4.2 service interface -->
                            [!CALL "Build_Runnables", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                            <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                            [!CALL "Build_Runnables", "AsrVersion"="$BaseServiceAPIVersion"!]
[!ENDIF!]
[!IF "count(DemConfigSet/*/DemEventParameter/*[DemEventKind = 'DEM_EVENT_KIND_SWC']) > 0"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetEventStatus</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventStatus</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
  [!IF "$SRDataElementNumber > 0"!]
                      <DATA-RECEIVE-POINT-BY-ARGUMENTS>
                        <!-- *** Variable-Access concerning SRDataServices *** -->
    [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
    [!ENDIF!]
    [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
    [!ENDIF!]
    [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="$BaseServiceAPIVersion"!]
    [!ENDIF!]
                      </DATA-RECEIVE-POINT-BY-ARGUMENTS>
  [!ENDIF!]
                      <SERVER-CALL-POINTS>
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_SetEventStatus", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_SetEventStatus", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_SetEventStatus", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_SetEventStatus</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_ResetEventStatus</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SERVER-CALL-POINTS>
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general and DTC status change *** -->
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_ResetEventStatus</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_PrestoreFreezeFrame</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
  [!IF "$SRDataElementNumber > 0"!]
                      <DATA-RECEIVE-POINT-BY-ARGUMENTS>
                        <!-- *** Variable-Access concerning SRDataServices *** -->
    [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
    [!ENDIF!]
    [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
    [!ENDIF!]
    [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="$BaseServiceAPIVersion"!]
    [!ENDIF!]
                      </DATA-RECEIVE-POINT-BY-ARGUMENTS>
  [!ENDIF!]
                      <SERVER-CALL-POINTS>
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_PrestoreFreezeFrame", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_PrestoreFreezeFrame", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_PrestoreFreezeFrame", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_PrestoreFreezeFrame</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_ClearPrestoredFreezeFrame</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_ClearPrestoredFreezeFrame</SYMBOL>
                    </RUNNABLE-ENTITY>
  [!IF "$OBDSupport = 'true'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetEventDisabled</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetEventDisabled</SYMBOL>
                    </RUNNABLE-ENTITY>
  [!ENDIF!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_ResetEventDebounceStatus</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DebounceResetStatus</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SERVER-CALL-POINTS>
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general and DTC status change *** -->
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_ResetEventDebounceStatus</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetEventStatus</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventStatusExtended</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetEventStatus</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetEventFailed</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventFailed</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetEventFailed</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetEventTested</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventTested</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetEventTested</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetFaultDetectionCounter</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>FaultDetectionCounter</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SERVER-CALL-POINTS>
                        <!-- GetFDC callback is triggered by RunnableEntity GetNextFilteredDTCAndFDC. Adding SSCP for GetFDC here is a work-around as this will be updated as a part of Dcm interfacing -->
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_GetFaultDetectionCounter", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_GetFaultDetectionCounter", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_GetFaultDetectionCounter", "AsrVersion"="$BaseServiceAPIVersion"!]
[!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_GetFaultDetectionCounter</SYMBOL>
                    </RUNNABLE-ENTITY>
[!NOCODE!]
[!/* GetEventExtendedDataRecord is only used if for AUTOSAR_40 and AUTOSAR_42 */!][!//
[!ENDNOCODE!]
[!IF "$DefaultASRServiceAPI != 'AUTOSAR_43'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetEventExtendedDataRecord</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>RecordNumber</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DestBuffer</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetEventExtendedDataRecord</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
[!IF "($BaseServiceAPIVersion = 'AUTOSAR_42') or (DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true')"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetDebouncingOfEvent</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DebouncingState</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetDebouncingOfEvent</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetEventFreezeFrameDataEx</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>RecordNumber</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DataId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DestBuffer</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>BufSize</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetEventFreezeFrameDataEx</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetEventExtendedDataRecordEx</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>RecordNumber</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DestBuffer</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>BufSize</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetEventExtendedDataRecordEx</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
[!IF "DemGeneral/DemOperationCycleProcessing = 'DEM_PROCESS_OPCYC_STATE'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetOperationCycleState</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>OperationCycleId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>CycleState</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SERVER-CALL-POINTS>
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_SetOperationCycleState", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_SetOperationCycleState", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_SetOperationCycleState", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_SetOperationCycleState</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ELSE!][!/* DemOperationCycleProcessing = 'DEM_PROCESS_OPCYC_COUNTER' */!][!//
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetOperationCycleCntValue</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetOperationCycleCntValue</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetCycleQualified</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>OperationCycleId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SERVER-CALL-POINTS>
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_SetCycleQualified", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_SetCycleQualified", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_SetCycleQualified", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_SetCycleQualified</SYMBOL>
                    </RUNNABLE-ENTITY>
[!IF "DemGeneral/DemAgingCycleCounterProcessing = 'DEM_PROCESS_AGINGCTR_INTERN'"!]
  [!IF "count(DemGeneral/DemAgingCycle/*) != 0"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetAgingCycleState</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>AgingCycleId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SERVER-CALL-POINTS>
    [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_SetAgingCycleState", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
    [!ENDIF!]
    [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_SetAgingCycleState", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
    [!ENDIF!]
    [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_SetAgingCycleState", "AsrVersion"="$BaseServiceAPIVersion"!]
    [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_SetAgingCycleState</SYMBOL>
                    </RUNNABLE-ENTITY>
  [!ENDIF!]
[!ELSE!][!/* DemGeneral/DemAgingCycleCounterProcessing = 'DEM_PROCESS_AGINGCTR_EXTERN' */!][!//
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetAgingCycleCounterValue</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetAgingCycleCounterValue</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
[!IF "count(DemGeneral/DemEnableCondition/*) != 0"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetEnableCondition</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EnableConditionID</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>ConditionFulfilled</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetEnableCondition</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
[!IF "count(DemGeneral/DemStorageCondition/*) != 0"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetStorageCondition</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetStorageCondition</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
[!IF "count(DemGeneral/DemIndicator/*) != 0"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetIndicatorStatus</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>IndicatorId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>IndicatorStatus</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetIndicatorStatus</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetEventMemoryOverflow</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DTCOrigin</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>OverflowIndication</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetEventMemoryOverflow</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetNumberOfEventMemoryEntries</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>DTCOrigin</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>NumberOfEventMemoryEntries</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetNumberOfEventMemoryEntries</SYMBOL>
                    </RUNNABLE-ENTITY>
[!/* !LINKSTO Dem_OBD_0001,2 */!][!//
[!IF "$OBDSupport = 'true'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetPfcCycleQualified</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetPfcCycleQualified</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_GetPfcCycleQualified</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_GetPfcCycleQualified</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]

[!IF "$OBDSupport = 'true'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_ResetReadiness</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_ResetReadiness</SYMBOL>
                    </RUNNABLE-ENTITY>
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetPtoStatus</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SYMBOL>Dem_SetPtoStatus</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]

[!IF "as:modconf('Dem')[1]/DemGeneral/DemUserControlledWIRBitSupport = 'true'"!]
                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_SetWIRStatus</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <ARGUMENTS>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>EventId</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                        <RUNNABLE-ENTITY-ARGUMENT>
                          <SYMBOL>WIRStatus</SYMBOL>
                        </RUNNABLE-ENTITY-ARGUMENT>
                      </ARGUMENTS>
                      <CAN-BE-INVOKED-CONCURRENTLY>true</CAN-BE-INVOKED-CONCURRENTLY>
                      <SERVER-CALL-POINTS>
                        <!-- *** Synchronous-Server-Call-Points concerning Event status change & general and DTC status change *** -->
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_EventStatusAndDtcCB", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_SetWIRStatus</SYMBOL>
                    </RUNNABLE-ENTITY>
[!ENDIF!]

                    <RUNNABLE-ENTITY>
                      <SHORT-NAME>RE_MainFunction</SHORT-NAME>
                      <MINIMUM-START-INTERVAL>0</MINIMUM-START-INTERVAL>
                      <CAN-BE-INVOKED-CONCURRENTLY>false</CAN-BE-INVOKED-CONCURRENTLY>
[!IF "$SRDataElementNumber > 0"!]
                      <DATA-RECEIVE-POINT-BY-ARGUMENTS>
                        <!-- *** Variable-Access concerning SRDataServices *** -->
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
  [!ENDIF!]
  [!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_VAs_For_SRDataServices", "AsrVersion"="$BaseServiceAPIVersion"!]
  [!ENDIF!]
                      </DATA-RECEIVE-POINT-BY-ARGUMENTS>
[!ENDIF!]
                      <SERVER-CALL-POINTS>
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR40ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.0 service interface -->
                        [!CALL "Build_SSCPs_MainFunction", "AsrVersion"="'AUTOSAR_40'", "InterfaceName"="'ASR40_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR40'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and DemGeneral/DemServiceAPI/DemEnableASR42ServiceAPI = 'true'"!]
                              <!-- Provide AUTOSAR 4.2 service interface -->
                        [!CALL "Build_SSCPs_MainFunction", "AsrVersion"="'AUTOSAR_42'", "InterfaceName"="'ASR42_'", "TopLevelPackage"="'/AUTOSAR_Dem/ASR42'"!]
[!ENDIF!]
[!IF "DemGeneral/DemRteUsage = 'true' and $BaseServiceAPIVersion != 'NONE'"!]
                              <!-- Provide default service interface as AUTOSAR 4.2 / 4.0 / 3.2 -->
                        [!CALL "Build_SSCPs_MainFunction", "AsrVersion"="$BaseServiceAPIVersion"!]
[!ENDIF!]
                      </SERVER-CALL-POINTS>
                      <SYMBOL>Dem_MainFunction</SYMBOL>
                      <WAIT-POINTS/>
                    </RUNNABLE-ENTITY>
                  </RUNNABLES>
                  <SUPPORTS-MULTIPLE-INSTANTIATION>false</SUPPORTS-MULTIPLE-INSTANTIATION>
                </SWC-INTERNAL-BEHAVIOR>
              </INTERNAL-BEHAVIORS>
            </SERVICE-SW-COMPONENT-TYPE>
          </ELEMENTS>
        </AR-PACKAGE>
      </AR-PACKAGES>
    </AR-PACKAGE>
    <AR-PACKAGE>
      <SHORT-NAME>EB_Dem</SHORT-NAME>
      <AR-PACKAGES>
        <AR-PACKAGE>
          <SHORT-NAME>SwcImplementations</SHORT-NAME>
          <ELEMENTS>

            <!-- definition of implementation -->

            <SWC-IMPLEMENTATION>
              <SHORT-NAME>DemImpl</SHORT-NAME>
              <CODE-DESCRIPTORS>
                <CODE>
                  <SHORT-NAME>DemCode</SHORT-NAME>
                  <ARTIFACT-DESCRIPTORS>
                    <AUTOSAR-ENGINEERING-OBJECT>
                      <SHORT-LABEL>EngObject</SHORT-LABEL>
                      <CATEGORY>SWSRC</CATEGORY>
                    </AUTOSAR-ENGINEERING-OBJECT>
                  </ARTIFACT-DESCRIPTORS>
                </CODE>
              </CODE-DESCRIPTORS>
              <PROGRAMMING-LANGUAGE>C</PROGRAMMING-LANGUAGE>
              <RESOURCE-CONSUMPTION>
                <SHORT-NAME>Resources</SHORT-NAME>
                <MEMORY-SECTIONS>
                  <MEMORY-SECTION>
                  <SHORT-NAME>CODE</SHORT-NAME>
                  <SW-ADDRMETHOD-REF DEST="SW-ADDR-METHOD">/AUTOSAR_MemMap/SwAddrMethods/CODE</SW-ADDRMETHOD-REF>
                  </MEMORY-SECTION>
                </MEMORY-SECTIONS>
              </RESOURCE-CONSUMPTION>
              <SW-VERSION>6.4.1</SW-VERSION>
              <VENDOR-ID>1</VENDOR-ID>
              <BEHAVIOR-REF DEST="SWC-INTERNAL-BEHAVIOR">/AUTOSAR_Dem/SwComponentTypes/Dem/DemIntBeh</BEHAVIOR-REF>
            </SWC-IMPLEMENTATION>
          </ELEMENTS>
        </AR-PACKAGE>
      </AR-PACKAGES>
    </AR-PACKAGE>
  </AR-PACKAGES>
</AUTOSAR>
