<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM1I1R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="DoIP" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>1.1.21</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2021-07-14T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                      &lt;p&gt;Configuration of the DoIP (Diagnostic over IP) module.&lt;/p&gt;
                    &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="0"/>
              <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
              <a:a name="RELEASE" value="asc:4.1"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="ECUC:b4a3902b-5f57-4ed4-b753-41b52ec68231"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="4"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="3"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="21"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="173"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:da name="DEFAULT" value="VariantPostBuild"/>
                <a:da name="EDITABLE" value="false"/>
                <a:da name="RANGE" value="VariantPostBuild"/>
              </v:var>
              <v:lst name="DoIPConfigSet" 
                     type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:da name="MAX" value="1"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="DoIPConfigSet" 
                       type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This container contains the configuration parameters and sub containers
                            of the AUTOSAR DoIP module.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" 
                       value="ECUC:85344a97-562f-4f0e-adc3-13050ee9e73e"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="((node:value(as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPUseMacAddressForIdentification)= &apos;false&apos;) and                                  (not (node:exists(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPEid))))" 
                        true="DoIPEid should be enabled when DoIPUseMacAddressForIdentification is FALSE."/>
                  <v:var name="DoIPEid" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Configured EID (Entity ID of) for vehicle identification/vehicle
                              announcement. Only necessary if DoIPUseMacAddressForIdentification is
                              set to FALSE.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:d5e790de-0e97-43dd-8af4-75f0a2b59082"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=281474976710655"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="DoIPGid" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Configured GID (Group ID of) for vehicle identification/vehicle
                              announcement.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:6ae455ce-c20e-4a97-b23a-c2bbb93fecea"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=281474976710655"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="DoIPLogicalAddress" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Describes the logical address of the DoIP entity, i.e. the LA that will
                              route diagnostic requests to the Dcm of the DoIP entity.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:de58f8a2-7680-4522-bae5-18d4b0444ed9"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:lst name="DoIPChannel" type="MAP">
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="node:isconsecutive(./*/DoIPPduRRxPdu/DoIPPduRRxPduId, 0)" 
                             false="DoIPPduRRxPduId shall be 0-based and dense."/>
                      <a:tst 
                             expr="count(./*) + count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPProxyChannel/*) + count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPCustomChannel/*) &gt; as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPMaxChannels" 
                             true="The total amount of channels (including proxy and custom channels) must not exceed /DoIPGeneral/DoIPMaxChannels."/>
                    </a:da>
                    <a:da name="MAX" value="65536"/>
                    <a:da name="MIN" value="1"/>
                    <v:ctr name="DoIPChannel" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Configuration of one DoIPChannel.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                      <a:a name="UUID" 
                           value="ECUC:ce8927a0-58c7-4099-a996-3ee43001e9e8"/>
                      <v:ref name="DoIPChannelSARef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Reference to the DoIPTester.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="ECUC:893cf71a-c06b-4044-812c-8df50e45d13e"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Reference shall point to a valid node."/>
                          <a:tst 
                                 expr="node:refexists(.) and                             count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*[DoIPChannelSARef = node:current() and DoIPChannelTARef = node:current()/../DoIPChannelTARef]) &gt; 1" 
                                 true="For each channel the combination of DoIPChannelSARef and DoIPChannelTARef shall be unique."/>
                          <a:tst 
                                 expr="node:refexists(.) and count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*[DoIPChannelSARef = node:current() and DoIPRoutingActivationType != node:current()/../DoIPRoutingActivationType]) &gt; 0" 
                                 true="Mixing of automatic and manual routing activation types for a single tester is not supported."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/DoIP/DoIPConfigSet/DoIPTester"/>
                      </v:ref>
                      <v:ref name="DoIPChannelTARef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Reference to the target address.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="ECUC:cbe1685e-4306-4efc-8345-5a1446b28405"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" 
                              false="Reference shall point to a valid node."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/DoIP/DoIPConfigSet/DoIPConnections/DoIPTargetAddress"/>
                      </v:ref>
                      <v:var name="DoIPRoutingActivationType" 
                             type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Type of routing activation:
                                &lt;/p&gt;
                                &lt;p&gt;
                                  DOIP_ROUTING_ACTIVATION_MSG - Activation with routing activation message.
                                  DOIP_ROUTING_ACTIVATION_AUTOMATIC - No need to send routing activation message prior receiving diagnostic message.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:2f9a2089-8bc2-4e4c-b388-fa83839cfec8"/>
                        <a:da name="DEFAULT" value="DOIP_ROUTING_ACTIVATION_MSG"/>
                        <a:da name="RANGE">
                          <a:v>DOIP_ROUTING_ACTIVATION_MSG</a:v>
                          <a:v>DOIP_ROUTING_ACTIVATION_AUTOMATIC</a:v>
                        </a:da>
                      </v:var>
                      <v:ctr name="DoIPPduRRxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container contains the Rx PDUs to connect with the Rx PDUs of
                                  the PduR.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="ECUC:63341ec1-b4ca-4bbc-82b5-a883d528b7c1"/>
                        <v:var name="DoIPPduRRxPduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    The DoIPPduRRxPduId is required by the API call
                                    DoIP_CancelReceive.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:affbfe09-cf4f-43ed-91f0-957c1e71f17f"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:ref name="DoIPPduRRxPduRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Reference to the &quot;global&quot; Pdu structure to allow
                                    harmonization of handle IDs in the COM-Stack.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:0fb53490-8f12-418b-a048-feaf0c60d6b0"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Reference shall point to a valid node."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPChannel/*/DoIPPduRRxPdu/DoIPPduRRxPduRef, .))" 
                                   true="DoIPPduRRxPduRef reference must be unique."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               count(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRSrcPdu[PduRSrcPduRef = node:current()])                               &lt; 1" 
                                   true="Found no PduRSrcPduRef routing path in PduR for referenced Rx PDU. Exactly one routing path must exist."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               count(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRSrcPdu[PduRSrcPduRef = node:current()])                               &gt; 1" 
                                   true="Found multiple PduRSrcPduRef routing paths in PduR for referenced Rx PDU. Exactly one routing path must exist."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="DoIPPduRTxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container contains the Tx PDUs to connect with the Tx PDUs of
                                  the PduR. If the parameter is not configured the channel is for
                                  functional addressing.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:ecf769bc-a264-4426-a107-185d357d42b4"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*[node:current()/../DoIPPduRRxPdu/DoIPPduRRxPduId &gt; DoIPPduRRxPdu/DoIPPduRRxPduId                             and not(node:exists(DoIPPduRTxPdu))]) &gt; 0" 
                              true="All channels with enabled DoIPPduRTxPdu shall have a smaller DoIPPduRRxPduId as channels with disabled DoIPPduRTxPdu."/>
                        <v:var name="DoIPPduRTxPduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    The DoIPPduRTxPduId is required by DoIP_TpTransmit and
                                    DoIP_CancelTransmit.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:4ec22559-5780-41ca-af56-0b32ecdd6dae"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=65535"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath 
                                      false="DoIPPduRTxPduId and DoIPPduRRxPduId shall be equal." 
                                      expr="node:current() = ../../DoIPPduRRxPdu/DoIPPduRRxPduId"/>
                          </a:da>
                        </v:var>
                        <v:ref name="DoIPPduRTxPduRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Reference to the &quot;global&quot; PDU structure to allow
                                    harmonization of handle IDs in the COM-Stack.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:f703fb82-d2e7-4545-a97c-3275ff0bfc5d"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Reference shall point to a valid node."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPChannel/*/DoIPPduRTxPdu/DoIPPduRTxPduRef, .))" 
                                   true="DoIPPduRTxPduRef reference must be unique."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               count(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRDestPdu/*[PduRDestPduRef = node:current()]) &lt; 1" 
                                   true="Found no PduRDestPduRef routing path in PduR for referenced Tx PDU. Exactly one routing path must exist."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               not(node:exists(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRDestPdu/*[PduRDestPduRef = node:current()]/PduRDestPduHandleId))" 
                                   true="PduRDestPduHandleId must be enabled for referenced Tx PDU."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                      </v:ctr>
                    </v:ctr>
                  </v:lst>
                  <v:lst name="DoIPCustomChannel" type="MAP">
                    <a:da name="ENABLE" type="XPath" 
                          expr="as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPCustomPayloadTypeEnabled = &apos;true&apos;"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="count(./*) = count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPConnections/DoIPTcpConnection/*)" 
                             false="The number of custom channels must be equal to the number of Tcp connections."/>
                      <a:tst 
                             expr="node:isconsecutive(./*/DoIPPduRRxPdu/DoIPPduRRxPduId, (num:max(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*/DoIPPduRRxPdu/DoIPPduRRxPduId) + 1))" 
                             false="DoIPCustomChannel/*/DoIPSoAdRxPdu/DoIPPduRRxPduId shall be consecutive and start with the next higher DoIPChannel/*/DoIPSoAdRxPdu/DoIPSoAdRxPduId."/>
                      <a:tst 
                             expr="node:isconsecutive(./*/DoIPPduRTxPdu/DoIPPduRTxPduId, (num:max(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*/DoIPPduRTxPdu/DoIPPduRTxPduId) + 1))" 
                             false="DoIPCustomChannel/DoIPSoAdTxPdu/DoIPPduRTxPduId shall be consecutive and start with the next higher DoIPChannel/*/DoIPSoAdTxPdu/DoIPSoAdTxPduId."/>
                    </a:da>
                    <a:da name="MAX" value="254"/>
                    <a:da name="MIN" value="1"/>
                    <v:ctr name="DoIPCustomChannel" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Configuration of one DoIPCustomChannel.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                      <a:a name="UUID" 
                           value="ECUC:52f23b80-c091-11e7-abc4-cec278b6b50a"/>
                      <v:ref name="DoIPTcpConnectionRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Reference to Tcp connection used for transmission of custom diagnostic messages.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="UUID" 
                             value="ECUC:a83a45fc-c095-11e7-abc4-cec278b6b50a"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="node:refvalid(.)" 
                                 false="Reference shall point to a valid node."/>
                          <a:tst 
                                 expr="node:refvalid(.) and                                  not(count(as:modconf(&apos;DoIP&apos;)/DoIPConfigSet/*/DoIPCustomChannel/*[DoIPTcpConnectionRef = node:current()]) &gt; 1)" 
                                 false="DoIPTcpConnectionRef should be unique within Custom channel."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/DoIP/DoIPConfigSet/DoIPConnections/DoIPTcpConnection"/>
                      </v:ref>
                      <v:ctr name="DoIPPduRRxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container contains the Rx PDUs to connect with the Rx PDUs of
                                  the PduR.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="ECUC:63341ec1-b4ca-4bbc-82b5-a883d528b7c1"/>
                        <v:var name="DoIPPduRRxPduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Values should be consecutive after DoIPPduRRxPduIds from DoIPChannel
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst 
                                   expr="&gt;=num:i(count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*/DoIPPduRRxPdu/DoIPPduRRxPduId))"/>
                          </a:da>
                        </v:var>
                        <v:ref name="DoIPPduRRxPduRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Reference to the &quot;global&quot; Pdu structure to allow
                                    harmonization of handle IDs in the COM-Stack.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="UUID" 
                               value="ECUC:0fb53490-8f12-418b-a048-feaf0c60d6b0"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Reference shall point to a valid node."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/*/*/DoIPPduRRxPdu/DoIPPduRRxPduRef, .))" 
                                   true="DoIPPduRRxPduRef reference must be unique."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               count(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRSrcPdu[PduRSrcPduRef = node:current()])                               &lt; 1" 
                                   true="Found no PduRSrcPduRef routing path in PduR for referenced Rx PDU. Exactly one routing path must exist."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               count(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRSrcPdu[PduRSrcPduRef = node:current()])                               &gt; 1" 
                                   true="Found multiple PduRSrcPduRef routing paths in PduR for referenced Rx PDU. Exactly one routing path must exist."/>
                            <a:tst 
                                   expr="node:refvalid(.) and not(node:refvalid(node:ref(.)/MetaDataTypeRef))" 
                                   true="PDU referenced by DoIPPduRRxPduRef must have a MetaDataTypeRef configured with MetaDataItems of type SOCKET_CONNECTION_ID_16 and PAYLOAD_TYPE_16."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:refvalid(node:ref(.)/MetaDataTypeRef))                                     and (count(node:ref(node:ref(.)/MetaDataTypeRef)/MetaDataItem/*[./MetaDataItemType = &apos;SOCKET_CONNECTION_ID_16&apos;]) &lt; 1)                                     and (count(node:ref(node:ref(.)/MetaDataTypeRef)/MetaDataItem/*[./MetaDataItemType = &apos;PAYLOAD_TYPE_16&apos;]) &lt; 1)" 
                                   true="PDU referenced by DoIPPduRRxPduRef has a MetaDataTypeRef configured but no  MetaDataItem of type SOCKET_CONNECTION_ID_16 and PAYLOAD_TYPE_16."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="DoIPPduRTxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container contains the Tx PDUs to connect with the Tx PDUs of
                                  the PduR.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="ECUC:ecf769bc-a264-4426-a107-185d357d42b4"/>
                        <v:var name="DoIPPduRTxPduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Values should be consecutive after DoIPPduRTxPduIds from DoIPChannel
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:4ec22559-5780-41ca-af56-0b32ecdd6dae"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst 
                                   expr="&gt;=num:i(count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*/DoIPPduRTxPdu/DoIPPduRTxPduId))"/>
                          </a:da>
                        </v:var>
                        <v:ref name="DoIPPduRTxPduRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Reference to the &quot;global&quot; PDU structure to allow
                                    harmonization of handle IDs in the COM-Stack.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="UUID" 
                               value="ECUC:f703fb82-d2e7-4545-a97c-3275ff0bfc5d"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Reference shall point to a valid node."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/*/*/DoIPPduRTxPdu/DoIPPduRTxPduRef, .))" 
                                   true="DoIPPduRTxPduRef reference must be unique."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               count(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRDestPdu/*[PduRDestPduRef = node:current()]) &lt; 1" 
                                   true="Found no PduRDestPduRef routing path in PduR for referenced Tx PDU. Exactly one routing path must exist."/>
                            <a:tst 
                                   expr="node:refexists(.) and                               not(node:exists(as:modconf(&apos;PduR&apos;)[1]/PduRRoutingTables/*/PduRRoutingTable/*/PduRRoutingPath/*/PduRDestPdu/*[PduRDestPduRef = node:current()]/PduRDestPduHandleId))" 
                                   true="PduRDestPduHandleId must be enabled for referenced Tx PDU."/>
                            <a:tst 
                                   expr="node:refvalid(.) and not(node:refvalid(node:ref(.)/MetaDataTypeRef))" 
                                   true="PDU referenced by DoIPPduRTxPduRef must have a MetaDataTypeRef configured with MetaDataItems of type SOCKET_CONNECTION_ID_16 and PAYLOAD_TYPE_16."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:refvalid(node:ref(.)/MetaDataTypeRef))                                     and (count(node:ref(node:ref(.)/MetaDataTypeRef)/MetaDataItem/*[./MetaDataItemType = &apos;SOCKET_CONNECTION_ID_16&apos;]) &lt; 1)                                     and (count(node:ref(node:ref(.)/MetaDataTypeRef)/MetaDataItem/*[./MetaDataItemType = &apos;PAYLOAD_TYPE_16&apos;]) &lt; 1)" 
                                   true="PDU referenced by DoIPPduRTxPduRef has a MetaDataTypeRef configured but no  MetaDataItem of type SOCKET_CONNECTION_ID_16 and PAYLOAD_TYPE_16."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                      </v:ctr>
                    </v:ctr>
                  </v:lst>
                  <v:ctr name="DoIPConnections" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Container contains all lower layer connection specific information,
                              i.e. the single PDU References and Handle IDs to the SoAd.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="ECUC:06a174a5-5ad6-4b7a-8ce8-c64883f2e5c5"/>
                    <v:lst name="DoIPTargetAddress" type="MAP">
                      <a:da name="MAX" value="65535"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="DoIPTargetAddress" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container describes a possible TargetAddress that is
                                  supported by DoIP.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:11b8faaf-bc59-49fe-97b5-29df73fa6ee7"/>
                        <v:var name="DoIPTargetAddressValue" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Valid Target Address of a DoIP target address.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:c46011a4-ab1a-42cf-a2f8-b71632fcfd59"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DoIPTcpConnection" type="MAP">
                      <a:da name="INVALID" type="XPath" 
                            expr="node:isconsecutive(.//*/DoIPSoAdRxPdu/DoIPSoAdRxPduId, 0)" 
                            false="DoIPTcpConnection/DoIPSoAdRxPduId shall be 0-based and dense."/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="2"/>
                      <v:ctr name="DoIPTcpConnection" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container describes a Tcp connection to the lower layer
                                  SoAd module.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:e3ccdc1d-8a6b-40a0-abbf-59a1db67e267"/>
                        <v:var name="DoIPTcpConnectionSecurityRequired" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                     Indicates if the associated TCP socket uses a
                                     secure connection (e.g. TLS).
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:103fb892-7483-4757-94b7-ea3495ef5ccc"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:ctr name="DoIPSoAdRxPdu" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    This container contains the Rx PDUs received by DoIP.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="ECUC:dccc0de2-6078-83b6-5be0-c16d0cfb314e"/>
                          <v:var name="DoIPSoAdRxPduId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      The DoIPSoAdRxPduId is required by the API call
                                      DoIP_SoAdTpRxIndication to receive I-PDUs from the SoAd.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="ECUC:64887d5b-19c1-c893-0538-d863cefb6ec6"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=65535"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:ref name="DoIPSoAdRxPduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      Reference to the &quot;global&quot; PDU structure to allow
                                      harmonization of handle IDs in the COM-Stack.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:5c756122-03e1-cc84-e246-daefc21831cb"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:xpath>
                                <mt:tst 
                                        false="Reference shall point to a valid node." 
                                        expr="node:refvalid(.)"/>
                                <mt:tst 
                                        true="DoIPSoAdRxPduRef references must be unique." 
                                        expr="node:refexists(.) and                                 not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPConnections/DoIPTcpConnection/*/DoIPSoAdRxPdu/DoIPSoAdRxPduRef, .))"/>
                                <mt:tst 
                                        true="No SoAdSocketRouteDest/SoAdRxPduRef found in SoAd referring to the same Rx PDU. Exactly one must exist." 
                                        expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()])                                 &lt; 1"/>
                                <mt:tst 
                                        true="Multiple SoAdSocketRouteDest/SoAdRxPduRef found in SoAd referring to the same Rx PDU. Exactly one must exist." 
                                        expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()])                                 &gt; 1"/>
                                <mt:tst 
                                        true="SoAdRxUpperLayerType in SoAd must be &apos;TP&apos;." 
                                        expr="node:refexists(.) and                                 not(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]/SoAdRxUpperLayerType = &apos;TP&apos;)"/>
                                <mt:tst 
                                        true="SoAdRxPduId in SoAd must be enabled." 
                                        expr="node:refexists(.) and                                 not(node:exists(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]/SoAdRxPduId))"/>
                                <mt:tst 
                                        true="Reference SoAdRxSocketConnOrSocketConnBundleRef of related SoAdSocketRoute must point to a Socket Connection." 
                                        expr="node:refexists(.) and                                 count(text:split(string(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]/../../SoAdRxSocketConnOrSocketConnBundleRef),&apos;/&apos;))!= 6"/>
                                <mt:tst 
                                        true="Parameter SoAdSocketTpRxBufferMin must be set for related SoAdSocketConnectionGroup." 
                                        expr="node:refexists(.) and                                 count(text:split(string(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]/../../SoAdRxSocketConnOrSocketConnBundleRef),&apos;/&apos;))= 6                                 and                                 not(node:exists((node:ref(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]/../../SoAdRxSocketConnOrSocketConnBundleRef))/../../SoAdSocketTpRxBufferMin))"/>
                                <mt:tst 
                                        false="Parameter SoAdSocketSoConModeChgNotification of corresponding SoAdSocketConnectionGroup needs to be set to TRUE for TCP connections used in DoIP." 
                                        expr="count(asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))) = 1 and                                 asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))/SoAdSocketSoConModeChgNotification =&apos;true&apos;"/>
                                <mt:tst 
                                        false="Parameter SoAdSocketAutomaticSoConSetup of corresponding SoAdSocketConnectionGroup needs to be set to FALSE for TCP connections used in DoIP." 
                                        expr="count(asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))) = 1 and                                 asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))/SoAdSocketAutomaticSoConSetup =&apos;false&apos;"/>
                                <mt:tst 
                                        false="Parameter SoAdPduHeaderEnable of corresponding SoAdSocketConnectionGroup needs to be set to FALSE for TCP connections used in DoIP." 
                                        expr="count(asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))) = 1 and                                 asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))/SoAdPduHeaderEnable =&apos;false&apos;"/>
                                <mt:tst 
                                        false="Parameter SoAdSocketTcpInitiate of corresponding SoAdSocketConnectionGroup needs to be set to FALSE for TCP connections used in DoIP." 
                                        expr="count(asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))) = 1 and                                 asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;SR&apos;))/SoAdSocketProtocol/SoAdSocketTcpInitiate =&apos;false&apos;"/>
                              </mt:xpath>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                          </v:ref>
                        </v:ctr>
                        <v:ctr name="DoIPSoAdTxPdu" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    This container describes the Tx PDU sent via the SoAd.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="ECUC:9d152d02-0932-8d1a-4197-422532741ad6"/>
                          <v:var name="DoIPSoAdTxPduId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      The DoIPSoAdTxPduId is required by the API call
                                      DoIP_SoAdTpTxConfirmation that is called by the SoAd to
                                      confirm that the IPdu has been transmitted successfully.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="ECUC:b59b9cca-bae8-d463-c803-cf3331da7844"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=65535"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                              <mt:xpath 
                                        false="DoIPSoAdTxPduId and DoIPSoAdRxPduId shall be equal." 
                                        expr="node:current() = ../../DoIPSoAdRxPdu/DoIPSoAdRxPduId"/>
                            </a:da>
                          </v:var>
                          <v:ref name="DoIPSoAdTxPduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      Reference to the &quot;global&quot; PDU structure to allow
                                      harmonization of handle IDs in the COM-Stack.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:0e7cb288-3853-db69-f093-dba2e8269d7a"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:xpath>
                                <mt:tst 
                                        false="Reference shall point to a valid node." 
                                        expr="node:refvalid(.)"/>
                                <mt:tst 
                                        true="DoIPSoAdTxPduRef references must be unique." 
                                        expr="node:refexists(.) and                                 not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPConnections/DoIPTcpConnection/*/DoIPSoAdTxPdu/DoIPSoAdTxPduRef, .))"/>
                                <mt:tst 
                                        true="No SoAdTxPduRef found in SoAd referring to the same Tx PDU. Exactly one must exist." 
                                        expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]) &lt; 1"/>
                                <mt:tst 
                                        true="Multiple SoAdTxPduRef found in SoAd referring to the same Tx PDU. Exactly one must exist." 
                                        expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]) &gt; 1"/>
                                <mt:tst 
                                        true="SoAdTxUpperLayerType in SoAd must be &apos;TP&apos;." 
                                        expr="node:refexists(.) and                                 not(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]/SoAdTxUpperLayerType = &apos;TP&apos;)"/>
                                <mt:tst 
                                        false="DoIPSoAdTxPduRef and DoIPSoAdRxPduRef should belong to the same SoAd SoConGroup." 
                                        expr="asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(.),&apos;PR&apos;)) =                                 asc_soad:getSoAdSocketConnectionGroupsOfSoAdRoutes(asc_soad:getSoAdRoutesForPdu(node:value(../../DoIPSoAdRxPdu/DoIPSoAdRxPduRef),&apos;SR&apos;))"/>
                              </mt:xpath>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                          </v:ref>
                        </v:ctr>
                        <v:var name="DoIPRequestAddressAssignment" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    When set DoIP module will request IP address assignment by calling
                                    SoAd_RequestIpAddrAssignment() for the TcpIpLocalAddr related to
                                    this connection.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="312d636e-9e57-44ed-9731-f396a478619f"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="DoIPUpdateDhcpHostNameOption" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    When set DoIP module will update DHCP host name option related to
                                    this connection.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="f7fcee35-da85-407e-bd31-ce5873126d83"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DoIPUdpConnection" type="MAP">
                      <a:da name="INVALID" type="XPath" 
                            expr="node:isconsecutive(.//*/DoIPSoAdRxPdu/DoIPSoAdRxPduId, 0)" 
                            false="DoIPSoAdRxPduId shall be 0-based and dense."/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="DoIPUdpConnection" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This Container describes a UDP connection to the lower layer
                                  SoAd module.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:113b6883-6d62-4e20-9cb6-680252dad2b0"/>
                        <v:ctr name="DoIPSoAdRxPdu" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container contains the Rx PDUs received by DoIP.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="ECUC:0a3a9a48-436f-9136-4cd7-cfcd846e2197"/>
                          <v:var name="DoIPSoAdRxPduId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      The DoIPSoAdRxPduId is required by the API call
                                      DoIP_SoAdTpRxIndication to receive I-PDUs from the SoAd.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="ECUC:91f709c0-fcb8-d613-f62f-e6c4466e5f0f"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=65535"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:ref name="DoIPSoAdRxPduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      Reference to the &quot;global&quot; PDU structure to allow
                                      harmonization of handle IDs in the COM-Stack.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:89e3ed87-e6d8-da04-d33d-e950398b2214"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Reference shall point to a valid node."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPConnections/DoIPUdpConnection/*/DoIPSoAdRxPdu/DoIPSoAdRxPduRef, .))" 
                                     true="DoIPSoAdRxPduRef references must be unique."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]) &lt; 1" 
                                     true="No SoAdSocketRouteDest/SoAdRxPduRef found in SoAd referring to the same PDU. Exactly one must exist."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]) &gt; 1" 
                                     true="Multiple SoAdSocketRouteDest/SoAdRxPduRef found in SoAd referring to the same Rx PDU. Exactly one must exist."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 not(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdSocketRoute/*/SoAdSocketRouteDest/*[SoAdRxPduRef = node:current()]/SoAdRxUpperLayerType = &apos;IF&apos;)" 
                                     true="SoAdRxUpperLayerType in SoAd must be &apos;IF&apos;."/>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                          </v:ref>
                        </v:ctr>
                        <v:ctr name="DoIPSoAdTxPdu" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    This container describes the Tx PDU sent via the SoAd.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="ECUC:ca83b967-ec29-9a9a-328e-5085a9e70b1f"/>
                          <v:var name="DoIPSoAdTxPduId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      The DoIPSoAdTxPduId is required by the API call
                                      DoIP_SoAdTpTxConfirmation that is called by the SoAd to
                                      confirm that the I-PDU has been transmitted successfully.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="ECUC:e30a2930-9ddf-e1e3-b8fa-dd93a94d688d"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=65535"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                              <mt:xpath 
                                        false="DoIPSoAdTxPduId and DoIPSoAdRxPduId shall be equal." 
                                        expr="node:current() = ../../DoIPSoAdRxPdu/DoIPSoAdRxPduId"/>
                            </a:da>
                          </v:var>
                          <v:ref name="DoIPSoAdTxPduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      Reference to the &quot;global&quot; PDU structure to allow
                                      harmonization of handle IDs in the COM-Stack.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:3beb3eee-1b4a-e8e9-e18a-ea035f998dc3"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Reference shall point to a valid node."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                       not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPConnections/DoIPUdpConnection/*/DoIPSoAdTxPdu/DoIPSoAdTxPduRef,.))" 
                                     true="DoIPSoAdTxPduRef references must be unique."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                       text:contains(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPConnections/DoIPUdpVehicleAnnouncement/*/DoIPSoAdTxPdu/DoIPSoAdTxPduRef,.)" 
                                     true="This DoIPSoAdTxPduRef is already configured in DoIPConnections/DoIPUdpVehicleAnnouncement/DoIPSoAdTxPdu/DoIPSoAdTxPduRef but shall be unique."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                       count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]) &lt; 1" 
                                     true="No SoAdTxPduRef found in SoAd referring to the same Tx PDU. Exactly one must exist."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                       count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef  = node:current()]) &gt; 1" 
                                     true="Multiple SoAdTxPduRef found in SoAd referring to the same Tx PDU. Exactly one must exist."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                       not(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]/SoAdTxUpperLayerType = &apos;IF&apos;)" 
                                     true="SoAdTxUpperLayerType in SoAd must be &apos;IF&apos;."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 node:ref(.)/PduLength &lt; 40 and                                 as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPUseVehicleIdentificationSyncStatus = &apos;false&apos;" 
                                     true="The value of EcuC PduLength must be at least 40."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 node:ref(.)/PduLength &lt; 41 and                                 as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPUseVehicleIdentificationSyncStatus = &apos;true&apos;" 
                                     true="The value of EcuC PduLength must be at least 41."/>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                          </v:ref>
                        </v:ctr>
                        <v:var name="DoIPRequestAddressAssignment" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    When set DoIP module will request IP address assignment by calling
                                    SoAd_RequestIpAddrAssignment() for the TcpIpLocalAddr related to
                                    this connection.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="9feb36ad-2932-4d70-a462-87e1d49dc450"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="DoIPUpdateDhcpHostNameOption" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    When set DoIP module will update DHCP host name option related to
                                    this connection.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="165022b2-2759-484d-8c90-66e3ce0b33d1"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DoIPUdpVehicleAnnouncement" type="MAP">
                      <a:da name="INVALID" type="XPath" 
                            expr="not(node:empty(../DoIPUdpConnection/*/DoIPSoAdTxPdu/DoIPSoAdTxPduId)) and                                      node:isconsecutive(.//*/DoIPSoAdTxPdu/DoIPSoAdTxPduId,                                      num:max(../DoIPUdpConnection/*/DoIPSoAdTxPdu/DoIPSoAdTxPduId) + 1)" 
                            false="DoIPUdpVehicleAnnouncement/DoIPSoAdTxPdu/DoIPSoAdTxPduId shall be consecutive and start with the next higher DoIPUdpConnection/DoIPSoAdTxPdu/DoIPSoAdTxPduId."/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="DoIPUdpVehicleAnnouncement" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This container provides PDUs for UDP multicast vehicle
                                  announcements.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                        <a:a name="UUID" 
                             value="b88cf58b-2d95-4fea-a8bf-5880caa69c4b"/>
                        <v:ctr name="DoIPSoAdTxPdu" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    This container describes the Tx PDU sent via the SoAd.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="dbfdfcbc-95c1-4356-8c89-560a0b2375fa"/>
                          <v:var name="DoIPSoAdTxPduId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      The DoIPSoAdTxPduId is required by the API call
                                      DoIP_SoAdTpTxConfirmation that is called by the SoAd to
                                      confirm that the IPdu has been transmitted successfully.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="c27bd84b-401b-4478-90c6-f19ff56dbe53"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=65535"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:ref name="DoIPSoAdTxPduRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      Reference to the &quot;global&quot; PDU structure to allow
                                      harmonization of handle IDs in the COM-Stack.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="UUID" 
                                 value="0bc02abf-4b2c-4ac4-afaa-ad9a8026dc7c"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Reference shall point to a valid node."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                   not(text:uniq(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPConnections/DoIPUdpVehicleAnnouncement/*/DoIPSoAdTxPdu/DoIPSoAdTxPduRef,.))" 
                                     true="DoIPSoAdTxPduRef references must be unique."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]) &lt; 1" 
                                     true="No SoAdTxPduRef found in SoAd referring to the same Tx PDU. Exactly one must exist."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 count(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]) &gt; 1" 
                                     true="Multiple SoAdTxPduRef found in SoAd referring to the same Tx PDU. Exactly one must exist."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 not(as:modconf(&apos;SoAd&apos;)[1]/SoAdConfig/*/SoAdPduRoute/*[SoAdTxPduRef = node:current()]/SoAdTxUpperLayerType = &apos;IF&apos;)" 
                                     true="SoAdTxUpperLayerType in SoAd must be &apos;IF&apos;"/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 node:ref(.)/PduLength &lt; 40 and                                 as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPUseVehicleIdentificationSyncStatus = &apos;false&apos;" 
                                     true="The value of EcuC PduLength must be at least 40."/>
                              <a:tst 
                                     expr="node:refexists(.) and                                 node:ref(.)/PduLength &lt; 41 and                                 as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPUseVehicleIdentificationSyncStatus = &apos;true&apos;" 
                                     true="The value of EcuC PduLength must be at least 41."/>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                          </v:ref>
                        </v:ctr>
                        <v:var name="DoIPRequestAddressAssignment" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    When set DoIP module will request IP address assignment by calling
                                    SoAd_RequestIpAddrAssignment() for the TcpIpLocalAddr related to
                                    this connection.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ad5db4b2-d2af-4e75-a98e-2b81042287a8"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="DoIPUpdateDhcpHostNameOption" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    When set DoIP module will update DHCP host name option related to
                                    this connection (starting with &apos;DoIP-&apos;).
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="194e5a45-0bc6-4828-836a-6a3c3b1cebe4"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                  <v:lst name="DoIPRoutingActivation" type="MAP">
                    <a:da name="MAX" value="255"/>
                    <v:ctr name="DoIPRoutingActivation" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                This container describes the routing activation possibilities by
                                representing for each container a possible routing activation
                                request message to the DoIP entity and the according references
                                to the activated diagnostic messages.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                      <a:a name="UUID" 
                           value="ECUC:8c07e2b0-4dd1-45fc-89ae-19a97da7e734"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="count(./DoIPTargetAddressRef/*) = 0" 
                            true="DoIPRoutingActivation shall have at least one valid reference to DoIPTargetAddressRef."/>
                      <v:var name="DoIPRoutingActivationNumber" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Identifies the Routing activation Number which is received for a
                                  DoIP routing activation request message.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:335e310b-8d47-48bf-b643-5c12468a5f01"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:var name="DoIPRoutingActivationSecurityRequired" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                 Indicates if a routing activation requires a secure TCP
                                 connection.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:09769389-bf84-4c3d-b507-bccf870eb870"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:lst name="DoIPTargetAddressRef">
                        <a:da name="MAX" value="65535"/>
                        <a:da name="MIN" value="0"/>
                        <v:ref name="DoIPTargetAddressRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Reference to all DoIPTargetAddress which are activated on this
                                  routing activation.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:ebc9f44b-f588-4a77-a371-08bfa7d33272"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Reference shall point to a valid node."/>
                            <a:tst 
                                   expr="node:current() = as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*/DoIPChannel/*[node:current()]/DoIPChannelTARef" 
                                   false="Referenced target address shall be cofigured in at least one channel."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/DoIP/DoIPConfigSet/DoIPConnections/DoIPTargetAddress"/>
                        </v:ref>
                      </v:lst>
                      <v:ctr name="DoIPRoutingActivationAuthenticationCallback" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Container describes the Callback function to call on a Routing
                                  Activation Request for Authentication. If this container is
                                  configured but the DoIPRoutingActivationAuthenticationFunc
                                  parameter is not present, the DoIP module will use an RPort
                                  of ServiceInterface &lt;RoutingActivation&gt;_RoutingActivation
                                  with the name
                                  &quot;CB&lt;RoutingActivation&gt;RoutingActivation&quot;.
                                  &lt;RoutingActivation&gt; is the ShortName of the
                                  DoIPRoutingActiviation container.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:726377c7-0039-4edc-b57c-dd98bc5e99b7"/>
                        <a:da name="ENABLE" value="false"/>
                        <v:var name="DoIPRoutingActivationAuthenticationFunc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Direct C Callback function to trigger the authentication function
                                  for routing activation. If the
                                  DoIPRoutingActivationAuthenticationFunc parameter is present,
                                  the DoIP module will not use an RPort of ServiceInterface
                                  &lt;RoutingActivation&gt;_RoutingActivation but call the
                                  configured function.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:05ef7a06-64da-467c-be24-d40bac66acc3"/>
                          <a:da name="ENABLE" value="false"/>
                        </v:var>
                        <v:var 
                               name="DoIPRoutingActivationAuthenticationReqLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Describes the amount of bytes used to handle to the authentication
                                  function on routing activation. If 0 is configured as length the
                                  parameter AuthenticationReqData will not be handled to the API.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:2abdcf96-9b8e-4936-afc0-ede76b21f3a7"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var 
                               name="DoIPRoutingActivationAuthenticationResLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Describes the amount of bytes used to read by the authentication
                                  function on routing activation. If 0 is configured as length
                                  the parameter AuthenticationResData will not be fetched via
                                  the API.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:45e1fc22-6491-40ed-87b8-7917007771a8"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                      <v:ctr name="DoIPRoutingActivationConfirmationCallback" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Container describes the Callback function to call on a Routing
                                  Activation Request for Confirmation. If this container is
                                  configured but the DoIPRoutingActivationConfirmationFunc parameter
                                  is not present the DoIP module will use an RPort of
                                  ServiceInterface &lt;RoutingActivation&gt;_RoutingActivation with
                                  the name &quot;CB&lt;RoutingActivation&gt;RoutingActivation&quot;.
                                  &lt;RoutingActivation&gt; is the ShortName of the
                                  DoIPRoutingActiviation container.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="ECUC:7e1d1ce3-eff6-43ab-a071-e6b83dfa4855"/>
                        <a:da name="ENABLE" value="false"/>
                        <v:var name="DoIPRoutingActivationConfirmationFunc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Direct C Callback function to trigger the confirmation function
                                    for routing activation. If the
                                    DoIPRoutingActivationConfirmationFunc parameter is present the
                                    DoIP module will not use an RPort of ServiceInterface
                                    &lt;RoutingActivation&gt;_RoutingActivation but call the
                                    configured function.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:4630dc00-f4e8-4bf0-b18c-1a98a4f2f7c9"/>
                          <a:da name="ENABLE" value="false"/>
                        </v:var>
                        <v:var 
                               name="DoIPRoutingActivationConfirmationReqLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Describes the amount of bytes used to handle to the confirmation
                                  function on routing activation. If 0 is configured as length the
                                  parameter ConfirmedReqData will not be handled to the API.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:b5b1030f-ad9f-4bbf-b2a0-9674bf5f20a7"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var 
                               name="DoIPRoutingActivationConfirmationResLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Describes the amount of bytes used to read by the confirmation
                                    function on routing activation. If 0 is configured as length the
                                    parameter ConfirmedResData will not be fetched via the API.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:701e1997-d200-4ee4-8372-e5eb0dc94c56"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:ctr>
                  </v:lst>
                  <v:lst name="DoIPTester" type="MAP">
                    <a:da name="MAX" value="255"/>
                    <a:da name="MIN" value="1"/>
                    <v:ctr name="DoIPTester" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                This container describes the properties of the possible connectable
                                Tester for the DoIP entity.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="POSTBUILDCHANGEABLE" value="true"/>
                      <a:a name="UUID" 
                           value="ECUC:5ec2063c-2a23-4da2-be67-e7cd0a80ee93"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPChannel/*[DoIPRoutingActivationType = &apos;DOIP_ROUTING_ACTIVATION_AUTOMATIC&apos; and node:current()/DoIPTesterSA = node:ref(DoIPChannelSARef)/DoIPTesterSA]) &gt; 0 or count(./DoIPRoutingActivationRef/*) &gt; 0" 
                            false="If tester is not referenced by channel with automatic routing activation then it requires at least one routing activation reference configured."/>
                      <v:var name="DoIPNumByteDiagAckNack" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Specifies the number of original Diagnostic request bytes the DoIP
                                  entity responses on a NACK of a diagnostic response message to
                                  the Tester.
                                &lt;/p&gt;
                                &lt;p&gt;
                                  The maximum size is limited by /DoIPGeneral/DoIPMaxNumByteDiagAckNack.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:2cdb3b03-189a-4c0d-847c-ec5cbe717265"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=4294967295"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                        <a:da name="WARNING" type="XPath" 
                              expr=". &lt;= as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPMaxNumByteDiagAckNack" 
                              false="The value is greater then DoIPMaxNumByteDiagAckNack, it will be set to DoIPMaxNumByteDiagAckNack."/>
                      </v:var>
                      <v:var name="DoIPTesterSA" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  Source Address of the Tester sent via routing activation or
                                  diagnostic message.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:44ccb383-1ad0-47a4-a3c4-5056f05a922d"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=65535"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:lst name="DoIPRoutingActivationRef">
                        <a:da name="MAX" value="255"/>
                        <a:da name="MIN" value="0"/>
                        <v:ref name="DoIPRoutingActivationRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                    Reference to a DoIPRoutingActivation describing the possible
                                    routing activations of the DoIPTester.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:cc241bfa-5d3c-4e9b-b190-f764add15a77"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Reference shall point to a valid node."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/DoIP/DoIPConfigSet/DoIPRoutingActivation"/>
                        </v:ref>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                </v:ctr>
              </v:lst>
              <v:ctr name="DoIPGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                        &lt;p&gt;
                          This container specifies the general configuration parameters of the DoIP
                          module.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" 
                     value="ECUC:3b3debc7-1a0d-4018-8cd1-4a22d0aefe1c"/>
                <v:var name="DoIPAliveCheckResponseTimeout" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Timeout in [s] for waiting for a response to an Alive Check request
                            before the connection is considered to be disconnected.
                            Represents parameter T_TCP_AliveCheck of ISO 13400-2:2012.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:a680c7fa-c06d-4139-b2a8-e60b1ee21fa6"/>
                  <a:da name="DEFAULT" value="0.5"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=Infinity"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPDevelopmentErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Pre-processor switch for enabling development error detection support.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:c1c0e3b1-0dc6-4f3c-9d70-953eba050f40"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="DoIPDhcpOptionVinUse" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            If DoIPDhcpOptionVinUse is set to true the DoIP module will add the
                            VIN to the Dhcp host name if no valid Dhcp host name is already set.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:a4f92c71-7156-4f63-9bad-b033de1542ec"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="DoIPEntityStatusMaxByteFieldUse" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This parameter is used to distinguish the optional support of the Max
                            data size element of a diagnostic entity status response.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:d061ccc9-9f47-4d86-9000-dddb6d5ba3bf"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="true"/>
                </v:var>
                <v:var name="DoIPGIDInvalidityPattern" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies the Byte pattern that is used for response messages if no
                            valid GID could be retrieved. Only the value &apos;0&apos; or &apos;255&apos; is allowed.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:a3d2dcfc-1823-47f3-b1d6-848b9c2c4807"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="RANGE">
                    <a:v>0</a:v>
                    <a:v>255</a:v>
                  </a:da>
                </v:var>
                <v:var name="DoIPGeneralInactivityTime" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Timeout in [s] for maximum inactivity of a TCP socket connection before
                            the DoIP module will close the according socket connection. Represents
                            parameter T_TCP_General_Inactivity of ISO 13400-2:2012.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:3c672e92-2dff-4c0d-98eb-0c9379bcafec"/>
                  <a:da name="DEFAULT" value="1.0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=Infinity"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:lst name="DoIPHeaderFileInclusion">
                  <v:var name="DoIPHeaderFileInclusion" type="STRING">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Name of the header file(s) to be included by the DoIP module
                              containing the used C-callback declarations.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:137d1c8a-4e94-42e4-845d-dbcbd5cb2bbe"/>
                  </v:var>
                </v:lst>
                <v:var name="DoIPHostNameSizeMax" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Maximum Size of the DHCP HostName in ASCII. This parameter is
                            necessary to reserve the correct amount of bytes for working
                            with the DHCP HostName option. Minimum range is 5 because Dhcp
                            Host Name should be at least &quot;DoIP-&quot; on any configuration.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:457138fe-602c-49e1-b1a2-5a0ca1d93822"/>
                  <a:da name="DEFAULT" value="5"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="((as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPDhcpOptionVinUse = &apos;true&apos;) and (num:i(.) &lt; (5 + 17 + num:i(string-length(as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPDhcpHostNamePrefix))))) or ((as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPDhcpOptionVinUse = &apos;false&apos;) and (num:i(.) &lt; (5 + num:i(string-length(as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPDhcpHostNamePrefix)))))" 
                           true="DoIPHostNameSizeMax is too small"/>
                    <a:tst expr="num:i(.) &gt; 255" 
                           true="Max size of DoIPHostNameSizeMax is 255."/>
                  </a:da>
                </v:var>
                <v:var name="DoIPInitialInactivityTime" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Timeout in [s] used for initial inactivity of a connected TCP socket
                            connection directly after socket connection. Represents parameter
                            T_TCP_Initial_Inactivity of ISO 13400-2:2012.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:f455792f-afbc-4de1-ab70-30d56a927828"/>
                  <a:da name="DEFAULT" value="1.0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=Infinity"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPInitialVehicleAnnouncementTime" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Time to wait in [s] for sending first vehicle announcement message
                            after IP address assignment. Represents parameter A_DoIP_Announce_Wait
                            of ISO 13400-2:2012.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:f2ce0a2d-fc67-453a-8b22-6f0f033507b2"/>
                  <a:da name="DEFAULT" value="0.005"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=Infinity"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Determines the frequency at which the DoIP_MainFunction() is called in
                            [s].
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:08d2196f-07da-4e92-9e85-e94ec4872d9f"/>
                  <a:da name="DEFAULT" value="0.001"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=Infinity"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPMaxRequestBytes" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies the maximum allowed bytes of a DoIP message request without
                            the DoIP header.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:430ceac3-db33-4e01-ad0d-fb005261a2cd"/>
                  <a:da name="DEFAULT" value="10"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=4294967295"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                    <mt:xpath 
                              true="PduLengthType is set to UINT16 in EcuC, thus maximum diagnostic message payload size is limited to 65539 bytes." 
                              expr="(. &gt; (65535 + 4)) and (as:modconf(&apos;EcuC&apos;)[1]/EcucPduCollection/PduLengthTypeEnum = &apos;UINT16&apos;) "/>
                  </a:da>
                </v:var>
                <v:var name="DoIPMaxTesterConnections" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Maximum amount of tester connections that shall be maintained at one
                            time before alive check is performed.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:4ee8c2a0-3924-41c7-a5d1-3bcf431efb0e"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr=". &gt; count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPConnections/DoIPTcpConnection/*)" 
                        true="The value is greater then the number of configured Tcp connections. Reducing the value to the number of configured Tcp connections will reduce RAM consumption."/>
                </v:var>
                <v:var name="DoIPMaxUDPSocketConnections" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Maximum number of UDP socket connections.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:7fe8ada0-affa-424a-b51b-cab3f19ae1fe"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="num:i(count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPConnections/DoIPUdpConnection/*))"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                    <mt:xpath 
                              false="The value is less then the number of configured Udp connections." 
                              expr=". &gt;= count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPConnections/DoIPUdpConnection/*)"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPMaxUDPRequestPerMessage" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This parameter captures the maximum amount of UDP Requests necessary to
                            handle parallel within a single UDP connection.
                          &lt;/p&gt;
                          &lt;p&gt;
                            &lt;strong&gt;Note:&lt;/strong&gt; This configuration parameter is not used.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:86cffc9d-35c7-48cf-ae60-9953f6fa47f9"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPNodeType" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Describes the Type of the DoIP node.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1d1d1908-d758-4af2-8758-2921f217c5ea"/>
                  <a:da name="DEFAULT" value="DOIP_NODE"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="RANGE">
                    <a:v>DOIP_GATEWAY</a:v>
                    <a:v>DOIP_NODE</a:v>
                  </a:da>
                </v:var>
                <v:var name="DoIPUseEIDasGID" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies if the DoIP entity shall use its EID if it is the Master for
                            vehicle identification gid on the vehicle identification/vehicle
                            announcement.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:e1729cb0-25db-4ce1-a1da-4a815be137df"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DoIPUseMacAddressForIdentification" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Provides the information if a configured EID at vehicle identification
                            response/vehicle announcement is used or the MAC address.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                  <a:a name="UUID" 
                       value="ECUC:364c701f-a202-4a4b-b7bc-ee6cf58cddb3"/>
                </v:var>
                <v:var name="DoIPUseVehicleIdentificationSyncStatus" 
                       type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Defines if the optional VIN/GID synchronization status is used
                            additionally in the vehicle identification/announcement.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:77dc8eda-649f-4728-9915-a08f25f81905"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="DoIPVehicleAnnouncementInterval" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Time to wait in [s] for sending subsequent vehicle announcement
                            messages. Represents parameter A_DoIP_Announce_Interval of ISO
                            13400-2:2012.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:53d5e0b6-56d1-459d-a3ec-69ce6e1c46c1"/>
                  <a:da name="DEFAULT" value="0.005"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=Infinity"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPVehicleAnnouncementRepetition" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Amount of repetitions of the vehicle announcement message on IP address
                            assignment. Represents parameter A_DoIP_Annunce_Num of ISO 13400-2:2012.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:23396c0b-0800-40e8-b491-bb11c5ecee43"/>
                  <a:da name="DEFAULT" value="3"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Activates the DoIP_GetVersionInfo() API.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:ce728d18-abea-4a65-aa34-18bdcf4bc0dc"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="DoIPVinGidMaster" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies if the DoIP entity is the Vehicle Identification Master
                            for the GID (Group ID).
                          &lt;/p&gt;
                          &lt;p&gt;
                            &lt;b&gt;Note: Feature not supported.&lt;/b&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:fb5b9a75-01e9-4f62-8b7e-35e1862a0337"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="node:exists(.) and (node:value(.) = &apos;true&apos;) and (not(node:empty(as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPDynamicGIDMasterSelectionCallback/DoIPDynamicGIDMasterSelection)))" 
                        true="When Dynamic GID Synchronization is enabled, DoIPVinGidMaster must be set to false."/>
                </v:var>
                <v:var name="DoIPVinInvalidityPattern" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies the Byte pattern that is used for response messages if no
                            valid VIN could be retrieved.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:71cdeb3f-0bca-40a4-89da-e9be192fb5ed"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:ctr name="DoIPGetGid" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This container describes the Callback function to get the GID.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" 
                       value="ECUC:e5a263bf-c784-4f01-8ea8-8d5d92fcde5b"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="node:exists(.) and not(node:exists(as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPDynamicGIDMasterSelectionCallback))" 
                           true="When DoIPGetGID is enabled DoIPDynamicGIDMasterSelectionCallback must be enabled too."/>
                    <a:tst expr="node:exists(.) and node:empty(./DoIPGetGID)" 
                           true="Callback function name must be specified when DoIPGetGid container is enabled."/>
                  </a:da>
                  <v:var name="DoIPGetGID" type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Direct C Callback function to get the GID of the DoIP entity.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:87f4a179-208a-48a0-b9ab-a7c412972e7f"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="DoIPPowerModeCallback" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This container describes the Callback function to get the Power Mode.
                            This container shall always be present.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" 
                       value="ECUC:2ff29d7f-73d8-4d8e-b0f9-80290df3875f"/>
                  <v:var name="DoIPPowerMode" type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Direct C Callback function to get the Power Mode of the DoIP entity.
                              If the DoIPPowerMode parameter is present, the DoIP module will not
                              use an RPort of ServiceInterface CallbackGetPowerMode but will call
                              the configured function.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:cf0e90d1-c77e-42c9-a19e-5b3ee1c9aab8"/>
                    <a:da name="EDITABLE" value="true"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="node:empty(.) and (as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPRteUsage = &apos;false&apos;)" 
                          true="When DoIPPowerMode is enabled, user callback function name needs to be specified."/>
                  </v:var>
                </v:ctr>
                <v:ctr name="DoIPTriggerGidSynchronization" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                            &lt;p&gt;
                              This container describes the Callback function to trigger the GID
                              synchronisation.
                            &lt;/p&gt;
                            &lt;p&gt;
                              &lt;b&gt;Note: Feature not supported.&lt;/b&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" 
                       value="ECUC:927e37ff-e9b9-4d89-b2ea-649d6e4d5a69"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:var name="DoIPTriggerGIDSynchronzation" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Direct C Callback function to trigger the synchronization of the GID.
                              If the DoIPTriggerGIDSynchronzation parameter is present, the DoIP
                              module will not use an RPort of ServiceInterface
                              CallbackTriggerGIDSynchronization but call the configured function.
                            &lt;/p&gt;
                            &lt;p&gt;
                              &lt;b&gt;Note: Feature not supported.&lt;/b&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:7d270003-ea90-4e43-b236-689b211e8fe9"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="DoIPDynamicGIDMasterSelectionCallback" 
                       type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This container describes the Callback function to obtain DoIP entity
                            GID master/slave status.
                          &lt;/p&gt;
                          &lt;p&gt;
                            If this container is not configured no Callback function will be
                            used and Dynamic GID Synchronization feature will be disabled.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="Link">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" 
                       value="ECUC:179fef15-648d-4962-8f8c-618b6076bbc2"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="node:exists(.) and not(node:exists(as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPGetGid))" 
                           true="When DoIPDynamicGIDMasterSelectionCallback is enabled DoIPGetGID must be enabled too."/>
                    <a:tst 
                           expr="node:exists(.) and node:empty(./DoIPDynamicGIDMasterSelection)" 
                           true="Callback function name must be specified when DoIPDynamicGIDMasterSelectionCallback container is enabled."/>
                  </a:da>
                  <v:var name="DoIPDynamicGIDMasterSelection" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Direct C Callback function to get the DoIP entity GID master/slave
                              status.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:5237ecad-fb46-4ab8-969d-6646f838733a"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:ctr name="DoIPVIDRequestReceivedCallback" 
                       type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This container provides the functionality to call a user defined function.
                          &lt;/p&gt;
                          &lt;p&gt;
                            If this container is not configured this functionality is disabled.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:var name="DoIPVIDRequestReceived" type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              User defined callback function
                              to be called for every valid received VID request.
                            &lt;/p&gt;
                            &lt;p&gt;
                              Syntax: &lt;code&gt; (void) UserDefinedFunction(uint8 DoIPInterfaceId)&lt;/code&gt;
                            &lt;/p&gt;
                            &lt;p&gt;
                              with UserDefinedFunction as placeholder for a user defined function
                              name provided with this configuration field.
                            &lt;/p&gt;
                            &lt;p&gt;
                              &lt;b&gt;Note:&lt;/b&gt; User defined header files can be added to configuration
                              container DoIPHeaderFileInclusion.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:empty(.)" 
                          true="Callback function name must be specified when DoIPVIDRequestReceivedCallback container is enabled."/>
                  </v:var>
                </v:ctr>
                <v:var name="DoIPEnableMainFunctionTx" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Pre-processor switch for enabling calling the tx part of the main function separately.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:c1c0e3b1-0dc6-4f3c-9d70-953eba152f40"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:ctr name="DoIPGetVIN" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This container describes the Callback function to get the VIN.
                          &lt;/p&gt;
                          &lt;p&gt;
                            If this function is not configured DoIP module uses the
                            configured DoIPVinInvalidityPattern.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="Link">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" 
                       value="ECUC:e4b79f21-20cd-430b-9079-54d1d3c20429"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:var name="DoIPGetVin" type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              The function should store VIN into specified location.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:a45a48ca-1e1f-46b8-9994-9465f4db4244"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                </v:ctr>
                <v:var name="DoIPMaxChannels" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies the maxium number of configured channels (including custom
                            and proxy channels if enabled).
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:5fc3cb15-9285-4f0d-8d7f-166bae022e6d"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPMaxNumByteDiagAckNack" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies maximum number of bytes of the original Diagnostic message
                            that will be copied into the ACK/NACK response message to the Tester.
                          &lt;/p&gt;
                          &lt;p&gt;
                            If this parameter is set to 0, the feature of sending a part of previous
                            diagnostic message in acknowledge message is disabled. &lt;b&gt;This results in
                            reduced RAM and ROM consumption.&lt;/b&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:d9d86dba-89ea-442a-bb0a-3665891908a5"/>
                  <a:da name="DEFAULT" value="128"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPCustomPayloadTypeEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Enables custom diagnostic message payload type feature - transmitting diagnostic
                            messages with reserved payload types in the range 0xF000..0xFFFF for manufacturer
                            specific use.
                          &lt;/p&gt;
                          &lt;p&gt;
                            The feature implements IF-TP bridging between PduR and SoAd - PduR communicates over IF,
                            and SoAd over TP Api.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:989b9d10-c08d-11e7-abc4-cec278b6b50a"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DoIPGetAndResetMeasurementDataApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Pre-processor switch for enabling DoIP_GetAndResetMeasurementData API
                          used for reading out and resetting counter for dropped messagges due to
                          generic header errors and counter for dropped diagnostic messages.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SCOPE" value="ECU"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="DoIPDhcpHostNamePrefix" type="STRING">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            If parameter DoIPDhcpHostNamePrefix is not an empty string it will be added to the
                            DHCP host name after DoIP- and prior to VIN when DoIPDhcpOptionVinUse parameter is
                            enabled. According to SWS this parameter shall be filled with &quot;VIN&quot;, but it can
                            also be filled with vendor specific value.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value=""/>
                  <a:da name="EDITABLE" value="true"/>
                </v:var>
                <v:ctr name="DoIPTcpSoConModeChgCallback" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            This container provides the functionality to call a user defined function.
                          &lt;/p&gt;
                          &lt;p&gt;
                            If this container is not configured this functionality is disabled.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:var name="DoIPTcpSoConModeChg" type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;
                              User defined callback function to be called
                              to provide information about the TCP connection status.
                            &lt;/p&gt;
                            &lt;p&gt;
                              Syntax: &lt;code&gt; (void) UserDefinedFunction(SoAd_SoConIdType SoConId, SoAd_SoConModeType Status)&lt;/code&gt;
                            &lt;/p&gt;
                            &lt;p&gt;
                              with UserDefinedFunction as placeholder for a user defined function
                              name provided with this configuration field.
                            &lt;/p&gt;
                            &lt;p&gt;
                              &lt;b&gt;Note:&lt;/b&gt; User defined header files can be added to configuration
                              container DoIPHeaderFileInclusion.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="Link">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:da name="INVALID" type="XPath" expr="node:empty(.)" 
                          true="Callback function name must be specified when DoIPTcpSoConModeChgCallback container is enabled."/>
                  </v:var>
                </v:ctr>
                <v:var name="DoIPResponseBeforeRoutingActivation" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies if diagnostic negative acknowledge messages will be sent prior to Routing activation:
                          &lt;/p&gt;
                          &lt;p&gt;
                            DOIP_ENABLE_ALL_DIAG_NACK - Diag Nack messages will always be sent.
                            DOIP_DISABLE_DIAG_NACK_0x06 - Diag Nack code 0x06 will not be sent before Routing Activation.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="DOIP_ENABLE_ALL_DIAG_NACK"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="RANGE">
                    <a:v>DOIP_ENABLE_ALL_DIAG_NACK</a:v>
                    <a:v>DOIP_DISABLE_DIAG_NACK_0x06</a:v>
                  </a:da>
                </v:var>
                <v:var name="DoIPMaxVehicleAnnouncementCon" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Specifies maximum number of vehicle announcement connections that can be configured.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="2c21e3e3-09ab-4db9-a9a2-9045c93e336a"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                    <mt:xpath 
                              true="Number of configured UDP announcement connections exceeds DoIPMaxVehicleAnnouncementCon." 
                              expr=". &lt; count(as:modconf(&apos;DoIP&apos;)[1]/DoIPConfigSet/*[1]/DoIPConnections/DoIPUdpVehicleAnnouncement/*)"/>
                  </a:da>
                </v:var>
                <v:var name="DoIPDevErrorDetect" type="BOOLEAN">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:fed1dcbd-bd36-4ff1-bec6-57a8b7c9b4c4"/>
                  <a:a name="VISIBLE" value="false"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="as:modconf(&apos;DoIP&apos;)[1]/DoIPGeneral/DoIPDevelopmentErrorDetect = &apos;true&apos;"/>
                </v:var>
                <v:var name="DoIPRteUsage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;Enables RTE Usage.&lt;/p&gt;
                      &lt;p&gt;
                        If enabled, the DoIP will generate an SWCD and supply the specified
                        software component interfaces.
                      &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" value="PreCompile"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr=". = &apos;true&apos; and count(as:modconf(&apos;Rte&apos;)) = 0" 
                        true="The usage of the RTE is enabled for the DoIP, but the RTE is disabled or missing."/>
                </v:var>
                <v:var name="DoIPRelocatablePbcfgEnable" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Enables/disable support for relocatable postbuild configuration.
                          &lt;ul&gt;
                            &lt;li&gt;True: Postbuild configuration relocatable in memory.&lt;/li&gt;
                            &lt;li&gt;False: Postbuild configuration not relocatable in memory.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="5ec3bf25-c56e-452f-acd3-812d23b3628a"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(node:contains(node:refs(as:modconf(&apos;PbcfgM&apos;)/PbcfgMBswModules/*/PbcfgMBswModuleRef), as:modconf(&apos;DoIP&apos;)) = &apos;true&apos;)" 
                        true="false" false="true"/>
                </v:var>
                <v:lst name="DoIPRoutingActivationCallbackList">
                  <a:da name="MAX" value="255"/>
                  <a:da name="MIN" value="0"/>
                  <v:var name="DoIPRoutingActivationCallbackList" 
                         type="FUNCTION-NAME">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                        &lt;p&gt;
                          List of user defined callback functions to be called after routing
                          activation was successfully performed on a TCP connection.
                        &lt;/p&gt;
                        &lt;p&gt;
                          Syntax: &lt;code&gt; (void) User_RoutingActivationCallback(SoAd_SoConIdType SoConId, uint16 SourceAddr, uint8 ActivationType, const uint8* OemSpecificPtr);&lt;/code&gt;
                        &lt;/p&gt;
                        &lt;p&gt;
                          with User_RoutingActivationCallback as a placeholder for a user defined
                          callback function name provided with this configuration field.
                        &lt;/p&gt;
                        &lt;p&gt;
                          Parameters:
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;SoConId&lt;/code&gt; - SoConId of a Tcp connection that routing activation
                          message was received on.
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;SourceAddr&lt;/code&gt; - Source address field from routing activation
                          message.
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;ActivationType&lt;/code&gt; - Activation type field from routing
                          activation message.
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;code&gt;OemSpecificPtr&lt;/code&gt; - Pointer to OEM specific field from routing
                          activation message (4 bytes). NULL_PTR if OEM specific field was omitted.
                        &lt;/p&gt;
                        &lt;p&gt;
                          &lt;b&gt;Note:&lt;/b&gt; User defined header files shall be added to the configuration
                          container DoIPHeaderFileInclusion.
                        &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:c6b1b938-dba8-4fa1-b42e-a739b860dd0b"/>
                    <a:da name="INVALID" type="XPath" expr="node:empty(.)" 
                          true="Callback function name must be specified."/>
                  </v:var>
                </v:lst>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/DoIP"/>
              <v:ctr name="DoIPDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="DoIPDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module DoIP.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../DoIPGeneral/DoIPDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DoIPPrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module DoIP.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DoIPDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DoIPDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DoIPGeneral/DoIPDevErrorDetect = &apos;true&apos;) and (../DoIPDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DoIPPostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module DoIP.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DoIPDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DoIPDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DoIPGeneral/DoIPDevErrorDetect = &apos;true&apos;) and (../DoIPDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DoIPStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module DoIP.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DoIPDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DoIPDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DoIPGeneral/DoIPDevErrorDetect = &apos;true&apos;) and (../DoIPDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DoIPUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module DoIP.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DoIPDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DoIPDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DoIPGeneral/DoIPDevErrorDetect = &apos;true&apos;) and (../DoIPDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="DoIPInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module DoIP.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DoIPDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DoIPDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../DoIPGeneral/DoIPDevErrorDetect = &apos;true&apos;) and (../DoIPDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the DoIP can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
