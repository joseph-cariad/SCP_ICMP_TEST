<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM1I1R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="XcpR" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>1.1.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2021-07-14T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC" value="Configuration of the XcpR module."/>
              <a:a name="LOWER-MULTIPLICITY" value="0"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="255"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the XcpR can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="XcpRDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="XcpRDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module XcpR.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../XcpRGeneral/XcpRDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpRPrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module XcpR.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpRDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpRDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpRGeneral/XcpRDevErrorDetect = &apos;true&apos;) and (../XcpRDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpRPostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module XcpR.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpRDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpRDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpRGeneral/XcpRDevErrorDetect = &apos;true&apos;) and (../XcpRDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpRStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module XcpR.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpRDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpRDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpRGeneral/XcpRDevErrorDetect = &apos;true&apos;) and (../XcpRDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpRUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module XcpR.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpRDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpRDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpRGeneral/XcpRDevErrorDetect = &apos;true&apos;) and (../XcpRDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="XcpRInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module XcpR.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;XcpRDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;XcpRDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../XcpRGeneral/XcpRDevErrorDetect = &apos;true&apos;) and (../XcpRDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:ctr name="XcpRGeneral" type="IDENTIFIABLE">
                <v:var name="XcpRMultipleSlavesEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;
                            If enabled, the CONNECT command can be used either in MODE=0 to connect
                            to the XCP instance on the local ECU (Modulator) or in MODE=1 to connect
                            to the Xcp Slave on the remote ECU.&lt;/p&gt;
                          &lt;p&gt;If enabled, two XcpR destinations can be configured for an XcpR source (which is enabled as the connection to the master Xcp).&lt;/p&gt;
                          &lt;p&gt;If disabled, only one XcpR destination for an XcpR source (which is enabled as the connection to the master Xcp, can be configured.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="XcpR support for multiple Xcp slaves"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpRDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         &lt;p&gt;Enables the detection of development errors.&lt;/p&gt;
                         &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                         &lt;ul&gt;
                           &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                             &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                             Disabling this parameter reduces the ROM consumption of the module
                             code.
                           &lt;/li&gt;
                           &lt;li class=&quot;optimization.code.exetime.reduction&quot;&gt;
                             &lt;strong&gt;Execution time reduction(code):&lt;/strong&gt;
                             Disabling this parameter reduces the execution time of the module
                             code.
                           &lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Development Error Detection"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="XcpRVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the version information API (&lt;code&gt;XcpR_GetVersionInfo()&lt;/code&gt;)&lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Version Info API"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="XcpRMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the time interval in which the XcpR Main function will
                          be invoked by BSW Scheduler.&lt;/p&gt;
                          &lt;p&gt;The XcpR_MainFunction() will process receptions and transmissions of XcpR PDUs in
                          case reception/transmission from RxIndication/TxConfirmation is not enabled.&lt;/p&gt;
                          &lt;p&gt;If the &quot;multiple packages in one XCPR frame&quot; option is configured, those packages
                          will be processed during execution of XcpR_MainFunction().&lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0.001 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Main Function Period [s]"/>
                  <a:da name="DEFAULT" value="0.005"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0.001"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="XcpRQueueSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                           &lt;p&gt;Defines the queue size for the XcpR internal ring-buffer.&lt;/p&gt;
                           &lt;p&gt;Messages received by XcpR are copied in an internal buffer
                           after they are stripped of the header or other bus-specific information,
                           in order to be adapted afterwards to the configured destination bus type&lt;/p&gt;
                           &lt;em&gt;Please note that this parameter might have a major impact on the
                           resource consumption of your project&lt;/em&gt;.
                           &lt;p&gt;Take into consideration that for each stored message, there are additional internal
                           admin data also stored. This internal data is composed of: 1 PduLengthType, 1 PduIdType and 1 additional byte.&lt;/p&gt;
                           &lt;p&gt;For example, if XcpRQueueSize = 260 and PduLengthType, PduIdType are uint16, the XcpR
                           internal queue can store a maximum of 20 messages of 8 bytes each.
                           ((8 bytes for a message + 5 bytes of internal data) * 20) = 260 bytes.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Queue size for storing received XcpR messages"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="128"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="XcpRTxRetryCount" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of times the data will be retried for transmission.&lt;/p&gt;

                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Setting the value ZERO for this parameter reduces the ROM
                              consumption of the module code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Setting the value ZERO for this parameter reduces the RAM
                              consumption of the module code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Tx Retry Count"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="XcpRTxBusRetry" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of retries the XcpR performs in order to transmit a Pdu.&lt;/p&gt;
                          &lt;p&gt;Whenever a PDU is accepted to be transmitted by the lower layer,
                            XcpR waits for &lt;code&gt;XcpRTxBusTimeout&lt;/code&gt; time to receive the confirmation of successful transmission.
                            If the timeout occurs, XcpR retries the whole lost PDU transmission for the configured number of times.&lt;/p&gt;
                          &lt;p&gt;When the number of retries expires (if it is not configured with the reserved value of 255 - infinite retries), XcpR
                          autonomously disconnects from the connection.&lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0 .. 254&lt;/li&gt;
                          &lt;li&gt; 255: reserved value for infinite number of retries&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Note: Not to be confused with &lt;code&gt;XcpRTxRetryCount&lt;/code&gt; which retries only the transmit request rejected by the interface layer
                          (i.e. calls to &lt;code&gt;xxxIf_Transmit()&lt;/code&gt;).&lt;/p&gt;
                          &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li class=&quot;optimization.code.rom.reduction&quot;&gt;
                              &lt;strong&gt;ROM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the ROM consumption of the module
                              code.
                            &lt;/li&gt;
                            &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                              &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                              Disabling this parameter reduces the RAM consumption of the module
                              code.
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Tx Bus Retry"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="XcpRTxBusTimeout" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the maximum allowed time frame for a message to be transmitted
                             from the XcpR to the remote Xcp Slave or Xcp Master.&lt;/p&gt;
                          &lt;p&gt;If no retries (&lt;code&gt;XcpRTxBusRetry&lt;/code&gt;) are configured, when the timeout occurs, for the connection to
                             the Xcp Master, the XcpR will autonomously disconnect. Otherwise, the message will be re-transmitted for the
                             configured ammounts of retries, each re-transmission attempt will reset the value of the internal counter to
                             this configured timeout value.&lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt; 0.001 .. 255 &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Tx Bus Timeout[s]"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="2.0"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=255"/>
                      <mt:tst expr="&gt;=0.001"/>
                    </mt:range>
                    <mt:xpath>
                      <mt:tst 
                              true="The XcpR Tx Bus Timeout cannot be less than the XcpR&apos;s main function period value provided via parameter &lt;code&gt; XcpRMainFunctionPeriod &lt;/code&gt;." 
                              expr=". &lt; ../XcpRMainFunctionPeriod"/>
                      <mt:tst 
                              true="The &lt;code&gt; XcpRTxBusTimeout &lt;/code&gt; must be a multiple of the XcpR&apos;s main function period value provided via parameter &lt;code&gt; XcpRMainFunctionPeriod &lt;/code&gt;." 
                              expr="(. &gt; ../XcpRMainFunctionPeriod) and (num:mod(round(node:value(.) * &apos;1E10&apos;), round(node:value(../XcpRMainFunctionPeriod) * &apos;1E10&apos;)) != 0)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="XcpREventPacketEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the transmission of EV_SESSION_TERMINATED from the XcpR to
                          the master device.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Event (EV) Packet Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optional Features"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="ENABLE" value="true"/>
                </v:var>
                <v:lst name="XcpRSourcePDUConfiguration" type="MAP">
                  <a:a name="LABEL" value="Source PDU Configuration"/>
                  <a:a name="TAB" value="Source PDU Information"/>
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="XcpRSourcePDUConfiguration" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Groups PDU information related to a connection via a specified
                               bus(Can/CanFD/FlexRay/Ethernet/CDD)&lt;/p&gt;
                            &lt;p&gt;Multiple connection via the same bus type can be configured&lt;/p&gt;
                            &lt;p&gt;Ethernet source connections are not supported in the current implementation of the XcpR&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:contains(node:refs(as:modconf(&apos;XcpR&apos;)/XcpRGeneral/XcpRRoutingPaths/*/XcpRSourcePduRef), (.))" 
                          false="Parameter is unused."/>
                    <v:chc name="XcpRSourceInterfaceType" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                           &lt;p&gt;Choice container used to select the source connection type:&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li&gt;&lt;code&gt;XcpRSourceConnectionOverCAN&lt;/code&gt;: only PDUs mapped to the referenced CanIf/Configuration container
                                 the selected connection configuration&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRSourceConnectionOverCANFD&lt;/code&gt;: only PDUs mapped to the referenced CanIf/Configuration container
                                 the selected connection configuration&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRSourceConnectionOverFlexRay&lt;/code&gt;: only PDUs mapped to the same FlexRay controller are accepted to
                                 the selected connection configuration.&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRSourceConnectionOverEthernet&lt;/code&gt;: only PDUs mapped to the same Socket connection group are accepted to
                                   the selected connection configuration.&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRSourceConnectionOverCdd&lt;/code&gt;: only PDUs referenced from a CDD configuration are accepted to
                                 the selected connection configuration.&lt;/li&gt;
                           &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="XcpR Source Interface Type"/>
                      <a:a name="TAB" value="XcpR Source"/>
                      <v:ctr name="XcpRSourceConnectionOverCAN" 
                             type="IDENTIFIABLE">
                        <v:ref name="XcpRSourceConnectionCanIfCfgRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the CanIf interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected connection over CAN.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR source interface type (&lt;code&gt;XcpRSourceInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRSourceConnectionOverCAN&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid CanIf configuration has to be avaible for selection.&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to CanIf configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an CanIf Init configuration has to be provided, refer to &apos;CanIfInitCfg&apos;."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanIf/CanIfInitCfg"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRSourceConnectionOverCANFD" 
                             type="IDENTIFIABLE">
                        <v:var name="XcpRSourceCanFdMaxDlcRequired" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines if the length of the XcpR packages is given by
                                    &lt;code&gt;XcpRSourceCanFdMaxDlc&lt;/code&gt; or not.
                                  For CAN-FD, the next larger defined DLC is considered for the calculation if
                                  &lt;code&gt;XcpRSourceCanFdMaxDlcRequired&lt;/code&gt; is disabled and DLC of a frame is not
                                  matching one of the defined DLC values.
                                  If &lt;code&gt;XcpRSourceCanFdMaxDlcRequired&lt;/code&gt; is enabled, always the corresponding
                                  DLC = &lt;code&gt;XcpRSourceCanFdMaxDlc&lt;/code&gt; parameter is used for the calculation.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="CANFD Max DLC required"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRSourceCanFdMaxDlc" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the value of maximum data length of a CAN-FD frame.&lt;/p&gt;
                                  &lt;p&gt;The maximum data length of a CAN-FD message shall either one of the following values
                                     8,12,16,20,24,32,48,64.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt; DLC values: 8,12,16,20,24,32,48,64 &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="CAN-FD Max DLC"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="64"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(../XcpRSourceCanFdMaxDlcRequired = &apos;true&apos;)"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="../XcpRSourceCanFdMaxDlcRequired = &apos;true&apos; and num:max(text:split(concat(../../XcpRSourcePDUAttributes/XcpRSrcMaxCto,&apos; &apos;,../../XcpRSourcePDUAttributes/XcpRSrcMaxDto,&apos; &apos;,../../XcpRSourcePDUAttributes/XcpRSrcMaxCtoPgm))) != ." 
                                true="The maximum value between XcpRSrcMaxCto, XcpRSrcMaxDto and XcpRSrcMaxCtoPgm is not equal to the XcpRSourceCanFdMaxDlc"/>
                          <a:da name="RANGE">
                            <a:v>8</a:v>
                            <a:v>12</a:v>
                            <a:v>16</a:v>
                            <a:v>20</a:v>
                            <a:v>24</a:v>
                            <a:v>32</a:v>
                            <a:v>48</a:v>
                            <a:v>64</a:v>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpRSourceConnectionCanFdCanIfCfgRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the CanIf interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected connection over CAN-FD.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR connection type (&lt;code&gt;XcpRSourceInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRSourceConnectionOverCANFD&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid CanIf configuration has to be avaible for selection.&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference CAN-FD to CanIf configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an CanIf Init configuration has to be provided, refer to &apos;CanIfInitCfg&apos;."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanIf/CanIfInitCfg"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRSourceConnectionOverFlexRay" 
                             type="IDENTIFIABLE">
                        <v:var name="XcpRSourceFlxNodeAddress" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the node address for XcpR (NAX) that is used for this node.&lt;/p&gt;
                                  &lt;p&gt;This value will be written to the NAX field of the FlexRay XcpR header
                                  when a message is expected in messages received from the master/slave in the NAX field.&lt;/p&gt;
                                  &lt;p&gt;When multiple FlexRay are configured, it is allowed to share the same NAX
                                     address between connections, or to have different NAX address.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt; 0 .. 255 &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Node Address for XcpR (NAX)"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRSourceFlxHeaderAlignment" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the alignment of the FlexRay XcpR header.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;PACKET_ALIGNMENT_8: 8 bit alignment is used.&lt;/li&gt;
                                    &lt;li&gt;PACKET_ALIGNMENT_16: 16 bit alignment is used.&lt;/li&gt;
                                    &lt;li&gt;PACKET_ALIGNMENT_32: 32 bit alignment is used.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                      &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                      Selecting a smaller value for this parameter reduces the RAM
                                      consumption of the module code.
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Alignment of the FlexRay XcpR Header"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="PACKET_ALIGNMENT_8"/>
                          <a:da name="RANGE">
                            <a:v>PACKET_ALIGNMENT_8</a:v>
                            <a:v>PACKET_ALIGNMENT_16</a:v>
                            <a:v>PACKET_ALIGNMENT_32</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRSourcePackMultiMsgInOneFlexRayFrame" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Enables the concatenation of multiple XcpR messages in one frame,
                                    for FlexRay communication&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Enable Multiple XcpR messages In One FlexRay Frame"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRSourceSequenceCorrectionEnabled" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Enables the sequence correction. Each sent frame will contain a Counter that is
                                 incremented for each XcpR packet.&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable Sequence Correctness"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRSourceMaxFlexMsgLength" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the maximum data length of a FlexRay frame
                                  (&lt;em&gt;MAX_FLX_LEN_BUF_x_init&lt;/em&gt;) that XcpR is able to receive
                                  in a specific XcpR-dedicated buffer.&lt;/p&gt;
                                  &lt;p&gt;The length of the message can be variable. However the maximum length
                                  of an XcpR on FlexRay message is &lt;em&gt;MAX_FLX_LEN_ABS&lt;/em&gt; = 254 bytes.&lt;/p&gt;
                                  &lt;p&gt;&lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt; is the actual maximum data length of a
                                  FlexRay frame in a specific buffer and which can be non-configurable.Thus
                                  making &lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt; always equal to &lt;em&gt;MAX_FLX_LEN_BUF_x_init&lt;/em&gt;.&lt;/p&gt;
                                  &lt;p&gt;Present implementation uses the non-configurable &lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt;.
                                  Thus for present implementation &lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt; equals
                                  &lt;em&gt;MAX_FLX_LEN_BUF_x_init&lt;/em&gt; for all buffers.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt; 8 .. 254 &lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                    &lt;ul&gt;
                                     &lt;p&gt;This parameter is available if all of the following conditions are fulfilled:&lt;/p&gt;
                                      &lt;li&gt;
                                        Multiple XcpR Msgs In One XcpR FlexRay Frame (&lt;code&gt;XcpRSourcePackMultiMsgInOneFlexRayFrame&lt;/code&gt;) is enabled.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;p&gt;Hint: this parameter should be high enough to be able to accomodate at least
                                  2 maximum size DTOs&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Max Flexray Msg Length"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="254"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(../XcpRSourcePackMultiMsgInOneFlexRayFrame = &apos;true&apos;)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=254"/>
                              <mt:tst expr="&gt;=8"/>
                            </mt:range>
                            <mt:xpath 
                                      true="The XcpRSourceMaxFlexMsgLength should be an even number." 
                                      expr="(. mod 2 = 1)"/>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpRSourceConnectionFrIfCfgRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the FrIf interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected source connection over FlexRay.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR connection type (&lt;code&gt;XcpRSourceInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRSourceConnectionOverFlexRay&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid FrIf configuration has to be avaible for selection.&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to FrIf configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an FrIf configuration has to be provided, refer to &apos;FrIfConfig&apos;."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrIf/FrIfConfig"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRSourceConnectionOverEthernet" 
                             type="IDENTIFIABLE">
                        <a:da name="ENABLE" value="true"/>
                        <v:var name="XcpRSourceOpenSoCon" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Enables XcpR to handle opening of SoAd sockets(s) during startup.&lt;/p&gt;
                                  &lt;p&gt;If enabled &lt;code&gt;SoAd_OpenSoCon()&lt;/code&gt; will be called during &lt;code&gt;XcpR_Init()&lt;/code&gt;
                                     for each configured socket.&lt;/p&gt;
                                  &lt;p&gt;If UDP protocol is used, this parameter must be enabled.&lt;/p&gt;
                                  &lt;p&gt;&lt;em&gt;Note: Please ensure that &lt;code&gt;SoAd_Init()&lt;/code&gt; will be called before &lt;code&gt;XcpR_Init()&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;XcpR connection type (&lt;code&gt;XcpRSourceInterfaceType&lt;/code&gt;): The selected
                                        value for this parameter has to be &lt;code&gt;XcpRSourceConnectionOverEthernet&lt;/code&gt;.
                                        Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Open the Socket Connection"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(. != &apos;true&apos;)                                        and                                      node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                        and                                     node:refvalid(../XcpRSourceConnectionSoAdConfigRef)                                        and                                     (count(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                     (node:ref(SoAdTxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                     node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                       and                                     (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                     (node:ref(SoAdTxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup != &apos;true&apos;)                                       and                                     (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                     (node:ref(SoAdTxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)" 
                                   true="In case TCP protocol is used and the &apos;XcpRSourceOpenSoCon&apos; is disabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the                                      &apos;SoAdSocketConnectionGroup&apos; used by XcpR has to be enabled in the SoAd module. The socket has to be managed by the SoAd module."/>
                            <a:tst 
                                   expr="(. != &apos;true&apos;)                                        and                                      node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                        and                                      node:refvalid(../XcpRSourceConnectionSoAdConfigRef)                                        and                                      (count(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                      (node:ref(SoAdTxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                        and                                      (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                      (node:ref(SoAdTxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                       node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup = &apos;true&apos;)                                        and                                      (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                      (node:ref(SoAdTxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)" 
                                   true="In case UDP protocol is used, the &apos;XcpRSourceOpenSoCon&apos; must be enabled and the &apos;SoAdSocketAutomaticSoConSetup&apos; of the                                      &apos;SoAdSocketConnectionGroup&apos; used by XcpR has to be disabled. This is mandatory as we need to reconfigure the port with SoAd_SetRemoteAddr()                                      which rejects the call if &apos;SoAdSocketAutomaticSoConSetup&apos; is true."/>
                            <a:tst 
                                   expr="(. = &apos;true&apos;)                                          and                                        node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                          and                                        node:refvalid(../XcpRSourceConnectionSoAdConfigRef)                                          and                                       (count(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                       (node:ref(SoAdRxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                        node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0) and                                       (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                       (node:ref(SoAdRxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                        node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]/../../SoAdRxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup = &apos;true&apos;)" 
                                   true="In case the &apos;XcpRSourceOpenSoCon&apos; is enabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the &apos;SoAdSocketConnectionGroup&apos;                                      used by XcpR should be disabled in the SoAd module. The socket is managed by the XcpR module."/>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRSourcePackMultiMsgInOneEthernetFrame" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Enables the concatenation of multiple XcpR messages in one frame,
                                    for Ethernet communication.&lt;/p&gt;
                                 &lt;p&gt;Note: Caution must be taken when enabling this feature, in case
                                    the selected communication type is TCP/IP, because the Master
                                    should be able to support the packing of multiple pdus in one frame,
                                    for TCP/IP, too.&lt;/p&gt;
                                 &lt;p&gt;Rationale: In ASAM specifications only for UDP/IP is specified that
                                    the &quot;Suport for multiple PDUs in one frame may be implemented&quot;&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Enable Multiple XcpR messages In One Ethernet Frame"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" value="true"/>
                        </v:var>
                        <v:var name="XcpRSourceMaxEthernetMsgLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the maximum data length of a Ethernet frame that a specific
                                  slave is able to receive or transmit in a frame. It is measured in bytes&lt;/p&gt;
                                  &lt;p&gt;The length of the message can be variable. However the maximum length
                                  of an XcpR on Eternet message is limited to the Ethernet payload length
                                  limits in bytes.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt;8 .. 1454 &lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;p&gt;This parameter is available only if both of the following parameters are enabled:&lt;/p&gt;
                                      &lt;li&gt;
                                        XcpR on Ethernet (&lt;code&gt;XcpROnEthernetEnabled&lt;/code&gt;).
                                      &lt;/li&gt;
                                      &lt;li&gt;
                                        Multiple XcpR Msgs In One XcpR Frame (&lt;code&gt;XcpRPackMultiMsgInOneEthernetFrame&lt;/code&gt;).
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;p&gt;Default value for this parameter is calculated to always be able to accomodate
                                  1 maximum size CTO plus 5 maximum size DTOs&lt;/p&gt;
                                  &lt;p&gt;Hint this parameter should be high enough to be able to accomodate at least
                                  2 maximum size DTOs&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Max Eternet Msg Length"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="1454"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="../XcpRSourcePackMultiMsgInOneEthernetFrame = &apos;true&apos;"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=1454"/>
                              <mt:tst expr="&gt;=8"/>
                            </mt:range>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpRSourceConnectionSoAdConfigRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the SoAd interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected connection over Ethernet.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR connection type (&lt;code&gt;XcpRSourceConnectionInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRSourceConnectionOverEthernet&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid SoAd configuration has to be avaible for selection.&lt;/li&gt;
                                  &lt;li&gt;One entry with the name &apos;XcpR&apos;, containing the UL configuration for XcpR module in SoAd,
                                      has to be added into the &lt;code&gt;SoAdBswModules&lt;/code&gt; container.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdIf&lt;/code&gt; has to be enabled, for the dedicated XcpR configuration entry into &lt;code&gt;SoAdBswModules&lt;/code&gt;.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdTp&lt;/code&gt; has to be disabled, for the dedicated XcpR configuration entry into &lt;code&gt;SoAdBswModules&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdIfTxConfirmation&lt;/code&gt; has to be enabled, for the dedicated XcpR configuration entry into
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt; entry.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdLocalIpAddrAssigmentChg&lt;/code&gt; has to be disabled, for the dedicated XcpR configuration entry into
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt;(refer to ASAM specifications).&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdIfTriggerTransmit&lt;/code&gt; has to be disabled , for the dedicated XcpR configuration entry into
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt;(the trigger transmit api is not supported for Ethernet).&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdSoConModeChg&lt;/code&gt; parameter, configured for the dedicated XcpR configuration entry from
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt; container, has to be:.
                                      &lt;ul&gt;
                                        &lt;li&gt;Enabled, if there is configured at least one XcpR connection over TCP/IP.&lt;/li&gt;
                                        &lt;li&gt;Disabled, if there is no XcpR connection over TCP/IP, configured.&lt;/li&gt;
                                      &lt;/ul&gt;
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to SoAd configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference. A valid reference to a SoAd configuration has to be provided, refer to &apos;SoAdConfig&apos;."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (count(node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]) = 0)" 
                                   true="No entry with the name &apos;XcpR&apos; was found into &apos;SoAdBswModules&apos; container. You should add one entry with the name                                      &apos;XcpR&apos; into the SoAdBswModules container, containing the UL configuration for XcpR module in SoAd."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdIf != &apos;true&apos;)" 
                                   true="SoAdIf has to be enabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdTp != &apos;false&apos;)" 
                                   true="SoAdTp has to be disabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdIfTxConfirmation != &apos;true&apos;)" 
                                   true="SoAdIfTxConfirmation has to be enabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdLocalIpAddrAssigmentChg != &apos;false&apos;)" 
                                   true="SoAdLocalIpAddrAssigmentChg has to be disabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdIfTriggerTransmit != &apos;false&apos;)" 
                                   true="SoAdIfTriggerTransmit has to be disabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container(the trigger transmit API is not supported for Ethernet)."/>
                            <a:tst 
                                   expr="node:refvalid(.)                                           and                                        node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                           and                                         (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdSoConModeChg != &apos;true&apos;)                                            and                                         (count(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                           and                                         (node:ref(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                         (node:ref(SoAdTxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                         node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)" 
                                   true="SoAdSoConModeChg has to be enabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container,                                       in case at least one XcpR source over TCP/IP is configured (&apos;SoAdSocketProtocol&apos; = &apos;SoAdSocketTcp&apos;)."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/SoAd/SoAdConfig"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRSourceConnectionOverCDD" 
                             type="IDENTIFIABLE"/>
                    </v:chc>
                    <v:var name="XcpRIsSrcMasterConnection" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                             &lt;p&gt;Defines this source as the connection to the master Xcp.
                                Only a Rx source can be defined as master.&lt;/p&gt;
                           &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable this container as a source from the master Xcp"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="TAB" value="XcpR Source"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../XcpRPdu = &apos;XcpRRxPdu&apos;)"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="count(../../*[XcpRIsSrcMasterConnection = &apos;true&apos;]) = 0" 
                            true="At least one source connection must be enabled as a connection to the master Xcp (XcpRIsSrcMasterConnection)."/>
                    </v:var>
                    <v:chc name="XcpRPdu" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines PDU information.&lt;/p&gt;
                              &lt;p&gt;A PDU may be either a transmission (Tx) PDU or a reception (Rx) PDU.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="XcpR PDU Type"/>
                      <a:a name="TAB" value="XcpR Source"/>
                      <v:ctr name="XcpRRxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the Rx PDUs.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="FRAME" value="LINE"/>
                        <a:da name="TITLE" value="Rx PDU Information"/>
                        <v:ref name="XcpRRxSourcePduReference" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the external Rx PDU definition in the EcuC module.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;A valid reference to EcuC&apos;s &lt;code&gt;Pdu&lt;/code&gt; parameters has to be provided.&lt;/li&gt;
                                  &lt;li&gt;A unique EcuC PDU has to be provided as reference for each XcpR Rx Pdu.&lt;/li&gt;
                                  &lt;li&gt;It is not allowed to configure bidirectional XcpR PDUs(the same PDU cannot be given
                                      as reference for both &lt;code&gt;XcpRRxPdu&lt;/code&gt; and &lt;code&gt;XcpRTxPdu&lt;/code&gt;).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Reference to Rx source PDU"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference. A valid reference to an EcuC receive PDU has to be provided."/>
                            <a:tst 
                                   expr="(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRRxPdu&apos;]/*[XcpRRxSourcePduReference = node:current()]) +                                           count(../../../../XcpRDestinationPDUConfiguration/*[XcpRPdu = &apos;XcpRRxPdu&apos;]/*[XcpRRxDestinationPduReference = node:current()])) &gt; 1" 
                                   true="A unique EcuC PDU has to be provided as reference for each XcpR Rx Pdu."/>
                            <a:tst 
                                   expr="(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;]/*[XcpRTxSourcePduReference = node:current()]) +                                           count(../../../../XcpRDestinationPDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;]/*[XcpRTxDestinationPduReference = node:current()])) &gt; 0" 
                                   true="The referenced EcuC PDU is bidirectional(has both Tx and Rx direction). It is not allowed to configured bidirectional XcpR PDUs."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                        <v:var name="XcpRRxSourcePduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the ID of the PDU that will be received via a
                                  XcpR_RxIndication().&lt;/p&gt;
                                  &lt;p&gt;The XcpR&apos;s Rx Pdu ids has to be zero based and consecutive.&lt;/p&gt;
                                  &lt;p&gt;Range: 0 .. 65535&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="XcpRRxSourcePduId"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:i(count(../../../*[XcpRPdu = &apos;XcpRRxPdu&apos;]) - 1)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=65535"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      true="The XcpRRxSourcePduId has to be unique." 
                                      expr="count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRRxPdu&apos;]/*[XcpRRxSourcePduId = node:current()]) &gt; 1"/>
                              <mt:tst 
                                      true="XcpR Rx Source PDU Id has to be 0 based and consecutive." 
                                      expr=". &gt;= count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRRxPdu&apos;])"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRSrcPduSupportRxFromRxIndication" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   &lt;p&gt;Support for reception from Rx indication. If enabled a reception
                                      for this PDU will be triggered when XcpR_RxIndication() is executed.&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Enabling this feature for several PDUs might have impact on the run-time by
                                    creating a big overhead in the system.&lt;/strong&gt;&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s): none.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Support for reception from RxIndication"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRRxSrcPduSupportTxFromRxIndication" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   &lt;p&gt;Support for transmission from Rx indication.&lt;/p&gt;
                                   &lt;p&gt;If reception from RxIndication is enabled, this parameter can also be enabled to trigger a transmission of the
                                     received message in the context of XcpR_RxIndication().
                                     If this parameter is disabled, the transmission of the message received in the context of RxIndication will be done
                                     in the context of XcpR_MainFunction().&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Enabling this feature for several PDUs might have impact on the run-time by
                                    creating a big overhead in the system.&lt;/strong&gt;&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s): XcpRSrcPduSupportRxFromRxIndication (Support for reception from RxIndication).&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Support for transmission from RxIndication"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(../XcpRSrcPduSupportRxFromRxIndication = &apos;true&apos;)"/>
                        </v:var>
                      </v:ctr>
                      <v:ctr name="XcpRTxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the Tx PDU.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="FRAME" value="LINE"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverCDD&apos;)" 
                              false="Invalid bus type. Only connections over CDD are allowed for Tx sources."/>
                        <a:da name="TITLE" value="Tx PDU Information"/>
                        <v:ref name="XcpRTxSourcePduReference" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the external Tx PDU definition in the EcuC module.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;A valid reference to EcuC&apos;s &lt;code&gt;Pdu&lt;/code&gt; parameters has to be provided.&lt;/li&gt;
                                  &lt;li&gt;A unique EcuC PDU has to be provided as reference for each XcpR Tx Pdu.&lt;/li&gt;
                                  &lt;li&gt;It is not allowed to configured bidirectional XcpR PDUs(the same PDU cannot be given
                                      as reference for both &lt;code&gt;XcpRTxPdu&lt;/code&gt; and &lt;code&gt;XcpRRxPdu&lt;/code&gt;).&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Reference to Tx source PDU"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an EcuC transmit PDU has to be provided."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                        <v:var name="XcpRTxSourcePduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the PDU identifier, which has to be used by the upper
                                  layer BSW module for XcpR_Transmit().&lt;/p&gt;
                                  &lt;p&gt;The XcpR&apos;s Tx Pdu ids has to be zero based and consecutive.&lt;/p&gt;
                                  &lt;p&gt;Range: 0 .. 65535&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="XcpRTxSourcePduId"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:i(count(../../../*[XcpRPdu = &apos;XcpRTxPdu&apos;]))"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=65535"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      true="The XcpRTxSourcePduId has to be unique." 
                                      expr="count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;]/*[XcpRTxSourcePduId = node:current()]) &gt; 1"/>
                              <mt:tst 
                                      true="XcpR Tx Source PDU Id has to be 0 based and consecutive." 
                                      expr=". &gt;= count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;])"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRSrcPduSupportRxFromXcpRTransmit" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   &lt;p&gt;Support for reception from XcpR_Transmit(). If enabled a reception
                                      for this PDU will be triggered when XcpR_Transmit() is executed.&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Enabling this feature for several PDUs might have impact on the run-time by
                                    creating a big overhead in the system.&lt;/strong&gt;&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s): none.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Support for reception from XcpR_Transmit()"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRTxSrcPduSupportTxFromXcpRTransmit" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   &lt;p&gt;Support for transmission from XcpR_Transmit().&lt;/p&gt;
                                   &lt;p&gt;If reception from XcpR_Transmit() is enabled, this parameter can also be enabled to trigger a transmission of the
                                     received message in the context of XcpR_Transmit().
                                     If this parameter is disabled, the transmission of the message received in the context of XcpR_Transmit() will be done
                                     in the context of XcpR_MainFunction().&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Enabling this feature for several PDUs might have impact on the run-time by
                                    creating a big overhead in the system.&lt;/strong&gt;&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s): XcpRSrcPduSupportRxFromXcpRTransmit (Support for reception from XcpR_Transmit()).&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Support for transmission from XcpR_Transmit()"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(../XcpRSrcPduSupportRxFromXcpRTransmit = &apos;true&apos;)"/>
                        </v:var>
                      </v:ctr>
                    </v:chc>
                    <v:ctr name="XcpRSourcePDUAttributes" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              PDU attributes for each configured XcpR Source.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="TAB" value="XcpR Source"/>
                      <v:var name="XcpRSrcMaxCto" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The maximum length of a CTO packet in bytes, specific to each individual source connection.&lt;/p&gt;
                              &lt;p&gt;A CTO packet consists of:&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;An Identification Field (the PID containing the CTO Packet code) &lt;/li&gt;
                                &lt;li&gt;And the Data Field which contains the specific payload necessary for
                                the different types of CTO packet.&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;The length of the CTO varies according to the needs and the used
                              XCP Transport Layer.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt; CAN : 8 &lt;/li&gt;
                              &lt;li&gt; CAN-FD : 8..(maximum data length of a CAN-FD frame&lt;/li&gt;
                              &lt;li&gt; FlexRay : 8..(maximum data length of a FlexRay frame
                              (&lt;code&gt;XcpRSourceMaxFlexMsgLength&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                              &lt;li&gt; Ethernet : 8..(maximum data length of a Ethernet frame
                              (&lt;code&gt;XcpRSourceMaxEthernetMsgLength&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                  Selecting a smaller value for this parameter reduces the
                                  RAM consumption of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum CTO Length"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Source"/>
                        <a:da name="DEFAULT" value="8"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="If source connection is over CAN, The maximum length of command transfer objects must be 8." 
                                    expr="../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverCAN&apos; and . != 8"/>
                            <mt:tst 
                                    true="If source connection is over CANFD, the maximum length of command transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpRSourceCanFdMaxDlc." 
                                    expr="../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverCANFD&apos; and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (node:exists(../../XcpRSourceInterfaceType/XcpRSourceCanFdMaxDlc) and (. &gt; ../../XcpRSourceInterfaceType/XcpRSourceCanFdMaxDlc)))"/>
                            <mt:tst 
                                    true="If source connection is over FlexRay, the maximum length of command transfer objects shall not be greater than min(XcpRSourceMaxFlexMsgLength,254) - XCPR_FLEXRAY_HEADER_LENGTH (which can be 4,2, or 1 depending on parameter XcpRSourceFlxHeaderAlignment)." 
                                    expr="(../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverFlexRay&apos;) and (. &gt; (node:when(../../XcpRSourceInterfaceType/XcpRSourcePackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../../XcpRSourceInterfaceType/XcpRSourceMaxFlexMsgLength, 254) - ( number(node:when(../../XcpRSourceInterfaceType/XcpRSourceFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../../XcpRSourceInterfaceType/XcpRSourceFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))))))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpRSrcMaxDto" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;The maximum length of a DTO packet in bytes, specific to each individual source connection.&lt;/p&gt;
                             &lt;p&gt;A DTO packet consists of:&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li&gt;An Identification Field which varies depending upon the Identification
                               Field Type&lt;/li&gt;
                               &lt;li&gt;An optional Timestamp Field which varies depending upon the
                               Timestamp Field Type(&lt;code&gt;XcpRSrcTimestampType&lt;/code&gt;)&lt;/li&gt;
                               &lt;li&gt;And the Data Field which contains the data for synchronous
                               acquisition and stimulation.&lt;/li&gt;
                             &lt;/ul&gt;

                             &lt;p&gt;The length of the CTO varies according to the needs and the used
                             XCP Transport Layer.&lt;/p&gt;

                             &lt;p&gt;Range:&lt;/p&gt;
                             &lt;ul&gt;
                             &lt;li&gt; CAN : 8 &lt;/li&gt;
                             &lt;li&gt; CAN-FD : 8..(maximum data length of a CAN-FD frame&lt;/li&gt;
                             &lt;li&gt; FlexRay : 8..(maximum data length of a FlexRay frame
                             (&lt;code&gt;XcpRSourceMaxFlexMsgLength&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                             &lt;li&gt; Ethernet : 8..(maximum data length of a Ethernet frame
                             (&lt;code&gt;XcpRSourceMaxEthernetMsgLength&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                             &lt;/ul&gt;
                             &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                 &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 RAM consumption of the module code.
                               &lt;/li&gt;
                               &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                 &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 RAM consumption of the module config.
                               &lt;/li&gt;
                               &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                                 &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 ROM consumption of the module config.
                               &lt;/li&gt;
                             &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum DTO Length"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Source"/>
                        <a:da name="DEFAULT" value="8"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65535"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="If source connection is over CAN, The maximum length of data transfer objects must be 8." 
                                    expr="../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverCAN&apos; and . != 8"/>
                            <mt:tst 
                                    true="If source connection is over CANFD, the maximum length of data transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpRSourceCanFdMaxDlc." 
                                    expr="../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverCANFD&apos; and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (node:exists(../../XcpRSourceInterfaceType/XcpRSourceCanFdMaxDlc) and (. &gt; ../../XcpRSourceInterfaceType/XcpRSourceCanFdMaxDlc)))"/>
                            <mt:tst 
                                    true="If source connection is over FlexRay, the maximum length of data transfer objects shall not be greater than min(XcpRSourceMaxFlexMsgLength,254) - XCPR_FLEXRAY_HEADER_LENGTH (which can be 4,2, or 1 depending on parameter XcpRSourceFlxHeaderAlignment)." 
                                    expr="(../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverFlexRay&apos;) and (. &gt; (node:when(../../XcpRSourceInterfaceType/XcpRSourcePackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../../XcpRSourceInterfaceType/XcpRSourceMaxFlexMsgLength, 254) - ( number(node:when(../../XcpRSourceInterfaceType/XcpRSourceFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../../XcpRSourceInterfaceType/XcpRSourceFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))))))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpRSrcMaxCtoPgm" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the maximum length of command transfer objects (CTO) in bytes for flash programming.(ASAM parameter: &lt;code&gt;MAX_CTO_PGM&lt;/code&gt;)&lt;/p&gt;
                              &lt;p&gt;A CTO packet consists of:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;An Identification Field (the PID containing the CTO Packet code) &lt;/li&gt;
                                &lt;li&gt;And the Data Field which contains the specific payload necessary for
                                the different types of CTO packet.&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;The length of the CTO varies according to the needs and the used
                              XCP Transport Layer.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt; CAN : 8 &lt;/li&gt;
                              &lt;li&gt; CAN-FD : 8..(maximum data length of a CAN-FD frame&lt;/li&gt;
                              &lt;li&gt; FlexRay : 8..(maximum data length of a FlexRay frame
                              &lt;code&gt;XcpRSourceMaxFlexMsgLength&lt;/code&gt; - FlexRay header length) &lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;Note: Some older Xcp masters ignore this parameter. If your master is
                                 affected, it is advised to configure this parameter to the same value
                                 as XcpRSrcMaxCto.&lt;/p&gt;

                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                  Selecting a smaller value for this parameter reduces the
                                  RAM consumption of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="XcpRMaxCtoPgm"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Source"/>
                        <a:da name="DEFAULT" value="8"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="If source connection is over CAN, The maximum length of PGM command transfer objects must be 8." 
                                    expr="../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverCAN&apos; and . != 8"/>
                            <mt:tst 
                                    true="If source connection is over FlexRay, the maximum length of PGM command transfer objects shall not be greater than min(XcpRSourceMaxFlexMsgLength,254) - XCPR_FLEXRAY_HEADER_LENGTH (which can be 4,2, or 1 depending on parameter XcpRSourceFlxHeaderAlignment)." 
                                    expr="(../../XcpRSourceInterfaceType = &apos;XcpRSourceConnectionOverFlexRay&apos;) and (. &gt; (node:when(../../XcpRSourceInterfaceType/XcpRSourcePackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../../XcpRSourceInterfaceType/XcpRSourceMaxFlexMsgLength, 254) - ( number(node:when(../../XcpRSourceInterfaceType/XcpRSourceFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../../XcpRSourceInterfaceType/XcpRSourceFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))))))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpRSrcTimestampType" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the type of timestamp XcpR Source is using.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;NO_TIME_STAMP: no timestamp is used.&lt;/li&gt;
                                    &lt;li&gt;ONE_BYTE: timestamp on 1 byte is used.&lt;/li&gt;
                                    &lt;li&gt;TWO_BYTE: timestamp on 2 bytes is used.&lt;/li&gt;
                                    &lt;li&gt;FOUR_BYTE: timestamp on 4 bytes is used.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;
                                &lt;p&gt;This parameter must be set with the same value selected for the XcpTimestampType
                                of the Xcp which is connected through this routing path.&lt;/p&gt;
                                &lt;p&gt;Every destination that is configured as a path for this source, must have the same
                                value for the parameter XcpRDestTimestampType.&lt;/p&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Timestamp Type"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Source"/>
                        <a:da name="DEFAULT" value="NO_TIME_STAMP"/>
                        <a:da name="RANGE">
                          <a:v>NO_TIME_STAMP</a:v>
                          <a:v>ONE_BYTE</a:v>
                          <a:v>TWO_BYTE</a:v>
                          <a:v>FOUR_BYTE</a:v>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:ctr>
                </v:lst>
                <v:lst name="XcpRDestinationPDUConfiguration" type="MAP">
                  <a:a name="LABEL" value="Destination PDU Configuration"/>
                  <a:a name="TAB" value="Destination PDU Information"/>
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="XcpRDestinationPDUConfiguration" 
                         type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Groups PDU information related to a destination connection via a specified
                               bus(Can/CanFD/FlexRay/Ethernet)&lt;/p&gt;
                            &lt;p&gt;Multiple connection via the same bus type can be configured&lt;/p&gt;
                            &lt;p&gt;Ethernet destination connections are not supported in the current implementation of the XcpR&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:da name="WARNING" type="XPath" 
                          expr="node:contains(node:refs(as:modconf(&apos;XcpR&apos;)/XcpRGeneral/XcpRRoutingPaths/*/XcpRDestinationPduRef), (.))" 
                          false="Parameter is unused."/>
                    <v:chc name="XcpRDestinationInterfaceType" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                           &lt;p&gt;Choice container used to select the connection type:&lt;/p&gt;
                           &lt;ul&gt;
                             &lt;li&gt;&lt;code&gt;XcpRDestinationConnectionOverCAN&lt;/code&gt;: only PDUs mapped to the referenced CanIf/Configuration container
                                 the selected connection configuration&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRDestinationConnectionOverCANFD&lt;/code&gt;: only PDUs mapped to the referenced CanIf/Configuration container
                                 the selected connection configuration&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRDestinationConnectionOverFlexRay&lt;/code&gt;: only PDUs mapped to the same FlexRay controller are accepted to
                                 the selected connection configuration.&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRDestinationConnectionOverEthernet&lt;/code&gt;: only PDUs mapped to the same Socket connection group are accepted to
                                   the selected connection configuration.&lt;/li&gt;
                             &lt;li&gt;&lt;code&gt;XcpRDestinationConnectionOverCdd&lt;/code&gt;: only PDUs referenced from a CDD configuration are accepted to
                                 the selected connection configuration.&lt;/li&gt;
                           &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="XcpR Destination Interface Type"/>
                      <a:a name="TAB" value="XcpR Destination"/>
                      <v:ctr name="XcpRDestinationConnectionOverCAN" 
                             type="IDENTIFIABLE">
                        <v:ref name="XcpRDestinationConnectionCanIfCfgRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the CanIf interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected connection over CAN.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR destination interface type (&lt;code&gt;XcpRDestinationInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRDestinationOverCAN&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid CanIf configuration has to be avaible for selection.&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to CanIf configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an CanIf Init configuration has to be provided, refer to &apos;CanIfInitCfg&apos;."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanIf/CanIfInitCfg"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRDestinationConnectionOverCANFD" 
                             type="IDENTIFIABLE">
                        <v:var name="XcpRDestinationCanFdMaxDlcRequired" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines if the length of the XcpR packages is given by
                                    &lt;code&gt;XcpRDestinationCanFdMaxDlc&lt;/code&gt; or not.
                                  For CAN-FD, the next larger defined DLC is considered for the calculation if
                                  &lt;code&gt;XcpRDestinationCanFdMaxDlcRequired&lt;/code&gt; is disabled and DLC of a frame is not
                                  matching one of the defined DLC values.
                                  If &lt;code&gt;XcpRDestinationCanFdMaxDlcRequired&lt;/code&gt; is enabled, always the corresponding
                                  DLC = &lt;code&gt;XcpRDestinationCanFdMaxDlc&lt;/code&gt; parameter is used for the calculation.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="CANFD Max DLC required"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRDestinationCanFdMaxDlc" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the value of maximum data length of a CAN-FD frame.&lt;/p&gt;
                                  &lt;p&gt;The maximum data length of a CAN-FD message shall either one of the following values
                                     8,12,16,20,24,32,48,64.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt; DLC values: 8,12,16,20,24,32,48,64 &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="CAN-FD Max DLC"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="64"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(../XcpRDestinationCanFdMaxDlcRequired = &apos;true&apos;)"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="../XcpRDestinationCanFdMaxDlcRequired = &apos;true&apos; and num:max(text:split(concat(../../XcpRDestinationPDUAttributes/XcpRDestMaxCto,&apos; &apos;,../../XcpRDestinationPDUAttributes/XcpRDestMaxDto,&apos; &apos;,../../XcpRDestinationPDUAttributes/XcpRDestMaxCtoPgm))) != ." 
                                true="The maximum value between XcpRDestMaxCto, XcpRDestMaxDto and XcpRDestMaxCtoPgm is not equal to the XcpRDestinationCanFdMaxDlc"/>
                          <a:da name="RANGE">
                            <a:v>8</a:v>
                            <a:v>12</a:v>
                            <a:v>16</a:v>
                            <a:v>20</a:v>
                            <a:v>24</a:v>
                            <a:v>32</a:v>
                            <a:v>48</a:v>
                            <a:v>64</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRDestinationCanFdFillValue" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines value used for the fill bytes of CANFD packages.&lt;/p&gt;
                                  &lt;p&gt;This parameter shall be used to define the value for fill bytes. For CAN-FD fill
                                  bytes will be added to the data until the expected package length is reached.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt; Fill bytes Value: 0 .. 255 &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="CAN-FD Fill Byte Value"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="255"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpRDestinationConnectionCanFdCanIfCfgRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the CanIf interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected connection over CAN-FD.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR connection type (&lt;code&gt;XcpRDestinationInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRDestinationOverCANFD&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid CanIf configuration has to be avaible for selection.&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference CAN-FD to CanIf configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an CanIf Init configuration has to be provided, refer to &apos;CanIfInitCfg&apos;."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanIf/CanIfInitCfg"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRDestinationConnectionOverFlexRay" 
                             type="IDENTIFIABLE">
                        <v:var name="XcpRDestinationFlxNodeAddress" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the node address for XcpR (NAX) that is used for this node.&lt;/p&gt;
                                  &lt;p&gt;This value will be written to the NAX field of the FlexRay XcpR header
                                  when a message is sent to the master/slave.&lt;/p&gt;
                                  &lt;p&gt;When multiple FlexRay are configured, it is allowed to share the same NAX
                                     address between connections, or to have different NAX address.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt; 0 .. 255 &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Node Address for XcpR (NAX)"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRDestinationFlxHeaderAlignment" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the alignment of the FlexRay XcpR header.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;PACKET_ALIGNMENT_8: 8 bit alignment is used.&lt;/li&gt;
                                    &lt;li&gt;PACKET_ALIGNMENT_16: 16 bit alignment is used.&lt;/li&gt;
                                    &lt;li&gt;PACKET_ALIGNMENT_32: 32 bit alignment is used.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                      &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                      Selecting a smaller value for this parameter reduces the RAM
                                      consumption of the module code.
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Alignment of the FlexRay XcpR Header"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="PACKET_ALIGNMENT_8"/>
                          <a:da name="RANGE">
                            <a:v>PACKET_ALIGNMENT_8</a:v>
                            <a:v>PACKET_ALIGNMENT_16</a:v>
                            <a:v>PACKET_ALIGNMENT_32</a:v>
                          </a:da>
                        </v:var>
                        <v:var 
                               name="XcpRDestinationPackMultiMsgInOneFlexRayFrame" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Enables the concatenation of multiple XcpR messages in one frame,
                                    for FlexRay communication&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Enable Multiple XcpR Msgs In One FlexRay Frame"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRDestinationSequenceCorrectionEnabled" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Enables the sequence correction. Each sent frame will contain a Counter that is
                                 incremented for each XcpR packet.&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable Sequence Correctness"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="XcpRDestinationMaxFlexMsgLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the maximum data length of a FlexRay frame
                                  (&lt;em&gt;MAX_FLX_LEN_BUF_x_init&lt;/em&gt;) that XcpR is able to transmit
                                  in a specific XcpR-dedicated buffer.&lt;/p&gt;
                                  &lt;p&gt;The length of the message can be variable. However the maximum length
                                  of an XcpR on FlexRay message is &lt;em&gt;MAX_FLX_LEN_ABS&lt;/em&gt; = 254 bytes.&lt;/p&gt;
                                  &lt;p&gt;&lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt; is the actual maximum data length of a
                                  FlexRay frame in a specific buffer and which can be non-configurable.Thus
                                  making &lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt; always equal to &lt;em&gt;MAX_FLX_LEN_BUF_x_init&lt;/em&gt;.&lt;/p&gt;
                                  &lt;p&gt;Present implementation uses the non-configurable &lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt;.
                                  Thus for present implementation &lt;em&gt;MAX_FLX_LEN_BUF_x&lt;/em&gt; equals
                                  &lt;em&gt;MAX_FLX_LEN_BUF_x_init&lt;/em&gt; for all buffers.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt; 8 .. 254 &lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                    &lt;ul&gt;
                                     &lt;p&gt;This parameter is available if all of the following conditions are fulfilled:&lt;/p&gt;
                                      &lt;li&gt;
                                        Multiple XcpR Msgs In One XcpR FlexRay Frame (&lt;code&gt;XcpRDestinationPackMultiMsgInOneFlexRayFrame&lt;/code&gt;) is enabled.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;p&gt;Hint: this parameter should be high enough to be able to accomodate at least
                                  2 maximum size DTOs&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Max Flexray Msg Length"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="254"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="(../XcpRDestinationPackMultiMsgInOneFlexRayFrame = &apos;true&apos;)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=254"/>
                              <mt:tst expr="&gt;=8"/>
                            </mt:range>
                            <mt:xpath 
                                      true="The XcpRDestinationMaxFlexMsgLength should be an even number." 
                                      expr="(. mod 2 = 1)"/>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpRDestinationConnectionFrIfCfgRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the FrIf interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected connection over FlexRay.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR destination interface type (&lt;code&gt;XcpRDestinationInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRDestinationOverFlexRay&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid FrIf configuration has to be avaible for selection.&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to FrIf configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an FrIf configuration has to be provided, refer to &apos;FrIfConfig&apos;."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrIf/FrIfConfig"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRDestinationConnectionOverEthernet" 
                             type="IDENTIFIABLE">
                        <a:da name="ENABLE" value="true"/>
                        <v:var name="XcpRDestinationOpenSoCon" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Enables XcpR to handle opening of SoAd sockets(s) during startup.&lt;/p&gt;
                                  &lt;p&gt;If enabled &lt;code&gt;SoAd_OpenSoCon()&lt;/code&gt; will be called during &lt;code&gt;XcpR_Init()&lt;/code&gt;
                                     for each configured socket.&lt;/p&gt;
                                  &lt;p&gt;If UDP protocol is used, this parameter must be enabled.&lt;/p&gt;
                                  &lt;p&gt;&lt;em&gt;Note: Please ensure that &lt;code&gt;SoAd_Init()&lt;/code&gt; will be called before &lt;code&gt;XcpR_Init()&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;XcpR connection type (&lt;code&gt;XcpRDestinationConnectionInterfaceType&lt;/code&gt;): The selected
                                        value for this parameter has to be &lt;code&gt;XcpRDestinationConnectionOverEthernet&lt;/code&gt;.
                                        Otherwise this parameter is not used.&lt;/li&gt;
                                    &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Open the Socket Connection"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(. != &apos;true&apos;)                                        and                                      node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                and                                     node:refvalid(../XcpRSourceConnectionSoAdConfigRef)                                        and                                           (count(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                     (node:ref(SoAdRxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                     node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                       and                                     (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                     (node:ref(SoAdRxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]/../../SoAdRxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup != &apos;true&apos;)                                       and                                     (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                     (node:ref(SoAdRxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]/../../SoAdRxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)" 
                                   true="In case TCP protocol is used and the &apos;XcpRDestinationOpenSoCon&apos; is disabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the                                      &apos;SoAdSocketConnectionGroup&apos; used by XcpR has to be enabled in the SoAd module. The socket has to be managed by the SoAd module."/>
                            <a:tst 
                                   expr="(. != &apos;true&apos;)                                        and                                      node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                        and                                      node:refvalid(../XcpRSourceConnectionSoAdConfigRef)                                        and                                      (count(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                      (node:ref(SoAdRxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                        and                                      (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                                                         (node:ref(SoAdRxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                       node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]/../../SoAdRxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup = &apos;true&apos;)                                                                           and                                      (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                      (node:ref(SoAdRxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                      node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]/../../SoAdRxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketUdp&apos;)" 
                                   true="In case UDP protocol is used, the &apos;XcpRDestinationOpenSoCon&apos; must be enabled and the &apos;SoAdSocketAutomaticSoConSetup&apos; of the                                      &apos;SoAdSocketConnectionGroup&apos; used by XcpR has to be disabled. This is mandatory as we need to reconfigure the port with SoAd_SetRemoteAddr()                                      which rejects the call if &apos;SoAdSocketAutomaticSoConSetup&apos; is true."/>
                            <a:tst 
                                   expr="(. = &apos;true&apos;)                                          and                                        node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdSocketRoute/*/SoAdRxSocketConnOrSocketConnBundleRef)                                          and                                        node:refvalid(../XcpRSourceConnectionSoAdConfigRef)                                          and                                       (count(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                       (node:ref(SoAdRxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                        node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]) &gt; 0) and                                       (node:ref(node:ref(../XcpRSourceConnectionSoAdConfigRef)/SoAdSocketRoute/*/SoAdSocketRouteDest/*[node:refvalid(SoAdRxPduRef) and                                       (node:ref(SoAdRxPduRef)/@name =  node:ref(node:current()/../../XcpRPdu/XcpRRxSourcePduReference)/@name) and                                        node:refvalid(../../SoAdRxSocketConnOrSocketConnBundleRef)]/../../SoAdRxSocketConnOrSocketConnBundleRef)/../../SoAdSocketAutomaticSoConSetup = &apos;true&apos;)" 
                                   true="In case the &apos;XcpRDestinationOpenSoCon&apos; is enabled, the &apos;SoAdSocketAutomaticSoConSetup&apos; of the &apos;SoAdSocketConnectionGroup&apos;                                      used by XcpR should be disabled in the SoAd module. The socket is managed by the XcpR module."/>
                          </a:da>
                        </v:var>
                        <v:var 
                               name="XcpRDestinationPackMultiMsgInOneEthernetFrame" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Enables the concatenation of multiple XcpR messages in one frame,
                                    for Ethernet communication.&lt;/p&gt;
                                 &lt;p&gt;Note: Caution must be taken when enabling this feature, in case
                                    the selected communication type is TCP/IP, because the Master
                                    should be able to support the packing of multiple pdus in one frame,
                                    for TCP/IP, too.&lt;/p&gt;
                                 &lt;p&gt;Rationale: In ASAM specifications only for UDP/IP is specified that
                                    the &quot;Suport for multiple PDUs in one frame may be implemented&quot;&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Enable Multiple XcpR Msgs In One Ethernet Frame"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" value="true"/>
                        </v:var>
                        <v:var name="XcpRDestinationMaxEthernetMsgLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the maximum data length of a Ethernet frame that a specific
                                  slave is able to receive or transmit in a frame. It is measured in bytes&lt;/p&gt;
                                  &lt;p&gt;The length of the message can be variable. However the maximum length
                                  of an XcpR on Eternet message is limited to the Ethernet payload length
                                  limits in bytes.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                  &lt;li&gt;8 .. 1454 &lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;Dependency on other parameter(s):&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;p&gt;This parameter is available only if both of the following parameters are enabled:&lt;/p&gt;
                                      &lt;li&gt;
                                        XcpR on Ethernet (&lt;code&gt;XcpROnEthernetEnabled&lt;/code&gt;).
                                      &lt;/li&gt;
                                      &lt;li&gt;
                                        Multiple XcpR Msgs In One XcpR Frame (&lt;code&gt;XcpRPackMultiMsgInOneEthernetFrame&lt;/code&gt;).
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;p&gt;Default value for this parameter is calculated to always be able to accomodate
                                  1 maximum size CTO plus 5 maximum size DTOs&lt;/p&gt;
                                  &lt;p&gt;Hint this parameter should be high enough to be able to accomodate at least
                                  2 maximum size DTOs&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Max Eternet Msg Length"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="1454"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="../XcpRDestinationPackMultiMsgInOneEthernetFrame = &apos;true&apos;"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=1454"/>
                              <mt:tst expr="&gt;=8"/>
                            </mt:range>
                          </a:da>
                        </v:var>
                        <v:ref name="XcpRDestinationConnectionSoAdConfigRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the SoAd interface where the Source/Destination PDUs,
                                   configured for the selected connection, can be found&lt;/p&gt;
                                &lt;p&gt;This reference is used to validate/generate PDUs information for the
                                    assigned PDUs for the selected connection over Ethernet.&lt;/p&gt;
                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;XcpR connection type (&lt;code&gt;XcpRDestinationConnectionInterfaceType&lt;/code&gt;): The selected
                                  value for this parameter has to be &lt;code&gt;XcpRDestinationConnectionOverEthernet&lt;/code&gt;.
                                  Otherwise this parameter is not used.&lt;/li&gt;
                                  &lt;li&gt;A valid SoAd configuration has to be avaible for selection.&lt;/li&gt;
                                  &lt;li&gt;One entry with the name &apos;XcpR&apos;, containing the UL configuration for XcpR module in SoAd,
                                      has to be added into the &lt;code&gt;SoAdBswModules&lt;/code&gt; container.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdIf&lt;/code&gt; has to be enabled, for the dedicated XcpR configuration entry into &lt;code&gt;SoAdBswModules&lt;/code&gt;.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdTp&lt;/code&gt; has to be disabled, for the dedicated XcpR configuration entry into &lt;code&gt;SoAdBswModules&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdIfTxConfirmation&lt;/code&gt; has to be enabled, for the dedicated XcpR configuration entry into
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt; entry.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdLocalIpAddrAssigmentChg&lt;/code&gt; has to be disabled, for the dedicated XcpR configuration entry into
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt;(refer to ASAM specifications).&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdIfTriggerTransmit&lt;/code&gt; has to be disabled , for the dedicated XcpR configuration entry into
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt;(the trigger transmit api is not supported for Ethernet).&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;SoAdSoConModeChg&lt;/code&gt; parameter, configured for the dedicated XcpR configuration entry from
                                      &lt;code&gt;SoAdBswModules&lt;/code&gt; container, has to be:.
                                      &lt;ul&gt;
                                        &lt;li&gt;Enabled, if there is configured at least one XcpR connection over TCP/IP.&lt;/li&gt;
                                        &lt;li&gt;Disabled, if there is no XcpR connection over TCP/IP, configured.&lt;/li&gt;
                                      &lt;/ul&gt;
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to SoAd configuration"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference. A valid reference to a SoAd configuration has to be provided, refer to &apos;SoAdConfig&apos;."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (count(node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]) = 0)" 
                                   true="No entry with the name &apos;XcpR&apos; was found into &apos;SoAdBswModules&apos; container. You should add one entry with the name                                      &apos;XcpR&apos; into the SoAdBswModules container, containing the UL configuration for XcpR module in SoAd."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdIf != &apos;true&apos;)" 
                                   true="SoAdIf has to be enabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdTp != &apos;false&apos;)" 
                                   true="SoAdTp has to be disabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdIfTxConfirmation != &apos;true&apos;)" 
                                   true="SoAdIfTxConfirmation has to be enabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdLocalIpAddrAssigmentChg != &apos;false&apos;)" 
                                   true="SoAdLocalIpAddrAssigmentChg has to be disabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container."/>
                            <a:tst 
                                   expr="node:refvalid(.) and (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdIfTriggerTransmit != &apos;false&apos;)" 
                                   true="SoAdIfTriggerTransmit has to be disabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container(the trigger transmit API is not supported for Ethernet)."/>
                            <a:tst 
                                   expr="node:refvalid(.)                                           and                                        node:exists(as:modconf(&apos;SoAd&apos;)/SoAdConfig/*/SoAdPduRoute/*/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)                                           and                                         (node:ref(.)/../../SoAdBswModules/*[@name = &apos;XcpR&apos;]/SoAdSoConModeChg != &apos;true&apos;)                                            and                                         (count(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and (node:ref(SoAdTxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRTxDestinationPduReference)/@name) and node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]) &gt; 0)                                           and                                         (node:ref(node:ref(.)/SoAdPduRoute/*[node:refvalid(SoAdTxPduRef) and                                         (node:ref(SoAdTxPduRef)/@name = node:ref(node:current()/../../XcpRPdu/XcpRTxDestinationPduReference)/@name) and                                         node:refvalid(SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)]/SoAdPduRouteDest/*/SoAdTxSocketConnOrSocketConnBundleRef)/../../SoAdSocketProtocol = &apos;SoAdSocketTcp&apos;)" 
                                   true="SoAdSoConModeChg has to be enabled, for the dedicated XcpR configuration entry into &apos;SoAdBswModules&apos; container,                                       in case at least one XcpR destination over TCP/IP is configured (&apos;SoAdSocketProtocol&apos; = &apos;SoAdSocketTcp&apos;)."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/SoAd/SoAdConfig"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRDestinationConnectionOverCDD" 
                             type="IDENTIFIABLE">
                        <v:ctr name="XcpRCddInformation" type="IDENTIFIABLE">
                          <a:a name="LABEL" value="CDD Information"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="../../XcpRPdu = &apos;XcpRTxPdu&apos;"/>
                          <v:var name="XcpRCddShortName" type="STRING">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Short Name of the CDD module interacting with XcpR.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Cdd Short Name"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="Cdd"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                                  true="XcpRCddShortName must be a valid C identifier."/>
                          </v:var>
                          <v:var name="XcpRCddHeaderFile" type="STRING">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the header file for the CDD interface APIs.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="CDD Header File"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="Cdd.h"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="not(text:match(., &apos;^[\w\-\. ]+\.h$&apos;)) and (. != &apos;&apos;)" 
                                  true="Invalid naming for a C header file. Please use a standard .h file name."/>
                          </v:var>
                          <v:var name="XcpRCddTransmitFunctionName" 
                                 type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;
                                      XcpRCddTransmitFunctionName defines the name of the
                                      &amp;lt;Cdd&amp;gt;_Transmit.
                                    &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="CDD Transmit Function Name"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:da name="DEFAULT" value="Cdd_Transmit"/>
                            <a:da name="ENABLE" value="true"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                                  true="XcpCddTransmitFunctionName must be a valid C function name."/>
                          </v:var>
                        </v:ctr>
                      </v:ctr>
                    </v:chc>
                    <v:var name="XcpRIsDestMasterConnection" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                             &lt;p&gt;Defines this destination as the connection to the master Xcp.
                                Only a Tx destination can be defined as master.&lt;/p&gt;
                           &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable this container as a destination to the master Xcp"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="TAB" value="XcpR Destination"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="(../XcpRPdu = &apos;XcpRTxPdu&apos;)"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="count(../../*[XcpRIsDestMasterConnection = &apos;true&apos;]) = 0" 
                            true="At least one destination connection must be enabled as a connection to the master Xcp (XcpRIsDestMasterConnection)."/>
                    </v:var>
                    <v:chc name="XcpRPdu" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines PDU information.&lt;/p&gt;
                              &lt;p&gt;A PDU may be either a transmission (Tx) PDU or a reception (Rx) PDU.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="XcpR PDU Type"/>
                      <a:a name="TAB" value="XcpR Destination"/>
                      <v:ctr name="XcpRRxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the Rx PDUs.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="FRAME" value="LINE"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCDD&apos;)" 
                              false="Invalid bus type. Only connections over CDD are allowed for Rx destinations."/>
                        <a:da name="TITLE" value="Rx PDU Information"/>
                        <v:ref name="XcpRRxDestinationPduReference" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to Rx PDu. &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to Rx destination PDU"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an EcuC receive PDU has to be provided."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XcpRTxPdu" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the Tx PDU.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="FRAME" value="LINE"/>
                        <a:da name="TITLE" value="Tx PDU Information"/>
                        <v:ref name="XcpRTxDestinationPduReference" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to Tx Pdu.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to Tx destination PDU"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference. A valid reference to an EcuC transmit PDU has to be provided."/>
                            <a:tst 
                                   expr="(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;]/*[XcpRTxSourcePduReference = node:current()]) +                                           count(../../../../XcpRDestinationPDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;]/*[XcpRTxDestinationPduReference = node:current()])) &gt; 1" 
                                   true="A unique EcuC PDU has to be provided as reference for each XcpR Rx Pdu."/>
                            <a:tst 
                                   expr="(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu = &apos;XcpRRxPdu&apos;]/*[XcpRRxSourcePduReference = node:current()]) +                                           count(../../../../XcpRDestinationPDUConfiguration/*[XcpRPdu = &apos;XcpRRxPdu&apos;]/*[XcpRRxDestinationPduReference = node:current()])) &gt; 0" 
                                   true="The referenced EcuC PDU is bidirectional(has both Tx and Rx direction). It is not allowed to configured bidirectional XcpR PDUs."/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                        </v:ref>
                        <v:var 
                               name="XcpRTxDestinationPduSupportForCddTriggerTransmit" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Enables the Tx PDU to support TriggerTransmit functionality over a CDD connection.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="PDU Support for CDD Trigger Transmit"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCDD&apos;"/>
                        </v:var>
                        <v:var 
                               name="XcpRTxDestinationPduSupportForFrTriggerTransmit" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Enables the Tx PDU to support TriggerTransmit functionality over a FR connection.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="PDU Support for FR Trigger Transmit"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverFlexRay&apos;"/>
                        </v:var>
                        <v:var name="XcpRLowerLayerDestinationPduId" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the ID of the PDU that will be used for outgoing LL_Transmit
                                  calls.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Lower Layer Destination PDU Id"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRTxDestinationPduId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the PDU identifier, which has to be used by the lower
                                  layer BSW module for XcpR_TxConfirmation() or XcpR_TriggerTransmit().&lt;/p&gt;
                                  &lt;p&gt;The XcpR&apos;s Tx Pdu ids has to be zero based and consecutive.&lt;/p&gt;
                                  &lt;p&gt;Range: 0 .. 65535&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="XcpRTxDestinationPduId"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:i(count(../../../*[XcpRPdu = &apos;XcpRTxPdu&apos;]))"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=65535"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      true="The XcpRTxDestinationPduId has to be unique." 
                                      expr="count(../../../../XcpRDestinationPDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;]/*[XcpRTxDestinationPduId = node:current()]) &gt; 1"/>
                              <mt:tst 
                                      true="XcpR Tx Destination PDU Id has to be 0 based and consecutive." 
                                      expr=". &gt;= count(../../../../XcpRDestinationPDUConfiguration/*[XcpRPdu = &apos;XcpRTxPdu&apos;])"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="XcpRDestPduSupportTxFromTxConfirmation" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   &lt;p&gt;Support for transmission from Tx confirmation. If enabled a new transmission
                                      for this PDU will be triggered when XcpR_TxConfirmation() is executed.&lt;/p&gt;
                                    &lt;p&gt;&lt;strong&gt;Enabling this feature for several PDUs might have impact on the run-time by
                                    creating a big overhead in the system.&lt;/strong&gt;&lt;/p&gt;
                                   &lt;p&gt;Dependency on parameter(s): none.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Support for transmission from TxConfirmation"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                      </v:ctr>
                    </v:chc>
                    <v:ctr name="XcpRDestUpperLayerInformation" 
                           type="IDENTIFIABLE">
                      <a:a name="LABEL" value="Upper Layer configuration"/>
                      <a:a name="TAB" value="XcpR Destination"/>
                      <v:var name="XcpRUpperLayerModuleShortName" type="STRING">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Short Name of the upper layer module interacting with XcpR.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="UL Module Short Name"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" value="Xcp"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="((../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCDD&apos;) and (../../XcpRPdu = &apos;XcpRRxPdu&apos;)) or ((../../XcpRIsDestMasterConnection = &apos;true&apos;) and (../../XcpRPdu = &apos;XcpRTxPdu&apos;) and (num:integer(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu =&apos;XcpRTxPdu&apos;])) &gt; 0))"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                              true="XcpRCddShortName must be a valid C identifier."/>
                      </v:var>
                      <v:var name="XcpRUpperLayerHeaderFile" type="STRING">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the header file for the upper layer module interface APIs.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="UL Header File"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" value="XcpOnCdd_Cbk.h"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="((../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCDD&apos;) and (../../XcpRPdu = &apos;XcpRRxPdu&apos;)) or ((../../XcpRIsDestMasterConnection = &apos;true&apos;) and (../../XcpRPdu = &apos;XcpRTxPdu&apos;) and (num:integer(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu =&apos;XcpRTxPdu&apos;])) &gt; 0))"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="not(text:match(., &apos;^[\w\-\. ]+\.h$&apos;)) and (. != &apos;&apos;)" 
                              true="Invalid naming for a C header file. Please use a standard .h file name."/>
                      </v:var>
                      <v:var name="XcpRRxIndicationFunctionName" 
                             type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  XcpRRxIndicationFunctionName defines the name of the
                                  &amp;lt;UL&amp;gt;_RxIndication.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="UL Rx Indication Function Name"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="DEFAULT" value="Xcp_CddRxIndication"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCDD&apos;) and (../../XcpRPdu = &apos;XcpRRxPdu&apos;)"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                              true="XcpRRxIndicationFunctionName must be a valid C function name."/>
                      </v:var>
                      <v:var name="XcpRTxConfirmationFunctionName" 
                             type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  XcpRTxConfirmationFunctionName defines the name of the
                                  &amp;lt;UL&amp;gt;_TxConfirmation.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="UL Tx Confirmation Function Name"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="DEFAULT" value="Xcp_CddTxConfirmation"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(../../XcpRIsDestMasterConnection = &apos;true&apos;) and (../../XcpRPdu = &apos;XcpRTxPdu&apos;) and (num:integer(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu =&apos;XcpRTxPdu&apos;])) &gt; 0)"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                              true="XcpRTxConfirmationFunctionName must be a valid C function name."/>
                      </v:var>
                      <v:var name="XcpRTriggerTransmitFunctionName" 
                             type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  XcpRTriggerTransmitFunctionName defines the name of the
                                  &amp;lt;UL&amp;gt;_TriggerTransmit.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="UL Trigger Transmit Function Name"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="DEFAULT" value="Xcp_CddTriggerTransmit"/>
                        <a:da name="ENABLE" type="XPath" 
                              expr="(../../XcpRIsDestMasterConnection = &apos;true&apos;) and (../../XcpRPdu = &apos;XcpRTxPdu&apos;) and (num:integer(count(../../../../XcpRSourcePDUConfiguration/*[XcpRPdu =&apos;XcpRTxPdu&apos;])) &gt; 0) and ((../../XcpRPdu/XcpRTxDestinationPduSupportForCddTriggerTransmit = &apos;true&apos;) or (../../XcpRPdu/XcpRTxDestinationPduSupportForFrTriggerTransmit = &apos;true&apos;))"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="not(text:match(., &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;))" 
                              true="XcpRTriggerTransmitFunctionName must be a valid C function name."/>
                      </v:var>
                    </v:ctr>
                    <v:ctr name="XcpRDestinationPDUAttributes" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              PDU attributes for each configured XcpR destination.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="TAB" value="XcpR Destination"/>
                      <v:var name="XcpRDestMaxCto" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;The maximum length of a CTO packet in bytes, specific to each individual destination connection.&lt;/p&gt;
                              &lt;p&gt;A CTO packet consists of:&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;An Identification Field (the PID containing the CTO Packet code) &lt;/li&gt;
                                &lt;li&gt;And the Data Field which contains the specific payload necessary for
                                the different types of CTO packet.&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;The length of the CTO varies according to the needs and the used
                              XCP Transport Layer.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt; CAN : 8 &lt;/li&gt;
                              &lt;li&gt; CAN-FD : 8..(maximum data length of a CAN-FD frame&lt;/li&gt;
                              &lt;li&gt; FlexRay : 8..(maximum data length of a FlexRay frame
                              (&lt;code&gt;XcpRDestinationMaxFlexMsgLength&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                              &lt;li&gt; Ethernet : 8..(maximum data length of a Ethernet frame
                              (&lt;code&gt;XcpRDestinationMaxEthernetMsgLength&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                  Selecting a smaller value for this parameter reduces the
                                  RAM consumption of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum CTO Length"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Destination"/>
                        <a:da name="DEFAULT" value="8"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="If destination connection is over CAN, The maximum length of command transfer objects must be 8." 
                                    expr="../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCAN&apos; and . != 8"/>
                            <mt:tst 
                                    true="If destination connection is over CANFD, the maximum length of command transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpRDestinationCanFdMaxDlc." 
                                    expr="../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCANFD&apos; and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (node:exists(../../XcpRDestinationInterfaceType/XcpRDestinationCanFdMaxDlc) and (. &gt; ../../XcpRDestinationInterfaceType/XcpRDestinationCanFdMaxDlc)))"/>
                            <mt:tst 
                                    true="If destination connection is over FlexRay, the maximum length of command transfer objects shall not be greater than min(XcpRDestinationMaxFlexMsgLength,254) - XCPR_FLEXRAY_HEADER_LENGTH (which can be 4,2, or 1 depending on parameter XcpRDestinationFlxHeaderAlignment)." 
                                    expr="(../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverFlexRay&apos;) and (. &gt; (node:when(../../XcpRDestinationInterfaceType/XcpRDestinationPackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../../XcpRDestinationInterfaceType/XcpRDestinationMaxFlexMsgLength, 254) - ( number(node:when(../../XcpRDestinationInterfaceType/XcpRDestinationFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../../XcpRDestinationInterfaceType/XcpRDestinationFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))))))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpRDestMaxDto" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                             &lt;p&gt;The maximum length of a DTO packet in bytes, specific to each individual destination connection.&lt;/p&gt;
                             &lt;p&gt;A DTO packet consists of:&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li&gt;An Identification Field which varies depending upon the Identification
                               Field Type&lt;/li&gt;
                               &lt;li&gt;An optional Timestamp Field which varies depending upon the
                               Timestamp Field Type(&lt;code&gt;XcpRDestTimestampType&lt;/code&gt;)&lt;/li&gt;
                               &lt;li&gt;And the Data Field which contains the data for synchronous
                               acquisition and stimulation.&lt;/li&gt;
                             &lt;/ul&gt;

                             &lt;p&gt;The length of the CTO varies according to the needs and the used
                             XCP Transport Layer.&lt;/p&gt;

                             &lt;p&gt;Range:&lt;/p&gt;
                             &lt;ul&gt;
                             &lt;li&gt; CAN : 8 &lt;/li&gt;
                             &lt;li&gt; CAN-FD : 8..(maximum data length of a CAN-FD frame&lt;/li&gt;
                             &lt;li&gt; FlexRay : 8..(maximum data length of a FlexRay frame
                             (&lt;code&gt;XcpRDestinationMaxFlexMsgLength&lt;/code&gt;) - FlexRay header length) &lt;/li&gt;
                             &lt;li&gt; Ethernet : 8..(maximum data length of a Ethernet frame
                             (&lt;code&gt;XcpRDestinationMaxEthernetMsgLength&lt;/code&gt;) - Ethernet header length) &lt;/li&gt;
                             &lt;/ul&gt;
                             &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                             &lt;ul&gt;
                               &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                 &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 RAM consumption of the module code.
                               &lt;/li&gt;
                               &lt;li class=&quot;optimization.config.ram.reduction&quot;&gt;
                                 &lt;strong&gt;RAM reduction (config):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 RAM consumption of the module config.
                               &lt;/li&gt;
                               &lt;li class=&quot;optimization.config.rom.reduction&quot;&gt;
                                 &lt;strong&gt;ROM reduction (config):&lt;/strong&gt;
                                 Selecting a smaller value for this parameter reduces the
                                 ROM consumption of the module config.
                               &lt;/li&gt;
                             &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum DTO Length"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Destination"/>
                        <a:da name="DEFAULT" value="8"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65535"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="If destination connection is over CAN, The maximum length of data transfer objects must be 8." 
                                    expr="../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCAN&apos; and . != 8"/>
                            <mt:tst 
                                    true="If destination connection is over CANFD, the maximum length of data transfer objects must match one of the following values 8, 12, 16, 20, 24, 32, 48 or 64 and it must not be higher than XcpRDestinationCanFdMaxDlc." 
                                    expr="../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCANFD&apos; and (((. != 8) and (. != 12) and (. != 16) and (. != 20) and (. != 24) and (. != 32) and (. != 48) and (. != 64)) or (node:exists(../../XcpRDestinationInterfaceType/XcpRDestinationCanFdMaxDlc) and (. &gt; ../../XcpRDestinationInterfaceType/XcpRDestinationCanFdMaxDlc)))"/>
                            <mt:tst 
                                    true="If destination connection is over FlexRay, the maximum length of data transfer objects shall not be greater than min(XcpRDestinationMaxFlexMsgLength,254) - XCPR_FLEXRAY_HEADER_LENGTH (which can be 4,2, or 1 depending on parameter XcpRDestinationFlxHeaderAlignment)." 
                                    expr="(../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverFlexRay&apos;) and (. &gt; (node:when(../../XcpRDestinationInterfaceType/XcpRDestinationPackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../../XcpRDestinationInterfaceType/XcpRDestinationMaxFlexMsgLength, 254) - ( number(node:when(../../XcpRDestinationInterfaceType/XcpRDestinationFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../../XcpRDestinationInterfaceType/XcpRDestinationFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))))))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpRDestMaxCtoPgm" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the maximum length of command transfer objects (CTO) in bytes for flash programming.(ASAM parameter: &lt;code&gt;MAX_CTO_PGM&lt;/code&gt;)&lt;/p&gt;
                              &lt;p&gt;A CTO packet consists of:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;An Identification Field (the PID containing the CTO Packet code) &lt;/li&gt;
                                &lt;li&gt;And the Data Field which contains the specific payload necessary for
                                the different types of CTO packet.&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;The length of the CTO varies according to the needs and the used
                              XCP Transport Layer.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt; CAN : 8 &lt;/li&gt;
                              &lt;li&gt; CAN-FD : 8..(maximum data length of a CAN-FD frame&lt;/li&gt;
                              &lt;li&gt; FlexRay : 8..(maximum data length of a FlexRay frame
                              &lt;code&gt;XcpRDestinationMaxFlexMsgLength&lt;/code&gt; - FlexRay header length) &lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;Note: Some older Xcp masters ignore this parameter. If your master is
                                 affected, it is advised to configure this parameter to the same value
                                 as XcpRDestMaxCto.&lt;/p&gt;

                              &lt;p&gt;&lt;strong&gt;Optimization Effect:&lt;/strong&gt;&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li class=&quot;optimization.code.ram.reduction&quot;&gt;
                                  &lt;strong&gt;RAM reduction (code):&lt;/strong&gt;
                                  Selecting a smaller value for this parameter reduces the
                                  RAM consumption of the module code.
                                &lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="XcpRMaxCtoPgm"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Destination"/>
                        <a:da name="DEFAULT" value="8"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=8"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="If destination connection is over CAN, The maximum length of PGM command transfer objects must be 8." 
                                    expr="../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverCAN&apos; and . != 8"/>
                            <mt:tst 
                                    true="If destination connection is over FlexRay, the maximum length of PGM command transfer objects shall not be greater than min(XcpRDestinationMaxFlexMsgLength,254) - XCPR_FLEXRAY_HEADER_LENGTH (which can be 4,2, or 1 depending on parameter XcpRDestinationFlxHeaderAlignment)." 
                                    expr="(../../XcpRDestinationInterfaceType = &apos;XcpRDestinationConnectionOverFlexRay&apos;) and (. &gt; (node:when(../../XcpRDestinationInterfaceType/XcpRDestinationPackMultiMsgInOneFlexRayFrame = &apos;true&apos;, ../../XcpRDestinationInterfaceType/XcpRDestinationMaxFlexMsgLength, 254) - ( number(node:when(../../XcpRDestinationInterfaceType/XcpRDestinationFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_32&apos;,4,node:when(../../XcpRDestinationInterfaceType/XcpRDestinationFlxHeaderAlignment = &apos;PACKET_ALIGNMENT_16&apos;,2,1))))))"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="XcpRDestTimestampType" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the type of timestamp XcpR Destination is using.&lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;NO_TIME_STAMP: no timestamp is used.&lt;/li&gt;
                                  &lt;li&gt;ONE_BYTE: timestamp on 1 byte is used.&lt;/li&gt;
                                  &lt;li&gt;TWO_BYTE: timestamp on 2 bytes is used.&lt;/li&gt;
                                  &lt;li&gt;FOUR_BYTE: timestamp on 4 bytes is used.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;
                              &lt;p&gt;This parameter must be set with the same value selected for the XcpTimestampType
                                of the Xcp which is connected through this routing path.&lt;/p&gt;
                                &lt;p&gt;Every source that is configured as a path for this destination, must have the same
                                value for the parameter XcpRSrcTimestampType.&lt;/p&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Timestamp Type"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="TAB" value="XcpR Destination"/>
                        <a:da name="DEFAULT" value="NO_TIME_STAMP"/>
                        <a:da name="RANGE">
                          <a:v>NO_TIME_STAMP</a:v>
                          <a:v>ONE_BYTE</a:v>
                          <a:v>TWO_BYTE</a:v>
                          <a:v>FOUR_BYTE</a:v>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:ctr>
                </v:lst>
                <v:lst name="XcpRRoutingPaths" type="MAP">
                  <a:a name="LABEL" value="Routing configuration"/>
                  <a:a name="TAB" value="Routing Information"/>
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="XcpRRoutingPaths" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines PDU information.&lt;/p&gt;
                            &lt;p&gt;A PDU may be either a transmission (Tx) PDU or a reception (Rx) PDU.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="XcpR PDU Mapping"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(node:ref(node:current()/XcpRSourcePduRef)/XcpRSourcePDUAttributes/XcpRSrcTimestampType) != (node:ref(node:current()/XcpRDestinationPduRef)/XcpRDestinationPDUAttributes/XcpRDestTimestampType)" 
                          true="Source and destination of a routing path must have the same timestamp type."/>
                    <v:ref name="XcpRSourcePduRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to an XcpR source.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="XcpR Source PDU Reference"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" 
                               false="Invalid reference. A valid reference to an Rx PDU must be provided."/>
                        <a:tst 
                               expr="(count(../../*[node:refvalid(XcpRSourcePduRef) and (node:ref(XcpRSourcePduRef)/@name = node:ref(node:current())/@name)]) &gt; 1) and (../../../XcpRMultipleSlavesEnabled = &apos;false&apos;)" 
                               true="In the configured routing paths there is an XcpR source linked to multiple destinations but this functionality is not enabled by the XcpRMultipleSlavesEnabled parameter."/>
                        <a:tst 
                               expr="(count(../../*[node:refvalid(XcpRSourcePduRef) and (node:ref(XcpRSourcePduRef)/@name = node:ref(node:current())/@name)]) &gt; 2) and (../../../XcpRMultipleSlavesEnabled = &apos;true&apos;)" 
                               true="One source can be linked to a maximum of 2 destinations."/>
                      </a:da>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/XcpR/XcpRGeneral/XcpRSourcePDUConfiguration"/>
                    </v:ref>
                    <v:ref name="XcpRDestinationPduRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                             &lt;p&gt;Reference to an XcpR destination.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="XcpR Destination PDU Reference"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                            false="Invalid reference. A valid reference to an Rx PDU must be provided."/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/XcpR/XcpRGeneral/XcpRDestinationPDUConfiguration"/>
                    </v:ref>
                  </v:ctr>
                </v:lst>
                <v:lst name="XcpRRoutingToConnectionMapping" type="MAP">
                  <a:a name="LABEL" value="Routing To Connection Mapping"/>
                  <a:a name="TAB" value="Routing To Connection Mapping"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="XcpRRoutingToConnectionMapping" 
                         type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;List of Connection Groups, which logically groups configured Routing Paths.&lt;/p&gt;
                            &lt;p&gt;Each connection group shall be composed of at least:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt; A routing path for requests from a master Xcp to a slave Xcp.&lt;/li&gt;
                              &lt;li&gt; A routing path for the responses from the slave Xcp to the master Xcp.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt; Additional routing paths can be mapped to the group for DAQ/STIM. &lt;/p&gt;
                            &lt;p&gt;If the list is empty, the &quot;Connection Group&quot; functionality is disabled.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="XcpR Connection Mapping"/>
                    <v:lst name="XcpRRoutingMapping" type="MAP">
                      <a:a name="LABEL" value="Connection Group"/>
                      <a:a name="TAB" value="Connection Group"/>
                      <a:da name="MIN" value="2"/>
                      <v:ctr name="XcpRRoutingMapping" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Container holding a reference to a configured Routing Paths.&lt;/p&gt;

                                &lt;p&gt;Each connection group shall be composed of at least:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt; A routing path for requests from a master Xcp to a slave Xcp.&lt;/li&gt;
                                  &lt;li&gt; A routing path for the responses from the slave Xcp to the master Xcp.&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt; Additional routing paths can be mapped to the group for DAQ/STIM. &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="XcpR Connection Mapping"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath 
                                    true="The XcpRRoutingPathRef in a Connection Group shall be unique." 
                                    expr="count(../*[node:ref(XcpRRoutingPathRef)/@name = node:ref(node:current()/XcpRRoutingPathRef)/@name]) &gt; 1"/>
                        </a:da>
                        <v:ref name="XcpRRoutingPathRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to a configured XcpR Routing Path.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="XcpR Routing Path Reference"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference. A valid reference to an XcpR routing path must be provided."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/XcpR/XcpRGeneral/XcpRRoutingPaths"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/XcpR"/>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
