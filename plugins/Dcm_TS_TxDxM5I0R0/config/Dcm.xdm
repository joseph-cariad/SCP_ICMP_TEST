<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM5I0R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Dcm" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>5.0.9</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2021-07-14T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                      Defines the configuration of the &lt;code&gt;Dcm&lt;/code&gt; (Diagnostic Communications Manager) module.
                    &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="c8c7c42c-d2cb-4aca-86f6-9de25372310c"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="4"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="5"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="9"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="53"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Configuration Variant"/>
                <a:a name="UUID" value="6cb5c166-7f6a-40b9-8656-568f08a496bc"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="EDITABLE" value="false"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:lst name="DcmConfigSet" 
                     type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:a name="LABEL" value="Configuration Set List"/>
                <a:a name="ROWS" value="5"/>
                <a:da name="MAX" value="1"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="DcmConfigSet" 
                       type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines one configuration set of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;

                          &lt;p&gt;This container and its sub-containers exist once per configuration set.
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="DCM Configuration"/>
                  <a:a name="TAB" value="DCM Configuration"/>
                  <a:a name="UUID" value="3372c911-d1c7-4869-9e28-52fdbbd30bcc"/>
                  <v:ctr name="DcmDefensiveProgramming" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Defensive Programming Options"/>
                    <v:var name="DcmDefProgEnabled" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module Dcm.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Defensive Programming"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="../../DcmGeneral/DcmDevErrorDetect = &apos;true&apos;" 
                            true="true" false="false"/>
                    </v:var>
                    <v:var name="DcmPrecondAssertEnabled" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module Dcm.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DcmDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DcmDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Precondition Assertions"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="(../../DcmGeneral/DcmDevErrorDetect = &apos;true&apos;) and (../DcmDefProgEnabled = &apos;true&apos;)" 
                            true="true" false="false"/>
                    </v:var>
                    <v:var name="DcmPostcondAssertEnabled" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module Dcm.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DcmDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DcmDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="(../../DcmGeneral/DcmDevErrorDetect = &apos;true&apos;) and (../DcmDefProgEnabled = &apos;true&apos;)" 
                            true="true" false="false"/>
                    </v:var>
                    <v:var name="DcmStaticAssertEnabled" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module Dcm.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DcmDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DcmDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Static Assertions"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="(../../DcmGeneral/DcmDevErrorDetect = &apos;true&apos;) and (../DcmDefProgEnabled = &apos;true&apos;)" 
                            true="true" false="false"/>
                    </v:var>
                    <v:var name="DcmUnreachAssertEnabled" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module Dcm.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DcmDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DcmDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable Unreachable Code Assertions"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="(../../DcmGeneral/DcmDevErrorDetect = &apos;true&apos;) and (../DcmDefProgEnabled = &apos;true&apos;)" 
                            true="true" false="false"/>
                    </v:var>
                    <v:var name="DcmInvariantAssertEnabled" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module Dcm.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;DcmDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;DcmDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Invariant Assertions"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="(../../DcmGeneral/DcmDevErrorDetect = &apos;true&apos;) and (../DcmDefProgEnabled = &apos;true&apos;)" 
                            true="true" false="false"/>
                    </v:var>
                  </v:ctr>
                  <v:ctr name="DcmDsd" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the configuration of the Diagnostic Service Dispatcher (DSD)
                             submodule of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;

                          &lt;p&gt;The DSD submodule checks the validity of an incoming request and keeps track
                             of the progress of the service request execution.&lt;/p&gt;

                          &lt;p&gt;Note1: Configure at least one &lt;code&gt;DcmDsdServiceTable&lt;/code&gt;.&lt;/p&gt;

                          &lt;p&gt;Note2: One &lt;code&gt;DcmDsdServiceTable&lt;/code&gt; may be referenced by more than one &lt;code&gt;DcmDslProtocol&lt;/code&gt;.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Diagnostic Service Dispatcher"/>
                    <a:a name="TAB" value="Diagnostic Service Dispatcher"/>
                    <a:a name="UUID" 
                         value="bcc96c8c-31a0-4770-b7e4-a2f082da6c73"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="((node:exists(./DcmDsdServiceTable/*/DcmDsdService/*[./DcmAsyncServiceExecution = &apos;true&apos;])) and                                             (../DcmGeneral/DcmRteUsage = &apos;false&apos;))" 
                             true="Rte usage must be enabled in order for asynchronous service processing to be available."/>
                      <a:tst 
                             expr="((node:exists(./DcmDsdServiceTable/*/DcmDsdService/*[./DcmAsyncServiceExecution = &apos;true&apos;])) and                                             (not(node:refexists(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef),&apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef))))" 
                             true="Please map the BswInternalTriggerOccurredEvent_Async BswInternalTriggerOccurredEvent to a suitable task in order for asynchronous service processing to be available."/>
                      <a:tst 
                             expr="((node:exists(./DcmDsdServiceTable/*/DcmDsdService/*[./DcmAsyncServiceExecution = &apos;true&apos;])) and                                             (node:refexists(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef),&apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)) and                                             (../DcmGeneral/DcmRteUsage = &apos;true&apos;) and                                             (not(count(as:modconf(&apos;Os&apos;)/*) = 0)) and                                             (as:modconf(&apos;Os&apos;)[1]/CommonPublishedInformation/VendorId = 1) and                                             (not                                               ((node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskActivation &gt; 1) or                                                ((node:exists(node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskType)) and (node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskType = &apos;EXTENDED&apos;)) or                                                (count((node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskEventRef/*)) &gt; 0))))" 
                             true="The BswInternalTriggerOccurredEvent_Async BswInternalTriggerOccurredEvent must be mapped to either an EXTENDED task or a BASIC task with the number of activations greater than 1."/>
                      <a:tst 
                             expr="((node:exists(./DcmDsdServiceTable/*/DcmDsdService/*[./DcmAsyncServiceExecution = &apos;true&apos;])) and                                             (node:refexists(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef),&apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)) and                                             (../DcmGeneral/DcmRteUsage = &apos;true&apos;) and                                             (not(count(as:modconf(&apos;Os&apos;)/*) = 0)) and                                             (not(as:modconf(&apos;Os&apos;)[1]/CommonPublishedInformation/VendorId = 1)) and                                             (not                                               ((node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskActivation &gt; 1) or                                                (count((node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskEventRef/*)) &gt; 0))))" 
                             true="The BswInternalTriggerOccurredEvent_Async BswInternalTriggerOccurredEvent must be mapped to either an EXTENDED task or a BASIC task with the number of activations greater than 1."/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="((node:refexists(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef),&apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)) and                                             (node:exists(./DcmDsdServiceTable/*/DcmDsdService/*[./DcmAsyncServiceExecution = &apos;true&apos;])) and                                             (../DcmGeneral/DcmRteUsage = &apos;true&apos;) and                                             (not(count(as:modconf(&apos;Os&apos;)/*) = 0)) and                                             (not(as:modconf(&apos;Os&apos;)[1]/CommonPublishedInformation/VendorId = 1)) and                                             (node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskActivation = 1) and                                             (count((node:ref(as:modconf(&apos;Rte&apos;)/RteBswModuleInstance/*[text:contains(node:value(./RteBswImplementationRef), &apos;EB_Dcm&apos;)]/RteBswEventToTaskMapping/*[text:contains(node:value(./RteBswEventRef),&apos;BswInternalTriggerOccurredEvent_Async&apos;)]/RteBswMappedToTaskRef)/OsTaskEventRef/*)) = 0))" 
                          true="The Dcm cannot check whether all conditions are met for the usage of asynchronous service handling. Please ensure that the BswInternalTriggerOccurredEvent_Async BswInternalTriggerOccurredEvent is mapped to either an EXTENDED task or a BASIC task with the number of activations greater than 1."/>
                    <v:lst name="DcmDsdServiceTable" type="MAP">
                      <a:a name="COLUMNS">
                        <a:v>DcmDsdSidTabId</a:v>
                        <a:v>DcmDsdService</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Diagnostic Service Tables"/>
                      <a:a name="ROWS" value="6"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MAX" value="256"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="DcmDsdServiceTable" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the parameters corresponding to every diagnostic
                                   service table per row.&lt;/p&gt;

                                &lt;p&gt;Configuration of the services to which a protocol of the &lt;code&gt;Dcm&lt;/code&gt; will respond
                                   here.&lt;/p&gt;

                                &lt;p&gt;A &lt;code&gt;DcmDsdServiceTable&lt;/code&gt; contains a set of services for which the protocol
                                   referencing the &lt;code&gt;DcmDsdServiceTable&lt;/code&gt; will provide support.&lt;/p&gt;

                                &lt;p&gt;Note: The &lt;code&gt;Dcm&lt;/code&gt; allows services to either use an internal implementation
                                   (for selected service IDs) or an external, user-supplied service handler.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="NAME_PATTERN" value="DcmService_?"/>
                        <a:a name="UUID" 
                             value="b7f40a80-c970-46d4-a7ad-48dc87df459d"/>
                        <a:da name="TITLE" value="Table for Diagnostic Services"/>
                        <v:var name="DcmDsdSidTabId" type="INTEGER">
                          <a:a name="COLUMN_TITLE" value="Service Table ID"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the unique identifier of this Diagnostic Service Table.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 255.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Table ID"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="71855b81-be01-4d77-891c-2b62b6c1eb6b"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      false="The ID of the service table has to be unique." 
                                      expr="text:uniq(../../*/DcmDsdSidTabId, .)"/>
                              <mt:tst 
                                      true="The ID of the service table has to be zero-based and consecutive." 
                                      expr=".&gt;= count(../../*)"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:lst name="DcmDsdService" type="MAP">
                          <a:a name="LABEL" value="Diagnostic Services"/>
                          <a:a name="ROWS" value="11"/>
                          <a:a name="TAB" value="GENERAL"/>
                          <a:da name="MIN" value="1"/>
                          <v:ctr name="DcmDsdService" type="IDENTIFIABLE">
                            <a:a name="COLUMN_TITLE" value="Service ID"/>
                            <a:a name="COLUMN_WIDTH" value="200"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    Defines the parameters corresponding to a diagnostic service handler.
                                    &lt;p&gt;&lt;b&gt;Note : Depending on the license, the &lt;code&gt;Dcm&lt;/code&gt; additionally supports the Vendor specific service &quot;Read Generic information&quot; (0xAF):&lt;/b&gt;&lt;/p&gt;
                                    &lt;p&gt;This service extends the functionality of the Read DTC Information service by allowing
                                    the request of all DTCs stored in memory at once.&lt;/p&gt;
                                    &lt;p&gt;In order to correctly make use of this Service, The &lt;code&gt;Dem&lt;/code&gt; shall map SI30 as Extended Data record 0x30 to all events. If this is not the case, the related DTCs will not be listed on the service response.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Diagnostic Service configuration"/>
                            <a:a name="UUID" 
                                 value="54d732bb-bb98-4848-9feb-1ca9ddd784aa"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="((../../../../../DcmDsp/DcmDspDidEnableDefaultInterfaces = &apos;false&apos;) and                                           (./DcmDsdSidTabServiceId = num:hextoint(&apos;0x22&apos;) or (./DcmDsdSidTabServiceId = num:hextoint(&apos;0x2E&apos;)) or (./DcmDsdSidTabServiceId = num:hextoint(&apos;0x2F&apos;)))                                       and ((count(../../../../../DcmDsp/DcmDspDid/*[./DcmDspDidUsed = &apos;true&apos;]) = 0) or (count(../../../../../DcmDsp/DcmDspData/*) = 0)))" 
                                     true="If at least one of the services ReadDataByIdentifier(0x22), WriteDataByIdentifier(0x2E), InputOutputControlByIdentifier(0x2F) is configured, user needs to enable the configuration parameter DcmDspDidEnableDefaultInterfaces or to configure and enable at least one of Data Identifier(DcmDspDid) and Did Data(DcmDspData)"/>
                              <a:tst 
                                     expr="((../../../../../DcmDsp/DcmDspRoutineEnableDefaultInterfaces = &apos;false&apos;) and                                           (./DcmDsdSidTabServiceId = num:hextoint(&apos;0x31&apos;)) and                                           (count(../../../../../DcmDsp/DcmDspRoutine/*[./DcmDspRoutineUsed = &apos;true&apos;]) = 0) and                                           ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))))" 
                                     true="If the service 0x31 is internally configured and the routine defult interface is disabled (DcmDspRoutineEnableDefaultInterfaces), user needs to configure at least one Routine Control Configuration(DcmDspRoutine)"/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x86&apos;))                                            and ((count(../../../../../DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*[(.)=&apos;DcmDslResponseOnEvent&apos;]) = 0)))" 
                                     true="ROE Service is configured, hence user has to configure DcmDslResponseOnEvent connection."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x86&apos;)) and                                             (not(node:exists(../../../../../DcmDsp/DcmDspRoe))) and                                             ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))))" 
                                     true="ROE Service is configured, with internal service handler, but the DcmDspRoe container is not configured."/>
                              <a:tst 
                                     expr="node:containsValue(node:foreach(text:split(&apos;0x10 0x11 0x19 0x28 0x2c 0x85 0x86 0x87 0xAF&apos;),&apos;sid&apos;, &apos;num:hextoint($sid)= ./DcmDsdSidTabServiceId &apos;), &apos;true&apos;)                                            and ((not(node:exists(DcmDsdSidTabFnc)))                                             or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))                                            and ((count(./DcmDsdSubService/*) &lt;= 0) or (./DcmDsdSidTabSubfuncAvail = &apos;false&apos;))" 
                                     true="If this service is configured, user needs to configure at least one Subservice."/>
                              <a:tst 
                                     expr="(./DcmDsdSidTabServiceId = num:hextoint(&apos;0x2c&apos;))                                           and (count(../../../../../DcmDsp/DcmDspDid/*[(node:refvalid(./DcmDspDidInfoRef)) and node:ref(./DcmDspDidInfoRef)/DcmDspDidDynamicallyDefined = &apos;true&apos; and ./DcmDspDidUsed = &apos;true&apos;]) = 0)" 
                                     true="If the service 0x2C is configured, user needs to configure at least one Dynamically Defined DID that is used"/>
                              <a:tst 
                                     expr="(((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x2c&apos;)) and ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))))                                            and ((./DcmDsdSubService/*/DcmDsdSubServiceId = num:hextoint(&apos;0x02&apos;)) and (not(node:exists(./DcmDsdSubService/*/DcmDsdSubServiceFnc))))                                            and (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspReadMemoryRangeInfo/*)=0)                                            and (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspReadMemoryRangeByLabelInfo/*)=0)) = &apos;true&apos;" 
                                     true="If the service DynamicallyDefineDataIdentifier 0x2C is configured to be internally managed with subservice defineByMemoryAddress (0x02) configured to be internally managed, user must configure the Memory Access (DcmDspMemory) and introduce at least one range for Read Memory (DcmDspReadMemoryRangeInfo or DcmDspReadMemoryRangeByLabelInfo)."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x3d&apos;)) and  ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspWriteMemoryRangeInfo/*)=0)                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspWriteMemoryRangeByLabelInfo/*)=0)) = &apos;true&apos;" 
                                     true="If the service WriteMemoryByAddress 0x3D is configured to be internally managed, user must configure the Memory Access (DcmDspMemory) and introduce at least one range for Write Memory (DcmDspWriteMemoryRangeInfo or DcmDspWriteMemoryRangeByLabelInfo ."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x23&apos;)) and ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspReadMemoryRangeInfo/*)=0)                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspReadMemoryRangeByLabelInfo/*)=0)) = &apos;true&apos;" 
                                     true="If the service ReadMemoryByAddress 0x23 is configured to be internally managed, user must configure the Memory Access (DcmDspMemory) and introduce at least one range for Read Memory (DcmDspReadMemoryRangeInfo or DcmDspReadMemoryRangeByLabelInfo)"/>
                              <a:tst 
                                     expr="(./DcmDsdSidTabServiceId = num:hextoint(&apos;0x27&apos;) and (count(./DcmDsdSubService/*) &gt;= 1)) and (count(./DcmDsdSubService/*) != (2 * count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspSecurity/DcmDspSecurityRow/*)))" 
                                     true="The configured sub-services for service 0x27 must agree with the configured security levels. For each security level there must be exactly one sub-service for requestSeed and one sub-service for compareKey."/>
                              <a:tst 
                                     expr="(./DcmDsdSidTabServiceId = num:hextoint(&apos;0x06&apos;))                                             and ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))                                             and (not(node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspTestResultByObdmid/DcmOBDMIDSupportType)))" 
                                     true="If the service 0x06 is configured, user needs to configure the support type."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x34&apos;)) and  ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspWriteMemoryRangeInfo/*)=0)                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspWriteMemoryRangeByLabelInfo/*)=0)) = &apos;true&apos;" 
                                     true="If the service RequestDownload 0x34 is configured to be internally managed, user must configure the Memory Access (DcmDspMemory) and introduce at least one range for Write Memory (DcmDspWriteMemoryRangeInfo or DcmDspWriteMemoryRangeByLabelInfo)."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x35&apos;)) and  ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspReadMemoryRangeInfo/*)=0)                                            and  (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspReadMemoryRangeByLabelInfo/*)=0)) = &apos;true&apos;" 
                                     true="If the service RequestUpload 0x35 is configured to be internally managed, user must configure the Memory Access (DcmDspMemory) and introduce at least one range for Read Memory (DcmDspReadMemoryRangeInfo or DcmDspReadMemoryRangeByLabelInfo)."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;)) and ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))                                              and (count(./DcmDsdSubService/*) = 0))" 
                                     true="If the service Diagnostic Session Control is configured to be handled internally, at least one sub-service has to be configured."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x2a&apos;))                                               and ((count(../../../../../DcmDsp/DcmDspDid/*[./DcmDspDidUsed = &apos;true&apos;]) = 0) or (count(../../../../../DcmDsp/DcmDspData/*) = 0)))" 
                                     true="If UDS service 0x2A is configured, user needs to configure and enable at least one Data Identifier(DcmDspDid) and Did Data(DcmDspData)"/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x08&apos;)) and (count(../../../../../DcmDsp/DcmDspRequestControl/*) = 0))" 
                                     true="If the service 0x08 is configured, user needs to configure at least one RequestControl Configuration(DcmDspRequestControl)"/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x2e&apos;))                                           and (count(../../../../../DcmDsp/DcmDspDid/*) &gt; 0)                                           and (count(../../../../../DcmDsp/DcmDspDid/*/DcmDspDidSignal/*) = 0))" 
                                     true="If the UDS service WriteDataByIdentifier (0x2E) is configured and internally implemented and at least one data identifier is configured(DcmDspDid container has at least one entry), then at least one DidSignal shall be configured(DcmDspDidSignal shall contain at least one entry)."/>
                            </a:da>
                            <a:da name="TITLE" 
                                  value="Diagnostic Service configuration"/>
                            <a:da name="WARNING" type="XPath">
                              <a:tst 
                                     expr="((num:hextoint(&apos;0x3e&apos;)= ./DcmDsdSidTabServiceId) and ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))) and (count(./DcmDsdSubService/*) &lt;= 0))" 
                                     true="User shall configure at least Subservice 0x00 for this service."/>
                              <a:tst 
                                     expr="((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x24&apos;)) and                                             (not(node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspDid/*/DcmDspDidSignal/*                                                 [(as:ref(as:ref(DcmDspDidDataRef)/DcmDspDataInfoRef)/DcmDspDataScalingInfoSize)][                                                     ((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_SYNCH_FNC&apos;) or                                                     ((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_ASYNCH_FNC&apos;) or                                                     ((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_SYNCH_CLIENT_SERVER&apos;) or                                                     ((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_ASYNCH_CLIENT_SERVER&apos;)]))))" 
                                     true="Service ReadScalingDataByIdentifier (0x24) is configured but none of the Data Identifiers that has Scaling information available are configured"/>
                            </a:da>
                            <v:var name="DcmAsyncServiceExecution" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;&lt;b&gt;Note : This is a Vendor Specific parameter for
                                         Asynchronous Service Handler usage in the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                                      &lt;p&gt;Enables Asynchronous Service Handling for requests to this diagnostic service.&lt;/p&gt;

                                      &lt;p&gt;If Asynchronous Service Handling is enabled for a service, the request processing is performed in a different task from the task executing the &lt;code&gt;Dcm_MainFunction()&lt;/code&gt;. This removes the restriction for the service handlers that they must return before the next call to the &lt;code&gt;Dcm_MainFunction()&lt;/code&gt;, thus allowing functions with higher execution times to still be used.&lt;/p&gt;

                                      &lt;p&gt;If this parameter is enabled for any service, please map the &lt;code&gt;BswInternalTriggerOccurredEvent&lt;/code&gt;
                                         &lt;code&gt;BswInternalTriggerOccurredEvent_Async&lt;/code&gt; to a task having a lower priority than the task running
                                         the &lt;code&gt;Dcm_MainFunction()&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables Asynchronous Service Handling for this service.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables Asynchronous Service Handling for this service.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Enable Asynchronous service handler"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:da name="DEFAULT" value="false"/>
                              <a:da name="WARNING" type="XPath" 
                                    expr="node:value(.) = &apos;true&apos; and (../../DcmGeneral/DcmRteUsage = &apos;false&apos;)" 
                                    true="DcmAsyncServiceExecution for this service is enabled. Hence                                   DcmRteUsage should be enabled."/>
                            </v:var>
                            <v:var name="DcmDsdServiceUsed" type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines whether this Service is available for use in the current configuration (for multi-purpose ECUs).&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: This Service is available.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: This Service is not available. The &lt;code&gt;Dcm&lt;/code&gt; behaves as if this Service was
                                                                not configured.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Enable Service usage"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="7b6b4d32-a25a-4ea1-858c-572ec865e694"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="ENABLE" value="true"/>
                            </v:var>
                            <v:var name="DcmDsdSidTabFnc" type="FUNCTION-NAME">
                              <a:a name="COLUMN_TITLE" 
                                   value="Service Handler name"/>
                              <a:a name="COLUMN_WIDTH" value="250"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the Callout function for the ECU Supplier specific service handler for this particular &lt;code&gt;DcmDsdSidTabServiceId&lt;/code&gt;.
                                         This parameter is related to the interface &lt;code&gt;&amp;#60;Module&amp;#62;_&amp;#60;DiagnosticService&amp;#62;&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;If an ECU Supplier specific service handler is needed for this &lt;code&gt;DcmDsdSidTabServiceId&lt;/code&gt;, enable this parameter
                                         and configure the name of the function to be called here. Otherwise, an internal service handler is used, if available.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Service Handler"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="4d777a11-7cec-453c-bfec-905b4e16732c"/>
                              <a:da name="DEFAULT" value="DcmDsdSidTabFnc"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(. != &apos;&apos;) and text:match(., &apos;^Dcm_[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                       false="Invalid name. (no prefixed C function name)"/>
                                <a:tst 
                                       expr="node:containsValue(text:split(&apos;Dcm_DspInternal_DiagnosticSessionControl_SvcH                                                                             Dcm_DspInternal_ECUReset_SvcH                                                                             Dcm_DspInternal_ClearDiagnosticInformation_SvcH                                                                             Dcm_DspInternal_ReadDTCInformation_SvcH                                                                             Dcm_DspInternal_ReadDataByIdentifier_SvcH                                                                             Dcm_Dsp_SecurityAccess_SvcH                                                                             Dcm_Dsp_CommunicationControl_SvcH                                                                             Dcm_DspInternal_DynamicallyDefineDataIdentifier_SvcH                                                                             Dcm_DspInternal_WriteDataByIdentifier_SvcH                                                                             Dcm_DspInternal_RoutineControl_SvcH                                                                             Dcm_DspInternal_RequestDownloadHandler_SvcH                                                                             Dcm_DspInternal_RequestUploadHandler_SvcH                                                                             Dcm_DspInternal_TransferDataHandler_SvcH                                                                             Dcm_DspInternal_RequestTransferExitHandler_SvcH                                                                             Dcm_Dsp_TesterPresent_SvcH                                                                             Dcm_DspInternal_ControlDTCSetting_SvcH                                                                             Dcm_Dsp_ResponseOnEvent_SvcH                                                                             Dcm_Dsp_LinkControl_SvcH                                                                             Dcm_DspInternal_RequestConfirmedDTC_SvcH                                                                             Dcm_DspInternal_ClearEmissionDiagInfo_SvcH                                                                             Dcm_DspInternal_RequestPendingDTC_SvcH                                                                             Dcm_DspInternal_RequestPermanentDTC_SvcH                                                                             Dcm_Dsp_RequestOnBoardMonitoringTestResults_SvcH                                                                             Dcm_DspInternal_RequestControlOfOnBoardSysTstComp_SvcH                                                                             Dcm_Dsp_ReadDataByPeriodicIdentifier_SvcH&apos;), .)" 
                                       true="This name can not be configured as a external service handler as it is reserved for internal service handler name"/>
                              </a:da>
                            </v:var>
                            <v:var 
                                   name="DcmDsdDisableGenericServiceImplementation" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;This parameter controls the availability of the Generic Service Handler, when the External Service Handler option has been enabled.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The associated Generic Service Handler for this service is not available.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The associated Generic Service Handler for this service is available.
                                                                It can be called inside the External Service Handler.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Disable Generic Service Handler"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="7b6b4d32-a25a-4ea1-858c-572ec865e694"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="EDITABLE" type="XPath" 
                                    expr="((node:exists(../DcmDsdSidTabFnc)) and (node:containsValue(text:split(&apos;0x1 0x2 0x3 0x4 0x6 0x7 0x8 0x9 0xa 0x10 0x11 0x14 0x19 0x22 0x23 0x27 0x28 0x2a 0x2c 0x2e 0x2f 0x31 0x34 0x35 0x36 0x37 0x3d 0x3e 0x85 0x86 0x87 0xaf&apos;), num:inttohex(../DcmDsdSidTabServiceId)) = &apos;true&apos;))"/>
                              <a:da name="ENABLE" value="true"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="((node:exists(../DcmDsdSidTabFnc)) and (node:containsValue(text:split(&apos;0x2 0x3 0x4 0x6 0x7 0xa 0x14 0x19 0x85 0xaf&apos;), num:inttohex(../DcmDsdSidTabServiceId)) = &apos;true&apos;) and (../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;) and (not(node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/./DcmDemClientRef))) )" 
                                       true="If Generic Service Implementation is active, then Dcm shall have a valid DcmDemClientRef configured."/>
                                <a:tst 
                                       expr="(not(node:exists(../DcmDsdSidTabFnc)) and (node:containsValue(text:split(&apos;0x2 0x3 0x4 0x6 0x7 0xa 0x14 0x19 0x85 0xaf&apos;), num:inttohex(../DcmDsdSidTabServiceId)) = &apos;true&apos;) and (not(node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/./DcmDemClientRef))) )" 
                                       true="If an External Service Handler (DcmDsdSidTabFnc) is not configured for this service, then the proccesing shall be handled by the Generic Service Implementation, thus Dcm shall have a valid DcmDemClientRef set."/>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDsdSidTabServiceId" type="INTEGER">
                              <a:a name="COLUMN_TITLE" 
                                   value="Service Identifier"/>
                              <a:a name="COLUMN_WIDTH" value="200"/>
                              <a:a name="DEFAULT_RADIX" value="HEX"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the identifier of this Diagnostic Service according to ISO 14229-1 and ISO 15031-5.&lt;/p&gt;

                                      &lt;p&gt;Please refer to AUTOSAR DCM SWS(Document Version 4.2.0) - Table 4 and Table 5 for identifiers
                                         supported by AUTOSAR.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0x00 .. 0xFF.&lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Service Identifier"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="0ef3200e-0b24-4bd0-b370-a5e4597eed0b"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath>
                                  <mt:tst 
                                          true="If UDS service 0x2A is configured, DcmDspMaxPeriodicDidScheduler, DcmDspPeriodicDidSamplingBufferSize and DcmDspPeriodicDidTransmissionRingEntries must be enabled and configured as well." 
                                          expr="((. = num:hextoint(&apos;0x2a&apos;))                                               and (                                                  (                                                    not(node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspPeriodicDidTransmission/DcmDspMaxPeriodicDidScheduler))                                                 or                                                    (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspPeriodicDidTransmission/DcmDspMaxPeriodicDidScheduler &lt; 1)                                                  )                                                or                                                  (                                                    not(node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspPeriodicDidTransmission/DcmDspPeriodicDidSamplingBufferSize))                                                 or                                                    (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspPeriodicDidTransmission/DcmDspPeriodicDidSamplingBufferSize &lt; 1)                                                  )                                                or                                                  (                                                    not(node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspPeriodicDidTransmission/DcmDspPeriodicDidTransmissionRingEntries))                                                 or                                                    (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspPeriodicDidTransmission/DcmDspPeriodicDidTransmissionRingEntries &lt; 1)                                                  )                                                 )                                                )"/>
                                  <mt:tst 
                                          true="UDS services 0x10, 0x28, 0x2A, and 0x86 are limited to synchronous operation. Configuring any of these as asynchronous is not supported." 
                                          expr="(((. = num:hextoint(&apos;0x10&apos;)) or (. = num:hextoint(&apos;0x28&apos;)) or (. = num:hextoint(&apos;0x2a&apos;)) or (. = num:hextoint(&apos;0x86&apos;))) and (../DcmAsyncServiceExecution = &apos;true&apos;))"/>
                                  <mt:tst false="Service Id should be unique." 
                                          expr="text:uniq(../../*/DcmDsdSidTabServiceId, .)"/>
                                  <mt:tst 
                                          true="This service is not internally supported in Dsp, an external service handler is required" 
                                          expr="not(node:containsValue(text:split(&apos;0x1 0x2 0x3 0x4 0x6 0x7 0x8 0x9 0xa 0x10 0x11 0x14 0x19 0x22 0x23 0x24 0x27 0x28 0x2a 0x2c 0x2e 0x2f 0x31 0x34 0x35 0x36 0x37 0x3d 0x3e 0x85 0x86 0x87 0xaf&apos;), num:inttohex(.))) and ((not(node:exists(../DcmDsdSidTabFnc))) or ((node:exists(../DcmDsdSidTabFnc)) and (../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))"/>
                                  <mt:tst 
                                          true="Feature OBD Services is not supported by your license" 
                                          expr="(((. = num:hextoint(&apos;0x01&apos;)) or                                                   (. = num:hextoint(&apos;0x02&apos;)) or                                                   (. = num:hextoint(&apos;0x03&apos;)) or                                                   (. = num:hextoint(&apos;0x06&apos;)) or                                                   (. = num:hextoint(&apos;0x04&apos;)) or                                                   (. = num:hextoint(&apos;0x07&apos;)) or                                                   (. = num:hextoint(&apos;0x08&apos;)) or                                                   (. = num:hextoint(&apos;0x09&apos;)) or                                                   (. = num:hextoint(&apos;0x0a&apos;))                                                  ) and                                                  ((not(node:exists(../DcmDsdSidTabFnc))) or                                                   (                                                    (node:exists(../DcmDsdSidTabFnc)) and                                                    (../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)                                                   )                                                  )                                                 ) and                                                 (not(lic:feature(&apos;DIAG_OBD&apos;) or                                                      lic:feature(&apos;EB_DIAG_OBD&apos;)                                                     )                                                 )"/>
                                  <mt:tst 
                                          true="Feature Read Generic Information Service is not supported by your license" 
                                          expr="(. = num:hextoint(&apos;0xaf&apos;)) and                                                 ((not(node:exists(../DcmDsdSidTabFnc))) or                                                  ((node:exists(../DcmDsdSidTabFnc)) and                                                   (../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)                                                  )                                                 ) and                                                 (not((lic:feature(&apos;DIAG_OBD&apos;) or                                                       lic:feature(&apos;EB_DIAG_OBD&apos;)                                                      ) and                                                      (lic:feature(&apos;DIAG_VCC&apos;) or                                                       lic:feature(&apos;EB_DIAG_FP1&apos;)                                                      )                                                     )                                                 )"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="WARNING" type="XPath" 
                                    expr="((. = num:hextoint(&apos;0x27&apos;) or                                                . = num:hextoint(&apos;0x28&apos;) or                                                . = num:hextoint(&apos;0x2A&apos;) or                                                . = num:hextoint(&apos;0x2F&apos;) or                                                . = num:hextoint(&apos;0x85&apos;)) and                                                (                                                 (count(../DcmDsdSidTabSessionLevelRef/*[node:refvalid(.)]) = 0) or                                                 (node:exists(../DcmDsdSidTabSessionLevelRef/*[node:refvalid(.)]) and node:refs(../DcmDsdSidTabSessionLevelRef/*)/DcmDspSessionLevel = 255) or                                                 (node:exists(../DcmDsdSidTabSessionLevelRef/*[node:refvalid(.)]) and node:refs(../DcmDsdSidTabSessionLevelRef/*)/DcmDspSessionLevel = 1)                                                ))" 
                                    true="According to ISO 14229-1 the configuration of services SecurityAccess(0x27), CommunicationControl(0x28), ControlDTCSetting(0x85), ReadDataByPeriodicIdentifier(0x2A) and InputOutputControlByIdentifier(0x2F) in default session is not allowed."/>
                            </v:var>
                            <v:var name="DcmDsdSidTabSubfuncAvail" 
                                   type="BOOLEAN">
                              <a:a name="COLUMN_TITLE" 
                                   value="Sub-Function Availability"/>
                              <a:a name="COLUMN_WIDTH" value="200"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines whether the service includes sub-functions or it does not.&lt;/p&gt;

                                      Please configure this parameter in order to specify, for a certain service, if it offers sub-function support.
                                      When sub-function support is available for a service, the most significant bit of the
                                      second byte of the request will be interpreted as the &lt;code&gt;suppressPosRspMsgIndicationBit&lt;/code&gt;.

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Sub-functions are available for this service&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Sub-functions are not available for this service&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Sub-Function Availability"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="cb50eb93-17cb-4a0c-b607-3b76c0b4e297"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="((. = &apos;true&apos;) and                                               ((../DcmDsdSidTabServiceId = num:hextoint(&apos;0x03&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x04&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x06&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x07&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x08&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x0a&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x14&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x22&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x23&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x24&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x2a&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x2e&apos;)) or                                                (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x2f&apos;))                                               )                                              )" 
                                       true="This service will not support a sub function"/>
                                <a:tst 
                                       expr="(. = &apos;false&apos;) and (../DcmDsdSidTabServiceId = num:hextoint(&apos;0x27&apos;)) and ((not(node:exists(../DcmDsdSidTabFnc))) or ((node:exists(../DcmDsdSidTabFnc)) and (../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                       true="The SecurityAccess (0x27) service shall always have all sub functions available, when EB-implemented (no custom service handler set)"/>
                              </a:da>
                            </v:var>
                            <v:ref name="DcmDsdSidTabModeRuleRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Reference to a &lt;code&gt;DcmDspModeRule&lt;/code&gt; which conditions the execution of this service handler.&lt;/p&gt;

                                      &lt;p&gt;If this parameter is enabled and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service execution is allowed to start.
                                         If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service processing is not
                                         allowed to proceed and depending on the referenced mode rule a Negative Response Code is returned to the Tester. If no &lt;code&gt;DcmDspModeRule&lt;/code&gt;
                                         is referenced, no Mode Rule permission check is performed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Reference to ModeRule"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                            </v:ref>
                            <v:lst name="DcmDsdSidTabSecurityLevelRef">
                              <a:a name="LABEL" 
                                   value="Security Level References"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="count(./*) &gt; 0 and ../DcmDsdSidTabServiceId = num:hextoint(&apos;0x27&apos;)" 
                                    true="Security levels shall not be configured for the SecurityAccess (0x27) handler."/>
                              <a:da name="WARNING" type="XPath" 
                                    expr="(count(./*) &gt; 0) and (((../DcmDsdSidTabServiceId) &gt; 0) and ((../DcmDsdSidTabServiceId) &lt; 16)) and ((not(node:exists(../DcmDsdSidTabFnc))) or ((node:exists(../DcmDsdSidTabFnc)) and (../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                    true="Security levels shall not be configured for any OBD service handler."/>
                              <v:ref name="DcmDsdSidTabSecurityLevelRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which the service shall be
                                           allowed to execute.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e. this
                                           service is allowed to run in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Security Level References"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                                <a:a name="UUID" 
                                     value="2b229bbd-e815-4670-83ae-3ac362504062"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="DcmDsdSidTabSessionLevelRef">
                              <a:a name="LABEL" value="Session References"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(count(*[(node:refvalid(.)) and (node:value(node:ref(.)/DcmDspSessionLevel) = 255)]) &gt; 0) and (count(*) &gt; 1)" 
                                       true="If the session &apos;ALL_SESSION_LEVEL&apos; is configured, no other session shall be configured."/>
                                <a:tst 
                                       expr="count(./*) &gt; 0 and ../DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;)" 
                                       true="Session levels shall not be configured for the DiagnosticSessionControl (0x10) handler."/>
                              </a:da>
                              <a:da name="WARNING" type="XPath" 
                                    expr="(count(./*) &gt; 0) and (((../DcmDsdSidTabServiceId) &gt; 0) and ((../DcmDsdSidTabServiceId) &lt; 16)) and ((not(node:exists(../DcmDsdSidTabFnc))) or ((node:exists(../DcmDsdSidTabFnc)) and (../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                    true="Session levels shall not be configured for any OBD service handler."/>
                              <v:ref name="DcmDsdSidTabSessionLevelRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSessionRow&lt;/code&gt;s defining the Diagnostic Sessions in which the service shall be
                                           allowed to execute.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Diagnostic Session is performed, i.e. this
                                           service is allowed to run in any Diagnostic Session.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Session References"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                                <a:a name="UUID" 
                                     value="b6a820cb-2f92-4468-9ae3-c8ba3148c7a0"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession/DcmDspSessionRow"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="DcmDsdSubService" type="MAP">
                              <a:a name="LABEL" value="SubService Configuration"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <v:ctr name="DcmDsdSubService" 
                                     type="IDENTIFIABLE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the sub-function configuration for this &lt;code&gt;DcmDsdService&lt;/code&gt;.&lt;/p&gt;

                                        &lt;p&gt;Use this container in order to configure sub-function support for the internal service handler
                                           for this service ID.&lt;/p&gt;

                                        &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;Sub-function availability (&lt;code&gt;DcmDsdSidTabSubfuncAvail&lt;/code&gt;): This container is enabled only if the &lt;code&gt;DcmDsdSidTabSubfuncAvail&lt;/code&gt; parameter for this service is set
                                                                                                                 to &lt;code&gt;TRUE&lt;/code&gt; and the parameter &lt;code&gt;DcmDsdSidTabFnc&lt;/code&gt; is not configured or parameter
                                                                                                                 &lt;code&gt;DcmDsdDisableGenericServiceImplementation&lt;/code&gt; is set to &lt;code&gt;FALSE&lt;/code&gt;,
                                                                                                                 i.e. the service handler implementation is internal (Generic Service Handling is enabled).&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="SubService Configuration"/>
                                <a:a name="UUID" 
                                     value="439d4ba6-65ab-47c9-b3f6-ccc732b1230f"/>
                                <a:da name="INVALID" type="XPath">
                                  <a:tst 
                                         expr="(not(node:exists(../../DcmDsdSidTabFnc))) or ((node:exists(../../DcmDsdSidTabFnc)) and (../../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))" 
                                         false="This container is available only if Generic Service Handling is enabled."/>
                                  <a:tst 
                                         expr="((not(node:exists(../../DcmDsdSidTabFnc))) or ((node:exists(../../DcmDsdSidTabFnc)) and (../../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))) and (../../DcmDsdSidTabSubfuncAvail = &apos;false&apos;) and not(../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x3e&apos;))" 
                                         true="This container is available only if parameter DcmDsdSidTabSubfuncAvail is set to true."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x11&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x19&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x27&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x28&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x2c&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x3e&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x85&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x86&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x87&apos;) or                                                ../../DcmDsdSidTabServiceId = num:hextoint(&apos;0xAF&apos;)" 
                                         false="Subservices can be configured only for service IDs &apos;0x10&apos;, &apos;0x11&apos;, &apos;0x19&apos;, &apos;0x27&apos;, &apos;0x28&apos;, &apos;0x2c&apos;, &apos;0x3e&apos;, &apos;0x85&apos;, &apos;0x86&apos;, &apos;0x87&apos; and &apos;0xAF&apos;, which are internally supported in Dsp."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;) and not(./DcmDsdSubServiceId &gt;= num:hextoint(&apos;0x01&apos;) and ./DcmDsdSubServiceId &lt;= num:hextoint(&apos;0x7E&apos;))" 
                                         true="This Diagnostic Session Level is outside the allowed range (0x01 - 0x04, 0x05 - 0x3F, 0x40-0x5F, 0x60 - 0x7E), therefore this subservice configuration is not supported."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;) and (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspSession/*/DcmDspSessionRow/*[DcmDspSessionLevel = node:current()/DcmDsdSubServiceId]) = 0)" 
                                         true="For each value of DcmDsdSubServiceId a session should be configured with the same value for DcmDspSessionLevel."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x11&apos;) and ((./DcmDsdSubServiceId != num:hextoint(&apos;0x01&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x02&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x03&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x04&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x05&apos;)) ) and not(node:exists(./DcmDsdSubServiceFnc))" 
                                         true="This subservice is not internally supported in Dsp for service ECUReset (0x11), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x19&apos;)                                               and ((./DcmDsdSubServiceId != num:hextoint(&apos;0x01&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x02&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x03&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x04&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x06&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x07&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x08&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x09&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x0a&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x0b&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x0c&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x0d&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x0e&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x13&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x14&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x15&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x19&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x18&apos;))                                               and (./DcmDsdSubServiceId != num:hextoint(&apos;0x17&apos;)))                                               and ((not(node:exists(./DcmDsdSubServiceFnc)))                                                or ((node:exists(./DcmDsdSubServiceFnc))                                                and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                         true="This subservice is not internally supported in Dsp for service ReadDTCInformation (0x19), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="(../../DcmDsdSidTabServiceId = num:hextoint(&apos;0xAF&apos;))                                                 and ((./DcmDsdSubServiceId != num:hextoint(&apos;0x04&apos;))                                                  and (./DcmDsdSubServiceId != num:hextoint(&apos;0x06&apos;)))                                                 and((not(node:exists(./DcmDsdSubServiceFnc)))                                                  or ((node:exists(./DcmDsdSubServiceFnc))                                                  and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                         true="This subservice is not internally supported in Dsp for service ReadGenericInfomration (0xAF), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="(../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x28&apos;)) and                                                ((./DcmDsdSubServiceId != num:hextoint(&apos;0x00&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x01&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x02&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x03&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x04&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x05&apos;))) and ((not(node:exists(./DcmDsdSubServiceFnc))) or ((node:exists(./DcmDsdSubServiceFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                         true="This subservice is not internally supported in Dsp for service CommunicationControl (0x28), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x2c&apos;) and ((./DcmDsdSubServiceId != num:hextoint(&apos;0x01&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x02&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x03&apos;))) and ((not(node:exists(./DcmDsdSubServiceFnc))) or ((node:exists(./DcmDsdSubServiceFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                         true="This subservice is not internally supported in Dsp for service DynamicallyDefineDataIdentifier (0x2c), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x85&apos;) and ((./DcmDsdSubServiceId != num:hextoint(&apos;0x01&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x02&apos;)) ) and ((not(node:exists(./DcmDsdSubServiceFnc))) or ((node:exists(./DcmDsdSubServiceFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                         true="This subservice is not internally supported in Dsp for service ControlDTCSetting (0x85), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="(../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x86&apos;))                                                and ((./DcmDsdSubServiceId != num:hextoint(&apos;0x05&apos;))                                                 and (./DcmDsdSubServiceId != num:hextoint(&apos;0x45&apos;))                                                 and (./DcmDsdSubServiceId != num:hextoint(&apos;0x00&apos;))                                                 and (./DcmDsdSubServiceId != num:hextoint(&apos;0x40&apos;))                                                 and (./DcmDsdSubServiceId != num:hextoint(&apos;0x01&apos;))                                                 and (./DcmDsdSubServiceId != num:hextoint(&apos;0x41&apos;))                                                 and (./DcmDsdSubServiceId != num:hextoint(&apos;0x04&apos;))                                                 and (./DcmDsdSubServiceId != num:hextoint(&apos;0x06&apos;))) and                                                ((not(node:exists(./DcmDsdSubServiceFnc))) or                                                 ((node:exists(./DcmDsdSubServiceFnc)) and                                                 (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                         true="This subservice is not internally supported in Dsp for service ResponseOnEvent (0x86), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x87&apos;) and ((./DcmDsdSubServiceId != num:hextoint(&apos;0x01&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x02&apos;)) and (./DcmDsdSubServiceId != num:hextoint(&apos;0x03&apos;))) and ((not(node:exists(./DcmDsdSubServiceFnc))) or ((node:exists(./DcmDsdSubServiceFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))" 
                                         true="This subservice is not internally supported in Dsp for service LinkControl (0x87), an external subservice handler is required."/>
                                  <a:tst 
                                         expr="((../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x3e&apos;)) and (DcmDsdSubServiceId != num:hextoint(&apos;0x00&apos;)) and ((not(node:exists(./DcmDsdSubServiceFnc))) or ((node:exists(./DcmDsdSubServiceFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))))" 
                                         true="This subservice is not internally supported in Dsp for service TesterPresent (0x3e), an external subservice handler is required."/>
                                </a:da>
                                <a:da name="TITLE" value="SubService"/>
                                <v:var name="DcmDsdSubServiceFnc" 
                                       type="FUNCTION-NAME">
                                  <a:a name="COLUMN_TITLE" 
                                       value="Sub Service Handler name"/>
                                  <a:a name="COLUMN_WIDTH" value="250"/>
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines a Callout function for the ECU Supplier specific sub-function handler for this particular &lt;code&gt;DcmDsdSubServiceId&lt;/code&gt;.
                                         This parameter is related to the interface &lt;code&gt;&amp;#60;Module&amp;#62;_&amp;#60;DiagnosticService&amp;#62;_&amp;#60;SubService&amp;#62;&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;If an ECU Supplier specific sub-function handler is needed for this &lt;code&gt;DcmDsdSubServiceId&lt;/code&gt;, enable this parameter
                                         and configure the name of the function to be used here. Otherwise, an internal sub-function handler is used, if available.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" value="Sub Service Handler"/>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:da name="DEFAULT" 
                                        value="DcmDsdSubServiceFnc"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="INVALID" type="XPath">
                                    <a:tst 
                                           expr="../../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;)" 
                                           true="External sub-service handlers cannot be configured for service DiagnosticSessionControl (0x10), as the sub-service identifier only represents a session identifier."/>
                                    <a:tst 
                                           expr="../../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x27&apos;)" 
                                           true="External sub-service handlers cannot be configured for service SecurityAccess (0x27)."/>
                                    <a:tst 
                                           expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                           false="Invalid name. (no prefixed C function name)"/>
                                  </a:da>
                                </v:var>
                                <v:var 
                                       name="DcmROEonDtcStatusChangeShortResponse" 
                                       type="BOOLEAN">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines whether the Subservice onDTCStatusChange of Service ResponseOnEvent responds with short format.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The Subservice responds shortly (only 4 bytes).&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The Subservice responds according to ISO-14229.&lt;/li&gt;
                                      &lt;/ul&gt;

                                    &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Enable short response of ResponseOnEvent SubService onDTCStatusChange"/>
                                  <a:a name="ORIGIN" 
                                       value="Elektrobit Automotive GmbH"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="7b6b4d32-a25a-4ea1-858c-572ec865e694"/>
                                  <a:da name="DEFAULT" value="false"/>
                                  <a:da name="ENABLE" type="XPath" 
                                        expr="((not(node:exists(../../../DcmDsdSidTabFnc))) or ((node:exists(../../../DcmDsdSidTabFnc)) and (../../../DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))) and (node:value(../../../DcmDsdSidTabServiceId) = num:hextoint(&apos;0x86&apos;)) and (not(node:exists(../DcmDsdSubServiceFnc))) and (node:value(../DcmDsdSubServiceId) = num:hextoint(&apos;0x01&apos;))"/>
                                </v:var>
                                <v:var name="DcmDsdSubServiceId" type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;Defines the identifier of this sub-function. This identifier is unique in the context of this sub-function&apos;s parent service.&lt;/p&gt;

                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="SubService Identifier"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="92b91510-f101-4ff3-948d-57b2e6b76364"/>
                                  <a:da name="DEFAULT" value="0"/>
                                  <a:da name="INVALID" type="Multi">
                                    <mt:range>
                                      <mt:tst expr="&lt;=255"/>
                                      <mt:tst expr="&gt;=0"/>
                                    </mt:range>
                                    <mt:xpath>
                                      <mt:tst 
                                              false="SubService Id should be unique." 
                                              expr="text:uniq(../../*/DcmDsdSubServiceId, .)"/>
                                      <mt:tst 
                                              true="The SubServiceIdentifiers of service SecurityAccess (0x27) need to be equal to DcmDspSecurityLevel * 2 for sendKey, respectively DcmDspSecurityLevel * 2 - 1 for requestSeed." 
                                              expr="../../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x27&apos;) and not(node:containsValue(node:foreach(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspSecurity/DcmDspSecurityRow/*/DcmDspSecurityLevel,&apos;sid&apos;, &apos;(($sid * 2) = .) or (($sid * 2 - 1) = .)&apos;), &apos;true&apos;))"/>
                                    </mt:xpath>
                                  </a:da>
                                </v:var>
                                <v:ref name="DcmDsdSubServiceModeRuleRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                      &lt;p&gt;Reference to DcmDspModeRule Mode rule which controls
                                         execution of this the DcmDsdSubService. If there is no
                                         reference, no check of the mode rule shall be done. &lt;/p&gt;
                                    &lt;/html&gt;
                                    &lt;html&gt;
                                       &lt;p&gt;Reference to a &lt;code&gt;DcmDspModeRule&lt;/code&gt; which conditions the execution of this sub-function.&lt;/p&gt;

                                       &lt;p&gt;If this parameter is enabled and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service execution is allowed to start.
                                          If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service processing is not
                                          allowed to proceed and depending on the referenced mode rule a Negative Response Code is returned to the Tester. If no &lt;code&gt;DcmDspModeRule&lt;/code&gt;
                                          is referenced, no Mode Rule permission check is performed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to ModeRule"/>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                                </v:ref>
                                <v:lst name="DcmDsdSubServiceSecurityLevelRef">
                                  <a:a name="LABEL" value="Security Levels"/>
                                  <a:a name="ROWS" value="4"/>
                                  <a:a name="TAB" value="GENERAL"/>
                                  <a:da name="INVALID" type="XPath">
                                    <a:tst 
                                           expr="(count(../../../DcmDsdSidTabSecurityLevelRef/*)&gt;0) and (count(*)&gt; 0) and                                                   node:containsValue(node:foreach(node:refs(./*[node:refvalid(.)])/DcmDspSecurityLevel,&apos;sid&apos;, &apos;count(node:refs(../../../DcmDsdSidTabSecurityLevelRef/*[node:refvalid(.)])[DcmDspSecurityLevel = $sid]) = 0 &apos;), &apos;true&apos;)" 
                                           true="Subservice security level shall be configured from the list of configured parent service security levels only."/>
                                    <a:tst 
                                           expr="../../../DcmDsdSidTabServiceId = num:hextoint(&apos;0x27&apos;) and (count(*)&gt; 0)" 
                                           true="Subservice security level cannot be configured for service SecurityAccess (0x27)."/>
                                  </a:da>
                                  <v:ref 
                                         name="DcmDsdSubServiceSecurityLevelRef" 
                                         type="REFERENCE">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                            &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which the sub-function shall be
                                               allowed to execute.&lt;/p&gt;

                                            &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e. this
                                            sub-function is allowed to run in any Security Level.&lt;/p&gt;

                                            &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                            &lt;ul&gt;
                                              &lt;li&gt;Parent service&apos;s Security Level references (&lt;code&gt;DcmDsdSidTabSecurityLevelRef&lt;/code&gt;): Security Level references configured here must be a subset of the Security Level Reference
                                                                                                                                          configured for the parent service in &lt;code&gt;DcmDsdSidTabSecurityLevelRef&lt;/code&gt;.&lt;/li&gt;
                                            &lt;/ul&gt;
                                          &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" 
                                         value="Reference to Security Levels"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="UUID" 
                                         value="0171b8fb-abdc-4f29-8e62-47a29ae2b57b"/>
                                    <a:da name="INVALID" type="XPath" 
                                          expr="node:refvalid(.)" 
                                          false="Invalid reference."/>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                                  </v:ref>
                                </v:lst>
                                <v:lst name="DcmDsdSubServiceSessionLevelRef">
                                  <a:a name="LABEL" value="Session Levels"/>
                                  <a:a name="ROWS" value="4"/>
                                  <a:a name="TAB" value="GENERAL"/>
                                  <a:da name="INVALID" type="XPath">
                                    <a:tst 
                                           expr="(count(*[(node:refvalid(.)) and (node:value(node:ref(.)/DcmDspSessionLevel) = 255)]) &gt; 0) and (count(*) &gt; 1)" 
                                           true="If the session &apos;ALL_SESSION_LEVEL&apos; is configured, no other session shall be configured."/>
                                    <a:tst 
                                           expr="(count(../../../DcmDsdSidTabSessionLevelRef/*)&gt;0) and                                                   (count(../../../DcmDsdSidTabSessionLevelRef/*[(node:refvalid(.)) and node:value(node:ref(.)/DcmDspSessionLevel)!= 255])&gt; 0) and                                                   (count(*)&gt; 0) and node:containsValue(node:foreach(node:refs(./*)/DcmDspSessionLevel,&apos;sid&apos;, &apos;count(node:refs(../../../DcmDsdSidTabSessionLevelRef/*)[DcmDspSessionLevel = $sid]) = 0 &apos;), &apos;true&apos;)" 
                                           true="Subservice session shall be configured from the list of configured parent service sessions only."/>
                                  </a:da>
                                  <v:ref name="DcmDsdSubServiceSessionLevelRef" 
                                         type="REFERENCE">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                            &lt;p&gt;Reference to the &lt;code&gt;DcmDspSessionRow&lt;/code&gt;s defining the Diagnostic Sessions in which the sub-function shall be
                                               allowed to execute.&lt;/p&gt;

                                            &lt;p&gt;Note: If there is no reference configured, no check of Diagnostic Session is performed, i.e. this
                                            sub-function is allowed to run in any Diagnostic Session.&lt;/p&gt;

                                            &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                            &lt;ul&gt;
                                              &lt;li&gt;Parent service&apos;s Diagnostic Session references (&lt;code&gt;DcmDsdSidTabSessionLevelRef&lt;/code&gt;): Diagnostic Session references configured here must be a subset of the Diagnostic Session references
                                                                                                                                             configured for the parent service in &lt;code&gt;DcmDsdSidTabSessionLevelRef&lt;/code&gt;.&lt;/li&gt;
                                            &lt;/ul&gt;
                                          &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" 
                                         value="Reference to Session Levels"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="UUID" 
                                         value="2699da1e-02a1-499a-9f6a-980e204eb6b9"/>
                                    <a:da name="INVALID" type="XPath" 
                                          expr="node:refvalid(.)" 
                                          false="Invalid reference."/>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession/DcmDspSessionRow"/>
                                  </v:ref>
                                </v:lst>
                              </v:ctr>
                            </v:lst>
                          </v:ctr>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                  <v:ctr name="DcmDsl" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the configuration for the Diagnostic Session Layer(DSL) submodule of the &lt;code&gt;Dcm&lt;/code&gt;.

                            &lt;P&gt;Parameters in this container define the configuration for:&lt;/p&gt;

                            &lt;ul&gt;
                              &lt;li&gt;Protocols and protocol configuration including:
                                &lt;ul&gt;
                                  &lt;li&gt;Protocol priority&lt;/li&gt;
                                  &lt;li&gt;Protocol preemption&lt;/li&gt;
                                  &lt;li&gt;Timing&lt;/li&gt;
                                  &lt;li&gt;Reception Channels, request types (Physical and Functional), Network Identifiers and &lt;code&gt;RxPduId&lt;/code&gt; configuration&lt;/li&gt;
                                  &lt;li&gt;Connections, &lt;code&gt;TesterSourceAddress&lt;/code&gt;es  &lt;code&gt;TxConfirmationPduId&lt;/code&gt; and &lt;code&gt;TxPduId&lt;/code&gt; configuration&lt;/li&gt;
                                &lt;/ul&gt;&lt;/li&gt;
                              &lt;li&gt;Reception and transmission buffers&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;ServiceRequestNotification&lt;/code&gt; interface port naming&lt;/li&gt;
                            &lt;/ul&gt;

                            &lt;p&gt;Note: There shall be exactly one DSL configuration for DCM.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Diagnostic Session Layer"/>
                    <a:a name="TAB" value="Diagnostic Session Layer"/>
                    <a:a name="UUID" 
                         value="9e788bd5-dd17-4502-a651-212dc7801267"/>
                    <v:var name="DcmDslEnableS3TimeoutNotification" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Allows the user to enable a callout to be notified when S3 timeout occurs. &lt;/p&gt;
                              &lt;p&gt;Signature of the notification callout: &lt;code&gt;void Dcm_S3TimeoutNotification (void)&lt;/code&gt;.&lt;/p&gt;
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;TRUE: Application is notified about S3 Timeouts.&lt;/li&gt;
                                &lt;li&gt;FALSE: Application is not notified about S3 Timeouts.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable notification callout on S3 Timeouts"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="b72a4b99-c047-4825-a272-deb84e3f5ee9"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:var name="DcmDslEnableTxConfirmationNotification" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;This switch enables or disables the notification of transmission confirmation.&lt;/p&gt;
                              &lt;p&gt;The signature of the notification callout is defined as follows:&lt;/p&gt;
                              &lt;p&gt;void Dcm_ApplicationTransmissionConfirmation(Dcm_ServiceIDType ServiceID,Dcm_MsgContextPtrType MsgContext,Dcm_ResponseConfirmationTypeType ResponseConfirmationType,boolean ResponseSuppressed,boolean TransmissionSuccessful)&lt;/p&gt;
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables the notification of transmission confirmation.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables the notification of transmission confirmation.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable notification of transmission confirmation."/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="4c935eeb-4774-44e7-920d-d8d05c3bb75f"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:lst name="DcmDslBuffer" type="MAP">
                      <a:a name="COLUMNS">
                        <a:v>DcmDslBufferID</a:v>
                        <a:v>DcmDslBufferSize</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Diagnostic Buffers"/>
                      <a:a name="ROWS" value="6"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MAX" value="256"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="DcmDslBuffer" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the parameters for configuring Transmission and Reception
                                   Buffers which can further be referenced from:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;The &lt;code&gt;DcmDslProtocolTxBufferID&lt;/code&gt; Transmission buffer reference of any &lt;code&gt;DcmDslProtocol&lt;/code&gt;.&lt;/li&gt;
                                  &lt;li&gt;The &lt;code&gt;DcmDslProtocolRxBufferID&lt;/code&gt; Reception buffer reference of any &lt;code&gt;DcmDslProtocolRx&lt;/code&gt; channel of a &lt;code&gt;DcmDslMainConnection&lt;/code&gt;
                                      belonging to a &lt;code&gt;DcmDslProtocol&lt;/code&gt;.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="NAME_PATTERN" value="DcmBuffer_?"/>
                        <a:a name="UUID" 
                             value="483cffaa-7f03-464a-a37a-c9bb35b11b10"/>
                        <a:da name="TITLE" 
                              value="Diagnostic Buffer Configuration"/>
                        <a:da name="WARNING" type="XPath" 
                              expr="((count(../../../DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*[(node:refvalid(DcmDslProtocolTxBufferID)) and name(node:refs(DcmDslProtocolTxBufferID)) = name(node:current())]) = 0) and                                           (count(../../../DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolRx/*[(node:refvalid(DcmDslProtocolRxBufferID)) and name(node:refs(DcmDslProtocolRxBufferID)) = name(node:current())]) = 0))" 
                              true="This buffer is not referenced in any protocol and causes increase in memory usage"/>
                        <v:var name="DcmDslBufferSize" type="INTEGER">
                          <a:a name="COLUMN_TITLE" value="Buffer Size"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the size of the Buffer.&lt;/p&gt;

                                  &lt;p&gt;Note 1: If the Buffer is referenced as a Reception Buffer, the size must be configured large enough to fit the largest expected diagnostic
                                    service request message &lt;/p&gt;

                                  &lt;p&gt;Note 2: If the Buffer is referenced as a Transmission Buffer and Paged Buffer Transmission is not to be used by services of the protocol using
                                     this Buffer, the size must be configured large enough to fit the largest expected diagnostic service response&lt;/p&gt;

                                  &lt;p&gt;Note 3: If the Buffer is referenced as a Transmission Buffer and Paged Buffer Transmission is to be used by services of the protocol using
                                     this Buffer, the size must be configured large enough to fit the largest expected Page of data (subdivision of the diagnostic service response
                                     provided by the Application or another Basic Software Module).&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;8 .. 4294967294 Bytes.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Buffer Size"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="002027c2-36e8-4751-a787-8a71cd50584c"/>
                          <a:da name="DEFAULT" value="8"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4294967294"/>
                            <a:tst expr="&gt;=8"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmDslCallbackDCMRequestService" type="MAP">
                      <a:a name="LABEL" value="CallBack Requests"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="INVALID" type="XPath" expr="count(*) &gt; 255 " 
                            true="Number of entries from DcmDslCallbackDCMRequestService table cannot exceed the limit 255."/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="0"/>
                      <v:ctr name="DcmDslCallbackDCMRequestService" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;Defines the names of the Require Ports the &lt;code&gt;Dcm&lt;/code&gt; generates
                                   for the interface &lt;code&gt;CallBackDCMRequestServices&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;The &lt;code&gt;CallBackDCMRequestServices&lt;/code&gt; interface allows the &lt;code&gt;Dcm&lt;/code&gt;
                                   to ask about prioritization of Diagnostic Protocols to the Application.
                                   The Application can further disallow to start a Diagnostic Protocol.&lt;/p&gt;

                                &lt;p&gt;The names of the containers in this list are used to define the name of the
                                   Require Ports generated to access the &lt;code&gt;CallBackDCMRequestServices&lt;/code&gt;
                                   interface. The ports are named &lt;code&gt;CallBackDCMRequestServices_&amp;#60;SWC&amp;#62;&lt;/code&gt;
                                   where &lt;code&gt;&amp;#60;SWC&amp;#62;&lt;/code&gt; is the name of the container
                                   &lt;code&gt;DcmDslCallbackDCMRequestService&lt;/code&gt;.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="160c8908-7b0b-47e1-9da9-b317b802c514"/>
                        <a:da name="TITLE" 
                              value="CallBack Request Configuration"/>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="DcmDslApplicationDiagnosticRequests" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Diagnostic requests coming from the Application are supported. The Application may generate a diagnostic service request
                                 on one of the Dcm&apos;s configured ReceptionPDUIDs by calling the interface:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;BufReq_ReturnType Dcm_InjectDiagnosticRequest(PduIdType RxPduID,
                                                      const uint8 * RequestData
                                                      PduLengthType RequestLength  )&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;ul&gt;
                                &lt;li&gt;RxPduID : RxPduId on which the injected request is to be executed&lt;/li&gt;
                                &lt;li&gt;*RequestData: Pointer containing the injected request data&lt;/li&gt;
                                &lt;li&gt;RequestLength: Lenght of the injected request&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Application Request Injector configuration"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="44936b94-b060-4cad-a02e-d57d4ac8ebf7"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="TITLE" 
                            value="Application Request Injector configuration"/>
                      <v:var 
                             name="DcmDslApplicationDiagnosticRequestBufferSize" 
                             type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Size of buffer used for Application-generated requests.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Size of buffer used for Application-generated requests"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="72d3408d-0164-44e9-a5fa-9964825c413a"/>
                        <a:da name="DEFAULT" value="1"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=4294967294"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                    <v:ctr name="DcmDslDiagResp" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Configures the handling of:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;The &lt;code&gt;RequestCorrectlyReceivedResponsePending&lt;/code&gt; Negative Response Code&lt;/li&gt;
                                &lt;li&gt;Requests which cannot be processed and are rejected by the DSL&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="ResponsePending configuration"/>
                      <a:a name="UUID" 
                           value="500c2df9-be40-4e42-9c33-0a2b3d78e19a"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="TITLE" value="ResponsePending configuration"/>
                      <v:var name="DcmDslDiagRespMaxNumRespPend" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Configures the maximum number of consecutive &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt;
                                Negative Response Codes (NRCs) allowed for one diagnostic request.&lt;/p&gt;

                                &lt;p&gt;The &lt;code&gt;Dcm&lt;/code&gt; shall send a &lt;code&gt;GeneralReject&lt;/code&gt; (0x10) NRC when the number of
                                &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt; NRCs sent in the context of the current
                                request processing has reached the limit defined by this parameter and if this parameter
                                (&lt;code&gt;DcmDslDiagRespMaxNumRespPend&lt;/code&gt;) is configured to less than the value interpreted as
                                an infinite number of &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt; (NRCs).

                                The value interpreted as infinity is given by the configuration parameter
                                &lt;code&gt;DcmDslDiagRespMaxNumRespPendInfinityLimit&lt;/code&gt;:
                                &lt;ul&gt;
                                  &lt;li&gt;255 is interpreted as infinity if the configuration parameter
                                    &lt;code&gt;DcmDslDiagRespMaxNumRespPendInfinityLimit&lt;/code&gt; is set to &quot;255&quot;.&lt;/li&gt;
                                  &lt;li&gt;65535 is interpreted as infinity if the configuration parameter
                                    &lt;code&gt;DcmDslDiagRespMaxNumRespPendInfinityLimit&lt;/code&gt; is set to &quot;65535&quot;.&lt;/li&gt;
                                &lt;/ul&gt;&lt;/p&gt;
                                &lt;p&gt;If this parameter (&lt;code&gt;DcmDslDiagRespMaxNumRespPend&lt;/code&gt;) is configured to infinity limit (255 or 65535),
                                there is no limit imposed on the maximum number of consecutive &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt;
                                NRCs allowed.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Maximum number of ResponsePending messages"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="f83d15d2-7081-42bc-a954-5cd7213bed9d"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65535"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                          <mt:xpath 
                                    true="Value cannot exceed the infinity limit (255 or 65535) set by config param DcmDslDiagRespMaxNumRespPendInfinityLimit" 
                                    expr="node:value(.) &gt; num:integer(../DcmDslDiagRespMaxNumRespPendInfinityLimit)"/>
                        </a:da>
                        <a:da name="TOOLTIP" type="XPath" 
                              expr="node:value(.) = num:integer(../DcmDslDiagRespMaxNumRespPendInfinityLimit)" 
                              true="Value implies no limit on number of NRC 0x78 transmission"/>
                      </v:var>
                      <v:var name="DcmDslDiagRespMaxNumRespPendInfinityLimit" 
                             type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the value interpreted as infinite for the configuration parameters &lt;code&gt;DcmDspDiagSesRespMaxNumRespPend&lt;/code&gt; and &lt;code&gt;DcmDslDiagRespMaxNumRespPend&lt;/code&gt;:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;255&lt;/code&gt; - The range of possible values for the configuration parameters &lt;code&gt;DcmDspDiagSesRespMaxNumRespPend&lt;/code&gt; (if enabled) and
                                                       &lt;code&gt;DcmDslDiagRespMaxNumRespPend&lt;/code&gt; is &lt;code&gt;0 - 255&lt;/code&gt; (inclusive) where the value &lt;code&gt;255&lt;/code&gt; shall be
                                                       used for transmitting an infinite number of &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt; NRCs (0x78).&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;65535&lt;/code&gt; - The range of possible values for the configuration parameters &lt;code&gt;DcmDspDiagSesRespMaxNumRespPend&lt;/code&gt; (if enabled) and
                                                         &lt;code&gt;DcmDslDiagRespMaxNumRespPend&lt;/code&gt; is &lt;code&gt;0 - 65535&lt;/code&gt; (inclusive) where the value &lt;code&gt;65535&lt;/code&gt; shall be
                                                         used for transmitting an infinite number of &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt; NRCs (0x78).&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Infinity limit for RequestCorrectlyReceived-ResponsePending NRC"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="424dd6c0-8970-4133-af05-e07414c3e099"/>
                        <a:da name="DEFAULT" value="255"/>
                        <a:da name="RANGE">
                          <a:v>255</a:v>
                          <a:v>65535</a:v>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDslDiagRespOnSecondDeclinedRequest" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt; Defines the reaction upon a second request (e.g. from another client) that cannot
                                be processed (e.g. due to priority assessment or lack of a free transmission buffer).&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;TRUE: when the second request cannot be processed, the Dcm shall respond to this request
                                            with a  &lt;code&gt;BusyRepeatRequest&lt;/code&gt; (0x21) Negative Response Code.&lt;/li&gt;
                                  &lt;li&gt;FALSE: when the second request cannot be processed, no response shall be given.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Reaction upon a second request"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="EDITABLE" value="true"/>
                      </v:var>
                    </v:ctr>
                    <v:ctr name="DcmDslProtocol" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration of the Diagnostic Protocols.&lt;/p&gt;

                              &lt;p&gt;Configuration for a Diagnostic Protocol contains:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Configuration for the service table used&lt;/li&gt;
                                &lt;li&gt;Timing configuration defining timeouts and actions to be taken at timeout&lt;/li&gt;
                                &lt;li&gt;Buffer usage&lt;/li&gt;
                                &lt;li&gt;Communication channels including &lt;code&gt;TxPduId&lt;/code&gt; and &lt;code&gt;TxConfirmationPduId&lt;/code&gt; configuration&lt;/li&gt;
                                &lt;li&gt;Reception Connections for communication channels, including &lt;code&gt;RxPduId&lt;/code&gt;, buffer and communication type settings&lt;/li&gt;
                                &lt;li&gt;Protocol Preemption and Protocol Priority settings&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;Note: at least one protocol must be configured.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Protocol Configuration"/>
                      <a:a name="UUID" 
                           value="c1e26d68-46d3-4bd8-a13c-eaa83f870f4f"/>
                      <a:da name="TITLE" value="Protocol Configuration"/>
                      <v:lst name="DcmDslProtocolRow" type="MAP">
                        <a:a name="COLUMNS">
                          <a:v>DcmDslProtocolID</a:v>
                          <a:v>DcmDslProtocolPriority</a:v>
                          <a:v>DcmDslProtocolTxBufferID</a:v>
                          <a:v>DcmDslProtocolRxBufferID</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Protocol Rows"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="MAX" value="256"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="DcmDslProtocolRow" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the configuration parameters belonging to different configured protocols.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="232b78ca-1f67-4de4-aee1-999d3d1f4b18"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(node:refvalid(DcmDslProtocolSIDTable)) and (as:ref(DcmDslProtocolSIDTable)/DcmDsdService/*/DcmDsdSidTabServiceId = 25 ) and                                            (as:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[DcmDsdSidTabServiceId = 25]/DcmDsdSubService/*/DcmDsdSubServiceId = num:hextoint(&apos;0x09&apos;)) and(as:ref(DcmDslProtocolTxBufferID)/DcmDslBufferSize &lt; 9 )" 
                                   true="The transmit buffer is not sufficient to hold the response data for the configured service 0x19 with sub-service 0x09. Minimum size is 9 bytes. "/>
                            <a:tst 
                                   expr="(node:exists(node:ref(./DcmDslProtocolSIDTable)/DcmDsdService/*[DcmAsyncServiceExecution = &apos;true&apos;])) and (node:exists(node:refs(../*[DcmDslProtocolStackNumber != node:value(node:current()/DcmDslProtocolStackNumber)]/DcmDslProtocolSIDTable)/DcmDsdService/*[DcmAsyncServiceExecution = &apos;true&apos;]))" 
                                   true="Protocols of more than one StackNumber shall not reference ServiceTables containing Services which have asynchronous service processing enabled."/>
                            <a:tst 
                                   expr="node:exists(../*[DcmDslProtocolStackNumber != node:value(node:current()/DcmDslProtocolStackNumber)]) and                                            not(starts-with(DcmDslProtocolID, &apos;DCM_OBD_ON_&apos;)) and node:exists(../*[DcmDslProtocolStackNumber = node:value(node:current()/DcmDslProtocolStackNumber) and starts-with(DcmDslProtocolID, &apos;DCM_OBD_ON_&apos;)])" 
                                   true="More than one protocol stack is configured. All DcmDslProtocols belonging to a single DcmDslProtocolStack must have the same type, i.e. must have the DcmDslProtocolType parameter set to either DCM_OBD_Protocol type or DCM_UDS_Protocol type."/>
                            <a:tst 
                                   expr="node:exists(as:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[DcmDsdSidTabServiceId = num:hextoint(&apos;0x31&apos;)]) and                                            node:exists(DcmDslConnection/*[@name=&apos;DcmDslMainConnection&apos;]/DcmDslProtocolRx/*[DcmDslProtocolRxBufferID]) and                                            node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[(node:name(.) = &apos;DcmDspRoutineStopIn&apos;) or (node:name(.) = &apos;DcmDspStartRoutineIn&apos;) or (node:name(.) = &apos;DcmDspRoutineRequestResIn&apos;)]/*/*/*) and                                            (   (num:max(num:i(                                                     num:div(num:add (7,                                                                     (num:add(                                                                         (num:add(32,                                                                                 (num:add(                                                                                     as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[(node:name(.) = &apos;DcmDspStartRoutineIn&apos;) or (node:name(.) = &apos;DcmDspRoutineStopIn&apos;) or (node:name(.) = &apos;DcmDspRoutineRequestResIn&apos;)]/*/*/DcmDspRoutineSignalPos [node:value(../DcmDspRoutineSignalType) =&apos;VARIABLE_LENGTH&apos; ],                                                                                     as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[(node:name(.) = &apos;DcmDspStartRoutineIn&apos;) or (node:name(.) = &apos;DcmDspRoutineStopIn&apos;) or (node:name(.) = &apos;DcmDspRoutineRequestResIn&apos;)]/*/*/DcmDspRoutineSignalLength [node:value(../DcmDspRoutineSignalType) =&apos;VARIABLE_LENGTH&apos; ])                                                                                 ))                                                                         ),                                                                         (num:mul(                                                                             (num:i(num:div(num:add(num:mod((as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[(node:name(.) = &apos;DcmDspStartRoutineIn&apos;) or (node:name(.) = &apos;DcmDspRoutineStopIn&apos;) or (node:name(.) = &apos;DcmDspRoutineRequestResIn&apos;)]/*/*/DcmDspRoutineSignalPos [node:value(../DcmDspRoutineSignalType) =&apos;VARIABLE_LENGTH&apos; ]), 8), 7), 8))),                                                                             (num:sub(8 ,                                                                                 (num:mod((as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[(node:name(.) = &apos;DcmDspStartRoutineIn&apos;) or (node:name(.) = &apos;DcmDspRoutineStopIn&apos;) or (node:name(.) = &apos;DcmDspRoutineRequestResIn&apos;)]/*/*/DcmDspRoutineSignalPos [node:value(../DcmDspRoutineSignalType) =&apos;VARIABLE_LENGTH&apos; ]), 8)) )                                                                             )   )                                                                         ))                                                                     )),                                                                     8)                                                                 )                                                         )                                                 ) &gt; (node:refs(DcmDslConnection/*[@name=&apos;DcmDslMainConnection&apos;]/DcmDslProtocolRx/*[node:refvalid(./DcmDslProtocolRxBufferID)]/DcmDslProtocolRxBufferID)/DcmDslBufferSize + 1)                                             )" 
                                   true="The sum of the DcmDspRoutineSignalPos and the DsmDspRoutineSignalLength when aligned to the next byte boundary shall be less than the buffer size used for the reception channel of the RoutineControl service configured."/>
                          </a:da>
                          <a:da name="TITLE" value="Protocol Configuration"/>
                          <a:da name="WARNING" type="XPath">
                            <a:tst 
                                   expr="((../../../../DcmGeneral/DcmDataTransferServicesASRVersion = &apos;AUTOSAR_43&apos;) and                                             (count(as:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[DcmDsdSidTabServiceId = num:hextoint(&apos;0x37&apos;)]) &gt; 0) and                                             (count(DcmDslConnection/*[@name=&apos;DcmDslMainConnection&apos;]/DcmDslProtocolRx/*[DcmDslProtocolRxBufferID = ../../../../DcmDslProtocolTxBufferID]) &gt; 0))" 
                                   true="If DcmDataTransferServicesASRVersion is set to AUTOSAR_43, a protocol which references a DcmDslProtocolSIDTable table containing the RequestTransferExit (0x37) service should not contain any RxConnection which references the same DcmDslProtocolRxBufferID buffer as the DcmDslProtocolTxBufferID buffer of the protocol. See Limitations documentation."/>
                            <a:tst 
                                   expr="((DcmDslProtocolEndiannessConvEnabled = &apos;true&apos;) and                                             (count(../../../../DcmDsp/DcmDspData/*[(DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER&apos;) or (DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER_AS_SERVICE&apos;)]) &gt; 0))" 
                                   true="The endianness conversion behavior enabled by the parameter DcmDslProtocolEndiannessConvEnabled does not apply to any DcmDspData with sender/receiver access. DcmDspDatas with sender/receiver access have an endianness interpretation according to AUTOSAR 4.3 (see DcmDspDataDefaultEndianness and DcmDspDataEndianness)"/>
                            <a:tst 
                                   expr="(node:exists(../*[DcmDslProtocolStackNumber != node:value(node:current()/DcmDslProtocolStackNumber)]) and                                             ( ( (not(starts-with(DcmDslProtocolID, &apos;DCM_OBD_ON_&apos;)) ) and (as:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[num:hextoint(&apos;0x10&apos;) &gt; DcmDsdSidTabServiceId])  ) or                                               ((starts-with(DcmDslProtocolID, &apos;DCM_OBD_ON_&apos;) and (as:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[DcmDsdSidTabServiceId &gt; num:hextoint(&apos;0x0F&apos;)]) ) ) )  ) " 
                                   true="More than one protocol stack is configured. DcmDslProtocols which belong to different protocol groups (UDS/OBD) should not be allowed to process same services, i.e DcmDslProtocols with DcmDslProtocolType parameter set to UDS protocol type should reference service tables containing UDS services only and DcmDslProtocols with DcmDslProtocolType set to OBD protocol type should reference service tables containing OBD services only"/>
                          </a:da>
                          <v:var name="DcmDslProtocolEndiannessConvEnabled" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Enables the endianness conversion, per Diagnostic Protocol.&lt;/p&gt;

                                    &lt;p&gt;If enabled, for signals of fixed length which are received or transmitted when using the following services:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;RoutineControl&lt;/code&gt; (0x31)&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;ReadDataByIdentifier&lt;/code&gt; (0x22)&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;WriteDataByIdentifier&lt;/code&gt; (0x2E)&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;InputOutputControlByIdentifier&lt;/code&gt; (0x2F)&lt;/li&gt;
                                      &lt;li&gt;OBD Service $01&lt;/li&gt;
                                    &lt;/ul&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;TRUE: Enable endianness conversion for this Diagnostic Protocol.&lt;/li&gt;
                                  &lt;li&gt;FALSE: Disable endianness conversion for this Diagnostic Protocol.&lt;/li&gt;
                                &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Enable endianness conversion"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="bffa47ee-5587-4d77-b2de-7c4df4f9a910"/>
                            <a:da name="DEFAULT" value="true"/>
                          </v:var>
                          <v:var name="DcmDslObdNRCResponseSupression" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Enable/Disable prompting the &quot;Service Not Supported&quot; NRC when OBD services are requested but not enabled.
                                  &lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enable &quot;Service Not Supported&quot; NRC Supression: No response will be sent when OBD services are requested but are not configured.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disable &quot;Service Not Supported&quot; NRC Supression: The NRC &quot;Service Not Supported&quot; will be sent when OBD services are requested but are not configured.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="ECUC:e2f9603a-a03b-484d-b897-a66921cc5bde"/>
                            <a:da name="DEFAULT" value="true"/>
                            <a:da name="EDITABLE" value="true"/>
                          </v:var>
                          <v:var name="DcmDslProtocolID" type="ENUMERATION">
                            <a:a name="COLUMN_TITLE" value="Protocol ID"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the type of the Diagnostic Protocol being configured.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_OBD_ON_CAN&lt;/code&gt;: OBD on CAN&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_OBD_ON_FLEXRAY&lt;/code&gt;: OBD on Flexray&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_OBD_ON_IP&lt;/code&gt;: OBD on IP&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_UDS_ON_CAN&lt;/code&gt;: UDS on CAN&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_UDS_ON_FLEXRAY&lt;/code&gt;: UDS on FlexRay&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_UDS_ON_IP&lt;/code&gt;: UDS on IP&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_PERIODIC_ON_CAN&lt;/code&gt;: Periodic DID transmission on CAN&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_PERIODIC_ON_FLEXRAY&lt;/code&gt;: Periodic DID transmission on Flexray&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_PERIODICTRANS_ON_IP&lt;/code&gt;: Periodic DID transmission on IP&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_ON_CAN&lt;/code&gt;: Event-triggered response on CAN&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_ON_FLEXRAY&lt;/code&gt;: Event-triggered response on Flexray&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_ON_IP&lt;/code&gt;: Event-triggered response on IP&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_1&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_2&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_3&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_4&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_5&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_6&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_7&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_8&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_9&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_10&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_11&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_12&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_13&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_14&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_SUPPLIER_15&lt;/code&gt;: Reserved for SW supplier specific&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Protocol ID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="f32addf4-2153-4008-9021-6ed0ebd9e956"/>
                            <a:da name="RANGE">
                              <a:v>DCM_OBD_ON_CAN</a:v>
                              <a:v>DCM_OBD_ON_FLEXRAY</a:v>
                              <a:v>DCM_OBD_ON_IP</a:v>
                              <a:v>DCM_UDS_ON_CAN</a:v>
                              <a:v>DCM_UDS_ON_FLEXRAY</a:v>
                              <a:v>DCM_UDS_ON_IP</a:v>
                              <a:v>DCM_ROE_ON_CAN</a:v>
                              <a:v>DCM_ROE_ON_FLEXRAY</a:v>
                              <a:v>DCM_ROE_ON_IP</a:v>
                              <a:v>DCM_PERIODIC_ON_CAN</a:v>
                              <a:v>DCM_PERIODIC_ON_FLEXRAY</a:v>
                              <a:v>DCM_PERIODICTRANS_ON_IP</a:v>
                              <a:v>DCM_SUPPLIER_1</a:v>
                              <a:v>DCM_SUPPLIER_2</a:v>
                              <a:v>DCM_SUPPLIER_3</a:v>
                              <a:v>DCM_SUPPLIER_4</a:v>
                              <a:v>DCM_SUPPLIER_5</a:v>
                              <a:v>DCM_SUPPLIER_6</a:v>
                              <a:v>DCM_SUPPLIER_7</a:v>
                              <a:v>DCM_SUPPLIER_8</a:v>
                              <a:v>DCM_SUPPLIER_9</a:v>
                              <a:v>DCM_SUPPLIER_10</a:v>
                              <a:v>DCM_SUPPLIER_11</a:v>
                              <a:v>DCM_SUPPLIER_12</a:v>
                              <a:v>DCM_SUPPLIER_13</a:v>
                              <a:v>DCM_SUPPLIER_14</a:v>
                              <a:v>DCM_SUPPLIER_15</a:v>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDslProtocolIsParallelExecutab" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Enables the parallel processing of Event-triggered responses (configured via the
                                       &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86) UDS service) and Periodic DID Transmissions (configured via the
                                       &lt;code&gt;ReadDataByPeriodicIdentifier&lt;/code&gt; (0x2A) UDS service).&lt;/p&gt;

                                    &lt;p&gt;Note 1: Only these two protocols (i.e. one managing Event-triggered responses and one managing Periodic DID Transmissions)
                                       are allowed to run in parallel to another protocol servicing either a UDS or an OBD service request.&lt;/p&gt;
                                    &lt;p&gt;Note 2: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Enable parallel execution of protocols"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="85ebac4c-2633-4920-94b8-4b9d4479152f"/>
                            <a:da name="DEFAULT" value="true"/>
                            <a:da name="EDITABLE" value="false"/>
                          </v:var>
                          <v:var name="DcmDslProtocolPreemptTimeout" 
                                 type="FLOAT">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;This parameter is the time-out value used in protocol preemption if this protocol preempts
                                       another diagnostic protocol.&lt;/p&gt;
                                    &lt;p&gt;The protocol shall be started maximum DcmDslProtocolPreemptTimeout time after the first request in the new protocol.&lt;/p&gt;
                                    &lt;p&gt;Note: Since some resources like buffers and data providers cannot be forced by the Dcm to be freed, the Dcm can only
                                       start a new protocol if other protocols cooperatively returned resources by confirming cancellation. See limitations for
                                       more information.&lt;/p&gt;
                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 1 second&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Protocol preemption timeout"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="20b02ab2-5060-47fa-8c4a-ecf10ee0d382"/>
                            <a:da name="DEFAULT" value="1.0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=1"/>
                              <a:tst expr="&gt;=0.001"/>
                            </a:da>
                            <a:da name="WARNING" type="XPath" 
                                  expr="(num:integer((.) * 10000) mod num:integer(../../../../../DcmGeneral/DcmTaskTime * 10000)) != 0" 
                                  true="DcmDslProtocolPreemptTimeout is not a multiple of DcmTaskTime"/>
                          </v:var>
                          <v:var name="DcmDslProtocolStackNumber" 
                                 type="INTEGER">
                            <a:a name="COLUMN_TITLE" 
                                 value="Protocol Stack Number"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the stack number. The stack numbers configured
                                       shall be zero-based and consecutive. &lt;/p&gt;

                                    &lt;p&gt;Protocols on the same Stack will obey the preemption
                                       mechanism, i.e. will obey preemption upon priority laws.&lt;/p&gt;

                                    &lt;p&gt;Two Protocols on different stacks may run in parallel, unless
                                       they are of the same kind (OBD/UDS).&lt;/p&gt;

                                    &lt;p&gt;In order for two Protocols to run in parallel:
                                      &lt;ul&gt;
                                        &lt;li&gt;Configure different Stack Numbers for them. &lt;/li&gt;
                                        &lt;li&gt;Configure different types for the two Protocols via
                                            configuration parameter &lt;code&gt;DcmDslProtocolID&lt;/code&gt;&lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/p&gt;


                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 255&lt;/li&gt;
                                    &lt;/ul&gt;

                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Protocol Stack Number"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="2bfee61d-fb37-4ea7-9f09-00ed6598f3d1"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=255"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDslProtocolPriority" type="INTEGER">
                            <a:a name="COLUMN_TITLE" value="Protocol Priority"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the priority for this Diagnostic Protocol. This is considered for protocol preemption handling.
                                       A higher priority Diagnostic Protocol is allowed to preempt an already executing lower priority one.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 255&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Note:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt; 0 is the highest priority (one Diagnostic Protocol which has the priority equal to 0 cannot be preempted)&lt;/li&gt;
                                      &lt;li&gt; 255 is the lowest priority &lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Protocol Priority"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="2bfee61d-fb37-4ea7-9f09-00ed6598f3d1"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=255"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDslProtocolTransType" 
                                 type="ENUMERATION">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;&lt;em&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/em&gt; This configuration parameter is deprecated and should no longer be used. It does not have any effect on the generated code.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Protocol Transmission Type"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="84cf9452-c46b-4f37-a774-1579de46182c"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="RANGE">
                              <a:v>TYPE1</a:v>
                              <a:v>TYPE2</a:v>
                            </a:da>
                          </v:var>
                          <v:var name="DcmSendRespPendOnTransToBoot" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines whether the &lt;code&gt;Dcm&lt;/code&gt; shall transmit a &lt;code&gt;RequestCorrectlyReceivedResponsePending&lt;/code&gt; (0x78)
                                       Negative Response Code before transitioning to the bootloader as a result of processing a
                                       &lt;code&gt;DiagnosticSessionControl&lt;/code&gt; (0x10) service  request for a Diagnostic Session &lt;code&gt;DcmDspSession&lt;/code&gt;
                                       which has the &lt;code&gt;DcmDspSessionForBoot&lt;/code&gt; parameter configured to either &lt;code&gt;DCM_OEM_BOOT&lt;/code&gt;
                                       or &lt;code&gt;DCM_SYS_BOOT&lt;/code&gt;.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;Dcm&lt;/code&gt; shall transmit a &lt;code&gt;RequestCorrectlyReceivedResponsePending&lt;/code&gt; (0x78)
                                       Negative Response Code before transitioning to the bootloader&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;Dcm&lt;/code&gt; shall not transmit a &lt;code&gt;RequestCorrectlyReceivedResponsePending&lt;/code&gt; (0x78)
                                       Negative Response Code before transitioning to the bootloader&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Send RP on TransToBoot"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="ECUC:7bd62ede-ab10-4c26-abb2-514699eba123"/>
                            <a:da name="DEFAULT" value="true"/>
                          </v:var>
                          <v:var name="DcmTimStrP2ServerAdjust" type="FLOAT">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the P2 timeout adjustment.&lt;/p&gt;

                                    &lt;p&gt;This parameter is used to guarantee that a response is available on bus before
                                       the P2 timeout expiration. If a positive or negative response is not ready, the
                                       &lt;code&gt;Dcm&lt;/code&gt; sends the first &lt;code&gt;RequestCorrectlyReceivedResponsePending&lt;/code&gt; (0x78)
                                       Negative Response Code after (&lt;code&gt;DcmDspSessionP2ServerMax&lt;/code&gt; - &lt;code&gt;DcmTimStrP2ServerAdjust&lt;/code&gt;) seconds.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 1 second&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="P2ServerAdjust"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="a08dafd2-c481-42eb-a640-c264b0c76cff"/>
                            <a:da name="DEFAULT" value="0.0"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=1"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                            <a:da name="WARNING" type="XPath" 
                                  expr="node:refvalid(../DcmDslProtocolSessionRef) and .&gt;node:ref(../DcmDslProtocolSessionRef)/*/*/DcmDspSessionP2ServerMax" 
                                  true="Referenced Session list contains sessions with smaller &apos;DcmDspSessionP2ServerMax time&apos; than the configured &apos;DcmTimStrP2ServerAdjust time&apos;. For such sessions Dcm considers that P2Server (the time in which the Dcm shall send the first responses) is 0, since it cannot be negative."/>
                          </v:var>
                          <v:var name="DcmTimStrP2StarServerAdjust" 
                                 type="FLOAT">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the P2* timeout adjustment.&lt;/p&gt;

                                    &lt;p&gt;This parameter is used to guarantee that a response is available on bus before
                                       the P2* timeout expiration. If a positive or negative response is not ready, the
                                       &lt;code&gt;Dcm&lt;/code&gt; sends subsequent &lt;code&gt;RequestCorrectlyReceivedResponsePending&lt;/code&gt; (0x78)
                                       Negative Response Code after every
                                       (&lt;code&gt;DcmDspSessionP2StarServerMax&lt;/code&gt; - &lt;code&gt;DcmTimStrP2Star ServerAdjust&lt;/code&gt;) seconds
                                       according to enhanced response timing requirements.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 5 seconds.&lt;/li&gt;
                                    &lt;/ul&gt;

                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="P2*ServerAdjust"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="50380b6f-456c-4038-a6b7-c3de505297e1"/>
                            <a:da name="DEFAULT" value="0.0"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=5"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                            <a:da name="WARNING" type="XPath" 
                                  expr="node:refvalid(../DcmDslProtocolSessionRef) and .&gt;node:ref(../DcmDslProtocolSessionRef)/*/*/DcmDspSessionP2StarServerMax" 
                                  true="Referenced session list contains sessions with smaller &apos;DcmDspSessionP2StarServerMax time&apos; than the configured &apos;DcmTimStrP2StarServerAdjust time&apos;. For such sessions Dcm considers that P2*Server (the time in which the Dcm shall send the subsequent responses) is 0, since it cannot be negative."/>
                          </v:var>
                          <v:ref name="DcmDslProtocolRxBufferID" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;

                                    &lt;p&gt;Reference to the reception &lt;code&gt;DcmDslBuffer&lt;/code&gt; configured for the protocol.&lt;/p&gt;

                                    &lt;p&gt;&lt;b&gt;This parameter is not used and therefore disabled.&lt;/b&gt;&lt;/p&gt;

                                    &lt;p&gt;Please use the vendor specific parameter &lt;code&gt;&quot;as:modconf(&apos;Dcm&apos;)/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/DcmDslConnection/
                                    DcmDslMainConnection/DcmDslProtocolRx/DcmDslProtocolRxBufferID&quot;&lt;/code&gt; instead. This enhancement allows the usage of a different reception
                                    buffer for every &lt;code&gt;RxPduId&lt;/code&gt;, thus allowing greater flexibility in configuration.&lt;/p&gt;

                                    &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to Rx Buffer"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="20436ffe-1ab5-48d0-9a22-37f4d37a840b"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsl/DcmDslBuffer"/>
                          </v:ref>
                          <v:ref name="DcmDemClientRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to the &lt;code&gt;DemClient&lt;/code&gt; configured for this protocol.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to DemClient"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="4f4dc904-eb8e-4522-b43d-859d43cb0689"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference."/>
                              <a:tst 
                                     expr="((../DcmDslProtocolID = &apos;DCM_OBD_ON_CAN&apos;) or (../DcmDslProtocolID = &apos;DCM_OBD_ON_FLEXRAY&apos;) or (../DcmDslProtocolID = &apos;DCM_OBD_ON_IP&apos;)) and                                            node:contains(node:refs(../../*[not((DcmDslProtocolID = &apos;DCM_OBD_ON_CAN&apos;) or (DcmDslProtocolID = &apos;DCM_OBD_ON_FLEXRAY&apos;) or (DcmDslProtocolID = &apos;DCM_OBD_ON_IP&apos;))]/DcmDemClientRef)/DemClientId,                                            node:refs(.)/DemClientId)" 
                                     true="The DemClient reference is already used by a protocol from UDS protocol group. The same DemClient container shall not be referenced by protocols from different protocol groups."/>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemGeneral/DemClient"/>
                          </v:ref>
                          <v:ref name="DcmDslProtocolSIDTable" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to the &lt;code&gt;DcmDsdServiceTable&lt;/code&gt; Diagnostic Service Table configured for this protocol.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to Service Table"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="f83e00fd-dc3a-4392-970b-9d449ce53a28"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsd/DcmDsdServiceTable"/>
                          </v:ref>
                          <v:ref name="DcmDslProtocolSessionRef" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to the &lt;code&gt;DcmDspSession&lt;/code&gt; Diagnostic Session Table configured for this protocol.&lt;/p&gt;

                                    &lt;p&gt;Only Diagnostic Sessions belonging to this table shall be available for transitions via the
                                       &lt;code&gt;DiagnosticSessionControl&lt;/code&gt; (0x10) diagnostic service.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to Session Table"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="0867e013-fadb-4e09-9917-034bffc4378c"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession"/>
                          </v:ref>
                          <v:ref name="DcmDslProtocolTxBufferID" 
                                 type="REFERENCE">
                            <a:a name="COLUMN_TITLE" value="Tx buffer"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to &lt;code&gt;DcmDslBuffer&lt;/code&gt; transmit buffer configured for this protocol.&lt;/p&gt;

                                    &lt;p&gt;This is the buffer used for transmission of responses.&lt;/p&gt;

                                    &lt;p&gt;Note 1: If Paged Buffer Transmission is not used by services of this protocol, the size must be configured large enough to fit the
                                       largest expected diagnostic service response.&lt;/p&gt;

                                    &lt;p&gt;Note 2: If Paged Buffer Transmission is used by services of this protocol, the size must be configured large enough to fit the
                                       largest expected Page of data (subdivision of the diagnostic service response
                                       provided by the Application or another Basic Software Module).&lt;/p&gt;

                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to Tx Buffer"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="b7e3e2ed-9484-419d-a2cf-16cdff8531b1"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference."/>
                              <a:tst 
                                     expr="(node:refvalid(.) and node:refvalid(../DcmDslProtocolSIDTable)) and ( count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspSecurity/DcmDspSecurityRow/*/DcmDspSecuritySeedSize[node:ref(node:current())/DcmDslBufferSize &lt; .+2]) &gt; 0 )                                           and ( as:ref(../DcmDslProtocolSIDTable)/DcmDsdService/*/DcmDsdSidTabServiceId=39 )" 
                                     true="Transmit buffer is not sufficient to hold response data for configured service 0x27 for all currently configured DcmDspSecuritySeedSize values"/>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsl/DcmDslBuffer"/>
                            <a:da name="WARNING" type="XPath">
                              <a:tst 
                                     expr="(node:refvalid(../DcmDslProtocolSIDTable) and node:refvalid(.)) and                                            (node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[.//DcmDspRoutineSignalType][                                                   (node:name(.) = &apos;DcmDspRoutineRequestResOut&apos;) or                                                   (node:name(.) = &apos;DcmDspRoutineStopOut&apos;) or                                                   (node:name(.) = &apos;DcmDspStartRoutineOut&apos;)                                                 ]/*/*/DcmDspRoutineSignalPos)) and                                            ((node:exists(node:ref(../DcmDslProtocolSIDTable)/DcmDsdService/*[                                                           ((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x31&apos;)) and                                                            ((not(node:exists(./DcmDsdSidTabFnc))) or                                                             ((node:exists(./DcmDsdSidTabFnc)) and                                                              (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)                                                             )                                                            )                                                           )]                                                         )                                             ) and                                             (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineEnableRoutineInfoByte =&apos;false&apos;) and                                            ((node:value(node:ref(.)/DcmDslBufferSize)) &lt;                                             (num:integer(((num:max(num:add(                                                (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[.//DcmDspRoutineSignalType][                                                   (node:name(.) = &apos;DcmDspRoutineRequestResOut&apos;) or                                                   (node:name(.) = &apos;DcmDspRoutineStopOut&apos;) or                                                   (node:name(.) = &apos;DcmDspStartRoutineOut&apos;)                                                 ]/*/*/DcmDspRoutineSignalPos),                                                (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[.//DcmDspRoutineSignalType][                                                   (node:name(.) = &apos;DcmDspRoutineRequestResOut&apos;) or                                                   (node:name(.) = &apos;DcmDspRoutineStopOut&apos;) or                                                   (node:name(.) = &apos;DcmDspStartRoutineOut&apos;)                                                 ]/*/*/DcmDspRoutineSignalLength)) )) + 7) div 8 ) + 4)))" 
                                     true="The Transmission buffer is not sufficient to hold the response data of the routine with maximum output signal length when the RoutineControl (0x31) service                                            is configured."/>
                              <a:tst 
                                     expr="(node:refvalid(../DcmDslProtocolSIDTable) and node:refvalid(.)) and                                            (node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[.//DcmDspRoutineSignalType][                                                   (node:name(.) = &apos;DcmDspRoutineRequestResOut&apos;) or                                                   (node:name(.) = &apos;DcmDspRoutineStopOut&apos;) or                                                   (node:name(.) = &apos;DcmDspStartRoutineOut&apos;)                                                 ]/*/*/DcmDspRoutineSignalPos)) and                                            ((node:exists(node:ref(../DcmDslProtocolSIDTable)/DcmDsdService/*[                                                           ((./DcmDsdSidTabServiceId = num:hextoint(&apos;0x31&apos;)) and                                                            ((not(node:exists(./DcmDsdSidTabFnc))) or                                                             ((node:exists(./DcmDsdSidTabFnc)) and                                                              (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)                                                             )                                                            )                                                           )]                                                         )                                             ) and                                             (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineEnableRoutineInfoByte =&apos;true&apos;) and                                            ((node:value(node:ref(.)/DcmDslBufferSize)) &lt;                                             (num:integer(((num:max(num:add(                                                (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[.//DcmDspRoutineSignalType][                                                   (node:name(.) = &apos;DcmDspRoutineRequestResOut&apos;) or                                                   (node:name(.) = &apos;DcmDspRoutineStopOut&apos;) or                                                   (node:name(.) = &apos;DcmDspStartRoutineOut&apos;)                                                 ]/*/*/DcmDspRoutineSignalPos),                                                (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspRoutineInfo/*/*[.//DcmDspRoutineSignalType][                                                   (node:name(.) = &apos;DcmDspRoutineRequestResOut&apos;) or                                                   (node:name(.) = &apos;DcmDspRoutineStopOut&apos;) or                                                   (node:name(.) = &apos;DcmDspStartRoutineOut&apos;)                                                 ]/*/*/DcmDspRoutineSignalLength)) )) + 7) div 8 ) + 4 + 1 )))" 
                                     true="The Transmission buffer is not sufficient to hold the response data and the InfoByte of the routine with maximum output signal length when the RoutineControl (0x31) service                                            is configured."/>
                            </a:da>
                          </v:ref>
                          <v:lst name="DcmDslConnection" type="MAP">
                            <a:a name="LABEL" value="Diagnostic Channels"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="num:i(count( *[@name=&apos;DcmDslMainConnection&apos;])) &gt; 255" 
                                  true="A maximum of 255 MainConnections are allowed per protocol configuration."/>
                            <a:da name="MIN" value="1"/>
                            <v:chc name="DcmDslConnection" type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the connection between Reception Channels and Transmission Channels for the current &lt;code&gt;DcmDslProtocol&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;Three types of connections can be defined:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;DcmDslMainConnection&lt;/code&gt;, used for Request Triggered Transmissions. Configure such a connection for OBD services
                                                  and UDS services.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;DcmDslPeriodicTransmission&lt;/code&gt;, used for Periodic DID Transmissions. Configure such a connection if the UDS service
                                            &lt;code&gt;ReadDataByPeriodicIdentifier&lt;/code&gt; (0x2A) is used and Type 2 communication is required.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;DcmDslResponseOnEvent&lt;/code&gt;, used for Event Triggered Transmissions. Configure such a connection if the UDS service
                                            &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86) is used and Type 2 communication is required.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="UUID" 
                                   value="d2a88435-2f24-4d65-b710-8af8bc6b0c79"/>
                              <v:ctr name="DcmDslMainConnection" 
                                     type="IDENTIFIABLE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the configuration for a Main Connection.&lt;/p&gt;

                                        &lt;p&gt;The &lt;code&gt;DcmDslMainConnection&lt;/code&gt; contains:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;Configuration for Reception Channels&lt;/li&gt;
                                          &lt;li&gt;Transmission configuration parameters&lt;/li&gt;
                                          &lt;li&gt;Reference to &lt;code&gt;DcmDslResponseOnEvent&lt;/code&gt; and &lt;code&gt;DcmDslPeriodicTransmission&lt;/code&gt; if applicable&lt;/li&gt;
                                          &lt;li&gt;Tester Source Address configuration&lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Configure this Connection for Request Triggered Transmissions for OBD and UDS protocols.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="LABEL" value="Channel Configuration"/>
                                <a:a name="UUID" 
                                     value="035b515c-1f92-48d1-851a-465f12361d42"/>
                                <a:da name="INVALID" type="XPath">
                                  <a:tst 
                                         expr="( count( as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspSecurity/DcmDspSecurityRow/*/DcmDspSecurityADRSize[ . + 2 &gt; num:max(node:refs(node:current()/DcmDslProtocolRx/*[node:refvalid(./DcmDslProtocolRxBufferID)]/DcmDslProtocolRxBufferID)/DcmDslBufferSize) ] ) &gt; 0 )                                                and (node:refvalid(../../DcmDslProtocolSIDTable)) and ( as:ref(../../DcmDslProtocolSIDTable)/DcmDsdService/*/DcmDsdSidTabServiceId=39 )" 
                                         true="No receive buffer for this connection is sufficient to hold the request data for configured service 0x27 for all currently configured DcmDspSecurityADRSize values"/>
                                  <a:tst 
                                         expr="( count( as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspSecurity/DcmDspSecurityRow/*/DcmDspSecurityKeySize[ . + 2 &gt; num:max(node:refs(node:current()/DcmDslProtocolRx/*[node:refvalid(./DcmDslProtocolRxBufferID)]/DcmDslProtocolRxBufferID)/DcmDslBufferSize) ] ) &gt; 0 )                                                and (node:refvalid(../../DcmDslProtocolSIDTable)) and ( as:ref(../../DcmDslProtocolSIDTable)/DcmDsdService/*/DcmDsdSidTabServiceId=39 )" 
                                         true="No receive buffer for this connection is sufficient to hold the request data for configured service 0x27 for all currently configured DcmDspSecurityKeySize values"/>
                                  <a:tst 
                                         expr="as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmGenericConnectionUsage = &apos;true&apos; and                                                node:exists(node:refs(./*/*[1]/DcmDslProtocolRxPduRef)/MetaDataTypeRef) and                                                text:contains(node:refs(node:refs(./*/*[1]/DcmDslProtocolRxPduRef)/MetaDataTypeRef)/*/*/MetaDataItemType, &apos;SOURCE_ADDRESS_16&apos;) and                                                text:contains(node:refs(node:refs(./*/*[1]/DcmDslProtocolRxPduRef)/MetaDataTypeRef)/*/*/MetaDataItemType, &apos;TARGET_ADDRESS_16&apos;) and                                                not(node:exists(node:refs(./*/*[1]/DcmDslProtocolRxPduRef)/PduId))" 
                                         true="PduId shall be configured if MetaDataTypeRef is configured."/>
                                </a:da>
                                <a:da name="TITLE" 
                                      value="Diagnostic Channel Configuration"/>
                                <v:var name="DcmDslProtocolRxTesterSourceAddr" 
                                       type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;Defines the Tester Source Address used for Receptions on this &lt;code&gt;DcmDslMainConnection&lt;/code&gt;.&lt;/p&gt;

                                          &lt;p&gt;A TesterSourceAddress uniquely describes a client and will be used in:&lt;/p&gt;
                                          &lt;ul&gt;
                                            &lt;li&gt;Calls to operations of the &lt;code&gt;ServiceRequestNotification&lt;/code&gt; interface in order to allow the Application
                                                to identify which client has executed the request&lt;/li&gt;
                                            &lt;li&gt;The Programming Conditions (see interfaces &lt;code&gt;Dcm_SetProgConditions()&lt;/code&gt; and &lt;code&gt;Dcm_GetProgConditions()&lt;/code&gt;)
                                                storing the conditions of a jump to/from the Bootloader, in order to identify the client requesting the jump and therefore
                                                route the response to the request correctly.&lt;/li&gt;
                                          &lt;/ul&gt;

                                          &lt;p&gt;Range:&lt;/p&gt;
                                          &lt;ul&gt;
                                            &lt;li&gt;0 .. 65535&lt;/li&gt;
                                          &lt;/ul&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Tester Source Address"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                  <a:a name="UUID" 
                                       value="ECUC:c60c78d9-5dd3-4839-9dda-c7d70f78692a"/>
                                  <a:da name="DEFAULT" value="0"/>
                                  <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=65535"/>
                                    <a:tst expr="&gt;=0"/>
                                  </a:da>
                                </v:var>
                                <v:ref name="DcmDslPeriodicTranmissionConRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;This ASR 4.0.3 StMD parameter is disabled due to a typo in the Specification.&lt;/p&gt;
                                          &lt;p&gt;It is replaced by the identical VSMD parameter &quot;DcmDslPeriodicTransmissionConRef&quot;.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to PeriodicTransmission protocol"/>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                                  <a:a name="UUID" 
                                       value="9a258de0-124b-4c35-8d3b-17f9de681560"/>
                                  <a:a name="VISIBLE" value="false"/>
                                  <a:da name="EDITABLE" value="false"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/DcmDslConnection/DcmDslPeriodicTransmission"/>
                                </v:ref>
                                <v:ref name="DcmDslPeriodicTransmissionConRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;Reference the &lt;code&gt;DcmDslPeriodicTransmission&lt;/code&gt; connection
                                             which shall be used for the transmission of Periodic DID Responses
                                             configured via a &lt;code&gt;ReadDataByPeriodicIdentifier&lt;/code&gt; (0x2A) request received
                                             (if supported and successful) on an &lt;code&gt;RxPduId&lt;/code&gt; belonging to a
                                             &lt;code&gt;DcmDslProtocolRx&lt;/code&gt; Reception Channel configured for this &lt;code&gt;DcmDslMainConnection&lt;/code&gt;.&lt;/p&gt;

                                        &lt;p&gt; This parameter configures the link to the connection of
                                        PeriodicTransmission protocol for the processing of the
                                        PeriodicTransmission events.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to PeriodicTransmission protocol"/>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                                  <a:a name="UUID" 
                                       value="9a258de0-124b-4c35-8d3b-17f9de681560"/>
                                  <a:da name="EDITABLE" value="true"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/DcmDslConnection/DcmDslPeriodicTransmission"/>
                                </v:ref>
                                <v:ref name="DcmDslROEConnectionRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;Reference the &lt;code&gt;DcmDslResponseOnEvent&lt;/code&gt; connection
                                             which shall be used for the transmission of Event Triggered Responses
                                             configured via a &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86) request received
                                             (if supported and successful) on an &lt;code&gt;RxPduId&lt;/code&gt; belonging to a
                                             &lt;code&gt;DcmDslProtocolRx&lt;/code&gt; Reception Channel configured for this &lt;code&gt;DcmDslMainConnection&lt;/code&gt;.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to ROE protocol"/>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                                  <a:a name="UUID" 
                                       value="5b5ab87b-d1d2-49a0-8614-0a8cbce297d8"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/DcmDslConnection/DcmDslResponseOnEvent"/>
                                </v:ref>
                                <v:lst name="DcmDslProtocolRx" type="MAP">
                                  <a:a name="LABEL" value="Receive Channels"/>
                                  <a:a name="ROWS" value="6"/>
                                  <a:a name="TAB" value="GENERAL"/>
                                  <a:da name="MIN" value="1"/>
                                  <v:ctr name="DcmDslProtocolRx" 
                                         type="IDENTIFIABLE">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                            &lt;p&gt;Defines the configuration of the Reception Channels for the protocol.&lt;/p&gt;

                                            &lt;p&gt;A Reception Channel defines, for each &lt;code&gt;RxPduId&lt;/code&gt;:&lt;/p&gt;
                                            &lt;ul&gt;
                                              &lt;li&gt;The type of the requests from this &lt;code&gt;RxPduId&lt;/code&gt; (Physical or Functional)&lt;/li&gt;
                                              &lt;li&gt;The unique &lt;code&gt;RxPduId&lt;/code&gt;&lt;/li&gt;
                                              &lt;li&gt;The reference to the &lt;code&gt;Pdu&lt;/code&gt; in the &lt;code&gt;EcucPduCollection&lt;/code&gt;&lt;/li&gt;
                                              &lt;li&gt;The reference to the &lt;code&gt;DcmDslBuffer&lt;/code&gt; used to store requests received on this &lt;code&gt;RxPduId&lt;/code&gt;&lt;/li&gt;
                                              &lt;li&gt;The &lt;code&gt;DcmDslProtocolRxChannelId&lt;/code&gt; Network Identifier for this Reception Channel&lt;/li&gt;
                                              &lt;li&gt;The reference to the &lt;code&gt;ComMChannel&lt;/code&gt; relative to this Reception Channel&lt;/li&gt;
                                            &lt;/ul&gt;

                                            &lt;p&gt;Note: More than one Reception Channel can be configured
                                                     per protocol.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="UUID" 
                                         value="f32b3fa3-bd24-4235-a80e-b610db111962"/>
                                    <a:da name="INVALID" type="XPath" 
                                          expr="text:uniq(../../../../DcmDslConnection/*/DcmDslProtocolRx/*/@name, @name)" 
                                          false="The name of the Receive Channel belonging to the same DcmDslProtocol has to be unique."/>
                                    <a:da name="TITLE" 
                                          value="Receive Channel Configuration"/>
                                    <a:da name="WARNING" type="XPath" 
                                          expr="node:exists(../../../../../../../../../*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolRx/*[(node:current()/DcmDslProtocolRxBufferID = ./DcmDslProtocolRxBufferID) and (node:current()/DcmDslProtocolRxAddrType != ./DcmDslProtocolRxAddrType)])" 
                                          true="Two receive channels with different addressing types (PHYSICAL/FUNCTIONAL) reference the same Rx buffer"/>
                                    <v:var name="DcmDslProtocolRxAddrType" 
                                           type="ENUMERATION">
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                              &lt;p&gt;Defines the type of communication for this channel.&lt;/p&gt;

                                              &lt;p&gt;Range:&lt;/p&gt;
                                              &lt;ul&gt;
                                                &lt;li&gt;&lt;code&gt;DCM_PHYSICAL_TYPE&lt;/code&gt;: Physical Addressing is used on this Reception Channel. A node of a specific
                                                                                   communication network receives a message from one sending node
                                                                                   (1 to 1 communication).&lt;/li&gt;
                                                &lt;li&gt;&lt;code&gt;DCM_FUNCTIONAL_TYPE&lt;/code&gt;: Functional Addressing is used on this Reception Channel. All the nodes
                                                                                     of a specific communication network receives a message from one
                                                                                     sending node (1 to n communication).&lt;/li&gt;
                                              &lt;/ul&gt;
                                            &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" 
                                           value="Communication Type"/>
                                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                      <a:a name="SYMBOLICNAMEVALUE" 
                                           value="false"/>
                                      <a:a name="UUID" 
                                           value="0c3ebef4-6630-44d4-8d6a-36c10a638296"/>
                                      <a:da name="DEFAULT" 
                                            value="DCM_FUNCTIONAL_TYPE"/>
                                      <a:da name="RANGE">
                                        <a:v>DCM_FUNCTIONAL_TYPE</a:v>
                                        <a:v>DCM_PHYSICAL_TYPE</a:v>
                                      </a:da>
                                    </v:var>
                                    <v:var name="DcmDslProtocolRxChannelId" 
                                           type="INTEGER">
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                              &lt;p&gt;Defines the Channel Identifier associated to the received &lt;code&gt;Pdu&lt;/code&gt;.&lt;/p&gt;

                                              &lt;p&gt;Range:&lt;/p&gt;
                                              &lt;ul&gt;
                                                &lt;li&gt;0 .. 255&lt;/li&gt;
                                              &lt;/ul&gt;

                                              &lt;p&gt;Note: The value configured in &lt;code&gt;DcmDslProtocolRxChannelId&lt;/code&gt; must match the value configured in the
                                                       &lt;code&gt;ComMChannelId&lt;/code&gt; parameter of the &lt;code&gt;ComMChannel&lt;/code&gt; referenced via
                                                       &lt;code&gt;DcmDslProtocolRxComMChannelRef&lt;/code&gt;.&lt;/p&gt;
                                            &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" 
                                           value="Network Identifier"/>
                                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                      <a:a name="SYMBOLICNAMEVALUE" 
                                           value="false"/>
                                      <a:a name="UUID" 
                                           value="9b32afca-7bc0-450d-917f-5415fc13b0d6"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:da name="INVALID" type="Multi">
                                        <mt:range>
                                          <mt:tst expr="&lt;=255"/>
                                          <mt:tst expr="&gt;=0"/>
                                        </mt:range>
                                        <mt:xpath 
                                                  true="DcmDslProtocolRxChannelId shall be the same as ComMChannelId in ComM." 
                                                  expr="(node:refvalid(../DcmDslProtocolRxComMChannelRef)) and (. != (as:ref(../DcmDslProtocolRxComMChannelRef)/ComMChannelId))"/>
                                      </a:da>
                                    </v:var>
                                    <v:var name="DcmDslProtocolRxPduId" 
                                           type="INTEGER">
                                      <a:a name="COLUMN_TITLE" value="Rx Pdu Id"/>
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                            &lt;p&gt;Defines the unique identifier of the &lt;code&gt;Pdu&lt;/code&gt; used for receiving diagnostic requests
                                               for this channel.&lt;/p&gt;

                                            &lt;p&gt;This &lt;code&gt;PduId&lt;/code&gt; is used by the lower layer (The &lt;code&gt;PduR&lt;/code&gt; or a Transport Protocol) in the callbacks
                                               issued to the &lt;code&gt;Dcm&lt;/code&gt; in order to perform a data Reception (from &lt;code&gt;Dcm&lt;/code&gt;&apos;s point of view):&lt;/p&gt;
                                            &lt;ul&gt;
                                              &lt;li&gt;&lt;code&gt;Dcm_StartOfReception()&lt;/code&gt;&lt;/li&gt;
                                              &lt;li&gt;&lt;code&gt;Dcm_CopyRxData()&lt;/code&gt;&lt;/li&gt;
                                              &lt;li&gt;&lt;code&gt;Dcm_TpRxIndication()&lt;/code&gt;&lt;/li&gt;
                                            &lt;/ul&gt;

                                            &lt;p&gt;Range:&lt;/p&gt;
                                            &lt;ul&gt;
                                              &lt;li&gt;0 .. 65535&lt;/li&gt;
                                            &lt;/ul&gt;

                                            &lt;p&gt;Note: Values configured for the &lt;code&gt;DcmDslProtocolRxPduId&lt;/code&gt;s shall be zero-based and
                                                     consecutive.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" value="Reception Pdu Id"/>
                                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                      <a:a name="UUID" 
                                           value="f8066d6e-a6f4-4c60-bb5f-e9d7c15fb55b"/>
                                      <a:da name="DEFAULT" type="XPath" 
                                            expr="num:integer(count(../../../../../../*/DcmDslConnection/*/DcmDslProtocolRx/*) - 1)"/>
                                      <a:da name="INVALID" type="Multi">
                                        <mt:range>
                                          <mt:tst expr="&lt;=65535"/>
                                          <mt:tst expr="&gt;=0"/>
                                        </mt:range>
                                        <mt:xpath>
                                          <mt:tst 
                                                  false="The ID of the reception PDU has to be unique." 
                                                  expr="text:uniq(../../../../../../*/DcmDslConnection/*/DcmDslProtocolRx/*/DcmDslProtocolRxPduId,.)"/>
                                          <mt:tst 
                                                  true="The ID of the reception PDU has to be zero-based and consecutive." 
                                                  expr=". &gt;= count(../../../../../../*/DcmDslConnection/*/DcmDslProtocolRx/*)"/>
                                        </mt:xpath>
                                      </a:da>
                                      <a:da name="TOOLTIP" 
                                            value="ID used for this reception PDU"/>
                                    </v:var>
                                    <v:ref 
                                           name="DcmDslProtocolRxComMChannelRef" 
                                           type="CHOICE-REFERENCE">
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                              &lt;p&gt;Reference to the &lt;code&gt;ComMChannel&lt;/code&gt; on which the
                                                 &lt;code&gt;Pdu&lt;/code&gt; is received.&lt;/p&gt;
                                            &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" 
                                           value="Reference to the ComMChannel"/>
                                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                      <a:a name="UUID" 
                                           value="ECUC:eecc5ee9-a65a-4e55-9746-b2ee729f8c21"/>
                                      <a:da name="INVALID" type="XPath" 
                                            expr="node:refvalid(.)" 
                                            false="Invalid reference."/>
                                      <a:da name="REF">
                                        <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel</a:v>
                                        <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMChannel</a:v>
                                      </a:da>
                                    </v:ref>
                                    <v:ref name="DcmDslProtocolRxPduRef" 
                                           type="REFERENCE">
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                              &lt;p&gt;Reference to &lt;code&gt;Pdu&lt;/code&gt; from the &lt;code&gt;EcucPduCollection&lt;/code&gt;
                                                 configured for this Reception Channel.&lt;/p&gt;

                                              &lt;p&gt;Through this reference, the &lt;code&gt;PduRouter&lt;/code&gt; can resolve the &lt;code&gt;PduId&lt;/code&gt;
                                                 used for Reception by the &lt;code&gt;Dcm&lt;/code&gt; in the following APIs:&lt;/p&gt;

                                              &lt;ul&gt;
                                                &lt;li&gt;&lt;code&gt;Dcm_StartOfReception()&lt;/code&gt;&lt;/li&gt;
                                                &lt;li&gt;&lt;code&gt;Dcm_CopyRxData()&lt;/code&gt;&lt;/li&gt;
                                                &lt;li&gt;&lt;code&gt;Dcm_TpRxIndication()&lt;/code&gt;&lt;/li&gt;
                                              &lt;/ul&gt;

                                              &lt;p&gt;and defined by the &lt;code&gt;Dcm&lt;/code&gt; in &lt;code&gt;DcmDslProtocolRxPduId&lt;/code&gt;.&lt;/p&gt;
                                            &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" 
                                           value="Reference to Rx PduId"/>
                                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                      <a:a name="UUID" 
                                           value="faf80d47-25fc-474a-9ba7-bb7b7069224f"/>
                                      <a:da name="INVALID" type="XPath" 
                                            expr="node:refvalid(.)" 
                                            false="Invalid reference."/>
                                      <a:da name="REF" 
                                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                                    </v:ref>
                                    <v:ref name="DcmDslProtocolRxBufferID" 
                                           type="REFERENCE">
                                      <a:a name="COLUMN_TITLE" value="Rx buffer"/>
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                              &lt;p&gt;Reference to the &lt;code&gt;DcmDslBuffer&lt;/code&gt; configuring Reception Buffer assigned for this Reception Channel.&lt;/p&gt;

                                              &lt;p&gt;Configure this reference so that the Reception Buffer is large enough to fit the largest expected request message
                                                 arriving on this &lt;code&gt;RxPduId&lt;/code&gt;.
                                                 &lt;ul&gt;
                                                 &lt;li&gt;For SecurityAccess(0x27): &lt;code&gt;DcmDslBufferSize&lt;/code&gt; need to be higher than (&lt;code&gt;DcmDspSecurityADRSize&lt;/code&gt; + 2) and (&lt;code&gt;DcmDspSecurityKeySize&lt;/code&gt; + 2) for
                                                 all configured Security Levels.&lt;/li&gt;
                                                 &lt;li&gt;For RoutineControl(0x31): &lt;code&gt;DcmDslBufferSize&lt;/code&gt; need to be higher than (&lt;code&gt;DcmDspRoutineSignalPos&lt;/code&gt; + &lt;code&gt;DcmDspRoutineSignalLength&lt;/code&gt; + 7) / 8 + 4 for
                                                 &lt;code&gt;DcmDspRoutineRequestResIn&lt;/code&gt; + &lt;code&gt;DcmDspRoutineStopIn&lt;/code&gt; + &lt;code&gt;DcmDspStartRoutineIn&lt;/code&gt;.&lt;/li&gt;
                                                 &lt;/ul&gt;
                                              &lt;/p&gt;
                                              &lt;p&gt;Note: The &lt;code&gt;Dcm&lt;/code&gt; allows a single &lt;code&gt;DcmDslBuffer&lt;/code&gt; to be used by more than one
                                                 &lt;code&gt;DcmDslProtocolRx&lt;/code&gt; Reception Channel, and at the same time allows full flexibility in using the same
                                                 &lt;code&gt;DcmDslBuffer&lt;/code&gt; as a Reception and a Transmission Buffer at the same time.&lt;/p&gt;
                                            &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" 
                                           value="Reference to Rx Buffer"/>
                                      <a:a name="ORIGIN" 
                                           value="Elektrobit Automotive GmbH"/>
                                      <a:da name="INVALID" type="XPath" 
                                            expr="node:refvalid(.)" 
                                            false="Invalid reference"/>
                                      <a:da name="REF" 
                                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsl/DcmDslBuffer"/>
                                    </v:ref>
                                  </v:ctr>
                                </v:lst>
                                <v:ctr name="DcmDslProtocolTx" 
                                       type="IDENTIFIABLE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;Defines the parameters controlling Transmission for this &lt;code&gt;DcmDslMainConnection&lt;/code&gt;.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Transmit Channel Configuration"/>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="UUID" 
                                       value="6d6d05a5-0568-49b8-9cfd-31d6d36507ec"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolTx[asc:getShortName(.) = asc:getShortName(node:current())]) &gt; 1)                                               and                                               (asc:getShortName(node:current())!=&apos;&apos;)" 
                                        true="The generated symbolic names for this parameter will not be unique since                                               other DcmDslProtocolTx configuration elements are using the same SHORT-NAME."/>
                                  <a:da name="WARNING" type="XPath" 
                                        expr="(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolTx[asc:getShortName(.) = &apos;&apos;]) !=                                                count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolTx))                                               and                                               (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolTx[asc:getShortName(.) = &apos;&apos;]) &gt; 0)" 
                                        true="All DcmDslProtocolTx nodes must have the same naming configuration (either all have a SHORT-NAME or none of them do)"/>
                                  <v:var name="DcmDslTxConfirmationPduId" 
                                         type="INTEGER">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                               &lt;p&gt;This &lt;code&gt;PduId&lt;/code&gt; is used by the lower layer (The &lt;code&gt;PduR&lt;/code&gt; or a Transport Protocol) in the callbacks
                                               issued to the &lt;code&gt;Dcm&lt;/code&gt; in order to perform a data Transmission (from &lt;code&gt;Dcm&lt;/code&gt;&apos;s point of view):&lt;/p&gt;
                                               &lt;ul&gt;
                                                 &lt;li&gt;&lt;code&gt;Dcm_CopyTxData()&lt;/code&gt;&lt;/li&gt;
                                                 &lt;li&gt;&lt;code&gt;Dcm_TpTxConfirmation()&lt;/code&gt;&lt;/li&gt;
                                               &lt;/ul&gt;

                                            &lt;p&gt;Range:&lt;/p&gt;
                                            &lt;ul&gt;
                                              &lt;li&gt;0 .. 65535&lt;/li&gt;
                                            &lt;/ul&gt;

                                            &lt;p&gt;Note: Values configured for the &lt;code&gt;DcmDslTxConfirmationPduId&lt;/code&gt;s shall be zero-based and
                                                     consecutive.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" 
                                         value="Transmit Confirmation PduId"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                    <a:a name="UUID" 
                                         value="e141896b-2eb7-4af4-a94a-24078a0f9d71"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Multi">
                                      <mt:range>
                                        <mt:tst expr="&lt;=65535"/>
                                        <mt:tst expr="&gt;=0"/>
                                      </mt:range>
                                      <mt:xpath 
                                                false="ConfirmationPduIds should be zero-based and consecutive. The following nodes are involved: DcmDslRoeTxConfirmationPduId, DcmDslPeriodicTxConfirmationPduId, DcmDslTxConfirmationPduId" 
                                                expr="node:isconsecutive(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolTx/DcmDslTxConfirmationPduId |                                                                    as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*[.=&apos;DcmDslPeriodicTransmission&apos;]/DcmDslPeriodicConnection/*/DcmDslPeriodicTxConfirmationPduId |                                                                    as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*[.=&apos;DcmDslResponseOnEvent&apos;]/DcmDslRoeTxConfirmationPduId, 0)"/>
                                    </a:da>
                                  </v:var>
                                  <v:ref name="DcmDslProtocolTxPduRef" 
                                         type="REFERENCE">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                            &lt;p&gt;Reference to the &lt;code&gt;Pdu&lt;/code&gt; in the &lt;code&gt;EcucPduCollection&lt;/code&gt;
                                               configured for this Transmission Channel.&lt;/p&gt;

                                            &lt;p&gt;Through this reference, &lt;code&gt;Dcm&lt;/code&gt; can resolve the &lt;code&gt;PduId&lt;/code&gt;
                                               used for Transmission in the &lt;code&gt;PduR_DcmTransmit()&lt;/code&gt; API and defined by the
                                               &lt;code&gt;PduR&lt;/code&gt;.&lt;/p&gt;

                                            &lt;p&gt;Through this reference, &lt;code&gt;PduRouter&lt;/code&gt; can resolve the &lt;code&gt;PduId&lt;/code&gt;
                                               used for Transmission by in the following APIs:&lt;/p&gt;

                                            &lt;ul&gt;
                                              &lt;li&gt;&lt;code&gt;Dcm_CopyTxData()&lt;/code&gt;&lt;/li&gt;
                                              &lt;li&gt;&lt;code&gt;Dcm_TpTxConfirmation()&lt;/code&gt;&lt;/li&gt;
                                            &lt;/ul&gt;

                                            &lt;p&gt;and defined by the &lt;code&gt;Dcm&lt;/code&gt; in &lt;code&gt;DcmDslTxConfirmationPduId&lt;/code&gt;.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" 
                                         value="Reference to Tx PduId"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="UUID" 
                                         value="86da77e4-2e01-4bf3-85c7-8eb1090090ac"/>
                                    <a:da name="INVALID" type="XPath">
                                      <a:tst expr="node:refvalid(.)" 
                                             false="Invalid reference."/>
                                      <a:tst 
                                             expr="count(asc:getPdus(&apos;PduR&apos;,&apos;ForUpperLayer&apos;,&apos;Tp&apos;,&apos;Tx&apos;,1  , .)) = 0" 
                                             true="No routing path in PduR is configured with this Pdu as source."/>
                                      <a:tst 
                                             expr="count(asc:getPdus(&apos;PduR&apos;,&apos;ForUpperLayer&apos;,&apos;Tp&apos;,&apos;Tx&apos;,1  , .)) &gt; 1" 
                                             true="More than one routing path is configured in PduR with this Pdu as source."/>
                                      <a:tst 
                                             expr="text:uniq(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*/DcmDslProtocolTx/DcmDslProtocolTxPduRef, .)" 
                                             false="The TxPduId must be unique"/>
                                    </a:da>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                                  </v:ref>
                                </v:ctr>
                              </v:ctr>
                              <v:ctr name="DcmDslPeriodicTransmission" 
                                     type="IDENTIFIABLE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the configuration for Periodic Transmission connections.&lt;/p&gt;

                                        &lt;p&gt;If service &lt;code&gt;ReadDataByPeriodicIdentifier&lt;/code&gt; (0x2A) is used and Type 2 communication
                                           is intended for the &lt;code&gt;DcmDslProtocol&lt;/code&gt; processing the &lt;code&gt;ReadDataByPeriodicIdentifier&lt;/code&gt;
                                           service requests, configure the Transmission parameters here and reference this &lt;code&gt;DcmDslPeriodicTransmission&lt;/code&gt;
                                           from the &lt;code&gt;DcmDslPeriodicTransmissionConRef&lt;/code&gt; of the corresponding &lt;code&gt;DcmDslProtocol&lt;/code&gt;&apos;s
                                           &lt;code&gt;DcmDslMainConnection&lt;/code&gt;.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Periodic Transmission Configuration"/>
                                <a:a name="UUID" 
                                     value="77ee2e7b-1057-4edd-beb0-70fc88392aca"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="TITLE" value="Periodic Transmission"/>
                                <a:da name="WARNING" type="XPath">
                                  <a:tst 
                                         expr="(node:exists(../../DcmDslProtocolTransType) and (../../DcmDslProtocolTransType = &apos;TYPE2&apos;))                                                and not(node:exists(DcmDslPeriodicConnection/*))" 
                                         true="The protocol this DcmDslPeriodicTransmission belongs to was set to TYPE2 but DcmDslPeriodicConnection doesn&apos;t contain any elements therefore transmission will be TYPE1."/>
                                  <a:tst 
                                         expr="(node:exists(../../DcmDslProtocolTransType) and (../../DcmDslProtocolTransType = &apos;TYPE1&apos;))                                                and node:exists(DcmDslPeriodicConnection/*)" 
                                         true="The protocol this DcmDslPeriodicTransmission belongs to was set to TYPE1 but DcmDslPeriodicConnection is doesn&apos;t valid elements therefore transmission will be TYPE2."/>
                                </a:da>
                                <v:lst name="DcmDslPeriodicConnection" 
                                       type="MAP">
                                  <a:a name="LABEL" 
                                       value="Periodic Transmission Pdu Configuration"/>
                                  <a:a name="ROWS" value="4"/>
                                  <a:a name="TAB" value="GENERAL"/>
                                  <v:ctr name="DcmDslPeriodicConnection" 
                                         type="IDENTIFIABLE">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                              &lt;p&gt;Defines the configuration for one Periodic DID Transmission connection.&lt;/p&gt;

                                              &lt;p&gt;This container configures:&lt;/p&gt;
                                              &lt;ul&gt;
                                                &lt;li&gt;The &lt;code&gt;ConfirmationTxPduId&lt;/code&gt; for Periodic DID Transmission&lt;/li&gt;
                                                &lt;li&gt;The reference to the corresponding &lt;code&gt;Pdu&lt;/code&gt; in the &lt;code&gt;EcucPduCollection&lt;/code&gt;&lt;/li&gt;
                                              &lt;/ul&gt;
                                              &lt;p&gt;This container configures the TxPduId for PeriodicTransmission.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="LABEL" 
                                         value="Transmission Pdu Configuration"/>
                                    <a:a name="UUID" 
                                         value="218970ab-bf5e-4faf-9280-863397b487f8"/>
                                    <a:da name="EDITABLE" value="true"/>
                                    <a:da name="ENABLE" value="true"/>
                                    <a:da name="INVALID" type="XPath" 
                                          expr="(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*[.=&apos;DcmDslPeriodicTransmission&apos;]/DcmDslPeriodicConnection/*[asc:getShortName(.) = asc:getShortName(node:current())]) &gt; 1)" 
                                          true="The generated symbolic names for this parameter will not be unique since other                                               DcmDslPeriodicTransmission configuration elements are using the same SHORT-NAME."/>
                                    <a:da name="TITLE" 
                                          value="Periodic Transmission Configuration"/>
                                    <v:var 
                                           name="DcmDslPeriodicTxConfirmationPduId" 
                                           type="INTEGER">
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                              &lt;p&gt;Defines the configuration for one Periodic DID Transmission connection.&lt;/p&gt;

                                              &lt;p&gt;This container configures:&lt;/p&gt;
                                              &lt;ul&gt;
                                                &lt;li&gt;The &lt;code&gt;ConfirmationTxPduId&lt;/code&gt; for Periodic DID Transmission&lt;/li&gt;
                                                &lt;li&gt;The reference to the corresponding &lt;code&gt;Pdu&lt;/code&gt; in the &lt;code&gt;EcucPduCollection&lt;/code&gt;&lt;/li&gt;
                                              &lt;/ul&gt;

                                              &lt;p&gt;The Handle Id used by the lower layer to confirm
                                              the transmission of periodic data.&lt;/p&gt;
                                            &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" 
                                           value="TxConfirmation Hanlde Id"/>
                                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                      <a:a name="UUID" 
                                           value="e18f4bf2-6305-4695-9272-7ef675b13574"/>
                                      <a:da name="DEFAULT" value="0"/>
                                      <a:da name="EDITABLE" value="true"/>
                                      <a:da name="ENABLE" value="true"/>
                                      <a:da name="INVALID" type="Multi">
                                        <mt:range>
                                          <mt:tst expr="&lt;=65535"/>
                                          <mt:tst expr="&gt;=0"/>
                                        </mt:range>
                                      </a:da>
                                    </v:var>
                                    <v:ref name="DcmDslPeriodicTxPduRef" 
                                           type="REFERENCE">
                                      <a:a name="DESC">
                                        <a:v>&lt;html&gt;
                                                &lt;p&gt;Reference to the &lt;code&gt;Pdu&lt;/code&gt; in the &lt;code&gt;EcucPduCollection&lt;/code&gt;
                                                   configured for this Transmission Channel.&lt;/p&gt;

                                                &lt;p&gt;Through this reference, the &lt;code&gt;Dcm&lt;/code&gt; can resolve the &lt;code&gt;PduId&lt;/code&gt;
                                                   used for Transmission in the &lt;code&gt;PduR_DcmTransmit()&lt;/code&gt; API and defined by the
                                                   &lt;code&gt;PduR&lt;/code&gt;.&lt;/p&gt;

                                                &lt;p&gt;Through this reference, the &lt;code&gt;PduRouter&lt;/code&gt; can resolve the &lt;code&gt;PduId&lt;/code&gt;
                                                   used for Transmission by in the following APIs:&lt;/p&gt;

                                                &lt;ul&gt;
                                                  &lt;li&gt;&lt;code&gt;Dcm_CopyTxData()&lt;/code&gt;&lt;/li&gt;
                                                  &lt;li&gt;&lt;code&gt;Dcm_TpTxConfirmation()&lt;/code&gt;&lt;/li&gt;
                                                &lt;/ul&gt;

                                                &lt;p&gt;and defined by the &lt;code&gt;Dcm&lt;/code&gt; in &lt;code&gt;DcmDslPeriodicTxConfirmationPduId&lt;/code&gt;.&lt;/p&gt;

                                                &lt;p&gt;This configures the PduId to be used for sending Periodic Transmission.&lt;/p&gt;

                                                &lt;p&gt;This is needed only for TYPE2 Periodic Transmissions.&lt;/p&gt;
                                            &lt;/html&gt;</a:v>
                                      </a:a>
                                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                           type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      </a:a>
                                      <a:a name="LABEL" 
                                           value="Reference to Tx PduId"/>
                                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                      <a:a name="UUID" 
                                           value="f439cc71-51b2-46ca-b1c9-8495de903e21"/>
                                      <a:da name="EDITABLE" value="true"/>
                                      <a:da name="ENABLE" value="true"/>
                                      <a:da name="INVALID" type="XPath" 
                                            expr="node:refvalid(.)" 
                                            false="Invalid reference."/>
                                      <a:da name="REF" 
                                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                                    </v:ref>
                                  </v:ctr>
                                </v:lst>
                              </v:ctr>
                              <v:ctr name="DcmDslResponseOnEvent" 
                                     type="IDENTIFIABLE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;This parameter is used to configure Event Triggered responses for &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86)
                                           service&lt;/p&gt;
                                        &lt;p&gt;If service &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86) is used and TYPE2 communication
                                           is intended for the &lt;code&gt;DcmDslProtocol&lt;/code&gt; processing the &lt;code&gt;ResponseOnEvent&lt;/code&gt;
                                           service requests, configure the Transmission parameters here and reference this &lt;code&gt;DcmDslResponseOnEvent&lt;/code&gt;
                                           from the &lt;code&gt;DcmDslROEConnectionRef&lt;/code&gt; of the corresponding &lt;code&gt;DcmDslProtocol&lt;/code&gt;&apos;s
                                           &lt;code&gt;DcmDslMainConnection&lt;/code&gt;.&lt;/p&gt;

                                        &lt;p&gt;If both sub-containers are inactive that means that the ROE event is processed by the protocol that
                                           owns this connection, and the response is sent using the Tx PduId of the MainConnection where the StartROE
                                           request was received from.&lt;/p&gt;

                                        &lt;p&gt;If DcmDslRoeTxPduRef/DcmDslRoeTxConfirmationPduId parameters are enabled and contains a valid pair for
                                           transmission, then the TxPduId on which the ServiceToRespondTo response is sent is the TxPduId configured
                                           within this DcmDslResponseOnEvent connection.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="FRAME" value="LINE"/>
                                <a:a name="LABEL" value="ROE Configuration"/>
                                <a:a name="UUID" 
                                     value="0bbe05fb-6089-4982-b32f-459105678cfe"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*/DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*/DcmDslConnection/*[.=&apos;DcmDslResponseOnEvent&apos; and asc:getShortName(.) = asc:getShortName(node:current())]) &gt; 1)" 
                                      true="The generated symbolic names for this parameter will not be unique since other                                           DcmDslResponseOnEvent configuration elements are using the same SHORT-NAME."/>
                                <a:da name="TITLE" value="ROE Configuration"/>
                                <v:var name="DcmDslRoeTxConfirmationPduId" 
                                       type="INTEGER">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;

                                          &lt;p&gt;Defines the &lt;code&gt;PduId&lt;/code&gt; to be used by the lower layer (the &lt;code&gt;PduR&lt;/code&gt; or a
                                             &lt;code&gt;TransportProtocol&lt;/code&gt;) in callbacks issued to the &lt;code&gt;Dcm&lt;/code&gt; in order to
                                             perform a data Transmission (from the &lt;code&gt;Dcm&lt;/code&gt;&apos;s point of view):
                                          &lt;/p&gt;
                                          &lt;ul&gt;
                                            &lt;li&gt;&lt;code&gt;Dcm_CopyTxData()&lt;/code&gt;&lt;/li&gt;
                                            &lt;li&gt;&lt;code&gt;Dcm_TpTxConfirmation()&lt;/code&gt;&lt;/li&gt;
                                          &lt;/ul&gt;

                                          &lt;p&gt;Range:&lt;/p&gt;
                                          &lt;ul&gt;
                                            &lt;li&gt;0 .. 65535&lt;/li&gt;
                                          &lt;/ul&gt;

                                          &lt;p&gt;Note: Values configured for the &lt;code&gt;DcmDslRoeTxConfirmationPduId&lt;/code&gt;s shall be zero-based and
                                             consecutive.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                  <a:a name="UUID" 
                                       value="85552057-605f-4b71-a249-eba0aa7e95b8"/>
                                  <a:da name="DEFAULT" value="0"/>
                                  <a:da name="EDITABLE" value="true"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="INVALID" type="Range">
                                    <a:tst expr="&lt;=65535"/>
                                    <a:tst expr="&gt;=0"/>
                                  </a:da>
                                </v:var>
                                <v:ref name="DcmDslRoeTxPduRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                          &lt;p&gt;Reference to the &lt;code&gt;Pdu&lt;/code&gt; in the &lt;code&gt;EcucPduCollection&lt;/code&gt;
                                             configured for this Transmission Channel.&lt;/p&gt;

                                          &lt;p&gt;Through this reference, the &lt;code&gt;Dcm&lt;/code&gt; can resolve the &lt;code&gt;PduId&lt;/code&gt;
                                             used for Transmission in the &lt;code&gt;PduR_DcmTransmit()&lt;/code&gt; API and defined by the
                                             &lt;code&gt;PduR&lt;/code&gt;.&lt;/p&gt;

                                          &lt;p&gt;Through this reference, the &lt;code&gt;PduRouter&lt;/code&gt; can resolve the &lt;code&gt;PduId&lt;/code&gt;
                                             used for Transmission by in the following APIs:&lt;/p&gt;

                                          &lt;ul&gt;
                                            &lt;li&gt;&lt;code&gt;Dcm_CopyTxData()&lt;/code&gt;&lt;/li&gt;
                                            &lt;li&gt;&lt;code&gt;Dcm_TpTxConfirmation()&lt;/code&gt;&lt;/li&gt;
                                          &lt;/ul&gt;

                                          &lt;p&gt;and defined by the &lt;code&gt;Dcm&lt;/code&gt; in &lt;code&gt;DcmDslRoeTxConfirmationPduId&lt;/code&gt;.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to Tx PduId"/>
                                  <a:a name="OPTIONAL" value="true"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="UUID" 
                                       value="42954d7e-d479-4b2e-864b-bc3814acd158"/>
                                  <a:da name="EDITABLE" value="true"/>
                                  <a:da name="ENABLE" value="false"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPduCollection/Pdu"/>
                                </v:ref>
                              </v:ctr>
                            </v:chc>
                          </v:lst>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:lst name="DcmDslServiceRequestManufacturerNotification" 
                           type="MAP">
                      <a:a name="LABEL" 
                           value="Manufacturer Notification Functions"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(count(./*) &gt; 0) and                                      (../../DcmGeneral/DcmRequestManufacturerNotificationEnabled = &apos;false&apos;)" 
                               true="Manufacturer notification is available only if DcmRequestManufacturerNotificationEnabled = TRUE."/>
                        <a:tst 
                               expr="(count(./*) = 0) and                                      (../../DcmGeneral/DcmRequestManufacturerNotificationEnabled = &apos;true&apos;) and                                      (../../DcmGeneral/DcmRteUsage = &apos;true&apos;)" 
                               true="Manufacturer notification is enabled and RTE usage is enabled. So confifigure Manufacture notification functions"/>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="(count(./*) &gt; 0) and (../../DcmGeneral/DcmRteUsage = &apos;false&apos;)" 
                            true="Manufacturer notification functions shall not be defined, because RTE is disabled."/>
                      <v:ctr 
                             name="DcmDslServiceRequestManufacturerNotification" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the names of the Require Ports the &lt;code&gt;Dcm&lt;/code&gt; generates
                                   for the interface &lt;code&gt;ServiceRequestNotification.&lt;/code&gt; for Manufacturer.&lt;/p&gt;

                                &lt;p&gt;The &lt;code&gt;ServiceRequestNotification&lt;/code&gt; interface allows the &lt;code&gt;Dcm&lt;/code&gt;
                                   to:
                                   &lt;ul&gt;
                                     &lt;li&gt;Inquire about permissions of servicing the received diagnostic service request
                                         to the Application, via the &lt;code&gt;xxx_Indication()&lt;/code&gt; operation,
                                         which can choose to reject or accept the request.&lt;/li&gt;
                                     &lt;li&gt;Notify the Application about the results of processing a diagnostic service
                                         request via the &lt;code&gt;xxx_Confirmation()&lt;/code&gt; interface. &lt;/li&gt;
                                   &lt;/ul&gt;&lt;/p&gt;
                                &lt;p&gt;The names of the containers in this list are used to define the name of the
                                   Require Ports generated to access the &lt;code&gt;ServiceRequestNotification&lt;/code&gt;
                                   interface. The R-Port is named &lt;code&gt;ServiceRequestManufacturerNotification_&amp;#60;SWC&amp;#62;&lt;/code&gt;
                                   where &lt;code&gt;&amp;#60;SWC&amp;#62;&lt;/code&gt; is the name of the container
                                   &lt;code&gt;DcmDslServiceRequestManufacturerNotification&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;Note: This container is available only if the configuration parameter
                                         &lt;code&gt;DcmRequestManufacturerNotificationEnabled&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Manufacturer Notification"/>
                        <a:a name="UUID" 
                             value="ab00e8bf-16ba-4163-b7ea-61acda839ab6"/>
                        <a:da name="TITLE" 
                              value="Manufacturer Notification Configuration"/>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmDslServiceRequestSupplierNotification" 
                           type="MAP">
                      <a:a name="LABEL" value="Supplier Notification Functions"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(count(./*) &gt; 0) and                                      (../../DcmGeneral/DcmRequestSupplierNotificationEnabled = &apos;false&apos;)" 
                               true="Supplier notification is available only if DcmRequestSupplierNotificationEnabled = TRUE."/>
                        <a:tst 
                               expr="(count(./*) = 0) and                                      (../../DcmGeneral/DcmRequestSupplierNotificationEnabled = &apos;true&apos;) and                                      (../../DcmGeneral/DcmRteUsage = &apos;true&apos;)" 
                               true="Supplier notification is enabled and RTE usage is enabled. So configure Supplier notification functions"/>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="(count(./*) &gt; 0) and (../../DcmGeneral/DcmRteUsage = &apos;false&apos;)" 
                            true="Supplier notification functions shall not be defined, because RTE is disabled."/>
                      <v:ctr name="DcmDslServiceRequestSupplierNotification" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the names of the Require Ports the &lt;code&gt;Dcm&lt;/code&gt; generates
                                   for the interface &lt;code&gt;ServiceRequestNotification.&lt;/code&gt; for Supplier.&lt;/p&gt;

                                &lt;p&gt;The &lt;code&gt;ServiceRequestNotification&lt;/code&gt; interface allows the &lt;code&gt;Dcm&lt;/code&gt;
                                   to:
                                   &lt;ul&gt;
                                     &lt;li&gt;Inquire about permissions of servicing the received diagnostic service request
                                         to the Application, via the &lt;code&gt;xxx_Indication()&lt;/code&gt; operation,
                                         which can choose to reject or accept the request.&lt;/li&gt;
                                     &lt;li&gt;Notify the Application about the results of processing a diagnostic service
                                         request via the &lt;code&gt;xxx_Confirmation()&lt;/code&gt; interface. &lt;/li&gt;
                                   &lt;/ul&gt;&lt;/p&gt;
                                &lt;p&gt;The names of the containers in this list are used to define the name of the
                                   Require Ports generated to access the &lt;code&gt;ServiceRequestNotification&lt;/code&gt;
                                   interface. The R-Port is named &lt;code&gt;ServiceRequestSupplierNotification_&amp;#60;SWC&amp;#62;&lt;/code&gt;
                                   where &lt;code&gt;&amp;#60;SWC&amp;#62;&lt;/code&gt; is the name of the container
                                   &lt;code&gt;DcmDslServiceRequestSupplierNotification&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;Note: This container is available only if the configuration parameter
                                         &lt;code&gt;DcmRequestSupplierNotificationEnabled&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Supplier Notification"/>
                        <a:a name="UUID" 
                             value="0cbb3c1b-1ae7-4c70-a194-68276c9effe4"/>
                        <a:da name="TITLE" 
                              value="Supplier Notification Configuration"/>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                  <v:ctr name="DcmDsp" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the configuration of the Diagnostic Service Dispatcher (DSP)
                               submodule of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;

                            &lt;p&gt;The DSP submodule analyzes the received Diagnostic Service Request messages,
                               performs consistency checks, acquires data or executes the required function calls
                               in order to execute the service request received and assembles the response.&lt;/p&gt;

                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Diagnostic Service Processing"/>
                    <a:a name="TAB" value="Diagnostic Service Processing"/>
                    <a:a name="UUID" 
                         value="f358e4b5-ce6d-4ab6-b239-0e8924b6271e"/>
                    <v:var name="DcmDspDDDIDcheckPerSourceDID" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Defines whether the DCM module shall check the session, security
                                and mode dependencies per source DIDs with a &lt;code&gt;ReadDataByIdentifier&lt;/code&gt;
                                (0x22) referencing a DID in the range from 0xF200 to 0xF3FF
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Check sources of DDDIDs each time before reading"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="6c680c31-b478-4d49-9862-760609dfaa3b"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmDspGenerateOnlyNeededIOControlOperations" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Defines whether the DCM module shall generate only Client-Server Interface Operations
                                of used IOControl operations.
                                &lt;ul&gt;
                                     &lt;li&gt;
                                      TRUE: The DataServices_&lt;Data&gt; ClientServerInterface generated for &lt;code&gt;DcmDspData&lt;/code&gt; elements referenced by
                                      DIDs which have Control-Access enabled (&lt;code&gt;DcmDspData&lt;/code&gt; elements referenced from &lt;code&gt;DcmDspDidSignal&lt;/code&gt;
                                      elements belonging to &lt;code&gt;DcmDspDid&lt;/code&gt; entries which reference a &lt;code&gt;DcmDspDidInfo&lt;/code&gt; which has
                                      any operations within the &lt;code&gt;DcmDspDidControl&lt;/code&gt; container enabled) shall contain only operations corresponding
                                      to used (configured) IOControl operations.
                                     &lt;/li&gt;
                                     &lt;li&gt;
                                      FALSE: The DataServices_&lt;Data&gt; ClientServerInterface generated for &lt;code&gt;DcmDspData&lt;/code&gt; elements referenced by
                                      DIDs which have Control-Access enabled (&lt;code&gt;DcmDspData&lt;/code&gt; elements referenced from &lt;code&gt;DcmDspDidSignal&lt;/code&gt;
                                      elements belonging to &lt;code&gt;DcmDspDid&lt;/code&gt; entries which reference a &lt;code&gt;DcmDspDidInfo&lt;/code&gt; which has
                                      the &lt;code&gt;DcmDspDidControl&lt;/code&gt; container enabled) shall contain operations corresponding to all IOControl
                                      operations, regardless if they are configured to be used or not.
                                    &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Generate Only Needed IOControl Operations"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="87b5fa44-f0d3-11e5-9ce9-5e5517507c66"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmDspMaxDidToRead" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the maximum allowed number of
                                 DIDs in a single &lt;code&gt;ReadDataByIdentifier&lt;/code&gt; (0x22) service request.&lt;/p&gt;

                              &lt;p&gt;Configure this number depending on the maximum number of DIDs expected to be read. This influences
                                 the size of the Reception Buffers, as these must accomodate the complete &lt;code&gt;ReadDataByIdentifier&lt;/code&gt;
                                 (0x22) service request.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;1 .. 65535 DIDs supported&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Maximum number of DIDs supported"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="b6927cfc-ed5e-4720-98d2-6dba90b2daf2"/>
                      <a:da name="DEFAULT" value="1"/>
                      <a:da name="ENABLE" value="true"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=65535"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                    <v:var name="DcmDspMaxPeriodicDidToRead" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the maximum allowed number of periodic DIDs which can be
                                 requested in a single &lt;code&gt;ReadDataByPeriodicIdentifier&lt;/code&gt; request.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="DcmDspMaxPeriodicDidToRead"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="1"/>
                      <a:da name="ENABLE" value="true"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=65535"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                    <v:var name="DcmDspPowerDownTime" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the minimum time of the
                              stand-by sequence (time duration for which the server remains in the
                              power down sequence during Rapid Power Shutdown), in seconds.
                              &lt;/p&gt;

                              &lt;p&gt;If this parameter is enabled, its value shall be included in the
                              positive response to the &lt;code&gt;EcuReset&lt;/code&gt; (0x11) service request
                              with sub-function &lt;code&gt;enableRapidPowerShutDown&lt;/code&gt; (0x04).
                              &lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;0 .. 254 seconds&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;Note: 255 indicates a failure or time is not available in server.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Power Down Time"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="825599d0-a89c-4c14-a8b3-e005f1e37e85"/>
                      <a:da name="DEFAULT" value="255"/>
                      <a:da name="ENABLE" value="true"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=255"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="DcmDspReturnControlToEcuTimeout" 
                           type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note: This is a Vendor Specific parameter of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt;Defines the maximum amount of time available to
                              execute all &lt;code&gt;ReturnControlToEcu&lt;/code&gt; operations for all signals belonging
                              to DIDs which have IOControl  operations available, i.e. for the DID in question,
                              the referenced &lt;code&gt;DcmDspDidInfo&lt;/code&gt; has the container
                              &lt;code&gt;DcmDspDidControl&lt;/code&gt; enabled and one of the parameters:
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DcmDspDidFreezeCurrentState&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DcmDspDidResetToDefault&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DcmDspDidShortTermAdjustment&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              enabled. As the &lt;code&gt;ReturnControlToEcu&lt;/code&gt; operation for some
                              signals might be asynchronous, this means that the operation may
                              span over more than one Dcm_MainFunction() execution, time in which
                              a new service request might be received by the &lt;code&gt;Dcm&lt;/code&gt;. If
                              this new service request operates on DIDs, the newly requested
                              operations might interfere with the &lt;code&gt;ReturnControlToEcu&lt;/code&gt;
                              operations still being run in the system. Because of this, new
                              operations on DIDs must be rejected until the &lt;code&gt;ReturnControlToEcu&lt;/code&gt;
                              operations have all finished. As this may take an unlimited
                              amount of time if one of the controlled signals fails to return
                              a valid status to the &lt;code&gt;ReturnControlToEcu&lt;/code&gt; operation,
                              there must be a method to limit the time available for these
                              operations to finish. Until the return of control to ECU is
                              complete for all signals, the signals are not considered to be in a
                              stable state. Thus, this parameter has been
                              introduced in order to ensure that the following services:
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;ReadDataByIdentifier&lt;/code&gt; (0x22)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;WriteDataByIdentifier&lt;/code&gt; (0x2E)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;IOControlByIdentifier&lt;/code&gt; (0x2F)&lt;/li&gt;
                              &lt;/ul&gt;
                              which operate on DIDs don&apos;t remain blocked for an
                              unlimited amount of time. &lt;/p&gt;

                              &lt;p&gt;Note: Configure to 0 to allow an unlimited amount of
                              time for this operation to succeed.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;0 .. 30 seconds&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="ReturnControlToEcu processing time"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="1"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=30"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="DcmDspRoutineEnableDefaultInterfaces" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note: This is a Vendor Specific parameter of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt;Defines whether the DCM Module shall call Application default interfaces for
                              each unsupported (unconfigured or unused) RID (RIDs corresponding to configured
                              OBD elements are considered supported).&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The following callout functions shall be present in Application software:
                                                       Dcm_DefaultRoutineStart(), Dcm_DefaultRoutineStop(),
                                                       Dcm_DefaultRoutineRequestRoutineResults().
                                                       For every Routine which is not supported (not configured or not used)
                                                       Dcm module shall call the above Application functions according to the
                                                       requested sub-service.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Every requested Routine which is not supported (not configured
                                                       or not used) shall be rejected by Dcm module with
                                                       DCM_E_REQUESTOUTOFRANGE Nrc.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="RoutineControl Enable Default Interfaces"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="3ac69f4b-e8e1-4de4-9f6f-50254e8f8882"/>
                      <a:da name="DEFAULT" value="FALSE"/>
                    </v:var>
                    <v:var name="DcmDspRoutineEnableRoutineInfoByte" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note: This is a Vendor Specific parameter of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt;Defines whether the DCM Module shall call Application interface for
                              AddRoutineInfoByte, in order to add one more byte to the routine response.&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The following callout function shall be present
                                                       in Application software: Dcm_AddRoutineInfoByte().
                                                       For every Routine which returns E_OK, one more
                                                       byte will be added to the message in the beginning
                                                       of the response.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Every requested routine will response with
                                                        the original configured message.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="RoutineControl Enable Routine Info Byte"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="799d2f70-b4fb-4f2f-9442-36c09efcc4cd"/>
                      <a:da name="DEFAULT" value="FALSE"/>
                    </v:var>
                    <v:var name="DcmDspRoutineVariableLengthInBytes" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note: This is a Vendor Specific parameter of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt;Defines whether the parameter expressing the length of a signal which
                                 is part of a &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service
                                 request or response and has the &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt;
                                 parameter set to &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt; (in generated API calls, the
                                 &lt;code&gt;currentDataLength&lt;/code&gt; parameter) is to express the length of the
                                 input/output signal in bits or Bytes.&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;:  The &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt; signal length
                                                        (the &lt;code&gt;currentDataLength&lt;/code&gt; function parameter)
                                                        is expressed in Bytes.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt; signal length
                                                        (the &lt;code&gt;currentDataLength&lt;/code&gt; function parameter)
                                                        is expressed in bits.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="RoutineControl Variable Length Parameters in Bytes "/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="FALSE"/>
                    </v:var>
                    <v:var name="DcmDspDidEnableDefaultInterfaces" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note: This is a Vendor Specific parameter of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;
                              &lt;p&gt;Defines whether the DCM Module shall call Application default interfaces for each unsupported
                              (unconfigured or unused) DID (Service 0x22 - ReadDataByIdentifier, Service 0x2E - WriteDataByIdentifier,
                              Service 0x2F - InputOutputControlByIdentifier).&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;:  DIDs which are not configured are considered supported and they are handled by the supplier.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: DIDs which are not configured are considered not supported.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Did Enable Default Interface "/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="FALSE"/>
                    </v:var>
                    <v:var name="DcmDspSessionControlTiming" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines whether the positive response for service &lt;code&gt;DiagnosticSessionControl&lt;/code&gt; (0x10)
                                 contains P2 Timing values (&lt;code&gt;P2ServerMax&lt;/code&gt; and &lt;code&gt;P2*ServerMax&lt;/code&gt;, represented
                                 by the &lt;code&gt;DcmDspSessionP2ServerMax&lt;/code&gt; and &lt;code&gt;DcmDspSessionP2StarServerMax&lt;/code&gt;
                                 configuration parameters of the &lt;code&gt;DcmDspSessionRow&lt;/code&gt; describing the entered Diagnostic
                                 Session) or not.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;P2ServerMax&lt;/code&gt; and &lt;code&gt;P2*ServerMax&lt;/code&gt; timing values
                                                         are present in the positive response for service
                                                         &lt;code&gt;DiagnosticSessionControl&lt;/code&gt; (0x10).&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;P2ServerMax&lt;/code&gt; and &lt;code&gt;P2*ServerMax&lt;/code&gt; timing values
                                                          are not present in the positive response for service
                                                          &lt;code&gt;DiagnosticSessionControl&lt;/code&gt; (0x10).&lt;/li&gt;
                                &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable Timing values in positive response"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:ctr name="DcmDspComControl" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration for the &lt;code&gt;CommunicationControl&lt;/code&gt; (0x28) UDS service. &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Com Control"/>
                      <a:a name="UUID" 
                           value="ECUC:0c9e3894-cb67-40b2-85ec-e98eaa82ce22"/>
                      <a:da name="EDITABLE" value="false"/>
                      <v:lst name="DcmDspComControlAllChannel" type="MAP">
                        <a:a name="LABEL" value="All Com Control Channel"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <v:ctr name="DcmDspComControlAllChannel" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines a collection of &lt;code&gt;ComMChannel&lt;/code&gt;s which shall be controlled if all
                                     networks are addressed by the &lt;code&gt;CommunicationControl&lt;/code&gt; (0x28)
                                     service request.&lt;/p&gt;

                                  &lt;p&gt;If the &lt;code&gt;CommunicationControl&lt;/code&gt; (0x28) is requested with the
                                    &lt;code&gt;subnet&lt;/code&gt; parameter (bits 4 .. 7) of the &lt;code&gt;communicationType&lt;/code&gt;
                                    parameter in the &lt;code&gt;CommunicationControl&lt;/code&gt; (0x28) request message equal
                                    to 0x00, the &lt;code&gt;Dcm&lt;/code&gt; shall apply the requested &lt;code&gt;controlType&lt;/code&gt;
                                    on all the Channels referenced here.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" value="All Com Control Channel"/>
                          <a:a name="UUID" 
                               value="ECUC:65450923-f2d8-466d-9545-687f4c3c9ce3"/>
                          <v:ref name="DcmDspAllComMChannelRef" 
                                 type="CHOICE-REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to a &lt;code&gt;ComMChannel&lt;/code&gt; to be considered as part of the &apos;All channels&apos; collection.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="All Com Channel Refrence"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:5912f62f-df55-4be2-9c52-e16cbc0b35af"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference."/>
                              <a:tst 
                                     expr="text:uniq(../../*/DcmDspAllComMChannelRef, .)" 
                                     false="All ComM Channel Reference must be unique."/>
                            </a:da>
                            <a:da name="REF">
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel</a:v>
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMChannel</a:v>
                            </a:da>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                      <v:ctr name="DcmDspComControlSetting" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt; Defines the configuration of the Communication control setting mode arbitration.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="All Com Control Setting"/>
                        <a:a name="UUID" 
                             value="ECUC:dcd07ce7-0e48-4e1f-9c40-a67735694989"/>
                        <v:ref 
                               name="DcmDspComControlCommunicationReEnableModeRuleRef" 
                               type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; which controls re-enabling of communication
                                     by the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;

                                  &lt;p&gt;If this &lt;code&gt;DcmDspModeRule&lt;/code&gt; evaluates to &lt;code&gt;FALSE&lt;/code&gt;, for each controlled network,
                                     the &lt;code&gt;Dcm&lt;/code&gt; shall:
                                     &lt;ul&gt;
                                       &lt;li&gt;Switch the mode of the &lt;code&gt;Dcm_CommunicationControl_&amp;#60;Network&amp;#62;&lt;/code&gt;
                                           &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt; to &lt;code&gt;DCM_ENABLE_RX_TX_NORM_NM&lt;/code&gt;&lt;/li&gt;
                                       &lt;li&gt;Call the &lt;code&gt;BswM_Dcm_CommunicationMode_CurrentState()&lt;/code&gt; API with:
                                         &lt;ul&gt;
                                           &lt;li&gt;&lt;code&gt;Network&lt;/code&gt; set to the &lt;code&gt;ComMChannel&lt;/code&gt; of the controlled network&lt;/li&gt;
                                           &lt;li&gt;&lt;code&gt;RequestedMode&lt;/code&gt; set to &lt;code&gt;DCM_ENABLE_RX_TX_NORM_NM&lt;/code&gt;&lt;/li&gt;
                                         &lt;/ul&gt;&lt;/li&gt;
                                     &lt;/ul&gt;&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Re-enabling Com Control Mode Rule Refrence"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:8a627083-6c30-4af3-a8b6-a78d4dd06ab0"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="(as:modconf(&apos;Dcm&apos;)[1]/DcmGeneral/DcmModeDeclarationSupport = &apos;true&apos;)" 
                                true="Mode declaration support (configuration parameter DcmModeDeclarationSupport)                                          needs to be enabled in order for this feature to be usable"/>
                        </v:ref>
                      </v:ctr>
                      <v:lst name="DcmDspComControlSpecificChannel" type="MAP">
                        <a:a name="LABEL" value="Com Control Specific Channel"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <v:ctr name="DcmDspComControlSpecificChannel" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the correspondence between the &lt;code&gt;subnet&lt;/code&gt; parameter
                                     (bits 4 .. 7) of the &lt;code&gt;communicationType&lt;/code&gt; parameter in the
                                     &lt;code&gt;CommunicationControl&lt;/code&gt; (0x28) request message and a specific
                                     &lt;code&gt;ComMChannel&lt;/code&gt; which shall be controlled as a result of
                                     this request.&lt;/p&gt;

                                  &lt;p&gt;Configure the necessary &lt;code&gt;ComMChannel&lt;/code&gt;s to be controlled here.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" value="Com Control Specific Channel"/>
                          <a:a name="UUID" 
                               value="ECUC:374e181d-e674-4ad6-bb50-aed37d372b37"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(count(../*[DcmDspSubnetNumber = node:current()/DcmDspSubnetNumber and DcmDspSpecificComMChannelRef = node:current()/DcmDspSpecificComMChannelRef]) &gt; 1)" 
                                true="All ComM Channel Reference and corresponding Subnet numbers must be unique as a pair."/>
                          <a:da name="WARNING" type="XPath" 
                                expr="(count(../*) = 0)" 
                                true="If DcmDspComControlCommunicationReEnableModeRuleRef is enabled but no DcmDspComControlSpecificChannels are configured,                                          no channels can be reset when the referenced mode rule fails."/>
                          <v:var name="DcmDspSubnetNumber" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the subnet number.&lt;/p&gt;

                                    &lt;p&gt;Configure the expected &lt;code&gt;subnet&lt;/code&gt; parameter
                                       (bits 4 .. 7) of the &lt;code&gt;communicationType&lt;/code&gt; parameter in the
                                       &lt;code&gt;CommunicationControl&lt;/code&gt; (0x28) request message here.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Subnet Number"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="ECUC:ed492ab2-a4e0-41b7-ae06-1f153246af19"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=14"/>
                              <a:tst expr="&gt;=1"/>
                            </a:da>
                          </v:var>
                          <v:ref name="DcmDspSpecificComMChannelRef" 
                                 type="CHOICE-REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to the &lt;code&gt;ComMChannel&lt;/code&gt; corresponding to the configured
                                       &lt;code&gt;DcmDspSubnetNumber&lt;/code&gt;.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="ComM Channel Refrence"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:5558bfb9-fa84-4b06-ab57-e2f7dca19a2a"/>
                            <a:da name="REF">
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel</a:v>
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMChannel</a:v>
                            </a:da>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                      <v:lst name="DcmDspComControlSubNode" type="MAP">
                        <a:a name="LABEL" value="Communication Control Sub Node"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[(DcmDsdSidTabServiceId = num:hextoint(&apos;0x28&apos;)) and ((./DcmDsdSubService/*/DcmDsdSubServiceId = num:hextoint(&apos;0x04&apos;)) or (./DcmDsdSubService/*/DcmDsdSubServiceId = num:hextoint(&apos;0x05&apos;)))]) &gt; 0) and (count(./*) = 0)" 
                              true="DcmDspComControlSubNode need to be configured if sub-service 0x04 or 0x05 for CommunicationControl(0x28) is configured."/>
                        <v:ctr name="DcmDspComControlSubNode" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;This container gives information about the node identification
                                  number and the ComM channel used to address a sub-network.&lt;/p&gt;

                                  &lt;p&gt;Configure the necessary &lt;code&gt;ComMChannel&lt;/code&gt;s to be controlled here.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Communication Control Sub Node"/>
                          <a:a name="UUID" 
                               value="ECUC:ff9bcc5c-d352-11e6-bf26-cec0c932ce01"/>
                          <v:var name="DcmDspComControlSubNodeId" 
                                 type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the subnode ID.&lt;/p&gt;

                                    &lt;p&gt;The node identification number &lt;code&gt;DcmDspComControlSubNodeId&lt;/code&gt; is adressed by the
                                    &lt;code&gt;CommunicationControl (0x28)&lt;/code&gt; request.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="SubNode ID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="ECUC:c47fde6e-d353-11e6-bf26-cec0c932ce01"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=65535"/>
                                <mt:tst expr="&gt;=1"/>
                              </mt:range>
                              <mt:xpath 
                                        false="Communication Control SubNode ID should be unique." 
                                        expr="text:uniq(../../*/DcmDspComControlSubNodeId, .)"/>
                            </a:da>
                          </v:var>
                          <v:ref name="DcmDspComControlSubNodeComMChannelRef" 
                                 type="CHOICE-REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to the &lt;code&gt;ComMChannel&lt;/code&gt; corresponding to the configured
                                       &lt;code&gt;DcmDspComControlSubNodeId&lt;/code&gt;.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="ComM Channel Refrence"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:a0d9a4de-d355-11e6-bf26-cec0c932ce01"/>
                            <a:da name="REF">
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel</a:v>
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMChannel</a:v>
                            </a:da>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:ctr name="DcmDspControlDTCSetting" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines configuration for the behaviour of the &lt;code&gt;ControlDTCSetting&lt;/code&gt; (0x85) service handler.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="ECUC:f52ecd11-ea14-4748-9443-0abd77616c88"/>
                      <a:da name="EDITABLE" value="false"/>
                      <v:var name="DcmSupportDTCSettingControlOptionRecord" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;This configuration switch defines if the DTCSettingControlOptionRecord is required in the request message or not.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: all requests to the &lt;code&gt;ControlDTCSetting (0x85)&lt;/code&gt; service shall contain the
                                                         &lt;code&gt;DTCSettingControlOptionRecord&lt;/code&gt;, i.e. requests to the &lt;code&gt;ControlDTCSetting (0x85)&lt;/code&gt;
                                                         service not containing the &lt;code&gt;DTCSettingControlOptionRecord&lt;/code&gt; will be
                                                         rejected with an &lt;code&gt;IncorrectMessageLengthOrInvalidFormat (0x13)&lt;/code&gt; NRC.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: all requests to the &lt;code&gt;ControlDTCSetting (0x85)&lt;/code&gt; service shall contain nothing else
                                                          except the &lt;code&gt;DTCSettingType&lt;/code&gt;, i.e. requests to the &lt;code&gt;ControlDTCSetting (0x85)&lt;/code&gt;
                                                          containing any other data besides the &lt;code&gt;DTCSettingType&lt;/code&gt; will be
                                                          rejected with an &lt;code&gt;IncorrectMessageLengthOrInvalidFormat (0x13)&lt;/code&gt; NRC.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Enable ControlOptionRecord"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="1703f860-70c2-11e4-9803-0800200c9a67"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:ref name="DcmDspControlDTCSettingReEnableModeRuleRef" 
                             type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                  &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; which controls re-enabling of DTC Setting
                                     by the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;

                                  &lt;p&gt;If this &lt;code&gt;DcmDspModeRule&lt;/code&gt; evaluates to &lt;code&gt;FALSE&lt;/code&gt;, in case the DTC Setting,
                                     the &lt;code&gt;Dcm&lt;/code&gt; shall:
                                     &lt;ul&gt;
                                       &lt;li&gt;Switch the mode of the &lt;code&gt;DcmControlDTCSetting&lt;/code&gt;
                                           &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt; to the &lt;code&gt;ENABLEDTCSETTING&lt;/code&gt; &lt;code&gt;ModeDeclaration&lt;/code&gt;&lt;/li&gt;
                                       &lt;li&gt;Call the &lt;code&gt;Dem_EnableDTCSetting()&lt;/code&gt; API &lt;/li&gt;
                                     &lt;/ul&gt;&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="ECUC:445fcc69-e94a-4073-a171-83af0d10d7ea"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                      </v:ref>
                    </v:ctr>
                    <v:lst name="DcmDspData" type="MAP">
                      <a:a name="LABEL" value="DID Data Configuration"/>
                      <a:a name="ROWS" value="11"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <v:ctr name="DcmDspData" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the configuration parameters for &lt;code&gt;DcmDspData&lt;/code&gt; elements
                                   representing DID signals.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="DID Data Configuration"/>
                        <a:a name="TAB" value="DID Data Configuration"/>
                        <a:a name="UUID" 
                             value="80473676-5b34-4c8f-a0a4-836ebccf765d"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="Dcm:DcmDspDataVerify1(.)" 
                                 true="DcmDspDataReadFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC and a DID signal referencing this DID Data configuration has Read Access or Control Access"/>
                          <a:tst expr="Dcm:DcmDspDataVerify2(.)" 
                                 true="DcmDspDataConditionCheckReadFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC and a DID signal referencing this DID Data configuration has Read Access or Control Access"/>
                          <a:tst expr="Dcm:DcmDspDataVerify3(.)" 
                                 true="DcmDspDataReadDataLengthFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC, the data length of this DID is not fixed, and a DID signal referencing this DID Data configuration has Read Access or Control Access"/>
                          <a:tst expr="Dcm:DcmDspDataVerify4(.)" 
                                 true="DcmDspDataFreezeCurrentStateFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC and a DID signal referencing this DID Data configuration has Control Access"/>
                          <a:tst expr="Dcm:DcmDspDataVerify5(.)" 
                                 true="DcmDspDataResetToDefaultFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC and a DID signal referencing this DID Data configuration has Control Access"/>
                          <a:tst expr="Dcm:DcmDspDataVerify6(.)" 
                                 true="DcmDspDataReturnControlToEcuFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC and a DID signal referencing this DID Data configuration has either DcmDspDidReturnControlToEcu, DcmDspDidFreezeCurrentState, DcmDspDidResetToDefault or DcmDspDidShortTermAdjustment enabled"/>
                          <a:tst expr="Dcm:DcmDspDataVerify7(.)" 
                                 true="DcmDspDataShortTermAdjustmentFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC and a DID signal referencing this DID Data configuration has Control Access"/>
                          <a:tst expr="Dcm:DcmDspDataVerify8(.)" 
                                 true="DcmDspDataWriteFnc needs to be configured, as the Data Access Interface is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC and a DID signal referencing this DID Data configuration has Write Access"/>
                          <a:tst expr="Dcm:DcmDspDataVerify9(.)" 
                                 true="Configure DcmDspDataScalingInfoSize since Xxx_GetScalingInformation() function is configured in the configuration parameter DcmDspDataGetScalingInfoFnc"/>
                          <a:tst expr="Dcm:DcmDspDataVerify10(.)" 
                                 true="Configure a valid Xxx_GetScalingInformation() function name since the configuation parameter DcmDspDataScalingInfoSize is configured in the referenced DcmDspDataInfo element and the configuration parameter DcmDspDataUsePort is set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC"/>
                          <a:tst expr="Dcm:DcmDspDataVerify11(.)" 
                                 true="Configure a valid Xxx_GetScalingInformation() function name since the configuration container DcmDspDidReadScalingData is configured in the referenced DcmDspDataInfo element."/>
                          <a:tst expr="Dcm:DcmDspDataVerify12(.)" 
                                 true="Configure DcmDspDataScalingInfoSize since the configuration container DcmDspDidReadScalingData is configured in the referenced DcmDspDataInfo element and the configuration parameter DcmDspDataUsePort is set to USE_DATA_SYNCH_CLIENT_SERVER or USE_DATA_ASYNCH_CLIENT_SERVER."/>
                          <a:tst expr="Dcm:DcmDspDataVerifyUniqueness(.)" 
                                 false="The ShortName of all DcmDspData must be unique (in the whole configuration)."/>
                          <a:tst 
                                 expr="(((./DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER&apos;) or                                            (./DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER_AS_SERVICE&apos;)) and                                            (((./DcmDspDataType) = &apos;UINT8_DYN&apos;) or                                            (node:ref(./DcmDspDataInfoRef)/DcmDspDataFixedLength = &apos;false&apos;)))" 
                                 true="Sender/Receiver interface signals cannot be of variable-length"/>
                          <a:tst 
                                 expr="(((./DcmDspDataType) = &apos;UINT8_DYN&apos;) and                                         (node:ref(./DcmDspDataInfoRef)/DcmDspDataFixedLength = &apos;true&apos;))" 
                                 true="Signals with DcmDspDataType equal to UINT8_DYN must have variable-length"/>
                        </a:da>
                        <a:da name="TITLE" value="DID Data"/>
                        <v:var name="DcmDspDataConditionCheckReadFncUsed" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                   &lt;p&gt;Enables/disables the condition check read function.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Enable Condition Check Function"/>
                          <a:a name="ORIGIN" value="Bugzilla #53669"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="1703f860-70c2-11e4-9803-0800200c9a66"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="DcmDspDataConditionCheckReadFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the Callout used to check for Application conditions
                                     before reading signal data for the DID.&lt;/p&gt;

                                  &lt;p&gt;If, for one of the signals requested to be read, the &lt;code&gt;DcmDspDataConditionCheckReadFnc&lt;/code&gt;
                                     returns &lt;code&gt;E_NOT_OK&lt;/code&gt;, the &lt;code&gt;Dcm&lt;/code&gt; shall respond with a NegativeResponseCode
                                     equal to the &lt;code&gt;ErrorCode&lt;/code&gt; parameter.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt; or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;

                                  &lt;p&gt;Note: The multiplicity of this parameter shall be equal to that of parameter &lt;code&gt;DcmDspDataReadFnc&lt;/code&gt;.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Read DID condition check function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="e7244b22-bd4f-4bb9-853a-5893571f9b12"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure Condition check read function."/>
                        </v:var>
                        <v:var name="DcmDspDataEcuSignal" type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines the string identifying this signal as an ECU Signal for IOControl operations.
                                     This string will be used in order to generate
                                     the &lt;code&gt;IoHwAb_Dcm_&amp;#60;DcmDspDataEcuSignal&amp;#62;&lt;/code&gt; APIs used for IOControl purposes
                                     in the context of  a request for UDS Service &lt;code&gt;InputOutputControlByIdentifier&lt;/code&gt; (0x2F).&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant
                                                                                                            if &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_ECU_SIGNAL&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="ECU Signal access control function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="71f630e3-986c-40c3-b98c-e79e5c23da9f"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                        </v:var>
                        <v:var name="DcmDspDataFreezeCurrentStateFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for requesting the Application to freeze the
                                     current state of an IOControl signal in the context of a request for UDS Service
                                     &lt;code&gt;InputOutputControlByIdentifier&lt;/code&gt; (0x2F) with a &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt;
                                     parameter value of &lt;code&gt;freezeCurrentState&lt;/code&gt; (0x02)&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                 &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Freeze CurrentState function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="d1d4d337-03bb-4781-9608-c6d0ec0a0748"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure freezeCurrentState function."/>
                        </v:var>
                        <v:var name="DcmDspDataGetScalingInfoFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines the name of the callout used for requesting the scaling
                                     information of a DID from the Application in the context of a request for UDS service
                                     &lt;code&gt;ReadScalingDataByIdentifier&lt;/code&gt; (0x24)&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Read ScalingInformation function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="43ea1e43-0e48-41d8-9d7b-3ca32b0ec4be"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="normalize-space(.) = &apos;&apos;" 
                                   true="Configure ReadScalingDataByIdentifier function."/>
                            <a:tst 
                                   expr="text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                   false="Configure a valid Xxx_GetScalingInformation() function name."/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDataReadDataLengthFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for requesting the length of a
                                     DID signal from the application.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Read DID data length function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="204d25c4-15ce-4605-bdfe-2c9285d251c3"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure Read data length function."/>
                        </v:var>
                        <v:var name="DcmDspDataReadEcuSignal" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the string identifying this signal as an ECU Signal with Read access.
                                     This string will be used in order to generate the &lt;code&gt;IoHwAb_Dcm_Read&amp;#60;EcuSignalName&amp;#62;&lt;/code&gt;
                                     APIs used when reading the signal data.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_ECU_SIGNAL&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Read ECU Signal data function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="c413ba9b-e531-413e-83df-ad7f2d1d4fa8"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure ECU Signal."/>
                        </v:var>
                        <v:var name="DcmDspDataReadFnc" type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for reading the data of this signal from the Application.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;

                                  &lt;p&gt;Note: The multiplicity of this parameter shall be equal to that of parameter &lt;code&gt;DcmDspDataConditionCheckReadFnc&lt;/code&gt;.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Read DID data function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="5a5846b6-e3c8-442d-bb90-e92d32c475df"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure read function."/>
                        </v:var>
                        <v:var name="DcmDspDataResetToDefaultFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for requesting the Application to reset
                                     an IOControl signal to its default value in the context of a request for UDS Service
                                     &lt;code&gt;InputOutputControlByIdentifier&lt;/code&gt; (0x2F) with a &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt;
                                     parameter value of &lt;code&gt;resetToDefault&lt;/code&gt; (0x01).&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Reset IOControl function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="96e874e5-9e60-4d3d-94c8-390613e999ac"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure ResetToDefault function."/>
                        </v:var>
                        <v:var name="DcmDspDataReturnControlToEcuFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for requesting the Application to  return control of
                                     an IOControl signal to the ECU in the context of a request for UDS Service
                                     &lt;code&gt;InputOutputControlByIdentifier&lt;/code&gt; (0x2F) with a &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt;
                                     parameter value of &lt;code&gt;returnControlToEcu&lt;/code&gt; (0x00).&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Return Control function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="0c851853-afec-4923-89cd-7357beb7d891"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure ReturnControlToEcu function."/>
                        </v:var>
                        <v:var name="DcmDspDataShortTermAdjustmentFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for requesting the Application to adjust
                                     an IOControl signal to to a given value in the context of a request for UDS Service
                                     &lt;code&gt;InputOutputControlByIdentifier&lt;/code&gt; (0x2F) with a &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt;
                                     parameter value of &lt;code&gt;shortTermAdjustment&lt;/code&gt; (0x03).&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Adjust IOSignal function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="77f46eea-1d9a-4ac1-a92b-71aff14249b4"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure ShortTermAdjustment function."/>
                        </v:var>
                        <v:var name="DcmDspDataSize" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the length of the data comprising this signal.&lt;/p&gt;

                                  &lt;p&gt;If this signal has a variable length (its &lt;code&gt;DcmDspDataInfo&lt;/code&gt; referenced via &lt;code&gt;DcmDspDataInfoRef&lt;/code&gt; has parameter
                                     &lt;code&gt;DcmDspDataFixedLength&lt;/code&gt; configured to &lt;code&gt;FALSE&lt;/code&gt;), then this value represents the maximum length of the signal.
                                  &lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 65535 bits&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Data Length (bits)"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="f750c898-a1fd-48dc-863e-b2dcf5957710"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDataType" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Provide the implementation data type of data belonging to a DID.&lt;/p&gt;

                                  &lt;p&gt;Note: This configuration is used in order to facilitate Endianness conversion of the data,
                                           if this is required (see configuration parameter &lt;code&gt;DcmDslProtocolEndiannessConvEnabled&lt;/code&gt;).&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SINT16&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SINT16_N&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SINT32&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SINT32_N&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SINT8&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;SINT8_N&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;UINT16&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;UINT16_N&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;UINT32&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;UINT32_N&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;UINT8&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;UINT8_DYN&lt;/code&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;UINT8_N&lt;/code&gt;&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Data Type"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="6c23c5a4-9a7d-428e-9e3d-57fd13657128"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="RANGE">
                            <a:v>BOOLEAN</a:v>
                            <a:v>SINT16</a:v>
                            <a:v>SINT16_N</a:v>
                            <a:v>SINT32</a:v>
                            <a:v>SINT32_N</a:v>
                            <a:v>SINT8</a:v>
                            <a:v>SINT8_N</a:v>
                            <a:v>UINT16</a:v>
                            <a:v>UINT16_N</a:v>
                            <a:v>UINT32</a:v>
                            <a:v>UINT32_N</a:v>
                            <a:v>UINT8</a:v>
                            <a:v>UINT8_DYN</a:v>
                            <a:v>UINT8_N</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDataUsePort" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines which interface shall be used to access the data of this signal.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;USE_BLOCK_ID&lt;/code&gt;: This signal data shall be read from and written to an &lt;code&gt;NvM&lt;/code&gt; Block,
                                                                   referenced in &lt;code&gt;DcmDspDataBlockIdRef&lt;/code&gt;;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;: This signal data shall be read, written, controlled and the scaling
                                                                         information retrieved by
                                                                         using a synchronous API callout (the operation shall be completed in one
                                                                         single call to the API). Depending on the required functionality, the
                                                                         following callout names shall be configured:
                                                                         &lt;ul&gt;
                                                                           &lt;li&gt;For reading data of the signal:
                                                                               &lt;ul&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataConditionCheckReadFnc&lt;/code&gt;&lt;/li&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataReadDataLengthFnc&lt;/code&gt;&lt;/li&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataReadFnc&lt;/code&gt;&lt;/li&gt;
                                                                               &lt;/ul&gt;&lt;/li&gt;
                                                                           &lt;li&gt;For writing data of the signal:
                                                                               &lt;ul&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataWriteFnc&lt;/code&gt;&lt;/li&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataReadDataLengthFnc&lt;/code&gt;&lt;/li&gt;
                                                                               &lt;/ul&gt;&lt;/li&gt;
                                                                           &lt;li&gt;For IOControl operations of the signal:
                                                                               &lt;ul&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataReturnControlToEcuFnc&lt;/code&gt;&lt;/li&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataResetToDefaultFnc&lt;/code&gt;&lt;/li&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataShortTermAdjustmentFnc&lt;/code&gt;&lt;/li&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataFreezeCurrentStateFnc&lt;/code&gt;&lt;/li&gt;
                                                                               &lt;/ul&gt;&lt;/li&gt;
                                                                           &lt;li&gt;For retreiving the scaling information of the signal:
                                                                               &lt;ul&gt;
                                                                                 &lt;li&gt;&lt;code&gt;DcmDspDataGetScalingInfoFnc&lt;/code&gt;&lt;/li&gt;
                                                                               &lt;/ul&gt;&lt;/li&gt;
                                                                         &lt;/ul&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;: This signal data shall be read, written, controlled and the scaling
                                                                          information retrieved by using an asynchronous
                                                                          AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt; with asynchronous
                                                                          behaviour (the operation shall be completed in a
                                                                          series of calls to the API, the first call being executed with an
                                                                          &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                                          as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                                                          with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                                                          all subsequent executions). Depending on the required functionality, the
                                                                          following callout names shall be configured:
                                                                          &lt;ul&gt;
                                                                            &lt;li&gt;For reading data of the signal:
                                                                                &lt;ul&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataConditionCheckReadFnc&lt;/code&gt;&lt;/li&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataReadDataLengthFnc&lt;/code&gt;&lt;/li&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataReadFnc&lt;/code&gt;&lt;/li&gt;
                                                                                &lt;/ul&gt;&lt;/li&gt;
                                                                            &lt;li&gt;For writing data of the signal:
                                                                                &lt;ul&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataWriteFnc&lt;/code&gt;&lt;/li&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataReadDataLengthFnc&lt;/code&gt;&lt;/li&gt;
                                                                                &lt;/ul&gt;&lt;/li&gt;
                                                                            &lt;li&gt;For IOControl operations of the signal:
                                                                                &lt;ul&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataReturnControlToEcuFnc&lt;/code&gt;&lt;/li&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataResetToDefaultFnc&lt;/code&gt;&lt;/li&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataShortTermAdjustmentFnc&lt;/code&gt;&lt;/li&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataFreezeCurrentStateFnc&lt;/code&gt;&lt;/li&gt;
                                                                                &lt;/ul&gt;&lt;/li&gt;
                                                                            &lt;li&gt;For retreiving the scaling information of the signal:
                                                                                &lt;ul&gt;
                                                                                  &lt;li&gt;&lt;code&gt;DcmDspDataGetScalingInfoFnc&lt;/code&gt;&lt;/li&gt;
                                                                                &lt;/ul&gt;&lt;/li&gt;
                                                                          &lt;/ul&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_DATA_SENDER_RECEIVER&lt;/code&gt;: The DCM will access the Data using an Port requiring a
                                                                               &lt;code&gt;SenderReceiverInterface&lt;/code&gt; (with &lt;code&gt;isService&lt;/code&gt;=false)
                                                                               &lt;code&gt;DataServices_&amp;#60;Data&amp;#62;&lt;/code&gt;.
                                                                               The Port is named &lt;code&gt;DataServices_&amp;#60;Data&amp;#62;&lt;/code&gt; where
                                                                               &lt;code&gt;&amp;#60;Data&amp;#62;&lt;/code&gt; is the name of the container &lt;code&gt;DcmDspData&lt;/code&gt;.
                                                                               &lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_DATA_SENDER_RECEIVER_AS_SERVICE&lt;/code&gt;: The DCM will access the Data using an Port requiring a
                                                                                          &lt;code&gt;SenderReceiverInterface&lt;/code&gt; (with &lt;code&gt;isService&lt;/code&gt;=true)
                                                                                          &lt;code&gt;DataServices_&amp;#60;Data&amp;#62;&lt;/code&gt;.
                                                                                          The Port is named &lt;code&gt;DataServices_&amp;#60;Data&amp;#62;&lt;/code&gt; where
                                                                                          &lt;code&gt;&amp;#60;Data&amp;#62;&lt;/code&gt; is the name of the container &lt;code&gt;DcmDspData&lt;/code&gt;.
                                                                                          &lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_DATA_SYNCH_CLIENT_SERVER&lt;/code&gt;: This signal shall be read, written, controlled and the scaling
                                                                                   information retrieved by
                                                                                   using by using a synchronous AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                                                                   with synchronous behaviour (the operation shall be completed in one
                                                                                   single call to the operation of the generated interface). The &lt;code&gt;Dcm&lt;/code&gt;
                                                                                   shall generate the &lt;code&gt;DataServices_&amp;#60;Data&amp;#62;&lt;/code&gt;
                                                                                   &lt;code&gt;ClientServerInterface&lt;/code&gt;, where &lt;code&gt;&amp;#60;Data&amp;#62;&lt;/code&gt;
                                                                                   is the name of this &lt;code&gt;DcmDspData&lt;/code&gt; container. This
                                                                                   &lt;code&gt;ClientServerInterface&lt;/code&gt; contains the necessary operations for this signal.
                                                                                   A Require Port is generated for this interface and shall be connected to a compatible
                                                                                   Provide Port of an Application Software Component. The name of this Require Port
                                                                                   is the same as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_DATA_ASYNCH_CLIENT_SERVER&lt;/code&gt;: This signal shall be read, written, controlled and the scaling
                                                                                    information retrieved by
                                                                                    using an asynchronous API (the operation shall be completed in a
                                                                                    series of calls to the API, the first call being executed with an
                                                                                    &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                                                    as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                                                                    with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                                                                    all subsequent executions). The &lt;code&gt;Dcm&lt;/code&gt;
                                                                                    shall generate the &lt;code&gt;DataServices_&amp;#60;Data&amp;#62;&lt;/code&gt;
                                                                                    &lt;code&gt;ClientServerInterface&lt;/code&gt;, where &lt;code&gt;&amp;#60;Data&amp;#62;&lt;/code&gt;
                                                                                    is the name of the container &lt;code&gt;DcmDspData&lt;/code&gt;.  This
                                                                                    &lt;code&gt;ClientServerInterface&lt;/code&gt; contains the necessary operations for this signal.
                                                                                    A Require Port is generated for this interface and shall be connected to a compatible
                                                                                    Provide Port of an Application Software Component. The name of this Require Port
                                                                                    is the same as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_ECU_SIGNAL&lt;/code&gt;: &lt;em&gt;The functionality related to this option is not supported by the current implementation.&lt;/em&gt;
                                                                     This signal shall be read, written and cotrolled as an ECU Signal by accessing the related
                                                                     interfaces of the &lt;code&gt;IoHwAb&lt;/code&gt; module.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Data Access Interface"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="2431790f-99b6-4f61-af9b-d5bef9aea874"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(. = &apos;USE_BLOCK_ID&apos;) and (not(node:exists(../DcmDspDataBlockIdRef)))" 
                                   true="Configure the NVM reference in the parameter : DcmDspDataBlockIdRef"/>
                            <a:tst 
                                   expr="(((. = &apos;USE_DATA_ASYNCH_CLIENT_SERVER&apos;) or                                            (. = &apos;USE_DATA_SYNCH_CLIENT_SERVER&apos;) ) and                                          ((../../../../DcmGeneral/DcmRteUsage = &apos;false&apos;)))" 
                                   true="Enable rte usage"/>
                            <a:tst expr="(. = &apos;USE_ECU_SIGNAL&apos;)" 
                                   true="Interface to ECU signal is not currently supported."/>
                            <a:tst 
                                   expr="(node:exists(../DcmDspDataGetScalingInfoFnc) and not((. = &apos;USE_DATA_ASYNCH_FNC&apos;) or (. = &apos;USE_DATA_SYNCH_FNC&apos;)))" 
                                   true="Shall be set to USE_DATA_SYNCH_FNC or USE_DATA_ASYNCH_FNC since GetScalingInformation() function is configured in the configuration parameter DcmDspDataGetScalingInfoFnc"/>
                          </a:da>
                          <a:da name="RANGE">
                            <a:v>USE_BLOCK_ID</a:v>
                            <a:v>USE_DATA_ASYNCH_CLIENT_SERVER</a:v>
                            <a:v>USE_DATA_ASYNCH_FNC</a:v>
                            <a:v>USE_DATA_SENDER_RECEIVER</a:v>
                            <a:v>USE_DATA_SENDER_RECEIVER_AS_SERVICE</a:v>
                            <a:v>USE_DATA_SYNCH_CLIENT_SERVER</a:v>
                            <a:v>USE_DATA_SYNCH_FNC</a:v>
                            <a:v>USE_ECU_SIGNAL</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDataWriteFnc" type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for writing the data of this signal to the Application.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_DATA_ASYNCH_FNC&lt;/code&gt;
                                                                                                            or &lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Write DID Data function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="8f6f3b20-50ba-40c2-95d9-546bfdd0d12e"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Configure write function."/>
                        </v:var>
                        <v:ref name="DcmDspDataInfoRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the &lt;code&gt;DcmDspDataInfo&lt;/code&gt; containing:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Information on whether the length of this signal is fixed or not&lt;/li&gt;
                                    &lt;li&gt;If Scaling information is available for this signal, the size of the scaling information&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to the DID Data Information"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="bc7ea845-ac15-4223-81c1-4e81773a08de"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspDataInfo"/>
                        </v:ref>
                        <v:ref name="DcmDspDataBlockIdRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the &lt;code&gt;NvM&lt;/code&gt; Block used to access the data of this signal, if
                                     &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is configured to &lt;code&gt;USE_BLOCK_ID&lt;/code&gt;.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Data Operation interface type (&lt;code&gt;DcmDspDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if
                                                                                                            &lt;code&gt;DcmDspDataUsePort&lt;/code&gt; is set to &lt;code&gt;USE_BLOCK_ID&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to the NVRAM blockId"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                          <a:a name="UUID" 
                               value="15d7e0d2-0770-4123-b8bb-8e02624258fc"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/NvM/NvMBlockDescriptor"/>
                        </v:ref>
                        <v:var name="DcmDspDataEndianness" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the endianness of the data belonging to a DID in a diagnostic
                                 request or response message.
                              &lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt; = Most significant byte shall be stored at the lowest address.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt; = Most significant byte shall be stored at the highest address&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;OPAQUE&lt;/code&gt; = Opaque data endianness&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="DcmDspDataEndianness"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="406b45a9-771b-49f7-8e29-5857b4846f05"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="RANGE">
                            <a:v>BIG_ENDIAN</a:v>
                            <a:v>LITTLE_ENDIAN</a:v>
                            <a:v>OPAQUE</a:v>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmDspDataInfo" type="MAP">
                      <a:a name="LABEL" value="DID Data Information"/>
                      <a:a name="ROWS" value="11"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <v:ctr name="DcmDspDataInfo" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the following information for a &lt;code&gt;DcmDspData&lt;/code&gt; signal referencing this container
                                   via the &lt;code&gt;DcmDspDataInfoRef&lt;/code&gt; parameter:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Whether the length of this signal is fixed or not.&lt;/li&gt;
                                    &lt;li&gt;If scaling information is available for this signal, the size of the scaling information.&lt;/li&gt;
                                  &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="22c4f2af-51f0-40cd-818b-08ca6310d67a"/>
                        <v:var name="DcmDspDataFixedLength" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;This parameter indicates whether the length of the data of the referencing &lt;code&gt;DcmDspData&lt;/code&gt; signal is fixed.&lt;/p&gt;

                                  &lt;p&gt;If the length of data for a signal is variable, then for interfaces related to this signal for reading, writing and control,
                                     additional parameters shall be included in the signatures to convey information on:
                                     &lt;ul&gt;
                                       &lt;li&gt;The amount of data received from the Application, in case of a Read operation.&lt;/li&gt;
                                       &lt;li&gt;The amount of data received in the service request message, in case of a Write or IOControl operation.&lt;/li&gt;
                                     &lt;/ul&gt;&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The length of the data is fixed.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The length of the data is variable.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Fixed Data Length"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="c4c40468-6862-4962-bdeb-6e2964672f85"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="DcmDspDataScalingInfoSize" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the size in bytes of the scaling information of the referenced
                                     &lt;code&gt;DcmDspData&lt;/code&gt; if the &lt;code&gt;ReadScalingDataByIdentifier&lt;/code&gt; (0x24) service is used.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Size of scaling information"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="2124cbb9-1615-4aa3-8d9e-27da9df39a42"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4294967295"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmDspDid" type="MAP">
                      <a:a name="LABEL" value="Data Identifiers (DIDs)"/>
                      <a:a name="ROWS" value="10"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <v:ctr name="DcmDspDid" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                Defines the configuration for DIDs (Data Identifiers).
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="DSP DID"/>
                        <a:a name="UUID" 
                             value="cce4f370-88fb-426d-8fdf-4001c0e1e076"/>
                        <a:da name="TITLE" value="DID Configuration"/>
                        <a:da name="WARNING" type="XPath" 
                              expr=" (node:exists(DcmDspDidSignal/*[(as:ref(as:ref(DcmDspDidDataRef)/DcmDspDataInfoRef)/DcmDspDataScalingInfoSize)]                                                                         [((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_SYNCH_FNC&apos;) or                                                                         ((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_ASYNCH_FNC&apos;) or                                                                         ((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_SYNCH_CLIENT_SERVER&apos;) or                                                                         ((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort) = &apos;USE_DATA_ASYNCH_CLIENT_SERVER&apos;)]) and                                            (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[(DcmDsdSidTabServiceId = num:hextoint(&apos;0x24&apos;))]) = 0))" 
                              true="Scaling information is configured but service ReadScalingDataByIdentifier (0x24) is not configured."/>
                        <v:var name="DcmDspDidIdentifier" type="INTEGER">
                          <a:a name="DEFAULT_RADIX" value="HEX"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the numeric ID of the Data Identifier according to ISO 14229-1.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0x00FF .. 0xF1FF, 0xF900 .. 0xFFFF: Static defined DIDs, any type of access allowed&lt;/li&gt;
                                    &lt;li&gt;0xF200 .. 0xF2FF: Periodic DIDs, can defined as static or dynamic.
                                                          If defined as static any type of access allowed,
                                                          if defined as dynamic only read access allowed&lt;/li&gt;
                                    &lt;li&gt;0xF300 .. 0xF3FF: Dynamic defined DIDs, only read access allowed&lt;/li&gt;
                                    &lt;li&gt;0xF400 .. 0xFEFF: OBD DIDs (partially reserved for future use), only read access allowed&lt;/li&gt;
                                  &lt;/ul&gt;

                                  &lt;p&gt;Note: When OBD support is not enabled, the DIDs in ranges 0xF400-0xF4FF, 0xF600-0xF6FF
                                  and 0xF800-0xF8FF shall be read as usual UDS DIDs, from the values of their configured signals.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="DID Identifier"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="a7271a8f-0b65-4c11-8478-5ccc82ab20e6"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index + num:hextoint(&apos;0x00FF&apos;))"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=65535"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst false="Data identifier should be unique." 
                                      expr="text:uniq(../../*/DcmDspDidIdentifier, .)"/>
                              <mt:tst 
                                      true="DIDs in range 0xF300..0xF3FF can not be defined as static." 
                                      expr="(    (.&gt;=num:hextoint(&apos;0xF300&apos;) and .&lt;=num:hextoint(&apos;0xF3FF&apos;))                                           and (../DcmDspDidUsed = &apos;true&apos;)                                           and ( ( (node:refvalid(../DcmDspDidInfoRef)) and                                                   (node:ref(../DcmDspDidInfoRef)/DcmDspDidDynamicallyDefined =&apos;false&apos;)                                                 ) or                                                 (count(../DcmDspDidSignal/*) &gt; 0)                                               )                                          )"/>
                              <mt:tst 
                                      true="DIDs in ranges other then 0xF200..0xF3FF can not be defined as dynamic." 
                                      expr="(    (.&lt;=num:hextoint(&apos;0xF1FF&apos;) or .&gt;=num:hextoint(&apos;0xF400&apos;))                                           and (../DcmDspDidUsed = &apos;true&apos;)                                           and (node:refvalid(../DcmDspDidInfoRef))                                           and (node:ref(../DcmDspDidInfoRef)/DcmDspDidDynamicallyDefined =&apos;true&apos;)                                          )"/>
                              <mt:tst 
                                      true="Periodic DIDs (0xF200..0xF2FF) can not be defined in the same time as static and dynamic." 
                                      expr="(    (.&gt;=num:hextoint(&apos;0xF200&apos;) and .&lt;=num:hextoint(&apos;0xF2FF&apos;))                                           and (../DcmDspDidUsed = &apos;true&apos;)                                           and (node:refvalid(../DcmDspDidInfoRef))                                           and (node:ref(../DcmDspDidInfoRef)/DcmDspDidDynamicallyDefined =&apos;true&apos;)                                           and (count(../DcmDspDidSignal/*) &gt; 0)                                          )"/>
                              <mt:tst 
                                      true="OBD DIDs (0xF400..0xF8FF) can have only read and write access." 
                                      expr="(    (.&gt;=num:hextoint(&apos;0xF400&apos;) and .&lt;=num:hextoint(&apos;0xF8FF&apos;))                                           and (../DcmDspDidUsed = &apos;true&apos;)                                           and (node:refvalid(../DcmDspDidInfoRef))                                           and (node:exists(node:ref(../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl))                                          )"/>
                            </mt:xpath>
                          </a:da>
                          <a:da name="WARNING" type="XPath" 
                                expr="(.&gt;=num:hextoint(&apos;0xF400&apos;) and .&lt;=num:hextoint(&apos;0xF8FF&apos;))" 
                                true="DIDs in range 0xF400-0xF8FF are reserved by the ISO 14229-1 document for OBD use and shall always be read as regular DIDs."/>
                        </v:var>
                        <v:var name="DcmDspDidRoeQueueEnabled" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                  &lt;p&gt;Defines whether the ROE queuing mechanism
                                     is enabled for an &lt;code&gt;OnChangeOfDataIdentifier&lt;/code&gt; event configured
                                     for this &lt;code&gt;DcmDspDid&lt;/code&gt; via a &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86)
                                     service request with sub-function &lt;code&gt;OnChangeOfDataIdentifier&lt;/code&gt; (0x03).&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The ROE queue mechanism will be used in
                                                           case of events triggered by this DID.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The ROE event will be sent without queuing. In the event that the
                                                            Dcm is unable to process the event at the moment it occurs, the event
                                                            is not enqueued, but dropped.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable ROE Queue"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="6dcb598a-9145-420c-9de8-8a83e9bb94db"/>
                          <a:a name="VISIBLE" value="false"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                        </v:var>
                        <v:var name="DcmDspDidUsed" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines whether this DID is available for use in the current configuration (for multi-purpose ECUs).&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: This DID is available.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: This DID is not available. The &lt;code&gt;Dcm&lt;/code&gt; behaves as if this DID was
                                                            not configured.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable DID usage"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="625d432f-c1f0-4e65-83fb-a5ec5da81139"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:ref name="DcmDspDidInfoRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the DcmDspDidInfo structure for this DID.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Reference to DID Info"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="dd4a4c43-fe7f-4a8b-b6e3-c28bb1577f8f"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspDidInfo"/>
                        </v:ref>
                        <v:lst name="DcmDspDidRef">
                          <a:a name="LABEL" value="Reference to other DIDs"/>
                          <a:a name="ROWS" value="4"/>
                          <a:a name="TAB" value="GENERAL"/>
                          <v:ref name="DcmDspDidRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Reference to another &lt;code&gt;DcmDspDid&lt;/code&gt;. In case a DID is read and references
                                       other DIDs, the referenced DIDs&apos; data shall be read and concatenated to the first
                                       DID&apos;s data.&lt;/p&gt;

                                    &lt;p&gt;Note: A referenced DID shall not, in turn, reference any other DIDs.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Reference to other DIDs"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="10025914-64d1-4c8f-b4f1-5d123f21393d"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" 
                                     false="Invalid reference."/>
                              <a:tst 
                                     expr="(node:refvalid(.)) and (count(as:ref(.)/DcmDspDidRef/*) &gt; 0)" 
                                     true="The referenced DIDs should not refer other DIDs"/>
                              <a:tst 
                                     expr="(node:refvalid(.)) and (as:ref(as:ref(.)/DcmDspDidInfoRef)/DcmDspDidDynamicallyDefined =&apos;true&apos;)" 
                                     true="A DID may not reference a dynamically defined DID"/>
                            </a:da>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspDid"/>
                          </v:ref>
                        </v:lst>
                        <v:ctr name="DcmDspDidExtRoe" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                  &lt;p&gt;Defines the parameters needed to configure this DID to handle an
                                     &lt;code&gt;OnChangeOfDataIdentifier&lt;/code&gt; ROE event which is externally generated.&lt;/p&gt;

                                  &lt;p&gt;If this container is not configured, an ROE event on this DID will be managed
                                     internally (the comparison of the previous and the current values of the DID will be executed internally).
                                     If this container is configured, the Application may generate an
                                     event by calling either the &lt;code&gt;Dcm_TriggerOnEvent()&lt;/code&gt; API. Furthermore,
                                     the &lt;code&gt;Dcm&lt;/code&gt; shall signal to the Application the activation or deactivation of the
                                     ROE event by executing either the &lt;code&gt;DcmDspDidRoeActivateFnc&lt;/code&gt; callout, if
                                     configured, or by calling the &lt;code&gt;xxx_ActivateEvent&lt;/code&gt; operation of the
                                     &lt;code&gt;ROEServices&lt;/code&gt; &lt;code&gt;ClientServerInterface&lt;/code&gt; on the corresponding generated
                                     Require Port if the &lt;code&gt;DcmDspDidRoeActivateFnc&lt;/code&gt; callout is not configured.
                                     (please refer to the &lt;code&gt;DcmDspDidRoeActivateFnc&lt;/code&gt; parameter for more details).&lt;/p&gt;

                                  &lt;p&gt;The generated Require Port for the &lt;code&gt;ROEServices&lt;/code&gt;
                                     &lt;code&gt;ClientServerInterface&lt;/code&gt; is named
                                     &lt;code&gt;ROEServices_&amp;#60;SWC&amp;#62;&lt;/code&gt; where &lt;code&gt;&amp;#60;SWC&amp;#62;&lt;/code&gt; is the name
                                           of this container.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" value="External ROE-DID Handling"/>
                          <a:a name="UUID" 
                               value="66f33707-7f70-45d8-b8bb-73034f15a726"/>
                          <a:a name="VISIBLE" value="false"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                          <v:var name="DcmDspDidRoeActivateFnc" 
                                 type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;

                                    &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                    &lt;p&gt;Defines the name of the callout used in order to activate/deactivate an ROE event
                                       which is managed externally.&lt;/p&gt;

                                    &lt;p&gt;If this parameter is configured, the &lt;code&gt;Dcm&lt;/code&gt; shall signal to
                                       the Application the activation or deactivation of the
                                       ROE event by executing either the &lt;code&gt;DcmDspDidRoeActivateFnc&lt;/code&gt; callout, if
                                       configured, or by calling the &lt;code&gt;xxx_ActivateEvent&lt;/code&gt; operation of the
                                       &lt;code&gt;ROEServices&lt;/code&gt; &lt;code&gt;ClientServerInterface&lt;/code&gt; on the corresponding generated
                                       Require Port if the &lt;code&gt;DcmDspDidRoeActivateFnc&lt;/code&gt; callout is not configured.
                                    &lt;/p&gt;

                                    &lt;p&gt;The generated Require Port for the &lt;code&gt;ROEServices&lt;/code&gt;
                                       &lt;code&gt;ClientServerInterface&lt;/code&gt; is named
                                       &lt;code&gt;ROEServices_&amp;#60;SWC&amp;#62;&lt;/code&gt; where &lt;code&gt;&amp;#60;SWC&amp;#62;&lt;/code&gt; is the name
                                             of this container.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="ROE Activate/Deactivate Function"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="b7809c1c-e4e4-4b3d-8df7-f8ef6b264ef7"/>
                            <a:da name="ENABLE" value="false"/>
                          </v:var>
                          <v:var name="DcmDspDidRoeEventId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;

                                    &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                    &lt;p&gt;Defines EventId to be used within the &lt;code&gt;Dcm_TriggerOnEvent()&lt;/code&gt; API
                                       and the calls to either:
                                    &lt;ul&gt;
                                      &lt;li&gt;The &lt;code&gt;DcmDspDidRoeActivateFnc&lt;/code&gt; callout, if configured.&lt;/li&gt;
                                      &lt;li&gt;The &lt;code&gt;xxx_ActivateEvent()&lt;/code&gt; operation of the &lt;code&gt;ROEServices&lt;/code&gt;
                                       &lt;code&gt;ClientServerInterface&lt;/code&gt; if the &lt;code&gt;DcmDspDidRoeActivateFnc&lt;/code&gt; callout is not configured.&lt;/li&gt;
                                    &lt;/ul&gt;&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 255&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="ROE Event ID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="e58ba274-284a-4bdd-bb26-ded55eeb5894"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=255"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                        </v:ctr>
                        <v:lst name="DcmDspDidSignal" type="MAP">
                          <a:a name="LABEL" value="DID Signal Configuration"/>
                          <a:a name="ROWS" value="10"/>
                          <a:a name="TAB" value="GENERAL"/>
                          <v:ctr name="DcmDspDidSignal" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;The reference to one &lt;code&gt;DcmDspData&lt;/code&gt; container representing the data of this signal.&lt;/li&gt;
                                      &lt;li&gt;The position of this signal within the DID.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="DID Signal Configuration"/>
                            <a:a name="UUID" 
                                 value="c43b5eae-13a0-4a03-aa95-ae5809e34f34"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="(node:exists(node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMask)) and                                      (node:exists(node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMaskSize)) and                                      (num:i(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspDid/*/DcmDspDidSignal/*[(node:current()/DcmDspDidDataRef = ./DcmDspDidDataRef)][node:ref(node:current()/../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMaskSize != node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMaskSize])) != 0)" 
                                     true="Two DcmDspDids which reference two different DcmDspDidInfos with different settings for DcmDspDidControlMaskSize shall not reference the same DcmDspDidSignal"/>
                              <a:tst 
                                     expr="(node:exists(node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMask)) and                                      (num:i(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspDid/*/DcmDspDidSignal/*[(node:current()/DcmDspDidDataRef = ./DcmDspDidDataRef)][node:ref(node:current()/../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMask != node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMask])) != 0)" 
                                     true="Two DcmDspDids which reference two different DcmDspDidInfos with different settings for DcmDspDidControlMask shall not reference the same DcmDspDidSignal"/>
                              <a:tst 
                                     expr="((count(../*) &gt; 1) and ((node:refvalid(DcmDspDidDataRef)) and (node:refvalid(as:ref(DcmDspDidDataRef)/DcmDspDataInfoRef)) and (as:ref(as:ref(DcmDspDidDataRef)/DcmDspDataInfoRef)/DcmDspDataFixedLength = &apos;false&apos;) and (num:i(num:max(./../*/DcmDspDidDataPos)) &gt; num:i(node:value(./DcmDspDidDataPos))) ))" 
                                     true="Only the signal at the last DID data position of this DID can have variable length."/>
                              <a:tst 
                                     expr="(((as:ref(DcmDspDidDataRef)/DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER&apos;) or (as:ref(DcmDspDidDataRef)/DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER_AS_SERVICE&apos;)) and                                 ((node:exists(as:ref(DcmDspDidDataRef)/DcmDspDataEndianness) and (as:ref(DcmDspDidDataRef)/DcmDspDataEndianness = &apos;BIG_ENDIAN&apos;)) or                                 (not(node:exists(as:ref(DcmDspDidDataRef)/DcmDspDataEndianness)) and (../../../../../DcmGeneral/DcmDspDataDefaultEndianness = &apos;BIG_ENDIAN&apos;))) and                                 ((as:ref(DcmDspDidDataRef)/DcmDspDataSize) &gt; ((8-(DcmDspDidDataPos mod 8)) + ((DcmDspDidDataPos div 8) * 8))))" 
                                     true="The configured signal is out of the bounds of the destination buffer"/>
                              <a:tst 
                                     expr="(node:exists(node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl)) and                                      node:exists(node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMask) and                                      ((node:ref(../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidControlMask) = &apos;DCM_CONTROLMASK_EXTERNAL&apos;) and                                      (node:ref(DcmDspDidDataRef)/DcmDspDataUsePort != &apos;USE_DATA_SYNCH_FNC&apos;)" 
                                     true="If for a DID the referenced DcmDspDidInfoRef&apos;s DcmDspDidControlMask is set to DCM_CONTROLMASK_EXTERNAL, then for all the signals that are configured for that DID, the referenced DcmDspDidDataRef&apos;s DcmDspDataUsePort shall be set to USE_DATA_SYNCH_FNC"/>
                            </a:da>
                            <a:da name="TITLE" value="DID Signal Configuration"/>
                            <v:var name="DcmDspDidDataPos" type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the position(in bits) of the
                                      signal data defined by the &lt;code&gt;DcmDspData&lt;/code&gt; referenced
                                      via &lt;code&gt;DcmDspDidDataRef&lt;/code&gt; within the DID.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 65535 bits&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="DID Data Position"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="fcd48420-79de-4a46-9b3d-3110c86089ad"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=65535"/>
                                <a:tst expr="&gt;=0"/>
                              </a:da>
                            </v:var>
                            <v:ref name="DcmDspDidDataRef" type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspData&lt;/code&gt; container
                                         defining the methods for obtaining/writing this DID signal&apos;s data.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="DID Data Reference"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="f7f2135f-8151-486f-a438-8aba45f84447"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst expr="node:refvalid(.)" 
                                       false="Invalid reference."/>
                                <a:tst 
                                       expr="((node:ref(.)/DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER&apos; or node:ref(.)/DcmDspDataUsePort = &apos;USE_DATA_SENDER_RECEIVER_AS_SERVICE&apos;) and                                   ((node:ref(../../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidFreezeCurrentState = &apos;true&apos;) or                                   (node:ref(../../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidResetToDefault = &apos;true&apos;) or                                   (node:ref(../../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidReturnControlToEcu = &apos;true&apos;) or                                   (node:ref(../../../DcmDspDidInfoRef)/DcmDspDidAccess/DcmDspDidControl/DcmDspDidShortTermAdjustment = &apos;true&apos;)))" 
                                       true="A Did with DidControl access shall not contain signals with sender-receiver access"/>
                              </a:da>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspData"/>
                            </v:ref>
                          </v:ctr>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmDspDidInfo" type="MAP">
                      <a:a name="LABEL" value="DID Information"/>
                      <a:a name="ROWS" value="10"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <v:ctr name="DcmDspDidInfo" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines parameters configuring:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;Whether the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is dynamically or statically defined&lt;/li&gt;
                                  &lt;li&gt;Types of access available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID
                                      (Read, Write or IOControl)&lt;/li&gt;
                                  &lt;li&gt;Permissions for each type of access&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="DID Info"/>
                        <a:a name="UUID" 
                             value="6613f2e0-538f-4a08-a250-788d850717d7"/>
                        <a:da name="EDITABLE" value="true"/>
                        <a:da name="TITLE" value="DID Information"/>
                        <v:var name="DcmDspDDDIDMaxElements" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Maximum number of source elements of a DDDID.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Maximum number of source elements"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="6af8444c-af21-499f-93b3-50e49ad15fbb"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="../DcmDspDidDynamicallyDefined =&apos;true&apos;"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDidDynamicallyDefined" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines if the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is dynamically defined.&lt;/p&gt;

                                  &lt;p&gt;Configure this parameter to &lt;code&gt;TRUE&lt;/code&gt; if the referencing &lt;code&gt;DcmDspDid&lt;/code&gt;
                                     DID is to be defined by a &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt; (0x2C) service request.
                                     &lt;/p&gt;

                                  &lt;p&gt;Range:
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is dynamically defined.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is statically defined.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/p&gt;

                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Is the DID dynamically defined?"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="6c680c31-b476-4d49-9864-760609dfaa2b"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="((. = &apos;true&apos;) and ((node:exists(../DcmDspDidAccess/DcmDspDidWrite)) or ((node:exists(../DcmDspDidAccess/DcmDspDidControl)))))" 
                                true="Dynamically defined DIDs can have only read access."/>
                        </v:var>
                        <v:ctr name="DcmDspDidAccess" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the access types (Read, Write or IOControl) available to the
                                     referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID and,
                                     for each access type, the permissions required.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" value="DID Access"/>
                          <a:a name="UUID" 
                               value="69f4c1bf-9378-4fca-8ebc-e17cb5d16518"/>
                          <a:da name="EDITABLE" value="true"/>
                          <v:ctr name="DcmDspDidControl" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the availability of IOControl access for the referencing
                                       &lt;code&gt;DcmDspDid&lt;/code&gt; DID, IOControl access types and
                                       permissions for IOControl access.&lt;/p&gt;

                                    &lt;p&gt;The available IOControl access types are:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;FreezeCurrentState&lt;/code&gt;: Freezes the current state of the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID signals.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;ReturnControlToEcu&lt;/code&gt;: Returns control over the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID signals to the ECU.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;ResetToDefault&lt;/code&gt;: Resets the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID signals to their default states.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;ShortTermAdjustment&lt;/code&gt;: Adjusts the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID signals to the values included in
                                          the &lt;code&gt;controlOptionRecord&lt;/code&gt;.&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Configure this container if the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID represents input or output signals or internal parameters
                                       that are to be controlled in the context of an &lt;code&gt;InpuOutputControlByIdentifier&lt;/code&gt; (0x2F) service request.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="DID Control"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="UUID" 
                                 value="4701b478-dd7c-40b6-ae3b-0436741e28fe"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="WARNING" type="XPath" 
                                  expr="((node:exists(./DcmDspDidFreezeCurrentState) or node:exists(./DcmDspDidResetToDefault) or node:exists(./DcmDspDidReturnControlToEcu) or node:exists(./DcmDspDidShortTermAdjustment)) and (not(node:exists(../../../../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[./DcmDsdSidTabServiceId = num:hextoint(&apos;0x2F&apos;)]))))" 
                                  true="Optional parameters should not be enabled as service ID 0x2F is not configured"/>
                            <v:var name="DcmDspDidControlMask" 
                                   type="ENUMERATION">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;This indicates the presence of &quot;controlEnableMask&quot; in SWC service interfaces and defines how the Dcm treats a service request.&lt;/p&gt;
                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;DCM_CONTROLMASK_EXTERNAL&lt;/code&gt;: The control enable mask record shall be forwarded within each interface and is handled externally.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;DCM_CONTROLMASK_INTERNAL&lt;/code&gt;: The control enable mask record is handled internally and Dcm controls only the included signals.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;DCM_CONTROLMASK_NO&lt;/code&gt;: No control enable mask handling.&lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;p&gt;
                                        &lt;code&gt; DCM_CONTROLMASK_INTERNAL&lt;/code&gt; is not supported.
                                        To obtain DCM_CONTROLMASK_INTERNAL functionality disable DcmDspDidControlMask and DcmDspDidControlMaskSize.
                                        In this case, the allowed mask size is computed internally as large enough to, considered as bitmask, represent all signals configured for the DID, one bit per signal.
                                      &lt;/p&gt;
                                      &lt;p&gt;
                                        &lt;code&gt;DCM_CONTROLMASK_NO&lt;/code&gt; is not supported.
                                        To obtain DCM_CONTROLMASK_NO functionality disable DcmDspDidControlMask and DcmDspDidControlMaskSize  this use case, the number of signals of the controlled DID is limited to one.
                                      &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="DcmDspDidControlMask"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="c4456b90-ffe8-424b-a7db-f73dc8537647"/>
                              <a:da name="DEFAULT" 
                                    value="DCM_CONTROLMASK_EXTERNAL"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst expr=". = &apos;DCM_CONTROLMASK_NO&apos;" 
                                       true="The functionality related to the value &apos;DCM_CONTROLMASK_NO&apos; is not supported by the current implementation."/>
                                <a:tst expr=". = &apos;DCM_CONTROLMASK_INTERNAL&apos;" 
                                       true="The functionality related to the value &apos;DCM_CONTROLMASK_INTERNAL&apos; is not supported by the current implementation."/>
                                <a:tst 
                                       expr="not(node:exists(../DcmDspDidControlMaskSize)) and (. = &apos;DCM_CONTROLMASK_EXTERNAL&apos;)" 
                                       true="if DcmDspDidControlMask is enabled also DcmDspDidControlMaskSize shall be enabled"/>
                              </a:da>
                              <a:da name="RANGE">
                                <a:v>DCM_CONTROLMASK_EXTERNAL</a:v>
                                <a:v>DCM_CONTROLMASK_INTERNAL</a:v>
                                <a:v>DCM_CONTROLMASK_NO</a:v>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspDidControlMaskSize" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;The value defines the size of the controlEnableMaskRecord in bytes.&lt;/p&gt;
                                      &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="DcmDspDidControlMaskSize"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="b2479e3f-e26d-4b66-b1c3-d7ea52060d81"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=4"/>
                                <a:tst expr="&gt;=1"/>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspDidFreezeCurrentState" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines whether &lt;code&gt;FreezeCurrentState&lt;/code&gt; access is available
                                         for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                      &lt;p&gt;Configure this
                                         parameter to &lt;code&gt;TRUE&lt;/code&gt; if the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is to be used by the
                                         &lt;code&gt;inputOutputControlByIdentifier&lt;/code&gt; (0x2F) service request with
                                         the &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt; parameter
                                         set to &lt;code&gt;FreezeCurrentState&lt;/code&gt; (0x02)&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: &lt;code&gt;FreezeCurrentState&lt;/code&gt; access is available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: &lt;code&gt;FreezeCurrentState&lt;/code&gt; access is not available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Enable FreezeCurrentState"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="516945d8-6372-487e-8a2f-ad7c797f62af"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                            </v:var>
                            <v:var name="DcmDspDidResetToDefault" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines whether &lt;code&gt;ResetToDefault&lt;/code&gt; access is available
                                         for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                      &lt;p&gt;Configure this
                                         parameter to &lt;code&gt;TRUE&lt;/code&gt; if the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is to be used by the
                                         &lt;code&gt;inputOutputControlByIdentifier&lt;/code&gt; (0x2F) service request with
                                         the &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt; parameter
                                         set to &lt;code&gt;ResetToDefault&lt;/code&gt; (0x01)&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: &lt;code&gt;ResetToDefault&lt;/code&gt; access is available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: &lt;code&gt;ResetToDefault&lt;/code&gt; access is not available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Enable ResetToDefault"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="ff950621-f3df-46db-9dde-a5594b75bef8"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                            </v:var>
                            <v:var name="DcmDspDidReturnControlToEcu" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines whether &lt;code&gt;ReturnControlToEcu&lt;/code&gt; access is available
                                         for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                      &lt;p&gt;Configure this
                                         parameter to &lt;code&gt;TRUE&lt;/code&gt; if the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is to be used by the
                                         &lt;code&gt;inputOutputControlByIdentifier&lt;/code&gt; (0x2F) service request with
                                         the &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt; parameter
                                         set to &lt;code&gt;ReturnControlToEcu&lt;/code&gt; (0x00)&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: &lt;code&gt;ReturnControlToEcu&lt;/code&gt; access is available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: &lt;code&gt;ReturnControlToEcu&lt;/code&gt; access is not available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Enable ReturnControlToEcu"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="47a62552-b1f2-4bac-949c-a25672935201"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                            </v:var>
                            <v:var name="DcmDspDidShortTermAdjustment" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines whether &lt;code&gt;ShortTermAdjustment&lt;/code&gt; access is available
                                         for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                      &lt;p&gt;Configure this
                                         parameter to &lt;code&gt;TRUE&lt;/code&gt; if the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID is to be used by the
                                         &lt;code&gt;inputOutputControlByIdentifier&lt;/code&gt; (0x2F) service request with
                                         the &lt;code&gt;controlOptionRecord[inputOutputControlParameter]&lt;/code&gt; parameter
                                         set to &lt;code&gt;ShortTermAdjustment&lt;/code&gt; (0x03)&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: &lt;code&gt;ShortTermAdjustment&lt;/code&gt; access is available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: &lt;code&gt;ShortTermAdjustment&lt;/code&gt; access is not available for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Enable ShortTermAdjustment"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="0ef143ac-8dcd-472a-bdb5-c0b82d5f524a"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                            </v:var>
                            <v:ref name="DcmDspDidControlModeRuleRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before executing any
                                         IOControl operation on the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                      &lt;p&gt;If this parameter is enabled and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service execution is allowed to proceed.
                                         If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service processing is not
                                         allowed to proceed and depending on the referenced mode rule a Negative Response Code is returned to the Tester. If this parameter is disabled, no mode rule
                                         permission check is performed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:b7c04956-9f2b-4e8f-9276-3105d13c2702"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                            </v:ref>
                            <v:lst name="DcmDspDidControlSecurityLevelRef">
                              <a:a name="LABEL" 
                                   value="Reference to Security Levels"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <v:ref name="DcmDspDidControlSecurityLevelRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which IOControl
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e.
                                           IOControl access is allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="a6043c9b-ed52-4ea6-8640-be062bc04750"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="DcmDspDidControlSessionRef">
                              <a:a name="LABEL" 
                                   value="Reference to Diagnostic Sessions"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(count(*[(node:refvalid(.)) and (node:value(node:ref(.)/DcmDspSessionLevel) = 255)]) &gt; 0) and (count(*) &gt; 1)" 
                                    true="If the session &apos;ALL_SESSION_LEVEL&apos; is configured, no other session shall be configured."/>
                              <v:ref name="DcmDspDidControlSessionRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSessionRow&lt;/code&gt;s defining the Diagnostic Sessions in which IOControl
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Diagnostic Session is performed, i.e.
                                           IOControl access is allowed in any Diagnostic Session.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="c7fd9c37-6301-4ea2-a457-d3326f169b7a"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession/DcmDspSessionRow"/>
                              </v:ref>
                            </v:lst>
                            <v:ctr name="DcmDspDidControlEnableMask" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;The shortname of the container value defines the symbol of the controlMask.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="DcmDspDidControlEnableMask"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="UUID" 
                                   value="e3b5c9a1-2868-4b34-88e2-dc862545a245"/>
                              <a:da name="ENABLE" value="false"/>
                              <v:var name="DcmDspDidControlMaskBitPosition" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the position of the bit in the controlMask starting from most significant bit (MSB first) to least significant bit.
                                        This Bit endianness is identical to the controlMask in UDS. The DcmDspDidControlMaskSize should be considered for most significant bit.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Did Control Mask Bit Position"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="36e7c19b-a9ba-418a-8942-05739a4b2e70"/>
                                <a:da name="ENABLE" value="true"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=31"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:ctr>
                          <v:ctr name="DcmDspDidRead" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the availability of Read access for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID and permissions for Read access.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="DID Read"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="UUID" 
                                 value="322f83b1-24ba-45e6-9b94-afbe015784c9"/>
                            <a:da name="ENABLE" value="false"/>
                            <v:ref name="DcmDspDidReadModeRuleRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before executing a
                                         Read operation on the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                      &lt;p&gt;If this parameter is enabled and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service execution is allowed to proceed.
                                         If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service processing is not
                                         allowed to proceed and depending on the referenced mode rule a Negative Response Code is returned to the Tester. If this parameter is disabled, no mode rule
                                         permission check is performed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="DID Read Mode Rule Reference"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:cc5e6e7e-bfe0-44f1-8fc1-bbd5a20112cc"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                            </v:ref>
                            <v:lst name="DcmDspDidReadSecurityLevelRef">
                              <a:a name="LABEL" 
                                   value="Reference to Security Levels"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <v:ref name="DcmDspDidReadSecurityLevelRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which Read
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e.
                                           Read access is allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to Security Levels"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="64fd13c0-a2a2-47e7-a97e-c718acfb0c71"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="DcmDspDidReadSessionRef">
                              <a:a name="LABEL" 
                                   value="Reference to Diagnostic Sessions"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(count(*[(node:refvalid(.)) and (node:value(node:ref(.)/DcmDspSessionLevel) = 255)]) &gt; 0) and (count(*) &gt; 1)" 
                                    true="If the session &apos;ALL_SESSION_LEVEL&apos; is configured, no other session shall be configured."/>
                              <v:ref name="DcmDspDidReadSessionRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSessionRow&lt;/code&gt;s defining the Diagnostic Sessions in which Read
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Diagnostic Session is performed, i.e.
                                           Read access is allowed in any Diagnostic Session.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to Diagnostic Sessions"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="0ea3e8b5-702b-4c8e-8942-ccf119050858"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession/DcmDspSessionRow"/>
                              </v:ref>
                            </v:lst>
                          </v:ctr>
                          <v:ctr name="DcmDspDidWrite" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the availability of Write access for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID and permissions for Write access.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="DID Write"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="UUID" 
                                 value="a20ea87c-7a06-4f1f-ae3f-26e716ee2614"/>
                            <a:da name="ENABLE" value="false"/>
                            <v:ref name="DcmDspDidWriteModeRuleRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before executing a
                                         Read operation on the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                      &lt;p&gt;If this parameter is enabled and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service execution is allowed to proceed.
                                         If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service processing is not
                                         allowed to proceed and depending on the referenced mode rule a Negative Response Code is returned to the Tester. If this parameter is disabled, no mode rule
                                         permission check is performed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="DID Write Mode Rule Reference"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="ECUC:cc5e6e7e-bfe0-44f1-8fc1-bbd5a20112cc"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                            </v:ref>
                            <v:lst name="DcmDspDidWriteSecurityLevelRef">
                              <a:a name="LABEL" 
                                   value="Reference to Security Levels"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <v:ref name="DcmDspDidWriteSecurityLevelRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which Write
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e.
                                           Write access is allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to Security Levels"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="29773e13-066d-4501-aefc-49a57ff423f1"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="DcmDspDidWriteSessionRef">
                              <a:a name="LABEL" 
                                   value="Reference to Diagnostic Sessions"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(count(*[(node:refvalid(.)) and (node:value(node:ref(.)/DcmDspSessionLevel) = 255)]) &gt; 0) and (count(*) &gt; 1)" 
                                    true="If the session &apos;ALL_SESSION_LEVEL&apos; is configured, no other session shall be configured."/>
                              <v:ref name="DcmDspDidWriteSessionRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSessionRow&lt;/code&gt;s defining the Diagnostic Sessions in which Write
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Diagnostic Session is performed, i.e.
                                           Write access is allowed in any Diagnostic Session.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to Diagnostic Sessions"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="cb4c9c5f-20b5-4d6e-8df9-2ba4facf6068"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession/DcmDspSessionRow"/>
                              </v:ref>
                            </v:lst>
                          </v:ctr>
                          <v:ctr name="DcmDspDidReadScalingData" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the availability of Read Scaling Data access for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID and permissions for Read Scaling Data access.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="DID Read Scaling Data"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:da name="ENABLE" value="false"/>
                            <v:lst 
                                   name="DcmDspDidReadScalingDataSecurityLevelRef">
                              <a:a name="LABEL" 
                                   value="Reference to Security Levels"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <v:ref 
                                     name="DcmDspDidReadScalingDataSecurityLevelRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which Read Scaling Data
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e.
                                           Read Scaling Data access is allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to Security Levels"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                              </v:ref>
                            </v:lst>
                            <v:lst name="DcmDspDidReadScalingDataSessionRef">
                              <a:a name="LABEL" 
                                   value="Reference to Diagnostic Sessions"/>
                              <a:a name="ROWS" value="4"/>
                              <a:a name="TAB" value="GENERAL"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(count(*[(node:refvalid(.)) and (node:value(node:ref(.)/DcmDspSessionLevel) = 255)]) &gt; 0) and (count(*) &gt; 1)" 
                                    true="If the session &apos;ALL_SESSION_LEVEL&apos; is configured, no other session shall be configured."/>
                              <v:ref name="DcmDspDidReadScalingDataSessionRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSessionRow&lt;/code&gt;s defining the Diagnostic Sessions in which Read Scaling Data
                                           access shall be allowed for the referencing &lt;code&gt;DcmDspDid&lt;/code&gt; DID.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Diagnostic Session is performed, i.e.
                                           Read Scaling Data access is allowed in any Diagnostic Session.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to Diagnostic Sessions"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference."/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession/DcmDspSessionRow"/>
                              </v:ref>
                            </v:lst>
                          </v:ctr>
                        </v:ctr>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmDspDidRange" type="MAP">
                      <a:a name="LABEL" value="Did Range"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <v:ctr name="DcmDspDidRange" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the configuration of the DID Range.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Did Range"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="DcmDspDidRangeUsePort = &apos;false&apos; and                                     DcmDspDidRangeHasGaps = &apos;true&apos; and                                     not(node:exists(DcmDspDidRangeIsDidAvailableFnc))" 
                                 true="DcmDspDidRangeIsDidAvailableFnc must be specified since the DcmDspDidRangeUsePort is false and DcmDspDidRangeHasGaps is true"/>
                          <a:tst 
                                 expr="DcmDspDidRangeUsePort = &apos;false&apos; and                                     node:refvalid(DcmDspDidRangeInfoRef) and                                     node:exists(node:ref(DcmDspDidRangeInfoRef)/DcmDspDidAccess/DcmDspDidRead) and                                     not(node:exists(DcmDspDidRangeReadDidFnc))" 
                                 true="DcmDspDidRangeReadDidFnc must be specified since the DcmDspDidRangeUsePort is false and DcmDspDidAccess/DcmDspDidRead is enabled in the referenced DidInfo"/>
                          <a:tst 
                                 expr="DcmDspDidRangeUsePort = &apos;false&apos; and                                     node:refvalid(DcmDspDidRangeInfoRef) and                                     node:exists(node:ref(DcmDspDidRangeInfoRef)/DcmDspDidAccess/DcmDspDidWrite) and                                     not(node:exists(DcmDspDidRangeWriteDidFnc))" 
                                 true="DcmDspDidRangeWriteDidFnc must be specified since the DcmDspDidRangeUsePort is false and DcmDspDidAccess/DcmDspDidWrite is enabled in the referenced DidInfo"/>
                          <a:tst 
                                 expr="num:integer(DcmDspDidRangeIdentifierLowerLimit) &lt;= num:integer(DcmDspDidRangeIdentifierUpperLimit)" 
                                 false="UpperLimit must be bigger than LowerLimit"/>
                        </a:da>
                        <v:var name="DcmDspDidRangeHasGaps" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines whether the DID range contains gaps or not.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The DID range contains gaps.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The DID range does not contain gaps.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Did Range Has Gaps"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="DcmDspDidRangeIdentifierLowerLimit" 
                               type="INTEGER">
                          <a:a name="DEFAULT_RADIX" value="HEX"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the lower limit of the DID range.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 65535&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Did Range Lower Limit Id"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=65535"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDidRangeIdentifierUpperLimit" 
                               type="INTEGER">
                          <a:a name="DEFAULT_RADIX" value="HEX"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the upper limit of the DID range.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 65535&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Did Range Upper Limit Id"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDidRangeIsDidAvailableFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for checking if a certain DID
                                     is available within the range or not.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;DID Range Operation interface type (&lt;code&gt;Xxx_IsDidAvailable&lt;/code&gt;):
                                        The configuration of this parameter is only relevant if
                                        &lt;code&gt;DcmDspDidRangeUsePort&lt;/code&gt; is set to &lt;code&gt;FALSE&lt;/code&gt;.&lt;/li&gt;
                                    &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Did Avialable Function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Empty value is not allowed"/>
                        </v:var>
                        <v:var name="DcmDspDidRangeMaxDataLength" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Maximum data length in bytes.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;1 .. 65535 Bytes&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Max Data Length"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspDidRangeReadDidFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for requesting the
                                        data range value of a DID.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Range Operation interface type (&lt;code&gt;Xxx_ReadDidData&lt;/code&gt;):
                                      The configuration of this parameter is only relevant if
                                      &lt;code&gt;DcmDspDidRangeUsePort&lt;/code&gt; is set to &lt;code&gt;FALSE&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Did Range Read Did Function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Empty value is not allowed"/>
                        </v:var>
                        <v:var name="DcmDspDidRangeUsePort" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the type of the interface that shall be used to implement
                                    the &lt;code&gt;IsDidAvailable&lt;/code&gt;, &lt;code&gt;ReadDidData&lt;/code&gt;
                                    and &lt;code&gt;WriteDidData&lt;/code&gt; operations of this DID Range in the
                                    context of a &lt;code&gt;ReadDataByIdentifier&lt;/code&gt; (0x22) or
                                    &lt;code&gt;WriteDataByIdentifier&lt;/code&gt; (0x2E) diagnostic service requests.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;IsDidAvailable&lt;/code&gt;, &lt;code&gt;ReadDidData&lt;/code&gt;
                                      and &lt;code&gt;WriteDidData&lt;/code&gt; operations of this DID Range
                                      are realized using a synchronous
                                      AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt; with asynchronous behaviour
                                      (the operation shall be completed in a series of
                                      calls to the API, the first call being executed with an
                                      &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;,
                                      and as long as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;,
                                      it shall be called with an &lt;code&gt;OpStatus&lt;/code&gt; set to
                                      &lt;code&gt;DCM_PENDING&lt;/code&gt; for  all subsequent executions).
                                      The &lt;code&gt;Dcm&lt;/code&gt; generates the &lt;code&gt;DataServices_DIDRange_&amp;#60;Range&amp;#62;&lt;/code&gt;
                                      &lt;code&gt;ClientServerInterface&lt;/code&gt;. This interface shall implement the
                                      &lt;code&gt;IsDidAvailable&lt;/code&gt; (if the range has gaps), &lt;code&gt;ReadDidData&lt;/code&gt; (if read access is enabled)
                                      and &lt;code&gt;WriteDidData&lt;/code&gt; (if write access is enabled) operations of this DID Range.
                                      A Require Port is generated for this interface and shall
                                      be connected to a compatible Provide Port of an Application Software Component.
                                      The name of this Require Port is the same as the name of the
                                      &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The operations are realized using an asynchronous API callout
                                      (the operation shall be completed in a
                                      series of calls to the API, the first call being executed with an
                                      &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                      as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                      with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                      all subsequent executions). The following callout names shall be
                                      configured for each operation:
                                      &lt;ul&gt;
                                        &lt;li&gt;For operation &lt;code&gt;IsDidAvailable&lt;/code&gt;: &lt;code&gt;DcmDspDidRangeIsDidAvailableFnc&lt;/code&gt;&lt;/li&gt;
                                        &lt;li&gt;For operation &lt;code&gt;ReadDidData&lt;/code&gt;: &lt;code&gt;DcmDspDidRangeReadDidFnc&lt;/code&gt;&lt;/li&gt;
                                        &lt;li&gt;For operation &lt;code&gt;WriteDidData&lt;/code&gt;: &lt;code&gt;DcmDspDidRangeWriteDidFnc&lt;/code&gt;&lt;/li&gt;
                                      &lt;/ul&gt;&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Did Range Use Port"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr=". = &apos;true&apos; and (../../../../DcmGeneral/DcmRteUsage = &apos;false&apos;)" 
                                true="Rte usage must be enabled in order to use the RTE API functions."/>
                        </v:var>
                        <v:var name="DcmDspDidRangeWriteDidFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for writing the
                                        data range value of a DID.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;DID Range Operation interface type (&lt;code&gt;Xxx_WriteDidData&lt;/code&gt;):
                                      The configuration of this parameter is only relevant if
                                      &lt;code&gt;DcmDspDidRangeUsePort&lt;/code&gt; is set to &lt;code&gt;FALSE&lt;/code&gt;.&lt;/li&gt;
                                   &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Did Range write Did Function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="normalize-space(.) = &apos;&apos;" 
                                true="Empty value is not allowed"/>
                        </v:var>
                        <v:ref name="DcmDspDidRangeInfoRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                 &lt;p&gt;Reference to DcmDspDidInfo containing information on this
                                     DID Range.&lt;/p&gt;
                               &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Did Range Information Reference"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                   false="Invalid reference."/>
                            <a:tst 
                                   expr="node:refvalid(.) and node:ref(.)/DcmDspDidDynamicallyDefined = &apos;true&apos;" 
                                   true="Any defined range shall only reference DcmDspDidInfo via DcmDspDidRangeInfoRef, having set DcmDspDidDynamicallyDefined == False"/>
                          </a:da>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspDidInfo"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="DcmDspMemory" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration for memory access&lt;/p&gt;

                              &lt;p&gt;The configuration within this container defines &lt;code&gt;memoryId&lt;/code&gt; entities
                                 representing virtual memory sections. The actual Read and Write accesses
                                 for these virtual memory sections are done via callouts provided by the User,
                                 therefore the significance of such a &lt;code&gt;memoryId&lt;/code&gt; section is Application
                                 implementation-dependent. Additionally, the supported &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt;s
                                 are configured here.&lt;/p&gt;

                              &lt;p&gt;Configure this container if any of the following diagnostic services are required to
                                 be supported by the &lt;code&gt;Dcm&lt;/code&gt;:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;WriteMemoryByAddress&lt;/code&gt; (0x3D)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;RequestDownload&lt;/code&gt; (0x34)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;RequestUpload&lt;/code&gt; (0x35)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;TransferData&lt;/code&gt; (0x36)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;RequestTransferExit&lt;/code&gt; (0x37)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt; (0x2C)&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Memory Access Configuration"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="59f267b7-cbda-48f9-839a-39595fe31a56"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:var name="DcmDspUseMemoryId" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines whether the &lt;code&gt;Dcm&lt;/code&gt; shall use the &lt;code&gt;MemoryIdentifier&lt;/code&gt; parameter
                                 in the calls to the &lt;code&gt;Dcm_WriteMemory&lt;/code&gt; and &lt;code&gt;Dcm_ReadMemory&lt;/code&gt; callouts in the context of
                                 servicing a &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23) or &lt;code&gt;WriteMemoryByAddress&lt;/code&gt; (0x3D) diagnostic
                                 service request.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;Dcm_WriteMemory&lt;/code&gt; and &lt;code&gt;Dcm_ReadMemory&lt;/code&gt; callouts shall be called
                                                           with the &lt;code&gt;MemoryIdentifier&lt;/code&gt; parameter set to the configured &lt;code&gt;DcmDspMemoryIdValue&lt;/code&gt; value.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;Dcm_WriteMemory&lt;/code&gt; and &lt;code&gt;Dcm_ReadMemory&lt;/code&gt; callouts shall be called
                                                            with the &lt;code&gt;MemoryIdentifier&lt;/code&gt; parameter set to 0.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Memory Use Id"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      </v:var>
                      <v:var name="DcmDspMemoryRangeHighNotIncluded" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines whether if the defined memory high limits of the defined ranges are interpreted either as belonging
                                 to the defined memory range or not belonging to the defined memory range.&lt;/p&gt;
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: the values of DcmDspReadMemoryRangeHigh, DcmDspWriteMemoryRangeHigh, DcmDspWriteMemoryRangeByLabelHigh
                                                       and DcmDspReadMemoryRangeByLabelHigh are not part of the defined memory range,
                                                       e.g. (DcmDspReadMemoryRangeHigh-1) is the last address of the defined read range.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: the values of DcmDspReadMemoryRangeHigh, DcmDspWriteMemoryRangeHigh, DcmDspWriteMemoryRangeByLabelHigh
                                                        and DcmDspReadMemoryRangeByLabelHigh are part of the defined memory range,
                                                        e.g. DcmDspReadMemoryRangeHigh is the last address of the defined read range.&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;I.e: The consecutive memory ranges R1 from 100 to 199 and R2 from 200 to 299 can be described as:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;DcmDspMemoryRangeHighNotIncluded = FALSE R1:[100 - 199], R2: [200 - 299], or &lt;/li&gt;
                                &lt;li&gt;DcmDspMemoryRangeHighNotIncluded = TRUE R1:[100 - 200), R2: [200 - 300)&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Purpose of defining the ranges with borders instead of as a pair of values is to allow simplification by taking advantage
                                 of the functionality of defining memory ranges using labels (&lt;code&gt;DcmDspWriteMemoryRangeByLabelInfo&lt;/code&gt;
                                 and &lt;code&gt;DcmDspReadMemoryRangeByLabelInfo&lt;/code&gt;).&lt;/p&gt;
                              &lt;p&gt;In this way the posibility is open to define the same LABEL for a high read/write limit of a range R(n) and the
                                 low read/write limit of the consecutive range R(n+1).&lt;/p&gt;
                              &lt;p&gt;By doing this, a list can be prepared inside the customised header file configured under &lt;code&gt;DcmHeaderFileInclusion&lt;/code&gt;
                                 which will contain only the addresses between the defined ranges.&lt;/p&gt;
                              &lt;p&gt;This has advantages such as ease of modification, and reducing the probability of configuring unused memory regions.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Define ranges using border values"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                      </v:var>
                      <v:ctr name="DcmDspAddressAndLengthFormatIdentifier" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration for &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt;s.&lt;/p&gt;

                              &lt;p&gt;An &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt; defines the number of bytes interpreted
                                 as the &lt;code&gt;memoryAddress&lt;/code&gt; and &lt;code&gt;memorySize&lt;/code&gt; parameters in the request
                                 messages for services &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23), &lt;code&gt;WriteMemoryByAddress&lt;/code&gt;
                                 (0x3D), &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt;, sub-function &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x2C-0x02),
                                 &lt;code&gt;RequestDownload&lt;/code&gt; (0x34)
                                 and &lt;code&gt;RequestUpload&lt;/code&gt; (0x35). This parameter is a one byte value where:
                                 &lt;ul&gt;
                                   &lt;li&gt;Bits 3 .. 0 encode how many subsequent bytes, following the &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt;
                                       in the request message, encode the &lt;code&gt;memoryAddress&lt;/code&gt; and&lt;/li&gt;
                                   &lt;li&gt;Bits 7 .. 4 encode how many subsequent bytes, following the &lt;code&gt;memoryAddress&lt;/code&gt; in the
                                       request message encode the &lt;code&gt;memorySize&lt;/code&gt;.&lt;/li&gt;
                                 &lt;/ul&gt;&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="TITLE" 
                              value="AddressAndLengthFormatIdentifier"/>
                        <v:lst 
                               name="DcmDspSupportedAddressAndLengthFormatIdentifier">
                          <a:a name="LABEL" 
                               value="Supported AddressAndLengthFormatIdentifiers List"/>
                          <a:a name="TAB" 
                               value="Supported AddressAndLengthFormatIdentifiers"/>
                          <a:da name="MIN" value="1"/>
                          <v:var 
                                 name="DcmDspSupportedAddressAndLengthFormatIdentifier" 
                                 type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the supported &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt;s.&lt;/p&gt;

                                    &lt;p&gt;An &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt; defines the number of bytes interpreted
                                       as the &lt;code&gt;memoryAddress&lt;/code&gt; and &lt;code&gt;memorySize&lt;/code&gt; parameters in the request
                                       messages for services &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23), &lt;code&gt;WriteMemoryByAddress&lt;/code&gt;
                                       (0x3D), &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt; (0x2C), &lt;code&gt;RequestDownload&lt;/code&gt; (0x34)
                                       and &lt;code&gt;RequestUpload&lt;/code&gt; (0x35). This parameter is a one byte value where:
                                       &lt;ul&gt;
                                         &lt;li&gt;Bits 3 .. 0 encode how many subsequent bytes, following the &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt;
                                             in the request message, encode the &lt;code&gt;memoryAddress&lt;/code&gt; and &lt;/li&gt;
                                         &lt;li&gt;Bits 7 .. 4 encode how many subsequent bytes, following the &lt;code&gt;memoryAddress&lt;/code&gt; in the
                                             request message encode the &lt;code&gt;memorySize&lt;/code&gt;.&lt;/li&gt;
                                       &lt;/ul&gt;&lt;/p&gt;

                                    &lt;p&gt;Configure the supported &lt;code&gt;AddressAndLengthFormatIdentifier&lt;/code&gt;s here.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 255&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Supported AddressAndLengthFormatIdentifier"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=255"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                              <mt:xpath 
                                        false="The AddressAndLengthFormat Identifiers shall be unique." 
                                        expr="text:uniq(../*, .)"/>
                            </a:da>
                            <a:da name="WARNING" type="XPath" 
                                  expr="((bit:and(.,num:hextoint(&apos;0x0F&apos;)) = 0) or (bit:and(.,num:hextoint(&apos;0xF0&apos;)) = 0))" 
                                  true="If one or both nibbles of AddressAndLengthFormatIdentifier are configured as 0, this shall                                       result in a RequestOutOfRange (0x31) NRC"/>
                          </v:var>
                        </v:lst>
                      </v:ctr>
                      <v:lst name="DcmDspMemoryIdInfo" type="MAP">
                        <a:a name="LABEL" value="Memory Id Info"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="MIN" value="0"/>
                        <v:ctr name="DcmDspMemoryIdInfo" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines a subunit of memory, identified by the the &lt;code&gt;DcmDspMemoryIdValue&lt;/code&gt; identifier
                                   and contains the configuration of Write/Read Memory Ranges and permissions to access these ranges.
                                   These can further be used to represent, per example, different memory devices.&lt;/p&gt;

                                &lt;p&gt;Configure &lt;code&gt;DcmDspMemoryIdInfo&lt;/code&gt; elements in order to use the &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23),
                                   &lt;code&gt;WriteMemoryByAddress&lt;/code&gt; (0x3D) or configure dynamic DIDs by using the
                                   &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt; (0x2C) service request with the
                                   &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x02) sub-function. &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" value="Memory Id Info"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="not(node:exists(DcmDspMemoryIdValue)) and (../../DcmDspUseMemoryId = &apos;true&apos;)" 
                                true="DcmDspMemoryIdValue must be configured if DcmDspUseMemoryId is enabled."/>
                          <a:da name="WARNING" type="XPath" 
                                expr="(count(DcmDspReadMemoryRangeInfo/*) = 0) and (count(DcmDspWriteMemoryRangeInfo/*) = 0)" 
                                true="The configured DcmDspMemoryIdInfo entry is empty, it should contain at least a DcmDspReadMemoryRangeInfo or a DcmDspWriteMemoryRangeInfo."/>
                          <v:var name="DcmDspMemoryIdValue" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the memory device identifier used.&lt;/p&gt;

                                &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                &lt;p&gt;Usage of the Memory ID parameter (&lt;code&gt;DcmDspUseMemoryId&lt;/code&gt;): The configuration of this parameter is only relevant if the
                                   usage of the Memory ID parameter is enabled (&lt;code&gt;DcmDspUseMemoryId&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;).&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 255&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Memory Id Value"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=255"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:lst name="DcmDspReadMemoryRangeInfo" type="MAP">
                            <a:a name="LABEL" 
                                 value="Read Memory Range Configuration"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <v:ctr name="DcmDspReadMemoryRangeInfo" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the configuration of a range of memory addresses available for reading in the context of this
                                       &lt;code&gt;DcmDspMemoryIdInfo&lt;/code&gt;, as well as the necessary permissions for performing a Read operation.&lt;/p&gt;

                                       &lt;p&gt;If a Read operation needs to be performed on a certain memory address using the &lt;code&gt;ReadMemoryByAddress&lt;/code&gt;
                                          (0x23) service, the Memory Range received in the request
                                          (&lt;code&gt;memoryAddress&lt;/code&gt; .. &lt;code&gt;memoryAddress&lt;/code&gt; + &lt;code&gt;memorySize&lt;/code&gt; -1) will be checked if it
                                          is inside the allowed memory ranges, by checking all the configured
                                          &lt;code&gt;DcmDspReadMemoryRangeLow&lt;/code&gt; .. &lt;code&gt;DcmDspReadMemoryRangeHigh&lt;/code&gt; intervals or the
                                          &lt;code&gt;DcmDspReadMemoryRangeByLabelLow&lt;/code&gt; .. &lt;code&gt;DcmDspReadMemoryRangeByLabelHigh&lt;/code&gt; parameters for each
                                          DcmDspReadMemoryRangeByLabelInfo container. If not, a &lt;code&gt;GeneralReject&lt;/code&gt; (0x31) Negative
                                          Response Code is transmitted.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Read Memory Range Information"/>
                              <a:a name="UUID" 
                                   value="645fc76f-73e9-4867-819b-1021ccff78fe"/>
                              <a:da name="EDITABLE" value="true"/>
                              <v:var name="DcmDspReadMemoryRangeHigh" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the upper limit of this Memory Range.&lt;/p&gt;
                                      &lt;p&gt;The range for this value depends on the setting of the &lt;code&gt;DcmDspMemoryRangeHighNotIncluded&lt;/code&gt; parameter&lt;/p&gt;

                                      &lt;p&gt;Range (DcmDspMemoryRangeHighNotIncluded set to FALSE):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 4294967294&lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;p&gt;Range (DcmDspMemoryRangeHighNotIncluded set to TRUE):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;1 .. 4294967295&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Upper Limit of Read Memory Range"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="4e3a304b-feea-4055-8cb0-d79c807b4432"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="INVALID" type="Multi">
                                  <mt:range>
                                    <mt:tst expr="&lt;=4294967295"/>
                                    <mt:tst expr="&gt;=0"/>
                                  </mt:range>
                                  <mt:xpath>
                                    <mt:tst 
                                            true="DcmDspReadMemoryRangeHigh cannot be higher than 4294967294 for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &gt; 4294967294) and (../../../../../DcmDspMemoryRangeHighNotIncluded =  &apos;false&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspReadMemoryRangeHigh cannot be higher than 4294967295 for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &gt; 4294967295) and (../../../../../DcmDspMemoryRangeHighNotIncluded = &apos;true&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspReadMemoryRangeHigh cannot be lower than 1 for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &lt; 1) and (../../../../../DcmDspMemoryRangeHighNotIncluded = &apos;true&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspReadMemoryRangeHigh must be greater or equal to DcmDspReadMemoryRangeLow for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &lt; node:value(../DcmDspReadMemoryRangeLow)) and (../../../../../DcmDspMemoryRangeHighNotIncluded =  &apos;false&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspReadMemoryRangeHigh must be greater than DcmDspReadMemoryRangeLow for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &lt;= node:value(../DcmDspReadMemoryRangeLow)) and (../../../../../DcmDspMemoryRangeHighNotIncluded =  &apos;true&apos;)"/>
                                  </mt:xpath>
                                </a:da>
                              </v:var>
                              <v:var name="DcmDspReadMemoryRangeLow" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the lower limit of this Memory Range.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 4294967294&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Lower Limit of Read Memory Range"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="fa7dfff4-d18d-468d-af5d-e197669ae2ee"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=4294967294"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                              </v:var>
                              <v:ref name="DcmDspReadMemoryRangeModeRuleRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before either:
                                        &lt;ul&gt;
                                          &lt;li&gt;executing any Read access on an address within this Memory Range via the
                                          &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23) service.&lt;/li&gt;
                                          &lt;li&gt;defining a Dynamically Defined DID via the &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt;
                                             (0x2C) service request with the &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x02) sub-function with an
                                              address within this range&lt;/li&gt;
                                        &lt;/ul&gt; &lt;/p&gt;

                                      &lt;p&gt;If a Memory Address within this Memory Range needs to be read from, if this parameter is enabled
                                         and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service
                                         execution is allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service
                                         processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service
                                         processing is not allowed to proceed and depending on the referenced mode rule a Negative Response
                                         Code is returned to the Tester. If this parameter is disabled, no mode rule permission check
                                         is performed.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to read DcmDspModeRule"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:da name="ENABLE" value="false"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                              </v:ref>
                              <v:lst 
                                     name="DcmDspReadMemoryRangeSecurityLevelRef">
                                <a:a name="LABEL" 
                                     value="Reference to Security Levels"/>
                                <a:a name="ROWS" value="4"/>
                                <a:a name="TAB" value="GENERAL"/>
                                <v:ref 
                                       name="DcmDspReadMemoryRangeSecurityLevelRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which
                                           either:
                                          &lt;ul&gt;
                                            &lt;li&gt;executing a Read access on an address within this Memory Range via the
                                            &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23) service or &lt;/li&gt;
                                            &lt;li&gt;defining a Dynamically Defined DID via the &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt;
                                               (0x2C) service request with the &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x02) sub-function with
                                                an address within this range&lt;/li&gt;
                                          &lt;/ul&gt; is allowed.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e. the mentioned operations
                                        are allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to Security Levels"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="UUID" 
                                       value="0b15409f-1ebc-4412-a75a-764d4920cc42"/>
                                  <a:da name="EDITABLE" value="true"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                                  <a:da name="WARNING" type="XPath" 
                                        expr="text:uniq(../*, .)" 
                                        false="A security level shall be selected only once"/>
                                </v:ref>
                              </v:lst>
                            </v:ctr>
                          </v:lst>
                          <v:lst name="DcmDspReadMemoryRangeByLabelInfo" 
                                 type="MAP">
                            <a:a name="LABEL" 
                                 value="Read Memory Range by Label Configuration"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <v:ctr name="DcmDspReadMemoryRangeByLabelInfo" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the configuration of a range of labeled memory addresses available for reading in the context of this
                                       &lt;code&gt;DcmDspMemoryIdInfo&lt;/code&gt;, as well as the necessary permissions for performing a Read operation.&lt;/p&gt;

                                       &lt;p&gt;If a Read operation needs to be performed on a certain memory address using the &lt;code&gt;ReadMemoryByAddress&lt;/code&gt;
                                          (0x23) service, the Memory Range received in the request
                                          (&lt;code&gt;memoryAddress&lt;/code&gt; .. &lt;code&gt;memoryAddress&lt;/code&gt; + &lt;code&gt;memorySize&lt;/code&gt; -1) will be checked if it
                                          is inside the allowed memory ranges, by checking all the configured
                                          &lt;code&gt;DcmDspReadMemoryRangeLow&lt;/code&gt; .. &lt;code&gt;DcmDspReadMemoryRangeHigh&lt;/code&gt; intervals, or the
                                          &lt;code&gt;DcmDspReadMemoryRangeByLabelLow&lt;/code&gt; .. &lt;code&gt;DcmDspReadMemoryRangeByLabelHigh&lt;/code&gt; parameters for each
                                          DcmDspReadMemoryRangeByLabelInfo container If not, a &lt;code&gt;GeneralReject&lt;/code&gt; (0x31) Negative Response
                                          Code is transmitted.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Read Memory Range By Label Information"/>
                              <a:a name="UUID" 
                                   value="6ac4486f-12ca-45c0-80a7-288e693a2319"/>
                              <a:da name="EDITABLE" value="true"/>
                              <v:var name="DcmDspReadMemoryRangeByLabelHigh" 
                                     type="STRING">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the High memory address as label (string) of a range allowed for reading.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Upper Limit of Read Memory Range by Label"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="fa7dfff4-d18d-468d-af5d-e197669ae2ee"/>
                                <a:da name="EDITABLE" value="true"/>
                              </v:var>
                              <v:var name="DcmDspReadMemoryRangeByLabelLow" 
                                     type="STRING">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the Low memory address as label (string) of a range allowed for reading.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Lower Limit of Read Memory Range by Label"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="fa7dfff4-d18d-468d-af5d-e197669ae2ee"/>
                                <a:da name="EDITABLE" value="true"/>
                              </v:var>
                              <v:ref name="DcmDspReadMemoryRangeModeRuleRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before either:
                                          &lt;ul&gt;
                                            &lt;li&gt;executing any Read access on an address within this Memory Range via the
                                            &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23) service.&lt;/li&gt;
                                            &lt;li&gt;defining a Dynamically Defined DID via the &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt;
                                               (0x2C) service request with the &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x02) sub-function with an
                                                address within this range&lt;/li&gt;
                                          &lt;/ul&gt; &lt;/p&gt;

                                        &lt;p&gt;If a Memory Address within this Memory Range needs to be read from, if this parameter is enabled
                                           and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service
                                           execution is allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service
                                           processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service
                                           processing is not allowed to proceed and depending on the referenced mode rule a Negative Response
                                           Code is returned to the Tester. If this parameter is disabled, no mode rule permission check
                                           is performed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to read DcmDspModeRule"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:da name="ENABLE" value="false"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                              </v:ref>
                              <v:lst 
                                     name="DcmDspReadMemoryRangeSecurityLevelRef">
                                <a:a name="LABEL" 
                                     value="Reference to Security Levels"/>
                                <a:a name="ROWS" value="4"/>
                                <a:a name="TAB" value="GENERAL"/>
                                <v:ref 
                                       name="DcmDspReadMemoryRangeSecurityLevelRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which
                                           either:
                                          &lt;ul&gt;
                                            &lt;li&gt;executing a Read access on an address within this Memory Range via the
                                            &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23) service or &lt;/li&gt;
                                            &lt;li&gt;defining a Dynamically Defined DID via the &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt;
                                               (0x2C) service request with the &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x02) sub-function with
                                                an address within this range&lt;/li&gt;
                                          &lt;/ul&gt; is allowed.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e. the mentioned operations
                                        are allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to Security Levels"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="UUID" 
                                       value="0b15409f-1ebc-4412-a75a-764d4920cc42"/>
                                  <a:da name="EDITABLE" value="true"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                                  <a:da name="WARNING" type="XPath" 
                                        expr="text:uniq(../*, .)" 
                                        false="A security level shall be selected only once"/>
                                </v:ref>
                              </v:lst>
                            </v:ctr>
                          </v:lst>
                          <v:lst name="DcmDspWriteMemoryRangeInfo" type="MAP">
                            <a:a name="LABEL" 
                                 value="Write Memory Range Configuration"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <v:ctr name="DcmDspWriteMemoryRangeInfo" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the configuration of a range of memory addresses available for writing in the context of this
                                       &lt;code&gt;DcmDspMemoryIdInfo&lt;/code&gt;, as well as the necessary permissions for performing a Write operation.&lt;/p&gt;

                                       &lt;p&gt;If a Write operation needs to be performed on a certain memory address using the &lt;code&gt;WriteMemoryByAddress&lt;/code&gt;
                                          (0x3D), the Memory Range received in the request
                                          (&lt;code&gt;memoryAddress&lt;/code&gt; .. &lt;code&gt;memoryAddress&lt;/code&gt; + &lt;code&gt;memorySize&lt;/code&gt; -1) will be checked if it
                                          is inside the allowed memory ranges, by checking all the configured
                                          &lt;code&gt;DcmDspWriteMemoryRangeLow&lt;/code&gt; .. &lt;code&gt;DcmDspWriteMemoryRangeHigh&lt;/code&gt; intervals or the
                                          &lt;code&gt;DcmDspWriteMemoryRangeByLabelLow&lt;/code&gt; .. &lt;code&gt;DcmDspWriteMemoryRangeByLabelHigh&lt;/code&gt; parameters for each
                                          DcmDspReadMemoryRangeByLabelInfo container. If not, a &lt;code&gt;GeneralReject&lt;/code&gt; (0x31) Negative Response Code is transmitted.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Write Memory Range Information"/>
                              <a:a name="UUID" 
                                   value="0d474698-7815-4b53-8019-a7814f3a5bf0"/>
                              <v:var name="DcmDspWriteMemoryRangeHigh" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the upper limit of this Memory Range.&lt;/p&gt;
                                      &lt;p&gt;The range for this value depends on the setting of the &lt;code&gt;DcmDspMemoryRangeHighNotIncluded&lt;/code&gt; parameter&lt;/p&gt;

                                      &lt;p&gt;Range (DcmDspMemoryRangeHighNotIncluded set to FALSE):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 4294967294&lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;p&gt;Range (DcmDspMemoryRangeHighNotIncluded set to TRUE):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;1 .. 4294967295&lt;/li&gt;
                                      &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Upper Limit of Write Memory Range"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="95e2adbe-c8bf-4877-b23a-5d6c8579d8dc"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Multi">
                                  <mt:range>
                                    <mt:tst expr="&lt;=4294967295"/>
                                    <mt:tst expr="&gt;=0"/>
                                  </mt:range>
                                  <mt:xpath>
                                    <mt:tst 
                                            true="DcmDspWriteMemoryRangeHigh cannot be higher than 4294967294 for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &gt; 4294967294) and (../../../../../DcmDspMemoryRangeHighNotIncluded =  &apos;false&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspWriteMemoryRangeHigh cannot be higher than 4294967295 for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &gt; 4294967295) and (../../../../../DcmDspMemoryRangeHighNotIncluded = &apos;true&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspWriteMemoryRangeHigh cannot be lower than 1 for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &lt; 1) and (../../../../../DcmDspMemoryRangeHighNotIncluded =  &apos;true&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspWriteMemoryRangeHigh must be greater or equal to DcmDspWriteMemoryRangeLow for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &lt; node:value(../DcmDspWriteMemoryRangeLow)) and (../../../../../DcmDspMemoryRangeHighNotIncluded =  &apos;false&apos;)"/>
                                    <mt:tst 
                                            true="DcmDspWriteMemoryRangeHigh must be greater than DcmDspWriteMemoryRangeLow for the current setting of DcmDspMemoryRangeHighNotIncluded" 
                                            expr="(node:value(.) &lt;= node:value(../DcmDspWriteMemoryRangeLow))and (../../../../../DcmDspMemoryRangeHighNotIncluded =  &apos;true&apos;)"/>
                                  </mt:xpath>
                                </a:da>
                              </v:var>
                              <v:var name="DcmDspWriteMemoryRangeLow" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the lower limit of this Memory Range.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 4294967294&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Lower Limit of Write Memory Range"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="4455895e-4138-429a-9417-235142a645b4"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=4294967294"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                              </v:var>
                              <v:ref name="DcmDspWriteMemoryRangeModeRuleRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before executing any Write access
                                         on an address belonging to this Memory Range via the
                                         &lt;code&gt;WriteMemoryByAddress&lt;/code&gt; (0x3D) service.&lt;/p&gt;

                                      &lt;p&gt;If a Memory Address within this Memory Range needs to be written to, if this parameter is enabled
                                         and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service
                                         execution is allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service
                                         processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service
                                         processing is not allowed to proceed and depending on the referenced mode rule a Negative Response
                                         Code is returned to the Tester. If this parameter is disabled, no mode rule permission check
                                         is performed.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to write DcmDspModeRule"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:da name="ENABLE" value="false"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                              </v:ref>
                              <v:lst 
                                     name="DcmDspWriteMemoryRangeSecurityLevelRef">
                                <a:a name="LABEL" 
                                     value="Reference to Security Levels"/>
                                <a:a name="ROWS" value="4"/>
                                <a:a name="TAB" value="GENERAL"/>
                                <v:ref 
                                       name="DcmDspWriteMemoryRangeSecurityLevelRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which
                                           executing a Write access on an address within this Memory Range via the
                                           &lt;code&gt;ReadMemoryByAddress&lt;/code&gt; (0x23) service is allowed.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e. this
                                                 operation is allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to Security Levels"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="UUID" 
                                       value="cd88afad-6931-47a3-9c19-49c560eed72a"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                                  <a:da name="WARNING" type="XPath" 
                                        expr="text:uniq(../*, .)" 
                                        false="A security level shall be selected only once"/>
                                </v:ref>
                              </v:lst>
                            </v:ctr>
                          </v:lst>
                          <v:lst name="DcmDspWriteMemoryRangeByLabelInfo" 
                                 type="MAP">
                            <a:a name="LABEL" 
                                 value="Write Memory Range by Label Configuration"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <v:ctr name="DcmDspWriteMemoryRangeByLabelInfo" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the configuration of a range of labeled memory addresses available for reading in the context of this
                                       &lt;code&gt;DcmDspMemoryIdInfo&lt;/code&gt;, as well as the necessary permissions for performing a Write operation.&lt;/p&gt;

                                       &lt;p&gt;If a Write operation needs to be performed on a certain memory address using the &lt;code&gt;WriteMemoryByAddress&lt;/code&gt;
                                          (0x3D) service, the Memory Range received in the request
                                          (&lt;code&gt;memoryAddress&lt;/code&gt; .. &lt;code&gt;memoryAddress&lt;/code&gt; + &lt;code&gt;memorySize&lt;/code&gt; -1) will be checked if it
                                          is inside the allowed memory ranges, by checking all the configured
                                          &lt;code&gt;DcmDspWriteMemoryRangeLow&lt;/code&gt; .. &lt;code&gt;DcmDspWriteMemoryRangeHigh&lt;/code&gt; intervals, or the
                                          &lt;code&gt;DcmDspWriteMemoryRangeByLabelLow&lt;/code&gt; .. &lt;code&gt;DcmDspWriteMemoryRangeByLabelHigh&lt;/code&gt; parameters for each
                                           DcmDspWriteMemoryRangeByLabelInfo container If not, a
                                          &lt;code&gt;GeneralReject&lt;/code&gt; (0x31) Negative Response Code is transmitted.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Write Memory Range Information"/>
                              <a:a name="UUID" 
                                   value="c56f9fc7-ecce-4248-9596-7815752c87a6"/>
                              <a:da name="EDITABLE" value="true"/>
                              <v:var name="DcmDspWriteMemoryRangeByLabelHigh" 
                                     type="STRING">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the High memory address as label (string) of a range allowed for reading.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Upper Limit of Write Memory Range by Label"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="6d41f5bb-ce82-492b-b750-c8be369fd5c3"/>
                                <a:da name="EDITABLE" value="true"/>
                              </v:var>
                              <v:var name="DcmDspWriteMemoryRangeByLabelLow" 
                                     type="STRING">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the Low memory address as label (string) of a range allowed for reading.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Lower Limit of Write Memory Range by Label"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="19bcb674-2ed8-4b8c-b59a-77ef387fcb39"/>
                                <a:da name="EDITABLE" value="true"/>
                              </v:var>
                              <v:ref name="DcmDspWriteMemoryRangeModeRuleRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before either:
                                          &lt;ul&gt;
                                            &lt;li&gt;executing any Write access on an address within this Memory Range via the
                                            &lt;code&gt;WriteMemoryByAddress&lt;/code&gt; (0x23) service.&lt;/li&gt;
                                            &lt;li&gt;defining a Dynamically Defined DID via the &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt;
                                               (0x2C) service request with the &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x02) sub-function with an
                                                address within this range&lt;/li&gt;
                                          &lt;/ul&gt; &lt;/p&gt;
                                        &lt;p&gt;If a Memory Address within this Memory Range needs to be read from, if this parameter is enabled
                                           and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service
                                           execution is allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service
                                           processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service
                                           processing is not allowed to proceed and depending on the referenced mode rule a Negative Response
                                           Code is returned to the Tester. If this parameter is disabled, no mode rule permission check
                                           is performed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to read DcmDspModeRule"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:da name="ENABLE" value="false"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                              </v:ref>
                              <v:lst 
                                     name="DcmDspWriteMemoryRangeSecurityLevelRef">
                                <a:a name="LABEL" 
                                     value="Reference to Security Levels"/>
                                <a:a name="ROWS" value="4"/>
                                <a:a name="TAB" value="GENERAL"/>
                                <v:ref 
                                       name="DcmDspWriteMemoryRangeSecurityLevelRef" 
                                       type="REFERENCE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which
                                           either:
                                          &lt;ul&gt;
                                            &lt;li&gt;executing a Write access on an address within this Memory Range via the
                                            &lt;code&gt;WriteMemoryByAddress&lt;/code&gt; (0x23) service or &lt;/li&gt;
                                            &lt;li&gt;defining a Dynamically Defined DID via the &lt;code&gt;DynamicallyDefineDataIdentifier&lt;/code&gt;
                                               (0x2C) service request with the &lt;code&gt;defineByMemoryAddress&lt;/code&gt; (0x02) sub-function with
                                                an address within this range&lt;/li&gt;
                                          &lt;/ul&gt; is allowed.&lt;/p&gt;

                                        &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e. the mentioned operations
                                        are allowed in any Security Level.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                       type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Reference to Security Levels"/>
                                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                  <a:a name="UUID" 
                                       value="0b15409f-1ebc-4412-a75a-764d4920cc42"/>
                                  <a:da name="EDITABLE" value="true"/>
                                  <a:da name="INVALID" type="XPath" 
                                        expr="node:refvalid(.)" 
                                        false="Invalid reference."/>
                                  <a:da name="REF" 
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                                  <a:da name="WARNING" type="XPath" 
                                        expr="text:uniq(../*, .)" 
                                        false="A security level shall be selected only once"/>
                                </v:ref>
                              </v:lst>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:ctr name="DcmDspPeriodicDidTransmission" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration for the Periodic Did transmission.
                                 This container exists only if the UDS Service &lt;code&gt;ReadDataByPeriodicIdentifier&lt;/code&gt;(0x2A)
                                 is configured.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="417a089a-b73f-4123-aecf-629297b2e7c2"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="TITLE" 
                            value="Periodic Did Transmission Configuration"/>
                      <v:var name="DcmDspMaxPeriodicDidScheduler" 
                             type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the maximum number of &lt;code&gt;periodicDataIdentifiers&lt;/code&gt; that can be
                            scheduled concurrently&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DcmDspMaxPeriodicDidScheduler"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspPeriodicDidSamplingBufferSize" 
                             type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the size of a single buffer to which periodic DIDs are
                              sampled. A buffer can hold at most a complete UUDT message and
                              is therefore limited to 8 octets, the first octet being the lower
                              part of the periodic data identifier and the remaining 7 bytes the
                              actual data sample generated by reading that data identifier.
                              These buffers are part of a transmission ring. The number of
                              individual buffers in that transmission ring is given by
                              &lt;code&gt;DcmDspPeriodicDidTransmissionRingEntries&lt;/code&gt;&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="DcmDspPeriodicDidSamplingBufferSize"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="DEFAULT" value="8"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=8"/>
                          <a:tst expr="&gt;=2"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspPeriodicDidTransmissionRingEntries" 
                             type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the number of entries in the transmission ring used to store the
                              periodic DID samples. One such entry represents a single buffer of
                              size &lt;code&gt;DcmDspPeriodicDidSamplingBufferSize&lt;/code&gt; &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="DcmDspPeriodicDidTransmissionRingEntries"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=65535"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspPeriodicDDDIDMaxLength" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Specified the maximum data length that dynamically defined
                                  periodic DID can have. This is relevant when sending periodic
                                  DDDIDs as UUDT messages directly to the IF layer of the
                                  communication stack. The data generated by a periodic DDDID must
                                  fit into one frame of the bus on which it is sent.
                                  For the CAN bus for example the max size of a frame is 8 octets
                                  and because the periodic UUDT message carries the PDID as the
                                  first byte max length for the payload data can be 7 octets.
                                  Therefore, when sending UUDT on CAN
                                  &lt;code&gt;DcmDspPeriodicDDDIDMaxLength&lt;/code&gt; may be configured as 7
                                &lt;/p&gt;
                                &lt;p&gt;Note: This limitation is applicable only to dynamically defined
                                         data identifiers that will be scheduled to be periodically
                                         ready via UDS service ReadDataByPeriodicIdentifier (0x2A).
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Maximum data length of periodic DDDID"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="DEFAULT" value="7"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=65535"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                    <v:ctr name="DcmDspPeriodicTransmission" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration parameters for
                                 Periodic Transmission Processing&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="417a089a-b71f-4423-aecf-629299b2e7c1"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="TITLE" 
                            value="Periodic Did Transmission Configuration"/>
                      <v:var name="DcmDspPeriodicTransmissionSlowRate" 
                             type="FLOAT">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the transmission rate of the requested &lt;code&gt;periodicDataIdentifiers&lt;/code&gt;
                                to be used if the parameter &lt;code&gt;transmissionMode&lt;/code&gt; given in the &lt;code&gt;ReadDataByPeriodicID&lt;/code&gt; request
                                is equal to &quot;0x01&quot; (&quot;&lt;code&gt;sendAtSlowRate&lt;/code&gt;&quot;).&lt;/p&gt;
                              &lt;p&gt; Note: This parameter value must be given in seconds and has to be configured as a multiple of &lt;code&gt;DcmTaskTime&lt;/code&gt;.
                                        A negative value or zero are invalid inputs.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="DcmDspPeriodicTransmissionSlowRate"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range expr="&gt;0"/>
                          <mt:xpath 
                                    true="DcmDspPeriodicTransmissionSlowRate is not a multiple of DcmTaskTime" 
                                    expr="(num:integer((.) * 10000) mod num:integer(../../../DcmGeneral/DcmTaskTime * 10000)) != 0"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspPeriodicTransmissionMediumRate" 
                             type="FLOAT">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the transmission rate of the requested &lt;code&gt;periodicDataIdentifiers&lt;/code&gt;
                                to be used if the parameter transmissionMode given in the ReadDataByPeriodicID request
                                is equal to &quot;0x02&quot; (&quot;&lt;code&gt;sendAtMediumRate&lt;/code&gt;&quot;).&lt;/p&gt;
                              &lt;p&gt; Note: This parameter value must be given in seconds and has to be configured as a multiple of &lt;code&gt;DcmTaskTime&lt;/code&gt;.
                                        A negative value or zero are invalid inputs.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="DcmDspPeriodicTransmissionMediumRate"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range expr="&gt;0"/>
                          <mt:xpath 
                                    true="DcmDspPeriodicTransmissionMediumRate is not a multiple of DcmTaskTime" 
                                    expr="(num:integer((.) * 10000) mod num:integer(../../../DcmGeneral/DcmTaskTime * 10000)) != 0"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspPeriodicTransmissionFastRate" 
                             type="FLOAT">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the transmission rate of the requested &lt;code&gt;periodicDataIdentifiers&lt;/code&gt;
                                to be used if the parameter transmissionMode given in the ReadDataByPeriodicID request
                                is equal to &quot;0x03&quot; (&quot;&lt;code&gt;sendAtFastRate&lt;/code&gt;&quot;).&lt;/p&gt;
                              &lt;p&gt; Note: This parameter value must be given in seconds and has to be configured as a multiple of &lt;code&gt;DcmTaskTime&lt;/code&gt;.
                                        A negative value or zero are invalid inputs.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="DcmDspPeriodicTransmissionFastRate"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range expr="&gt;0"/>
                          <mt:xpath 
                                    true="DcmDspPeriodicTransmissionFastRate is not a multiple of DcmTaskTime" 
                                    expr="(num:integer((.) * 10000) mod num:integer(../../../DcmGeneral/DcmTaskTime * 10000)) != 0"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                    <v:lst name="DcmDspPid" type="MAP">
                      <a:a name="LABEL" value="PID Configuration"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="0"/>
                      <v:ctr name="DcmDspPid" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;Defines the configuration of PIDs to be used in OBD Services:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;$01 - &lt;code&gt;Request Current Powertrain diagnostic Data&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;$02 - &lt;code&gt;Request Power Train FreezeFrame Data&lt;/code&gt;&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="PID"/>
                        <a:a name="UUID" 
                             value="272c5e84-48cf-4b33-b96d-e885d199fb51"/>
                        <a:da name="EDITABLE" value="true"/>
                        <a:da name="TITLE" value="PID Configuration"/>
                        <v:var name="DcmDspPidIdentifier" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines the unique identifier of the PID according to ISO_14229-1
                                  and ISO 15031-5.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 255&lt;/li&gt;
                                  &lt;/ul&gt;

                                  &lt;p&gt;Note: PID 02 is only supported in Service 0x02, it should not be configured since it is always available.&lt;/p&gt;
                                  &lt;p&gt;&lt;em&gt;&lt;b&gt;Note&lt;/b&gt;&lt;/em&gt; : For PIDs where Dem provides the function,
                                           DcmDspPidDataUsePort for that PID should be set to USE_DATA_SYNCH_FNC and
                                           DcmDspPidDataReadFnc shall point to the function Dem_DcmReadDataOfPID&lt;NN&gt;
                                           where &lt;NN&gt; represents the Id of the PID.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="PID Identifier"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="d0d88590-be31-4efa-bb0b-8c64b7d8b69a"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst false="PID Identifier has to be unique." 
                                      expr="text:uniq(../../*/DcmDspPidIdentifier, .)"/>
                              <mt:tst 
                                      true="PID 02 is only supported in service 0x02, but do not need to be configured as it is always available" 
                                      expr="num:i(.) = 2"/>
                              <mt:tst 
                                      true="PID Identifier must not be equal to a so called &apos;supported PID&apos; ({0x00, 0x20, 0x40, 0x60, 0x80, 0xA0, 0xC0, 0xE})." 
                                      expr="num:i(. mod 32) = 0"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspPidService" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines whether this PID is used for OBD service $01 or/and $02.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;DCM_SERVICE_01&lt;/code&gt;: This PID is only accessible via service $01&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;DCM_SERVICE_01_02&lt;/code&gt;: This PID is accessible via both service $01 and $02&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;DCM_SERVICE_02&lt;/code&gt;: This PID is only accessible via service $02&lt;/li&gt;
                                  &lt;/ul&gt;

                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="PID Service"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:036e039d-0c41-4f8b-a721-da952ae7a2f5"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="RANGE">
                            <a:v>DCM_SERVICE_01</a:v>
                            <a:v>DCM_SERVICE_01_02</a:v>
                            <a:v>DCM_SERVICE_02</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspPidSize" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines the length of the PID in Bytes.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 255 Bytes&lt;/li&gt;
                                  &lt;/ul&gt;

                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="PID Length"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ea817fdc-850d-484c-9ffe-e3ddce11f0f8"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath 
                                      true="A &apos;DcmDspPid&apos; with a length of zero is not valid." 
                                      expr="(node:value(.) = &apos;0&apos;)"/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspPidUsed" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines whether this PID is available for use in the current configuration (for multi-purpose ECUs).&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: This PID is available.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: This PID is not available. The &lt;code&gt;Dcm&lt;/code&gt; behaves as if this DID was
                                                            not configured.&lt;/li&gt;
                                  &lt;/ul&gt;

                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable PID"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="7b6b4d32-a25a-4ea1-858c-572ec865e693"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="EDITABLE" value="true"/>
                        </v:var>
                        <v:lst name="DcmDspPidData" type="MAP">
                          <a:a name="LABEL" value="PID Data Configuration"/>
                          <a:a name="ROWS" value="4"/>
                          <a:a name="TAB" value="GENERAL"/>
                          <a:da name="MAX" value="255"/>
                          <a:da name="MIN" value="1"/>
                          <v:ctr name="DcmDspPidData" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the parameters that control how the PID data is obtained.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="PID Data"/>
                            <a:a name="UUID" 
                                 value="696af75f-f651-47d3-b5bb-8a512cb049b0"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="(((../../DcmDspPidService = &apos;DCM_SERVICE_01&apos;) or (../../DcmDspPidService = &apos;DCM_SERVICE_01_02&apos;)) and                                 ( not(node:exists((DcmDspPidService01)))))" 
                                     true="OBD service 01 is enabled, therefore container DcmDspPidService01 must be configured."/>
                              <a:tst 
                                     expr="(((../../DcmDspPidService = &apos;DCM_SERVICE_02&apos;) or (../../DcmDspPidService = &apos;DCM_SERVICE_01_02&apos;)) and                                 ( not(node:exists((DcmDspPidService02)))))" 
                                     true="OBD service 02 is enabled, therefore container DcmDspPidService02 must be configured."/>
                              <a:tst 
                                     expr="Dcm:DcmDspPidDataVerifyUniqueness(.)" 
                                     false="The ShortName of all DcmDspPidData and DcmDspData must be unique (in the whole configuration) because the name is used to generate the Client Server read data interface."/>
                              <a:tst 
                                     expr="(num:i((DcmDspPidDataPos + DcmDspPidDataSize + 7) div 8) &lt;= (../../DcmDspPidSize))" 
                                     false="DcmDspPidData has to be in range of DcmDspPidSize"/>
                              <a:tst 
                                     expr="count(../../DcmDspPidData/*[@index != node:current()/@index and (./DcmDspPidDataPos &gt;= (node:current()/DcmDspPidDataPos))                                                  and (./DcmDspPidDataPos &lt; (node:current()/DcmDspPidDataPos + node:current()/DcmDspPidDataSize))]) != 0" 
                                     true="DcmDspPidData must not overlap each other"/>
                              <a:tst 
                                     expr="count(../../DcmDspPidData/*[@index != node:current()/@index and (((./DcmDspPidDataPos)+(./DcmDspPidDataSize)) &gt; (node:current()/DcmDspPidDataPos))                                                  and (./DcmDspPidDataPos &lt; (node:current()/DcmDspPidDataPos + node:current()/DcmDspPidDataSize))]) != 0" 
                                     true="DcmDspPidData must not overlap each other"/>
                              <a:tst 
                                     expr="count(../../DcmDspPidSupportInfo/*[((./DcmDspPidSupportInfoPos * 8) &gt;= (node:current()/DcmDspPidDataPos))                                            and ((./DcmDspPidSupportInfoPos * 8) &lt; (node:current()/DcmDspPidDataPos + node:current()/DcmDspPidDataSize))]) != 0" 
                                     true="DcmDspPidData and DcmDspPidSupportInfo must not overlap each other"/>
                              <a:tst 
                                     expr="count(../../DcmDspPidSupportInfo/*[(((./DcmDspPidSupportInfoPos * 8)+(./DcmDspPidSupportInfoLen * 8)) &gt; (node:current()/DcmDspPidDataPos))                                            and ((./DcmDspPidSupportInfoPos * 8) &lt; (node:current()/DcmDspPidDataPos + node:current()/DcmDspPidDataSize))]) != 0" 
                                     true="DcmDspPidData and DcmDspPidSupportInfo must not overlap each other"/>
                              <a:tst 
                                     expr="count(../../DcmDspPidData/*[@index != node:current()/@index                                            and (./DcmDspPidDataSupportInfo/DcmDspPidDataSupportInfoBit = (node:current()/DcmDspPidDataSupportInfo/DcmDspPidDataSupportInfoBit))]) != 0" 
                                     true="Maximum one PidData in the configuration can refer to a certain Bit in the support information"/>
                            </a:da>
                            <a:da name="TITLE" value="PID Data Configuration"/>
                            <a:da name="WARNING" type="XPath">
                              <a:tst 
                                     expr="((not((../../DcmDspPidService = &apos;DCM_SERVICE_01&apos;) or (../../DcmDspPidService = &apos;DCM_SERVICE_01_02&apos;))) and                                 ( node:exists((DcmDspPidService01))))" 
                                     true="OBD service 01 is not enabled, therefore no container DcmDspPidService01 have to be configured."/>
                              <a:tst 
                                     expr="((not((../../DcmDspPidService = &apos;DCM_SERVICE_02&apos;) or (../../DcmDspPidService = &apos;DCM_SERVICE_01_02&apos;))) and                                 ( node:exists((DcmDspPidService02))))" 
                                     true="OBD service 02 is not enabled, therefore no container DcmDspPidService02 have to be configured."/>
                            </a:da>
                            <v:var name="DcmDspPidDataPos" type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the position of PID Data in the response.&lt;/p&gt;

                                      &lt;p&gt;Note: The data will not start at position 0 in case a support information
                                      is available(for bit-mapped PIDs).&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 2040 bits&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="PID Data Position"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="14c5b081-4ecb-46f7-8b5a-c842c89c3d36"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=2040"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath 
                                          true="A &apos;DcmDspPidDataPos&apos; of 2040 (starting on 0) is out of range of possible 255 bytes" 
                                          expr="(node:value(.) = &apos;2040&apos;)"/>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspPidDataSize" type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the length of data associated to the PID in bits.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 2040 bits&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="PID Data Size"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="01091eab-f393-4b05-9c76-02ae462d676b"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=2040"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath 
                                          true="A &apos;DcmDspPidData&apos; with a length of zero is not valid." 
                                          expr="(node:value(.) = &apos;0&apos;)"/>
                              </a:da>
                            </v:var>
                            <v:ctr name="DcmDspPidDataSupportInfo" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the supported information for this PID Data.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="PID Data Support Information"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="UUID" 
                                   value="6e3383a5-2d13-4d24-abc3-e898f3c3cb14"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="TITLE" value="Support Information"/>
                              <v:var name="DcmDspPidDataSupportInfoBit" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                        &lt;p&gt;Defines the bit of the &lt;code&gt;SupportInfo&lt;/code&gt;.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 255 bits&lt;/li&gt;
                                        &lt;/ul&gt;

                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Supported Information Bit"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="56e0f581-154d-497e-a57f-61bc0934664b"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="INVALID" type="Multi">
                                  <mt:range>
                                    <mt:tst expr="&lt;=255"/>
                                    <mt:tst expr="&gt;=0"/>
                                  </mt:range>
                                  <mt:xpath 
                                            false="DcmDspPidDataSupportInfoBit must to be in range of the referenced DcmDspPidSupportInfo" 
                                            expr="num:integer(node:value(.)) &lt; num:integer(8 * node:value(node:ref(../DcmDspPidDataSupportInfoRef)/DcmDspPidSupportInfoLen))"/>
                                </a:da>
                              </v:var>
                              <v:ref name="DcmDspPidDataSupportInfoRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                        &lt;p&gt;Reference to the supported information &lt;code&gt;DcmDspPidSupportInfo&lt;/code&gt;.&lt;/p&gt;

                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to Supported Information"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="637d3301-24b9-44e8-abed-1c077fd9d8b6"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="RANGE" type="XPath" 
                                      expr="node:paths(../../../../DcmDspPidSupportInfo/*)"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspPid/DcmDspPidSupportInfo"/>
                              </v:ref>
                            </v:ctr>
                            <v:ctr name="DcmDspPidService01" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the configuration parameters of the PID for use with
                                         OBD service $01 - &lt;code&gt;Request Current Powertrain diagnostic Data&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;PID service usage (&lt;code&gt;DcmDspPidService&lt;/code&gt;): This container is only available if
                                                                                               &lt;code&gt;DcmDspPidService&lt;/code&gt; is configured to either &lt;code&gt;DCM_SERVICE_01&lt;/code&gt;
                                                                                               or &lt;code&gt;DCM_SERVICE_01_02&lt;/code&gt;.&lt;/li&gt;
                                      &lt;/ul&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="PID Service 01 Configuration"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="UUID" 
                                   value="04e9ce67-9d85-4193-949a-e76504f9c6e2"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="((DcmDspPidDataUsePort = &apos;USE_DATA_SYNCH_FNC&apos;) and (node:empty(DcmDspPidDataReadFnc)))" 
                                       true="A function must defined in DcmDspPidDataReadFnc when &apos;DcmDspPidDataUsePort&apos; is set to &apos;USE_DATA_SYNCH_FNC&apos;."/>
                                <a:tst 
                                       expr="((DcmDspPidDataUsePort = &apos;USE_DATA_SYNCH_CLIENT_SERVER&apos;) and node:value(../../../../../../DcmGeneral/DcmRteUsage) = &apos;false&apos;)" 
                                       true="Usage of an operation provided by a Client-Server Interface requires usage of the Rte."/>
                              </a:da>
                              <a:da name="TITLE" value="PID Service 01"/>
                              <v:var name="DcmDspPidDataReadFnc" 
                                     type="FUNCTION-NAME">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                        &lt;p&gt;Defines the name of the callout used for reading the PID data.&lt;/p&gt;

                                        &lt;p&gt;&lt;em&gt;&lt;b&gt;Note&lt;/b&gt;&lt;/em&gt; : This parameter is relevant only if
                                        DcmDspPidDataUsePort = USE_DATA_SYNCH_FNC.&lt;/p&gt;

                                        &lt;p&gt;&lt;em&gt;&lt;b&gt;Note&lt;/b&gt;&lt;/em&gt; : For PIDs where Dem provides the function,
                                           DcmDspPidDataUsePort for that PID should be set to USE_DATA_SYNCH_FNC and
                                           DcmDspPidDataReadFnc shall point to the function Dem_DcmReadDataOfPID&lt;NN&gt;
                                           where &lt;NN&gt; represents the Id of the PID.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Read PID Data Function"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="ec3232c6-77a9-4ae6-bcc4-dacdbc7ea6f8"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="ENABLE" value="false"/>
                              </v:var>
                              <v:var name="DcmDspPidDataUsePort" 
                                     type="ENUMERATION">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                        &lt;p&gt;Indicates if DCM uses the RTE port or DSP function to get
                                        the PID data value.&lt;/p&gt;
                                        &lt;p&gt;&lt;em&gt;&lt;b&gt;Note&lt;/b&gt;&lt;/em&gt; : The DCM module currently does not support
                                        the usage of a sender receiver port to get the PID data values,
                                        therefore the option USE_DATA_SENDER_RECEIVER can not be configured.&lt;/p&gt;
                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;&lt;code&gt;USE_DATA_SYNCH_FNC&lt;/code&gt;: The DCM will use the function defined in DcmDspPidDataReadFnc to get the PID data value.&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;USE_DATA_SYNCH_CLIENT_SERVER&lt;/code&gt;: The DCM will have an R-Port requiring the interface DataServices_{Data}.
                                                                                         The R-Port is named DataServices_{Data} where {Data} is the name of the container DcmDspPidData.&lt;/li&gt;
                                        &lt;/ul&gt;

                                      &lt;p&gt;&lt;em&gt;&lt;b&gt;Note&lt;/b&gt;&lt;/em&gt; : For PIDs where Dem provides the function,
                                               DcmDspPidDataUsePort for that PID should be set to USE_DATA_SYNCH_FNC and
                                               DcmDspPidDataReadFnc shall point to the function Dem_DcmReadDataOfPID&lt;NN&gt;
                                               where &lt;NN&gt; represents the Id of the PID.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Read PID Data using Port interface"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="32ffcd68-8852-42e7-b6ba-1926fde81e32"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="RANGE">
                                  <a:v>USE_DATA_SYNCH_CLIENT_SERVER</a:v>
                                  <a:v>USE_DATA_SYNCH_FNC</a:v>
                                </a:da>
                              </v:var>
                            </v:ctr>
                            <v:ctr name="DcmDspPidService02" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the configuration parameters of the PID for use with
                                         OBD service $02 - &lt;code&gt;Request Power Train FreezeFrame Data&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;PID service usage (&lt;code&gt;DcmDspPidService&lt;/code&gt;): This container is only available if
                                                                                               &lt;code&gt;DcmDspPidService&lt;/code&gt; is configured to either &lt;code&gt;DCM_SERVICE_02&lt;/code&gt;
                                                                                               or &lt;code&gt;DCM_SERVICE_01_02&lt;/code&gt;.&lt;/li&gt;
                                      &lt;/ul&gt;

                                      &lt;p&gt;Note: Configuration of this parameter has no bearing on functionality of service $02.&lt;/p&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="PID Service 02 Configuration"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="UUID" 
                                   value="b686f401-5342-4fbb-97f8-ca76fed0b462"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="TITLE" value="PID Service 02"/>
                              <v:ref name="DcmDspPidDataDemRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;

                                        &lt;p&gt;Reference to the &lt;code&gt;DemPidDataElement&lt;/code&gt; holding the PID Data
                                           in &lt;code&gt;Dem&lt;/code&gt; configuration.&lt;/p&gt;

                                        &lt;p&gt;This parameter links the &lt;code&gt;Dcm&lt;/code&gt; PID and &lt;code&gt;Dem&lt;/code&gt; PID
                                           configuration for Mode $02.&lt;/p&gt;

                                        &lt;p&gt;Note: Configuration of this parameter has no bearing on functionality of service 02.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="DEM PID Data Reference"/>
                                <a:a name="OPTIONAL" value="true"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="6799f543-ec04-48fe-8f94-a2b6afabc3df"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="ENABLE" value="false"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemPidClass/DemPidDataElement"/>
                              </v:ref>
                            </v:ctr>
                          </v:ctr>
                        </v:lst>
                        <v:lst name="DcmDspPidSupportInfo" type="MAP">
                          <a:a name="LABEL" value="PID Support Information"/>
                          <a:a name="ROWS" value="4"/>
                          <a:a name="TAB" value="GENERAL"/>
                          <a:da name="MAX" value="256"/>
                          <a:da name="MIN" value="0"/>
                          <v:ctr name="DcmDspPidSupportInfo" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the support information for the PID.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="PID Support Information"/>
                            <a:a name="UUID" 
                                 value="fca9cb1e-8a73-4e1b-a6ea-ad4444faa997"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="((DcmDspPidSupportInfoLen + DcmDspPidSupportInfoPos) &lt;= (../../DcmDspPidSize))" 
                                     false="DcmDspPidSupportInfo has to be in range of DcmDspPidSize"/>
                              <a:tst 
                                     expr="count(../../DcmDspPidSupportInfo/*[@index != node:current()/@index and (./DcmDspPidSupportInfoPos &gt;= (node:current()/DcmDspPidSupportInfoPos)) and                                               (./DcmDspPidSupportInfoPos &lt; (node:current()/DcmDspPidSupportInfoPos + node:current()/DcmDspPidSupportInfoLen))]) != 0" 
                                     true="DcmDspPidSupportInfo must not overlap each other"/>
                              <a:tst 
                                     expr="count(../../DcmDspPidSupportInfo/*[@index != node:current()/@index and (((./DcmDspPidSupportInfoPos)+(./DcmDspPidSupportInfoLen)) &gt; (node:current()/DcmDspPidSupportInfoPos)) and                                               (./DcmDspPidSupportInfoPos &lt; (node:current()/DcmDspPidSupportInfoPos + node:current()/DcmDspPidSupportInfoLen))]) != 0" 
                                     true="DcmDspPidSupportInfo must not overlap each other"/>
                            </a:da>
                            <a:da name="TITLE" value="Support Information"/>
                            <v:var name="DcmDspPidSupportInfoLen" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the length of the supported information in Bytes.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 255 Bytes&lt;/li&gt;
                                        &lt;/ul&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Length of Support Information"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="f6e3954c-9847-4964-892f-ead1c38e8b7e"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=32"/>
                                  <mt:tst expr="&gt;=1"/>
                                </mt:range>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspPidSupportInfoPos" 
                                   type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the position of the supported information in the response
                                         in Bytes.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 255 Bytes&lt;/li&gt;
                                        &lt;/ul&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Position of Support Information"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="455ecc79-89d4-48c2-98a5-a6406775c85f"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                              </a:da>
                            </v:var>
                          </v:ctr>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="DcmDspReadGenericInformation" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines configuration for the behaviour of the &lt;code&gt;ReadGenericInformation&lt;/code&gt; (0xAF) service handler.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:da name="EDITABLE" value="false"/>
                      <v:var 
                             name="DcmDspMaxDemGetDiagnosticDataConsecutiveExecutions" 
                             type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;
                                  This configuration parameter sets the maximum number of consecutive executions of the function fetching
                                  diagnostic data, in order to allow for a break-down of the execution time of service 0xAF (Read Generic Information)
                                  and avoid blocking conditions when is requested to fetch all of the Data Records.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Maximum allowed consecutive Data fetch from DEM"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="602909cd-9bb7-43af-ab9c-af13213c5a5b"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=20"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                    <v:lst name="DcmDspRequestControl" type="MAP">
                      <a:a name="LABEL" value="RequestControl Configuration"/>
                      <a:a name="ROWS" value="7"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <v:ctr name="DcmDspRequestControl" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;Defines the configuration parameters for the OBD Service $08 -
                                   &lt;code&gt;Request Control of On-Board System, Test or Component)&lt;/code&gt;.&lt;/p&gt;

                                 &lt;p&gt;This operation is realized by either configuring a callout
                                   function with synchronous behaviour or alternatively by
                                   using by using a synchronous AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                   with synchronous behaviour (the operation shall be completed in one
                                   single call to the operation of the generated interface). The &lt;code&gt;Dcm&lt;/code&gt;
                                   shall generate the &lt;code&gt;RequestControlServices_&amp;#60;TID&amp;#62;&lt;/code&gt;
                                   &lt;code&gt;ClientServerInterface&lt;/code&gt;, where &lt;code&gt;&amp;#60;TID&amp;#62;&lt;/code&gt;
                                   is the name of this &lt;code&gt;DcmDspRequestControl&lt;/code&gt; container. This
                                   &lt;code&gt;ClientServerInterface&lt;/code&gt; contains the necessary &lt;code&gt;RequestControl&lt;/code&gt;
                                   operation.
                                   A Require Port is generated for this interface and shall be connected to a compatible
                                   Provide Port of an Application Software Component. The name of this Require Port
                                   is the same as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.
                                &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="68d5b3fc-83bb-4eb7-bbc6-1e74b317322e"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="TITLE" value="RequestControl Configuration"/>
                        <v:var name="DcmDspRequestControlFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the callout used for the request control
                                    functionality of OBD Service $08.&lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Request control operation interface type (&lt;code&gt;DcmDspRequestControlUsePort&lt;/code&gt;):
                                      The configuration of this parameter is only relevant if
                                      &lt;code&gt;DcmDspRequestControlUsePort&lt;/code&gt; is set to
                                      &lt;code&gt;USE_REQUESTCONTROL_SYNCH_FNC&lt;/code&gt;
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Request control function"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="5a5846b6-e3c8-442d-bb90-e92d32c475df"/>
                          <a:da name="ENABLE" value="true"/>
                        </v:var>
                        <v:var name="DcmDspRequestControlInBufferSize" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the size of the input buffer for the
                                     &lt;code&gt;RequestControl&lt;/code&gt; operation in Bytes.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 5 Bytes&lt;/li&gt;
                                  &lt;/ul&gt;

                                  &lt;p&gt;Note: The available buffer length is restricted from the AUTOSAR-defined
                                    range of 0 .. 4294967295 to 0..5. The ISO specifies that no RequestControl
                                    function takes more than 5 parameters.
                                  &lt;/p&gt;

                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Input Buffer Size"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="58f64f0e-35b5-459c-8898-d30dbad230ae"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=5"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspRequestControlOutBufferSize" 
                               type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the size of the output buffer for the
                                     &lt;code&gt;RequestControl&lt;/code&gt; operation in Bytes.&lt;/p&gt;
                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 5 Bytes&lt;/li&gt;
                                  &lt;/ul&gt;
                                  &lt;p&gt;Note: The available buffer length is restricted from the AUTOSAR-defined
                                    range of 0 .. 4294967295 to 0..5. The ISO specifies that no RequestControl
                                    function takes more than 5 parameters.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Output Buffer Size"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="1aa7d128-b2d8-4e53-bba4-31f2784ff5f5"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=5"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspRequestControlTestId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines the &lt;code&gt;TestId&lt;/code&gt; requested in the $08 -
                                     &lt;code&gt;Request Control of On-Board System, Test or Component &lt;/code&gt;
                                     service request represented by this &lt;code&gt;DcmDspRequestControl&lt;/code&gt;
                                  &lt;/p&gt;

                                  &lt;p&gt;Note: According to the SWS the TestId is with the range of 0..255
                                    That range however also coveres the availability TIDs
                                    {0x00 0x020 0x40 0x60 0x80 0xA0 0xC0 0xE0}. The availability TIDs
                                    serve to report what RequestControl TIDs are available and should
                                    therefore not be part of the configured identifiers.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="TestId"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="a3a4bd73-b7df-4702-a297-d20be3effeef"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      false="The Control Test ID of the service table has to be unique." 
                                      expr="text:uniq(../../*/DcmDspRequestControlTestId, .)"/>
                              <mt:tst 
                                      true="The Control Test ID may not be an availability ID (a multiple of 0x20)" 
                                      expr="(. mod 32) = 0"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspRequestControlUsed" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;&lt;b&gt;Note : This is a Vendor Specific parameter for
                                        Request Control in the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                                  &lt;p&gt;Allow to activate or deactivate the usage of a service
                                     true = service available, false = service not available
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Enable RequestControl TID usage"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="ENABLE" value="true"/>
                        </v:var>
                        <v:var name="DcmDspRequestControlUsePort" 
                               type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the type of the interface that shall be used to implement
                                  the &lt;code&gt;RequestControl&lt;/code&gt; operation defining the sub-function
                                  of OBD service &lt;code&gt;RequestControl&lt;/code&gt; (0x08)&lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;USE_REQUESTCONTROL_SYNCH_FNC&lt;/code&gt;:
                                    The operation shall be implemented using a synchronous API.
                                    The following callout names shall be configured:
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DcmDspRequestControlFnc&lt;/code&gt;&lt;/li&gt;
                                  &lt;/ul&gt;&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;USE_REQUESTCONTROL_SYNCH_CLIENT_SERVER&lt;/code&gt;:
                                    The operation shall be implemented using a synchronous AUTOSAR
                                    &lt;code&gt;ClientServerInterface&lt;/code&gt;. The &lt;code&gt;Dcm&lt;/code&gt; generates
                                    the &lt;code&gt;RequestControl_&amp;#60;TID&amp;#62;&lt;/code&gt; &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                    where &lt;code&gt;&amp;#60;TID&amp;#62;&lt;/code&gt; is the name of this
                                    &lt;code&gt;DcmDspRequestControl&lt;/code&gt; container. This
                                    &lt;code&gt;ClientServerInterface&lt;/code&gt; contains the &lt;code&gt;RequestControl&lt;/code&gt;
                                    operation. A Require Port is generated for this interface and
                                    shall be connected to a compatible Provide Port of an Application
                                    Software Component.  The name of this Require Port is the same
                                    as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Request Control Interface"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="68a05040-46cb-40aa-965f-f214c5695f63"/>
                          <a:da name="DEFAULT" 
                                value="USE_REQUESTCONTROL_SYNCH_CLIENT_SERVER"/>
                          <a:da name="ENABLE" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(. = &apos;USE_REQUESTCONTROL_SYNCH_FNC&apos;)                                          and (node:empty(../DcmDspRequestControlFnc))" 
                                   true="DcmDspRequestControlFnc function has to be configured."/>
                            <a:tst 
                                   expr="(. = &apos;USE_REQUESTCONTROL_SYNCH_CLIENT_SERVER&apos;)                                          and (as:modconf(&apos;Dcm&apos;)[1]/DcmGeneral/DcmRteUsage = &apos;false&apos;)" 
                                   true="Enable RTE usage"/>
                          </a:da>
                          <a:da name="RANGE">
                            <a:v>USE_REQUESTCONTROL_SYNCH_CLIENT_SERVER</a:v>
                            <a:v>USE_REQUESTCONTROL_SYNCH_FNC</a:v>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="DcmDspRoe" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Provide the configuration of the ResponseOnEvent mechanism.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="ROE Service Configuration"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="9885fba5-071c-4c7c-83e6-329c8fc8c580"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:ref name="DcmDspRoeBlockIdRef" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Reference to the &lt;code&gt;NvM&lt;/code&gt; block used to store
                                   persistent ROE configuration data.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Reference to the NVRAM blockId to store ROE data"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="UUID" 
                             value="21eeeae8-7922-4d12-9646-a7d80ead0f68"/>
                        <a:da name="ENABLE" value="true"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" false="Invalid reference."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/NvM/NvMBlockDescriptor"/>
                      </v:ref>
                      <v:var name="DcmDspRoeBufSize" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines the size of the Roe Buffer used to store DID values if the &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86)
                                   service is configured with the &lt;code&gt;OnChangeOfDataIdentifier&lt;/code&gt; (0x03) sub-function.&lt;/p&gt;

                                &lt;p&gt;This Roe Buffer holds the value of the monitored DID across &lt;code&gt;Dcm_MainFunction()&lt;/code&gt; call
                                   cycles in order to compare the value the DID has in each cycle to the value of the previous
                                   cycle.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 255 Bytes&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Note 1: In case the &lt;code&gt;onChangeOfDataIdentifier&lt;/code&gt; sub-function is configured,
                                   configure the size of the Roe Buffer so that it is sufficient to hold the data of the
                                   largest DID configured as internally managed (the &lt;code&gt;DcmDspDidExtRoe&lt;/code&gt; is not
                                   configured for the DID) and to be used in the &lt;code&gt;ResponseOnEvent&lt;/code&gt; (0x86)
                                   &lt;code&gt;onChangeOfDataIdentifier&lt;/code&gt; (0x03) service request.&lt;/p&gt;

                                &lt;p&gt;Note 2: In case sub-service onChangeOfDataIdentifier is preconfigured
                                   (&lt;code&gt;DcmDspRoePreconfOnChangeOfDataIdentifier&lt;/code&gt; is used), the size of the
                                   Roe Buffer must be sufficient to hold the data of the DID referenced by
                                   &lt;code&gt;DcmDspRoePreconfOnChangeOfDataIdentifierDIDRef&lt;/code&gt;, if this DID is
                                   internally managed (the &lt;code&gt;DcmDspDidExtRoe&lt;/code&gt; is not
                                   configured for the DID).&lt;/p&gt;

                                &lt;p&gt;The size of buffer to store the DID value during the execution of
                                ROE subservice OnChangeOfDataIdentifier.
                                In case sub-service onChangeOfDataIdentifier is configured, the size
                                of the Roe Buffer must be sufficient to hold the data of the largest
                                DID configured as internally managed and to be used for the
                                onChangeOfDataIdentifier ROE subfunction.
                                In case sub-service onChangeOfDataIdentifier is preconfigured, the
                                size of the Roe Buffer must be sufficient to hold the data of the
                                DID configured in DcmDspRoePreconfOnChangeOfDataIdentifierDIDRef,
                                if this DID is internally managed &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="DID Buffer Size"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="decb802f-c5f9-4a48-aaf8-d4c5cb21abf9"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=255"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspRoeInitFnc" type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines the name of the Callout used for initializing an externally
                                   managed ROE event.&lt;/p&gt;

                                &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Roe initialize Function"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:76c4c4eb-ec19-421e-9ae6-4721a4790b3b"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                      </v:var>
                      <v:var name="DcmDspRoeInitOnDSC" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines whether the ROE functionality is re-initialized on reception
                                   of a &lt;code&gt;DiagnosticSessionControl&lt;/code&gt; (0x10) service request or on
                                   a timeout of the S3 server.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: on reception of a &lt;code&gt;DiagnosticSessionControl&lt;/code&gt;
                                                        (0x10) service request or on S3 Timeout, the ROE functionality
                                                        is re-initialized.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: on reception of a &lt;code&gt;DiagnosticSessionControl&lt;/code&gt;
                                                         (0x10) service request or on S3 Timeout, the ROE functionality
                                                         is not re-initialized.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Reinitialize on SessionControl Request"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="e46d6f9f-547b-4f90-85e9-cea0aff790a7"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="DEFAULT" value="true"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                      </v:var>
                      <v:var name="DcmDspRoeInterMessageTime" type="FLOAT">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Provide the minimum time in seconds between two transmissions of ROE
                                   event. It is used for the delay between two different consecutive Roe
                                   transmissions. &lt;/p&gt;
                                &lt;p&gt;In the current implementation, if a new event triggers a
                                   transmission before the &lt;code&gt;DcmDspRoeInterMessageTime&lt;/code&gt;
                                   expires, the new event is ignored.&lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 5 seconds&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Inter-Message Time"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="fbf5e8d4-807e-48aa-98cb-bcb6ac707afa"/>
                        <a:da name="DEFAULT" value="0.0"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=5"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:lst name="DcmDspRoeEvent" type="MAP">
                        <a:a name="LABEL" value="Roe eventType records"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(count(*) &gt; 0) and not(node:isconsecutive(*/DcmDspRoeEventId, 0))" 
                                 true="The RoeEventIds should be zero-based and consecutive"/>
                          <a:tst 
                                 expr="not(text:uniq(*[node:name(DcmDspRoeEventProperties)=&apos;DcmDspRoeOnChangeOfDataIdentifier&apos;]/DcmDspRoeInitialEventStatus, &apos;DCM_ROE_STOPPED&apos;))" 
                                 true="At most one ROE event of OnChangeOfDataIdentifier should be in DCM_ROE_STOPPED initial state"/>
                          <a:tst 
                                 expr="not(text:uniq(*[node:name(DcmDspRoeEventProperties)=&apos;DcmDspRoeOnDTCStatusChange&apos;]/DcmDspRoeInitialEventStatus, &apos;DCM_ROE_STOPPED&apos;))" 
                                 true="At most one ROE event of OnDTCStatusChange should be in DCM_ROE_STOPPED initial state"/>
                        </a:da>
                        <a:da name="MAX" value="255"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="DcmDspRoeEvent" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;This container contains a list of all supported Roe eventTypeRecords which
                                     are accepted by this ECU. &lt;/p&gt;
                                  &lt;p&gt;At most one DcmDspRoeEvent container is allowed to define a
                                     DcmDspRoeEventProperties container with the choice
                                     DcmDspRoeOnDTCStatusChange. &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="4501e8a7-b4f8-44fe-9b7e-2e99672a3993"/>
                          <v:var name="DcmDspRoeEventId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;EventId for a global identification of this ROE event.
                                    It is used within APIs &lt;code&gt;Dcm_TriggerOnEvent()&lt;/code&gt;,
                                    ModeDeclarationGroup &lt;code&gt;DcmResponseOnEvent_&lt;RoeEventID&gt;&lt;/code&gt; and
                                    ModeSwitchInterface &lt;code&gt;SchM_Switch_&lt;bsnp&gt;_DcmResponseOnEvent_&lt;RoeEventId&gt;&lt;/code&gt;
                                    The Event Ids should be zero-based and consecutive.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="EventId"/>
                            <a:a name="UUID" 
                                 value="06508669-0f1d-426d-b3af-4696186ce82e"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=254"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspRoeInitialEventStatus" 
                                 type="ENUMERATION">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Initial Roe status of this RoeEvent&lt;/p&gt;
                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_CLEARED&lt;/code&gt;:
                                          If the EventWindowTime is active over power cycles and not
                                            timed out, the Dcm shall reactivate all RoeEvents which were active in the default
                                            session during the last power cycle as soon as the non-volatile information is available.
                                          If a valid StartResponseOnEvent request is received with a
                                            storageState set to StoreEvent and the EventWindowTime supports the
                                            StorageState in a previous power cycle, the RoeEvent shall change to &apos;ROE started&apos;
                                            state as soon as the non-volatile data is available.
                                          &lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_STOPPED&lt;/code&gt;: switch to &apos;ROE stopped&apos; state immediatly in the initialisation.
                                          The Dcm will behave like this RoeEvent was set-up with
                                          StorageState set to &apos;StoreEvent&apos; and EvetenWindowTime set to infinity&lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;NOTE: At most one event can be in STOPPED state for each event type (one for OnChangeOfDataIdentifier
                                       and one for onDTCStatusChange).&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Initial Roe status"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="ff5ea9fb-fe3d-440c-8749-1484f0f0df2f"/>
                            <a:da name="RANGE">
                              <a:v>DCM_ROE_CLEARED</a:v>
                              <a:v>DCM_ROE_STOPPED</a:v>
                            </a:da>
                          </v:var>
                          <v:chc name="DcmDspRoeEventProperties" 
                                 type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;This container contains the properties of Roe eventTypeRecords.
                                       In one &lt;code&gt;DcmDspRoeEventProperties&lt;/code&gt; container one
                                       &lt;code&gt;DcmDspRoeOnDTCStatusChange&lt;/code&gt; or
                                       &lt;code&gt;DcmDspRoeOnChangeOfDataIdentifier&lt;/code&gt; container shall be defined. &lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Roe Pre Configuration Service To Respond"/>
                            <a:a name="UUID" 
                                 value="89b1b4c5-9578-44b2-9c0d-3f764173ac64"/>
                            <v:ctr name="DcmDspRoeOnChangeOfDataIdentifier" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;This container contains configuration of a eventTypeRecord
                                         &lt;code&gt;onChangeOfDataIdentifier&lt;/code&gt; accepted by this ECU. &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="UUID" 
                                   value="2de1af96-e18b-4992-bd2d-6d608813cf2a"/>
                              <v:ref name="DcmDspRoeDidRef" type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to a Did which is watched.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="UUID" 
                                     value="319308df-3ca2-4ace-a8ab-ebae56cac1a5"/>
                                <a:da name="INVALID" type="XPath" 
                                      expr="node:refvalid(.)" 
                                      false="Invalid reference"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspDid"/>
                              </v:ref>
                            </v:ctr>
                            <v:ctr name="DcmDspRoeOnDTCStatusChange" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                        &lt;p&gt;This container contains configuration of a eventTypeRecord
                                           &lt;code&gt;onDTCStatusChange&lt;/code&gt; accepted by this ECU.
                                           Please note that currently are no additional parameters for
                                           &lt;code&gt;DcmDspRoeOnDTCStatusChange&lt;/code&gt; are defined.
                                           Therefore the existence of the container denotes the choice.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="UUID" 
                                   value="a46af3b9-67b4-47ad-814e-a554e3ad2a8f"/>
                              <v:var name="DcmDspRoeEventPreconfiguredDTCMask" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the default value used for DTCMaks when an &lt;code&gt;OnDTCStatusChange&lt;/code&gt;
                                        event is preconfigured&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0x00 .. 0xFF&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Pre-configured DTC Mask for DTC Events"/>
                                <a:a name="UUID" 
                                     value="8963ac89-0f22-4c4a-8167-8f5b90176b50"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=255"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:chc>
                        </v:ctr>
                      </v:lst>
                      <v:lst name="DcmDspRoeEventWindowTime" type="MAP">
                        <a:a name="LABEL" value="Available EventWindowTime"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="MAX" value="255"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="DcmDspRoeEventWindowTime" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;This container configures the available EventWindowTime in this Ecu.
                                     This container contains a sub-set of EventWindowTimes supported by the
                                     Dcm, to limit the usage of the Ecu resources. &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="8fa75901-d836-4eb6-b5a8-21995cd169a8"/>
                          <v:var name="DcmDspRoeEventWindowTime" 
                                 type="ENUMERATION">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Value of the EventWindowTime &lt;/p&gt;
                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_EVENT_WINDOW_CURRENT_AND_FOLLOWING_CYCLE&lt;/code&gt;:
                                          &lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_EVENT_WINDOW_CURRENT_CYCLE&lt;/code&gt;:
                                          &lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;DCM_ROE_EVENT_WINDOW_INFINITE&lt;/code&gt;:
                                          &lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;&lt;em&gt;Note: In the current release only DCM_ROE_EVENT_WINDOW_INFINITE is supported.&lt;/em&gt;&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="2adf0ec3-7d20-460f-b8f0-e692a51e97c2"/>
                            <a:da name="RANGE">
                              <a:v>DCM_ROE_EVENT_WINDOW_CURRENT_AND_FOLLOWING_CYCLE</a:v>
                              <a:v>DCM_ROE_EVENT_WINDOW_CURRENT_CYCLE</a:v>
                              <a:v>DCM_ROE_EVENT_WINDOW_INFINITE</a:v>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspRoeStorageState" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;If this parameter is set to TRUE the StorageStateBit will be evaluated if this
                                       EventWindowTime is requested. &lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: StorageStateBit will be evaluated.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: StorageStateBit will not be evaluated.&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Evaluate StorageStateBit"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="83d77622-5a85-410e-a219-790bc4229f46"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                      <v:var name="DcmDspRoeMaxEventLength" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines he maximum size in Bytes of an ROE message that can be stored in
                                the transmission queue.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;1 .. 65535 Bytes&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum Message Length"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="c82204f6-35cb-49be-a59a-0647154bf677"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=65535"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspRoeMaxNumberOfRetry" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines the maximum number of ROE event re-transmission trials,
                                   in case of transmission failure. If set to 0, re-transmission
                                   will not be attempted.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 255&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Maximum Retries"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="83ad469a-e1cd-4ab8-9a40-8e0ec387e8c4"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspRoeMaxQueueLength" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines the maximum number of elements in the ROE transmission queue.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 65535&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Transmission Queue Size"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="bab0d6d3-c871-4106-89c1-c74e226ec167"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=65535"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspRoeQueueEnabled" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines whether the ROE transmission queuing is enabled or not.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: ROE transmission queuing is enabled&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: ROE transmission queuing is disabled&lt;/li&gt;
                                &lt;/ul&gt;

                                &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Enable Transmission Queue"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="1d655641-d73d-4b3c-b30a-c63f584d022e"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="DEFAULT" value="true"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                      </v:var>
                      <v:var name="DcmDspRoeStopFnc" type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                  &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Defines the name of the Callout used for stopping an ROE event
                                    which is managed externally.&lt;/p&gt;

                                &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Roe Stop Function"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:1468fb7d-53f0-41ed-ad90-9eb99fb5d282"/>
                        <a:a name="VISIBLE" value="false"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                      </v:var>
                    </v:ctr>
                    <v:lst name="DcmDspRoutine" type="MAP">
                      <a:a name="LABEL" value="RoutineControl Configuration"/>
                      <a:a name="ROWS" value="7"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MAX" value="65535"/>
                      <a:da name="MIN" value="0"/>
                      <a:da name="WARNING" type="XPath">
                        <a:tst 
                               expr="((node:exists(./*[                                     (node:refvalid(DcmDspRoutineInfoRef)) and                                     (((node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopOut/DcmDspRoutineStopOutSignal/*[                                         (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;)                                       ])) and                                      (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopIn/DcmDspRoutineStopInSignal/*[                                         (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;)                                       ]))) or                                     ((node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineIn/DcmDspStartRoutineInSignal/*[                                         (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;)                                       ])) and                                      (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineOut/DcmDspStartRoutineOutSignal/*[                                         (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;)                                       ])))or                                     ((node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResIn/DcmDspRoutineRequestResInSignal/*[                                         (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;)                                       ])) and                                      (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResOut/DcmDspRoutineRequestResOutSignal/*[                                         (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;)                                       ]))))                                   ])) and                                  (node:exists(../../DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*[                                     (node:refvalid(DcmDslProtocolSIDTable)) and                                     ((count(node:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[                                        ((DcmDsdSidTabServiceId = num:hextoint(&apos;0x31&apos;)) and                                          ((not(node:exists(DcmDsdSidTabFnc))) or                                           ((node:exists(DcmDsdSidTabFnc)) and                                            (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)                                           )                                          )                                        )]) &gt; 0                                      ) and                                     (DcmDslProtocolTxBufferID =  DcmDslConnection/*/DcmDslProtocolRx/*/DcmDslProtocolRxBufferID))                                   ])))" 
                               true="Memory usage will be increased because Rx and Tx buffers are the same. A separate buffer must be created in order to handle RoutineControl operations, which have Start/Stop/RequestRoutineResults input and output signals of variable length"/>
                        <a:tst 
                               expr="((node:exists(./*[                                     (node:refvalid(DcmDspRoutineInfoRef)) and                                     ((node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineOut/DcmDspStartRoutineOutSignal/*[                                        (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and                                        ((DcmDspRoutineSignalPos mod 8)!= 0)                                      ])) or                                     (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopOut/DcmDspRoutineStopOutSignal/*[                                        (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and                                        ((DcmDspRoutineSignalPos mod 8)!= 0)                                      ])) or                                     (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResOut/DcmDspRoutineRequestResOutSignal/*[                                        (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and                                        ((DcmDspRoutineSignalPos mod 8)!= 0)                                      ])))                                   ])) and                                  (node:exists(../../DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*[                                     (node:refvalid(DcmDslProtocolSIDTable)) and                                     (count(node:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[                                        ((DcmDsdSidTabServiceId = num:hextoint(&apos;0x31&apos;)) and                                          ((not(node:exists(DcmDsdSidTabFnc))) or                                           ((node:exists(DcmDsdSidTabFnc)) and                                            (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)                                           )                                          )                                        )]) &gt; 0                                     )                                   ])))" 
                               true="Memory usage will be increased because RoutineControl operations are configured with output signals of variable length which are not aligned to byte-boundaries"/>
                        <a:tst 
                               expr="((node:exists(./*[                                     (node:refvalid(DcmDspRoutineInfoRef)) and                                     ((node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineIn/DcmDspStartRoutineInSignal/*[                                        (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and                                        ((DcmDspRoutineSignalPos mod 8)!= 0)                                      ])) or                                     (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopIn/DcmDspRoutineStopInSignal/*[                                        (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and                                        ((DcmDspRoutineSignalPos mod 8)!= 0)                                      ])) or                                     (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResIn/DcmDspRoutineRequestResInSignal/*[                                        (DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and                                        ((DcmDspRoutineSignalPos mod 8)!= 0)                                      ])))                                    ])) and                                   (node:exists(../../DcmDsl/DcmDslProtocol/DcmDslProtocolRow/*[                                      (node:refvalid(DcmDslProtocolSIDTable)) and                                      (count(node:ref(DcmDslProtocolSIDTable)/DcmDsdService/*[                                        ((DcmDsdSidTabServiceId = num:hextoint(&apos;0x31&apos;)) and                                          ((not(node:exists(DcmDsdSidTabFnc))) or                                           ((node:exists(DcmDsdSidTabFnc)) and                                            (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)                                           )                                          )                                        )]) &gt; 0                                      )                                    ])))" 
                               true="Memory usage will be increased because RoutineControl operations are configured with input signals of variable length which are not aligned to byte-boundaries"/>
                      </a:da>
                      <v:ctr name="DcmDspRoutine" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the configuration for Diagnostic Routines,
                                   to be used by the internal implementation of the
                                   &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) service handler.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="948cf78a-039b-4729-bebe-f8cc0477b998"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(DcmDspRoutineFixedLength=&apos;true&apos;) and                                             (node:refvalid(DcmDspRoutineInfoRef)) and                                             (                                               ( (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResIn)) and                                                 (node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResIn/DcmDspRoutineRequestResInSignal/*/DcmDspRoutineSignalType=&apos;VARIABLE_LENGTH&apos;)                                               ) or                                               ( (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResOut)) and                                                 (node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineRequestResOut/DcmDspRoutineRequestResOutSignal/*/DcmDspRoutineSignalType=&apos;VARIABLE_LENGTH&apos;)                                               ) or                                               ( (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopIn)) and                                                 (node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopIn/DcmDspRoutineStopInSignal/*/DcmDspRoutineSignalType=&apos;VARIABLE_LENGTH&apos;)                                               ) or                                               ( (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopOut)) and                                                 (node:ref(DcmDspRoutineInfoRef)/DcmDspRoutineStopOut/DcmDspRoutineStopOutSignal/*/DcmDspRoutineSignalType=&apos;VARIABLE_LENGTH&apos;)                                               ) or                                               ( (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineIn)) and                                                 (node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineIn/DcmDspStartRoutineInSignal/*/DcmDspRoutineSignalType=&apos;VARIABLE_LENGTH&apos;)                                               ) or                                               ( (node:exists(node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineOut)) and                                                 (node:ref(DcmDspRoutineInfoRef)/DcmDspStartRoutineOut/DcmDspStartRoutineOutSignal/*/DcmDspRoutineSignalType=&apos;VARIABLE_LENGTH&apos;)                                               )                                             ) and not                                             ( ( (node:exists(DcmDspRoutineUsePortASRVersion)) and                                                 ( (DcmDspRoutineUsePortASRVersion=&apos;AUTOSAR_42&apos;) or                                                   ( (DcmDspRoutineUsePortASRVersion=&apos;Default&apos;) and                                                     (../../../DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;)                                                   )                                                 )                                               ) or                                               ( not (node:exists(DcmDspRoutineUsePortASRVersion)) and                                                     (../../../DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;)                                               )                                             )" 
                                 true="This Routine Control can not have fixed length (configuration parameter DcmDspRoutineFixedLength is set to true), because the reference to Routine Information contain signal(s) that have a variable length and ASR version is set to AUTOSAR_40."/>
                          <a:tst 
                                 expr="(DcmDspRoutineUsePort = &apos;false&apos;) and not(node:exists(DcmDspStopRoutineFnc))                                            and (DcmDspStopRoutineSupported = &apos;true&apos;)" 
                                 true="If DcmDspRoutineUsePort is set to FALSE and DcmDspStopRoutineSupported is set to TRUE, DcmDspStopRoutineFnc shall be configured."/>
                          <a:tst 
                                 expr="(DcmDspRoutineUsePort = &apos;false&apos;)                                            and not(node:exists(DcmDspRequestResultsRoutineFnc))                                            and (DcmDspRequestResultsRoutineSupported = &apos;true&apos;)" 
                                 true="If DcmDspRoutineUsePort is set to FALSE and DcmDspRequestResultsRoutineSupported is set to TRUE, DcmDspRequestResultsRoutineFnc shall be configured."/>
                          <a:tst 
                                 expr="(DcmDspRoutineUsePort = &apos;false&apos;) and not(node:exists(DcmDspStartRoutineFnc)) and not(node:exists(DcmDspRoutineTidRef))" 
                                 true="If DcmDspRoutineUsePort is set to FALSE, DcmDspStartRoutineFnc or TidRef shall be configured."/>
                        </a:da>
                        <a:da name="TITLE" value="RoutineControl Configuration"/>
                        <v:var name="DcmDspRequestResultsRoutineFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the Callout used for requesting the results of running a
                                     Diagnostic Routine from the Application, in the context of a
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service request with the
                                     &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03) sub-function.&lt;/p&gt;


                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Routine Operation interface type (&lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt;):
                                      The configuration of this parameter is only relevant if
                                      &lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt; is set to &lt;code&gt;FALSE&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Function for requestRoutineResults"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="0aa388a3-0b17-4cb2-b3af-40f138bee5f8"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="(../DcmDspRoutineUsePort = &apos;true&apos;)" 
                                   true="DcmDspRoutineUsePort shall be false if DcmDspRequestResultsRoutineFnc is to be used"/>
                            <a:tst 
                                   expr="(. = &apos;&apos;) and not(node:exists(../DcmDspRoutineTidRef))" 
                                   true="Function name is empty"/>
                            <a:tst expr="node:exists(../DcmDspRoutineTidRef)" 
                                   true="If DcmDspRoutineTidRef references a RequestControl TID this function must be disabled."/>
                          </a:da>
                          <a:da name="WARNING" type="XPath" 
                                expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                false="Invalid name. (no prefixed C function name)"/>
                        </v:var>
                        <v:var name="DcmDspRequestResultsRoutineSupported" 
                               type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines whether the &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03) sub-function
                                     of the in the &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) service and its associated
                                     operations are available for this Diagnostic Routine.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: the &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03) sub-function
                                                           of the in the &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) service
                                                           and its associated operations are available for this
                                                           Diagnostic Routine.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: the &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03) sub-function
                                                            of the in the &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) service
                                                            and its associated operations are not available for this
                                                            Diagnostic Routine.&lt;/li&gt;

                                  &lt;/ul&gt;
                                  &lt;p&gt;Note: Further configuration of sub-functions under &lt;code&gt;DcmDsdSubService&lt;/code&gt;
                                           is not necessary.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="requestRoutineResults Supported"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:b9fa3a81-1083-421d-9afa-64e126b1b1f3"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="DcmDspRoutineFixedLength" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines if the length of data in the &lt;code&gt;routineControlOptionRecord&lt;/code&gt;in
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31)
                                     &lt;ul&gt;
                                       &lt;li&gt;&lt;code&gt;startRoutine&lt;/code&gt; (0x01)&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;stopRoutine&lt;/code&gt; (0x02)&lt;/li&gt;
                                     &lt;/ul&gt; diagnostic service requests and the &lt;code&gt;routineStatusRecord&lt;/code&gt; in
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31)
                                     &lt;ul&gt;
                                       &lt;li&gt;&lt;code&gt;startRoutine&lt;/code&gt; (0x01)&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;stopRoutine&lt;/code&gt; (0x02)&lt;/li&gt;
                                       &lt;li&gt;&lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03)&lt;/li&gt;
                                     &lt;/ul&gt; diagnostic service responses is fixed.&lt;/p&gt;

                                  &lt;p&gt;This configuration parameter is deprecated by RFC 57860 and does no longer exists
                                     in AUTOSAR version 4.2.1 &lt;/p&gt;

                                  &lt;p&gt;This configuration parameter controls whether the &lt;code&gt;currentDataLength&lt;/code&gt; parameter
                                     is expected or not in interfaces called for Diagnostic Routine Operations.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Length of the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; and
                                                           the &lt;code&gt;routineStatusRecord&lt;/code&gt; is fixed. The parameter
                                                           &lt;code&gt;currentDataLength&lt;/code&gt; is not expected in the signatures of
                                                           Diagnostic Routine Operation APIs.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Length of the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; and
                                                           the &lt;code&gt;routineStatusRecord&lt;/code&gt; is variable. The parameter
                                                           &lt;code&gt;currentDataLength&lt;/code&gt; is not expected in the signatures of
                                                           Diagnostic Routine Operation APIs.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Fixed Length Optional Record"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="a3d0d99d-bee3-451b-b4fc-fdb71c2e8e57"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="DcmDspRoutineIdentifier" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the unique numeric identifier of the Diagnostic Routine
                                  (to be used as the &lt;code&gt;routineIdentifier&lt;/code&gt; in &lt;code&gt;RoutineControl&lt;/code&gt; (0x31)
                                  diagnostic service requests according to ISO_14229-1).&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;0 .. 65535&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Routine Identifier"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="269c35e8-6821-4354-b7e3-96858acabc71"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=65535"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      false="DcmDspRoutineIdentifier has to be unique." 
                                      expr="text:uniq(../../*/DcmDspRoutineIdentifier, .)"/>
                              <mt:tst 
                                      true="If DcmDspRoutineTidRef is enabled, DcmDspRoutineIdentifier must correspond to the referenced RequestControl TestId" 
                                      expr="node:refvalid(../DcmDspRoutineTidRef)                                           and ((node:value(node:ref(../DcmDspRoutineTidRef)/DcmDspRequestControlTestId) + num:hextoint(&apos;0xE000&apos;)) != .)"/>
                              <mt:tst 
                                      true="According to ISO routine IDs in the range 0xE000 0xE0FF must be handled by the corresponding OBD RequestControl method.                                   Please select a valid reference for DcmDspRoutineTidRef" 
                                      expr="((. &gt;= num:hextoint(&apos;0xE000&apos;)) and  (. &lt;= num:hextoint(&apos;0xE0FF&apos;))) and not(node:refvalid(../DcmDspRoutineTidRef))"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspRoutineUsed" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines whether this Diagnostic Routine is available for use in the current configuration
                                     (for multi-purpose ECUs).&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: This Diagnostic Routine is available.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: This Diagnostic Routine is not available. The &lt;code&gt;Dcm&lt;/code&gt; behaves
                                                            behave as if this Diagnostic Routine was not configured.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable Routine"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="fe58ef9f-582f-47a4-826e-886afcfbc34e"/>
                          <a:da name="DEFAULT" value="true"/>
                        </v:var>
                        <v:var name="DcmDspRoutineUsePort" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the type of the interface that shall be used to
                                     implement the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;requestResults&lt;/code&gt;
                                     operations of this Diagnostic Routine in the context of a &lt;code&gt;RoutineControl&lt;/code&gt; (0x31)
                                     diagnostic service request.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;requestResults&lt;/code&gt;
                                                           operations of this Diagnostic Routine shall be implemented
                                                           using by using a synchronous AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                                           with asynchronous behaviour(the operation shall be completed in a
                                                           series of calls to the API, the first call being executed with an
                                                           &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                           as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                                           with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                                           all subsequent executions). The &lt;code&gt;Dcm&lt;/code&gt;
                                                           generates the &lt;code&gt;RoutineServices_&amp;#60;RoutineName&amp;#62;&lt;/code&gt;
                                                           &lt;code&gt;ClientServerInterface&lt;/code&gt;, where &lt;code&gt;&amp;#60;RoutineName&amp;#62;&lt;/code&gt;
                                                           is the name of this &lt;code&gt;DcmDspRoutine&lt;/code&gt; container. This interface shall implement the
                                                           &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;requestResults&lt;/code&gt; operations if they are
                                                           configured for this Diagnostic Routine. A Require Port is generated for this interface and shall
                                                           be connected to a compatible Provide Port of an Application Software Component. The name of this
                                                           Require Port is the same as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;Dcm&lt;/code&gt; uses an asynchronous API (the operation shall be completed in a
                                                            series of calls to the API, the first call being executed with an
                                                            &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                            as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                                            with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                                            all subsequent executions). The following callout names shall be
                                                            configured for each operation, if used:
                                                            &lt;ul&gt;
                                                              &lt;li&gt;For operation &lt;code&gt;startRoutine&lt;/code&gt;: &lt;code&gt;DcmDspStartRoutineFnc&lt;/code&gt;&lt;/li&gt;
                                                              &lt;li&gt;For operation &lt;code&gt;stopRoutine&lt;/code&gt;: &lt;code&gt;DcmDspStopRoutineFnc&lt;/code&gt;&lt;/li&gt;
                                                              &lt;li&gt;For operation &lt;code&gt;requestRoutineResults&lt;/code&gt;: &lt;code&gt;DcmDspRequestResultsRoutineFnc&lt;/code&gt;&lt;/li&gt;
                                                            &lt;/ul&gt;&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable port interface"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="97f304e4-b4d6-4866-99ab-6071466a9f3b"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(../../../../DcmGeneral/DcmRteUsage = &apos;false&apos;) and ((.) = &apos;true&apos;)" 
                                   true="DcmDspRoutineUsePort shall be TRUE, only if DcmRteUsage is TRUE."/>
                            <a:tst 
                                   expr="node:exists(../DcmDspRoutineTidRef) and ((.) = &apos;true&apos;)" 
                                   true="If DcmDspRoutineTidRef references a RequestControl TID this feature must be disabled."/>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspRoutineUsePortASRVersion" 
                               type="ENUMERATION">
                          <a:a name="COLUMN_TITLE" value="Autosar Version"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  Selects the AUTOSAR version to be used by the RoutineServices interface.
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Autosar Version"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="f32addf4-8953-4008-9024-6ed0ebd9e956"/>
                          <a:da name="DEFAULT" value="Default"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="RANGE">
                            <a:v>Default</a:v>
                            <a:v>AUTOSAR_40</a:v>
                            <a:v>AUTOSAR_42</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspStartRoutineFnc" 
                               type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the Callout used for starting a
                                     Diagnostic Routine in the Application, in the context of a
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service request with the
                                     &lt;code&gt;startRoutine&lt;/code&gt; (0x01) sub-function.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Routine Operation interface type (&lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt;):
                                      The configuration of this parameter is only relevant if
                                      &lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt; is set to &lt;code&gt;FALSE&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Function for startRoutine"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="f089674b-82ee-481e-84b1-7ec561f9bf0a"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="(../DcmDspRoutineUsePort = &apos;true&apos;)" 
                                   true="DcmDspRoutineUsePort shall be false if DcmDspStartRoutineFnc is to be used"/>
                            <a:tst expr="node:exists(../DcmDspRoutineTidRef)" 
                                   true="If DcmDspRoutineTidRef references a RequestControl TID this function must be disabled."/>
                            <a:tst 
                                   expr="(. = &apos;&apos;) and not(node:exists(../DcmDspRoutineTidRef))" 
                                   true="Function name is empty."/>
                          </a:da>
                          <a:da name="WARNING" type="XPath" 
                                expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                false="Invalid name. (no prefixed C function name)"/>
                        </v:var>
                        <v:var name="DcmDspStopRoutineFnc" type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the Callout used for stopping a
                                     Diagnostic Routine in the Application, in the context of a
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service request with the
                                     &lt;code&gt;stopRoutine&lt;/code&gt; (0x02) sub-function.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;Routine Operation interface type (&lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt;):
                                    The configuration of this parameter is only relevant if &lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt; is set to &lt;code&gt;FALSE&lt;/code&gt;&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Function for stopRoutine"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="c34ec127-7363-4580-9cb1-2eab7bd1a7f2"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="(../DcmDspRoutineUsePort = &apos;true&apos;)" 
                                   true="DcmDspRoutineUsePort shall be false if DcmDspStopRoutineFnc is to be used."/>
                            <a:tst expr="node:exists(../DcmDspRoutineTidRef)" 
                                   true="If DcmDspRoutineTidRef references a RequestControl TID this function must be disabled."/>
                            <a:tst 
                                   expr="(. = &apos;&apos;) and not(node:exists(../DcmDspRoutineTidRef))" 
                                   true="Function name is empty."/>
                          </a:da>
                          <a:da name="WARNING" type="XPath" 
                                expr="(. != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;)" 
                                false="Invalid name. (no prefixed C function name)"/>
                        </v:var>
                        <v:var name="DcmDspStopRoutineSupported" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines whether the &lt;code&gt;stopRoutine&lt;/code&gt; (0x02) sub-function
                                       of the in the &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) service and its associated
                                       operations are available for this Diagnostic Routine.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: the &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x02) sub-function
                                                             of the &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) service
                                                             and its associated operations are available for this
                                                             Diagnostic Routine.&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: the &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x02) sub-function
                                                              of the &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) service
                                                              and its associated operations are not available for this
                                                              Diagnostic Routine.&lt;/li&gt;
                                    &lt;/ul&gt;

                                      &lt;p&gt;Note: Further configuration of sub-functions under &lt;code&gt;DcmDsdSubService&lt;/code&gt;
                                               is not necessary.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Stop Routine Supported"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:d94bc410-b311-4235-bf30-9bdd300a8320"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:ref name="DcmDspRoutineInfoRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to the &lt;code&gt;DcmDspRoutineInfo&lt;/code&gt; container
                                     defining the signals and permissions of this Diagnostic Routine:
                                    &lt;ul&gt;
                                      &lt;li&gt;Diagnostic Routine Security Level, Diagnostic Session and Mode Rule
                                          authorization settings&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;startRoutine&lt;/code&gt; (0x01) sub-function input and output signal configuration&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;stopRoutine&lt;/code&gt; (0x02) sub-function input and output signal configuration&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03) sub-function output signal configuration&lt;/li&gt;
                                    &lt;/ul&gt;&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Reference to Routine Information"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="d33e8ca3-1f27-4a39-b8e0-f93e2860a13e"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspRoutineInfo"/>
                        </v:ref>
                        <v:ref name="DcmDspRoutineTidRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Reference to a &lt;code&gt;DcmDspRequestControl&lt;/code&gt; instance to be used
                                     when reading data through the &lt;code&gt;RoutineControl&lt;/code&gt; interface.
                                     &lt;code&gt;DcmDspRequestControl&lt;/code&gt; contains the configuration (parameters)
                                     of the &quot;Request control of on-board system, test or component&quot; service
                                     (Service $08).
                                  &lt;/p&gt;

                                  &lt;p&gt;Note: If this parameter is disabled, the parameters &lt;code&gt;DcmDspRoutineAuthorization&lt;/code&gt;,
                                     &lt;code&gt;DcmDspStartRoutine&lt;/code&gt; and &lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt; shall be mandatory.

                                     If this parameter is enabled and a &lt;code&gt;DcmDspRequestControl&lt;/code&gt; is referenced,
                                     the parameters &lt;code&gt;DcmDspRoutineAuthorization&lt;/code&gt;, &lt;code&gt;DcmDspRoutineRequest&lt;/code&gt;,
                                     &lt;code&gt;DcmDspRoutineStop&lt;/code&gt;, &lt;code&gt;DcmDspStartRoutine&lt;/code&gt; and
                                     &lt;code&gt;DcmDspRoutineUsePort&lt;/code&gt; shall be disabled.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="RequestControl Reference"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:d6179b55-34eb-412e-b9df-ab3b67910df9"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="Invalid reference."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspRequestControl"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmDspRoutineInfo" type="MAP">
                      <a:a name="LABEL" value="Routine Information"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <v:ctr name="DcmDspRoutineInfo" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines, for the referencing &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine, parameters configuring:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;Operations available to this Diagnostic Routine&lt;/li&gt;
                                  &lt;li&gt;Signal configurations for request and response messages to the &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) Diagnostic Service
                                      for this Diagnostic Routine&lt;/li&gt;
                                  &lt;li&gt;Permissions for operations on this Diagnostic Routine.&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="1e6c37c0-f608-41bb-bc47-bb94b7eb0989"/>
                        <a:da name="TITLE" value="Routine Information"/>
                        <v:ctr name="DcmDspRoutineAuthorization" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the configuration for authorization of operations
                                     on the referencing &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" value="Routine Authorization"/>
                          <a:a name="UUID" 
                               value="c8d97dd8-abeb-483e-a095-57b215ee52c5"/>
                          <v:ref name="DcmDspRoutineModeRuleRef" 
                                 type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;

                                    &lt;p&gt;Reference to the &lt;code&gt;DcmDspModeRule&lt;/code&gt; to be checked before executing any
                                       operation on the referencing &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;

                                    &lt;p&gt;If this parameter is enabled and a &lt;code&gt;DcmDspModeRule&lt;/code&gt; is referenced, this Mode Rule shall be evaluated before service execution is allowed to proceed.
                                       If the Mode Rule evaluates to &lt;code&gt;TRUE&lt;/code&gt;, service processing will be allowed to proceed. If the Mode Rule evaluates to &lt;code&gt;FALSE&lt;/code&gt;, service processing is not
                                       allowed to proceed and depending on the referenced mode rule a Negative Response Code is returned to the Tester. If this parameter is disabled, no mode rule
                                       permission check is performed.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Mode Rule Reference"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:d6179b55-34eb-412e-b9df-ab3b67910df9"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="Invalid reference."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule"/>
                          </v:ref>
                          <v:lst name="DcmDspRoutineSecurityLevelRef">
                            <a:a name="LABEL" 
                                 value="Reference to Security Levels"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <v:ref name="DcmDspRoutineSecurityLevelRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;s defining the Security Levels in which operations
                                         shall be allowed on the referencing &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;

                                      &lt;p&gt;Note: If there is no reference configured, no check of Security Level is performed, i.e.
                                         operations are allowed in any Security Level.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Reference to Security Levels"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="38d769e6-8d22-4f15-8574-792eac1d48ff"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="Invalid reference."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSecurity/DcmDspSecurityRow"/>
                            </v:ref>
                          </v:lst>
                          <v:lst name="DcmDspRoutineSessionRef">
                            <a:a name="LABEL" 
                                 value="Reference to Diagnostic Sessions"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="(count(*[(node:refvalid(.)) and (node:value(node:ref(.)/DcmDspSessionLevel) = 255)]) &gt; 0) and (count(*) &gt; 1)" 
                                  true="If the session &apos;ALL_SESSION_LEVEL&apos; is configured, no other session shall be configured."/>
                            <v:ref name="DcmDspRoutineSessionRef" 
                                   type="REFERENCE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Reference to the &lt;code&gt;DcmDspSessionRow&lt;/code&gt;s defining the Diagnostic Sessions in which operations
                                         shall be allowed on the referencing &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;

                                      &lt;p&gt;Note: If there is no reference configured, no check of Diagnostic Session is performed, i.e.
                                         operations are allowed in any Diagnostic Session.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Reference to Diagnostic Sessions"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="UUID" 
                                   value="6053adf7-48af-489a-a500-c1bb5282add7"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="node:refvalid(.)" 
                                    false="Invalid reference."/>
                              <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspSession/DcmDspSessionRow"/>
                            </v:ref>
                          </v:lst>
                        </v:ctr>
                        <v:ctr name="DcmDspRoutineRequestResIn" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the input parameter of &lt;code&gt;requestResults&lt;/code&gt;
                                  subservice for routineControl service.&lt;/p&gt;

                              &lt;p&gt;&lt;b&gt;Note : This is a Vendor Specific parameter.&lt;/b&gt;&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="RequestRoutineResults Input Configuration"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" 
                               value="b2c8fad0-e7f0-11e3-ac10-0800200c9a66"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="TITLE" value="RequestResult Subservice"/>
                          <v:lst name="DcmDspRoutineRequestResInSignal" 
                                 type="MAP">
                            <a:a name="LABEL" 
                                 value="RequestRoutineResults Input Signal Configuration"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="DcmDspRoutineRequestResInSignal" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the description of input signals
                                      used in &lt;code&gt;routineControl&lt;/code&gt; service.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="RequestResult Signal Description"/>
                              <a:a name="UUID" 
                                   value="bc2b79e0-e7f0-11e3-ac10-0800200c9a66"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and not(DcmDspRoutineSignalPos = num:max(../*/DcmDspRoutineSignalPos))" 
                                       true="Signal of type &apos;VARIABLE_LENGTH&apos; shall have the greatest signal bit position in the routineControl request/response."/>
                                <a:tst expr="DcmDspRoutineSignalLength = 0" 
                                       true="Routine signals with length 0 are not allowed. Signal length must be at least 1 bit."/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;BOOLEAN&apos;) and (./DcmDspRoutineSignalLength &gt; 1))" 
                                       true="Signal length shall be equal to 1 bit as DcmDspRoutineSignalType is BOOLEAN"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT8&apos;) or (./DcmDspRoutineSignalType = &apos;SINT8&apos;)) and (./DcmDspRoutineSignalLength &gt; 8))" 
                                       true="Signal length shall be less than or equal to 8 bits as DcmDspRoutineSignalType is XINT8"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT16&apos;) or (./DcmDspRoutineSignalType = &apos;SINT16&apos;)) and (./DcmDspRoutineSignalLength &gt; 16))" 
                                       true="Signal length shall be less than or equal to 16 bits as DcmDspRoutineSignalType is XINT16"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT32&apos;) or (./DcmDspRoutineSignalType = &apos;SINT32&apos;)) and (./DcmDspRoutineSignalLength &gt; 32))" 
                                       true="Signal length shall be less than or equal to 32 bits as DcmDspRoutineSignalType is XINT32"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is UINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is UINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is UINT32_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is SINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is SINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is SINT32_N"/>
                              </a:da>
                              <a:da name="TITLE" value="RequestResult Signal"/>
                              <v:var name="DcmDspRoutineSignalLength" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines, in number of bits, the signal length in the &lt;code&gt;routineControl&lt;/code&gt;
                                        request/response.
                                        &lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Length"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="c76773e0-e7f0-11e3-ac10-0800200c9a66"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalPos" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Configures the signal position in the routineControl
                                        request/response, in bits.
                                        &lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Position"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="cf1eb3f0-e7f0-11e3-ac10-0800200c9a66"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalType" 
                                     type="ENUMERATION">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Configures the signal type in the routineControl
                                        request/response.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Type"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="d5966f20-e7f0-11e3-ac10-0800200c9a66"/>
                                <a:da name="RANGE">
                                  <a:v>BOOLEAN</a:v>
                                  <a:v>SINT16</a:v>
                                  <a:v>SINT32</a:v>
                                  <a:v>SINT8</a:v>
                                  <a:v>UINT16</a:v>
                                  <a:v>UINT32</a:v>
                                  <a:v>UINT8</a:v>
                                  <a:v>SINT16_N</a:v>
                                  <a:v>SINT32_N</a:v>
                                  <a:v>SINT8_N</a:v>
                                  <a:v>UINT16_N</a:v>
                                  <a:v>UINT32_N</a:v>
                                  <a:v>UINT8_N</a:v>
                                  <a:v>VARIABLE_LENGTH</a:v>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                        <v:ctr name="DcmDspRoutineRequestResOut" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the configuration for the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter present in
                                     the response to the &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03) sub-function of the
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                     &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="RequestResult Output Configuration"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" 
                               value="9c884ce6-6cec-4d6f-8699-3fa5202b7b16"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="TITLE" value="RequestResult Subservice"/>
                          <v:lst name="DcmDspRoutineRequestResOutSignal" 
                                 type="MAP">
                            <a:a name="LABEL" 
                                 value="RequestResult Output Signal Configuration"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="DcmDspRoutineRequestResOutSignal" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the configuration of a single signal of
                                         the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter which is present in
                                         the response to the &lt;code&gt;requestRoutineResults&lt;/code&gt; (0x03) sub-function of the
                                         &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service, for the referencing
                                         &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="RequestResult Output Signal Description"/>
                              <a:a name="UUID" 
                                   value="30a4fe26-2324-421c-ad21-fa23da18031d"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and not(DcmDspRoutineSignalPos = num:max(../*/DcmDspRoutineSignalPos))" 
                                       true="Signal of type &apos;VARIABLE_LENGTH&apos; should have the greatest signal bit position in the routineControl request/response."/>
                                <a:tst expr="DcmDspRoutineSignalLength = 0" 
                                       true="Routine signals with length 0 are not allowed. Signal length must be at least 1 bit."/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;BOOLEAN&apos;) and (./DcmDspRoutineSignalLength &gt; 1))" 
                                       true="Signal length should be equal to 1 bit as DcmDspRoutineSignalType is BOOLEAN"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT8&apos;) or (./DcmDspRoutineSignalType = &apos;SINT8&apos;)) and (./DcmDspRoutineSignalLength &gt; 8))" 
                                       true="Signal length shall be less than or equal to 8 bits as DcmDspRoutineSignalType is XINT8"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT16&apos;) or (./DcmDspRoutineSignalType = &apos;SINT16&apos;)) and (./DcmDspRoutineSignalLength &gt; 16))" 
                                       true="Signal length shall be less than or equal to 16 bits as DcmDspRoutineSignalType is XINT16"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT32&apos;) or (./DcmDspRoutineSignalType = &apos;SINT32&apos;)) and (./DcmDspRoutineSignalLength &gt; 32))" 
                                       true="Signal length shall be less than or equal to 32 bits as DcmDspRoutineSignalType is XINT32"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is UINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is UINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is UINT32_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is SINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is SINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is SINT32_N"/>
                              </a:da>
                              <a:da name="TITLE" 
                                    value="RequestResult Output Signal"/>
                              <v:var name="DcmDspRoutineSignalLength" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the length of the signal, when the &quot;signal length&quot; is not variable, if
                                        &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is not configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;,
                                        or the maximum length the variable &quot;length signal&quot; is allowed to reach,
                                        when &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;1 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Note: The available length range is restricted from the AUTOSAR-defined range of
                                                 0 .. 65535 as signals of length 0 are not usable.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Length"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="6af8444c-af21-499f-93b3-50e49ad15fbb"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=1"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalPos" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the starting position of this signal in the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter
                                           of the diagnostic service response.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Position"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="17355d88-989d-447a-a28e-6e630728901c"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalType" 
                                     type="ENUMERATION">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the data type of data belonging to this signal.&lt;/p&gt;

                                        &lt;p&gt;This configuration is used in order to facilitate Endianness conversion of the data,
                                           if this is required (see configuration parameter &lt;code&gt;DcmDslProtocolEndiannessConvEnabled&lt;/code&gt;).&lt;/p&gt;

                                        &lt;p&gt;This parameter also configures whether the length of this signal
                                           is variable or not. If the type of the signal is &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;:
                                          &lt;ul&gt;
                                            &lt;li&gt;also configure &lt;code&gt;DcmDspRoutineFixedLength&lt;/code&gt; to TRUE for the &lt;code&gt;DcmDspRoutine&lt;/code&gt;
                                                referencing this &lt;code&gt;DcmDspRoutineInfo&lt;/code&gt;.&lt;/li&gt;
                                            &lt;li&gt;the length of the signal is supplied by the Application via the &lt;code&gt;currentDataLength&lt;/code&gt;
                                                parameter of the &lt;code&gt;requestRoutineResults&lt;/code&gt; operation interface.&lt;/li&gt;
                                          &lt;/ul&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Type"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="ab47f8d3-03ae-417b-a1de-eb1d8285909f"/>
                                <a:da name="RANGE">
                                  <a:v>BOOLEAN</a:v>
                                  <a:v>SINT16</a:v>
                                  <a:v>SINT32</a:v>
                                  <a:v>SINT8</a:v>
                                  <a:v>UINT16</a:v>
                                  <a:v>UINT32</a:v>
                                  <a:v>UINT8</a:v>
                                  <a:v>SINT16_N</a:v>
                                  <a:v>SINT32_N</a:v>
                                  <a:v>SINT8_N</a:v>
                                  <a:v>UINT16_N</a:v>
                                  <a:v>UINT32_N</a:v>
                                  <a:v>UINT8_N</a:v>
                                  <a:v>VARIABLE_LENGTH</a:v>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                        <v:ctr name="DcmDspRoutineStopIn" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the configuration for the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; input parameter present in
                                     the request for the &lt;code&gt;stopRoutine&lt;/code&gt; (0x02) sub-function of the
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                     &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Stop Routine Input Configuration"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" 
                               value="20f409a4-ea26-48a4-8562-e3154c2ff78c"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="TITLE" value="Stop Subservice"/>
                          <v:lst name="DcmDspRoutineStopInSignal" type="MAP">
                            <a:a name="LABEL" value="Stop Routine Input Signals"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="DcmDspRoutineStopInSignal" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the configuration for a signal present in
                                         the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; input parameter present in
                                         the request for the &lt;code&gt;stopRoutine&lt;/code&gt; (0x02) sub-function of the
                                         &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                         &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Stop Routine Input Signal Description"/>
                              <a:a name="UUID" 
                                   value="c84eaf54-5057-48ee-a748-a847164bb838"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and not(DcmDspRoutineSignalPos = num:max(../*/DcmDspRoutineSignalPos))" 
                                       true="Signal of type &apos;VARIABLE_LENGTH&apos; should have the greatest signal bit position in the routineControl request/response."/>
                                <a:tst expr="DcmDspRoutineSignalLength = 0" 
                                       true="Routine signals with length 0 are not allowed. Signal length must be at least 1 bit."/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;BOOLEAN&apos;) and (./DcmDspRoutineSignalLength &gt; 1))" 
                                       true="Signal length should be equal to 1 bit as DcmDspRoutineSignalType is BOOLEAN"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT8&apos;) or (./DcmDspRoutineSignalType = &apos;SINT8&apos;)) and (./DcmDspRoutineSignalLength &gt; 8))" 
                                       true="Signal length shall be less than or equal to 8 bits as DcmDspRoutineSignalType is XINT8"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT16&apos;) or (./DcmDspRoutineSignalType = &apos;SINT16&apos;)) and (./DcmDspRoutineSignalLength &gt; 16))" 
                                       true="Signal length shall be less than or equal to 16 bits as DcmDspRoutineSignalType is XINT16"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT32&apos;) or (./DcmDspRoutineSignalType = &apos;SINT32&apos;)) and (./DcmDspRoutineSignalLength &gt; 32))" 
                                       true="Signal length shall be less than or equal to 32 bits as DcmDspRoutineSignalType is XINT32"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is UINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is UINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is UINT32_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is SINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is SINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is SINT32_N"/>
                              </a:da>
                              <a:da name="TITLE" 
                                    value="Stop Routine Input Signal"/>
                              <v:var name="DcmDspRoutineSignalLength" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the length of the signal, when the &quot;signal length&quot; is not variable, if
                                        &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is not configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;,
                                        or the maximum length the variable &quot;length signal&quot; is allowed to reach,
                                        when &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;1 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Note: The available length range is restricted from the AUTOSAR-defined range of
                                                 0 .. 65535 as signals of length 0 are not usable.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Length"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="f9484a2f-1692-49fb-a5a5-2bb668f70a0b"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=1"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalPos" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the starting position of this signal in the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; input parameter
                                           of the diagnostic service request.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Position"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="2b8a7c42-735f-4d4b-a078-e84484f27f35"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalType" 
                                     type="ENUMERATION">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the data type of data belonging to this signal.&lt;/p&gt;

                                        &lt;p&gt;This configuration is used in order to facilitate Endianness conversion of the data
                                           if this is required (see configuration parameter &lt;code&gt;DcmDslProtocolEndiannessConvEnabled&lt;/code&gt;).&lt;/p&gt;

                                        &lt;p&gt;This parameter also configures whether the length of this signal
                                           is variable or not. If the type of the signal is &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;:
                                          &lt;ul&gt;
                                            &lt;li&gt;also configure &lt;code&gt;DcmDspRoutineFixedLength&lt;/code&gt; to TRUE for the &lt;code&gt;DcmDspRoutine&lt;/code&gt;
                                                referencing this &lt;code&gt;DcmDspRoutineInfo&lt;/code&gt;.&lt;/li&gt;
                                            &lt;li&gt;the length of the signal is supplied by the &lt;code&gt;Dcm&lt;/code&gt; via the &lt;code&gt;currentDataLength&lt;/code&gt;
                                                parameter of the &lt;code&gt;stopRoutine&lt;/code&gt; operation interface.&lt;/li&gt;
                                          &lt;/ul&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Type"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="9769ecea-67c7-4299-82e1-27e484bdcf82"/>
                                <a:da name="RANGE">
                                  <a:v>BOOLEAN</a:v>
                                  <a:v>SINT16</a:v>
                                  <a:v>SINT32</a:v>
                                  <a:v>SINT8</a:v>
                                  <a:v>UINT16</a:v>
                                  <a:v>UINT32</a:v>
                                  <a:v>UINT8</a:v>
                                  <a:v>SINT16_N</a:v>
                                  <a:v>SINT32_N</a:v>
                                  <a:v>SINT8_N</a:v>
                                  <a:v>UINT16_N</a:v>
                                  <a:v>UINT32_N</a:v>
                                  <a:v>UINT8_N</a:v>
                                  <a:v>VARIABLE_LENGTH</a:v>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                        <v:ctr name="DcmDspRoutineStopOut" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the configuration for the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter present in
                                     the response to the &lt;code&gt;stopRoutine&lt;/code&gt; (0x02) sub-function of the
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                     &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Stop Routine Output Configuration"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" 
                               value="39a29cfc-95fd-45b0-b7d8-d0f4705e3fc0"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="TITLE" value="Stop Subservice"/>
                          <v:lst name="DcmDspRoutineStopOutSignal" type="MAP">
                            <a:a name="LABEL" 
                                 value="Stop Routine Output Signals"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="DcmDspRoutineStopOutSignal" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the configuration for a signal in
                                         the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter present in
                                         the response to the &lt;code&gt;stopRoutine&lt;/code&gt; (0x02) sub-function of the
                                         &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                         &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Stop Routine Output Signal Description"/>
                              <a:a name="UUID" 
                                   value="8a03ce4a-e9b1-4009-938a-adde32d7ea0c"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and not(DcmDspRoutineSignalPos = num:max(../*/DcmDspRoutineSignalPos))" 
                                       true="Signal of type &apos;VARIABLE_LENGTH&apos; should have the greatest signal bit position in the routineControl request/response."/>
                                <a:tst expr="DcmDspRoutineSignalLength = 0" 
                                       true="Routine signals with length 0 are not allowed. Signal length must be at least 1 bit."/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;BOOLEAN&apos;) and (./DcmDspRoutineSignalLength &gt; 1))" 
                                       true="Signal length should be equal to 1 bit as DcmDspRoutineSignalType is BOOLEAN"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT8&apos;) or (./DcmDspRoutineSignalType = &apos;SINT8&apos;)) and (./DcmDspRoutineSignalLength &gt; 8))" 
                                       true="Signal length shall be less than or equal to 8 bits as DcmDspRoutineSignalType is XINT8"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT16&apos;) or (./DcmDspRoutineSignalType = &apos;SINT16&apos;)) and (./DcmDspRoutineSignalLength &gt; 16))" 
                                       true="Signal length shall be less than or equal to 16 bits as DcmDspRoutineSignalType is XINT16"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT32&apos;) or (./DcmDspRoutineSignalType = &apos;SINT32&apos;)) and (./DcmDspRoutineSignalLength &gt; 32))" 
                                       true="Signal length shall be less than or equal to 32 bits as DcmDspRoutineSignalType is XINT32"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is UINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is UINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is UINT32_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is SINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is SINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is SINT32_N"/>
                              </a:da>
                              <a:da name="TITLE" 
                                    value="Stop Routine Output Signal"/>
                              <v:var name="DcmDspRoutineSignalLength" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the length of the signal, when the &quot;signal length&quot; is not variable, if
                                        &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is not configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;,
                                        or the maximum length the variable &quot;length signal&quot; is allowed to reach,
                                        when &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;1 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Note: The available length range is restricted from the AUTOSAR-defined range of
                                                 0 .. 65535 as signals of length 0 are not usable.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Length"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="5e523609-2d91-49a7-af8f-b9dfef907cad"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=1"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalPos" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the starting position of this signal in the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter
                                           of the diagnostic service response.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Position"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="7df2866c-0d24-417f-b32d-d8604e8e6f4c"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalType" 
                                     type="ENUMERATION">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the data type of data belonging to this signal.&lt;/p&gt;

                                        &lt;p&gt;This configuration is used in order to facilitate Endianness conversion of the data
                                           if this is required (see configuration parameter &lt;code&gt;DcmDslProtocolEndiannessConvEnabled&lt;/code&gt;).&lt;/p&gt;

                                        &lt;p&gt;This parameter also configures whether the length of this signal
                                           is variable or not. If the type of the signal is &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;:
                                          &lt;ul&gt;
                                            &lt;li&gt;also configure &lt;code&gt;DcmDspRoutineFixedLength&lt;/code&gt; to TRUE for the &lt;code&gt;DcmDspRoutine&lt;/code&gt;
                                                referencing this &lt;code&gt;DcmDspRoutineInfo&lt;/code&gt;.&lt;/li&gt;
                                            &lt;li&gt;the length of the signal is supplied by the Application via the &lt;code&gt;currentDataLength&lt;/code&gt;
                                                parameter of the &lt;code&gt;stopRoutine&lt;/code&gt; operation interface.&lt;/li&gt;
                                          &lt;/ul&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Type"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="d06a0993-564c-4809-9aa4-40e6124d0134"/>
                                <a:da name="RANGE">
                                  <a:v>BOOLEAN</a:v>
                                  <a:v>SINT16</a:v>
                                  <a:v>SINT32</a:v>
                                  <a:v>SINT8</a:v>
                                  <a:v>UINT16</a:v>
                                  <a:v>UINT32</a:v>
                                  <a:v>UINT8</a:v>
                                  <a:v>SINT16_N</a:v>
                                  <a:v>SINT32_N</a:v>
                                  <a:v>SINT8_N</a:v>
                                  <a:v>UINT16_N</a:v>
                                  <a:v>UINT32_N</a:v>
                                  <a:v>UINT8_N</a:v>
                                  <a:v>VARIABLE_LENGTH</a:v>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                        <v:ctr name="DcmDspStartRoutineIn" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the configuration for the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; input parameter present in
                                     the request for the &lt;code&gt;startRoutine&lt;/code&gt; (0x01) sub-function of the
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                     &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Start Routine Input Configuration"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" 
                               value="602554f1-b2ed-4502-a536-3222eb378b72"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="TITLE" value="Start Subservice"/>
                          <v:lst name="DcmDspStartRoutineInSignal" type="MAP">
                            <a:a name="LABEL" 
                                 value="Start Routine Input Signals"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="DcmDspStartRoutineInSignal" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the configuration for a signal in
                                         the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; input parameter present in
                                         the request for the &lt;code&gt;startRoutine&lt;/code&gt; (0x01) sub-function of the
                                         &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                         &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="UUID" 
                                   value="6ee198a3-79d5-46e3-b332-d59bc4deade0"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and not(DcmDspRoutineSignalPos = num:max(../*/DcmDspRoutineSignalPos))" 
                                       true="Signal of type &apos;VARIABLE_LENGTH&apos; should have the greatest signal bit position in the routineControl request/response."/>
                                <a:tst expr="DcmDspRoutineSignalLength = 0" 
                                       true="Routine signals with length 0 are not allowed. Signal length must be at least 1 bit."/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;BOOLEAN&apos;) and (./DcmDspRoutineSignalLength &gt; 1))" 
                                       true="Signal length should be equal to 1 bit as DcmDspRoutineSignalType is BOOLEAN"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT8&apos;) or (./DcmDspRoutineSignalType = &apos;SINT8&apos;)) and (./DcmDspRoutineSignalLength &gt; 8))" 
                                       true="Signal length shall be less than or equal to 8 bits as DcmDspRoutineSignalType is XINT8"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT16&apos;) or (./DcmDspRoutineSignalType = &apos;SINT16&apos;)) and (./DcmDspRoutineSignalLength &gt; 16))" 
                                       true="Signal length shall be less than or equal to 16 bits as DcmDspRoutineSignalType is XINT16"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT32&apos;) or (./DcmDspRoutineSignalType = &apos;SINT32&apos;)) and (./DcmDspRoutineSignalLength &gt; 32))" 
                                       true="Signal length shall be less than or equal to 32 bits as DcmDspRoutineSignalType is XINT32"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is UINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is UINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is UINT32_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is SINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is SINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is SINT32_N"/>
                              </a:da>
                              <v:var name="DcmDspRoutineSignalLength" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the length of the signal, when the &quot;signal length&quot; is not variable, if
                                        &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is not configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;,
                                        or the maximum length the variable &quot;length signal&quot; is allowed to reach,
                                        when &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;1 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Note: The available length range is restricted from the AUTOSAR-defined range of
                                                 0 .. 65535 as signals of length 0 are not usable.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Length"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="33c9bdb2-d284-4d8e-ab94-ebb438dd54de"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=1"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalPos" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the starting position of this signal in the &lt;code&gt;routineControlOptionRecord&lt;/code&gt; input parameter
                                           of the diagnostic service request.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Position"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="ee8167a5-ffbe-4307-80c0-e3db56275f7f"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalType" 
                                     type="ENUMERATION">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the data type of data belonging to this signal.&lt;/p&gt;

                                        &lt;p&gt;This configuration is used in order to facilitate Endianness conversion of the data
                                           if this is required (see configuration parameter &lt;code&gt;DcmDslProtocolEndiannessConvEnabled&lt;/code&gt;).&lt;/p&gt;

                                        &lt;p&gt;This parameter also configures whether the length of this signal
                                           is variable or not. If the type of the signal is &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;:
                                          &lt;ul&gt;
                                            &lt;li&gt;also configure &lt;code&gt;DcmDspRoutineFixedLength&lt;/code&gt; to TRUE for the &lt;code&gt;DcmDspRoutine&lt;/code&gt;
                                                referencing this &lt;code&gt;DcmDspRoutineInfo&lt;/code&gt;.&lt;/li&gt;
                                            &lt;li&gt;the length of the signal is supplied by the &lt;code&gt;Dcm&lt;/code&gt; via the &lt;code&gt;currentDataLength&lt;/code&gt;
                                                parameter of the &lt;code&gt;startRoutine&lt;/code&gt; operation interface.&lt;/li&gt;
                                          &lt;/ul&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Type"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="10e5ed70-bdd1-4c4e-9d49-df7610e5ef93"/>
                                <a:da name="RANGE">
                                  <a:v>BOOLEAN</a:v>
                                  <a:v>SINT16</a:v>
                                  <a:v>SINT32</a:v>
                                  <a:v>SINT8</a:v>
                                  <a:v>UINT16</a:v>
                                  <a:v>UINT32</a:v>
                                  <a:v>UINT8</a:v>
                                  <a:v>SINT16_N</a:v>
                                  <a:v>SINT32_N</a:v>
                                  <a:v>SINT8_N</a:v>
                                  <a:v>UINT16_N</a:v>
                                  <a:v>UINT32_N</a:v>
                                  <a:v>UINT8_N</a:v>
                                  <a:v>VARIABLE_LENGTH</a:v>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                        <v:ctr name="DcmDspStartRoutineOut" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the configuration for the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter present in
                                     the response to the &lt;code&gt;startRoutine&lt;/code&gt; (0x01) sub-function of the
                                     &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                     &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="LABEL" 
                               value="Start Routine Output Configuration"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" 
                               value="d5a92d23-7ece-46fb-b55c-60315dadc5e8"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="TITLE" value="Start Subservice"/>
                          <v:lst name="DcmDspStartRoutineOutSignal" type="MAP">
                            <a:a name="LABEL" 
                                 value="Start Routine Output Signals"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="MIN" value="1"/>
                            <v:ctr name="DcmDspStartRoutineOutSignal" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the configuration of a signal used in
                                         the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter present in
                                         the response to the &lt;code&gt;startRoutine&lt;/code&gt; (0x01) sub-function of the
                                         &lt;code&gt;RoutineControl&lt;/code&gt; (0x31) diagnostic service for the referencing
                                         &lt;code&gt;DcmDspRoutine&lt;/code&gt; Diagnostic Routine.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Start Routine Output Signal Description"/>
                              <a:a name="UUID" 
                                   value="33efe304-1f69-4d6a-8284-7da711637c97"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst 
                                       expr="(DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos;) and not(DcmDspRoutineSignalPos = num:max(../*/DcmDspRoutineSignalPos))" 
                                       true="Signal of type &apos;VARIABLE_LENGTH&apos; should have the greatest signal bit position in the routineControl request/response."/>
                                <a:tst expr="DcmDspRoutineSignalLength = 0" 
                                       true="Routine signals with length 0 are not allowed. Signal length must be at least 1 bit."/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;BOOLEAN&apos;) and (./DcmDspRoutineSignalLength &gt; 1))" 
                                       true="Signal length should be equal to 1 bit as DcmDspRoutineSignalType is BOOLEAN"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT8&apos;) or (./DcmDspRoutineSignalType = &apos;SINT8&apos;)) and (./DcmDspRoutineSignalLength &gt; 8))" 
                                       true="Signal length shall be less than or equal to 8 bits as DcmDspRoutineSignalType is XINT8"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT16&apos;) or (./DcmDspRoutineSignalType = &apos;SINT16&apos;)) and (./DcmDspRoutineSignalLength &gt; 16))" 
                                       true="Signal length shall be less than or equal to 16 bits as DcmDspRoutineSignalType is XINT16"/>
                                <a:tst 
                                       expr="(((./DcmDspRoutineSignalType = &apos;UINT32&apos;) or (./DcmDspRoutineSignalType = &apos;SINT32&apos;)) and (./DcmDspRoutineSignalLength &gt; 32))" 
                                       true="Signal length shall be less than or equal to 32 bits as DcmDspRoutineSignalType is XINT32"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is UINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is UINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;UINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is UINT32_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT8_N&apos;) and ((./DcmDspRoutineSignalLength mod 8)!= 0))" 
                                       true="Signal length shall be an even multiple of 8 bits as DcmDspRoutineSignalType is SINT8_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT16_N&apos;) and ((./DcmDspRoutineSignalLength mod 16)!= 0))" 
                                       true="Signal length shall be an even multiple of 16 bits as DcmDspRoutineSignalType is SINT16_N"/>
                                <a:tst 
                                       expr="((./DcmDspRoutineSignalType = &apos;SINT32_N&apos;) and ((./DcmDspRoutineSignalLength mod 32)!= 0))" 
                                       true="Signal length shall be an even multiple of 32 bits as DcmDspRoutineSignalType is SINT32_N"/>
                              </a:da>
                              <a:da name="TITLE" 
                                    value="Start Routine Output Signal"/>
                              <v:var name="DcmDspRoutineSignalLength" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the length of the signal, when the &quot;signal length&quot; is not variable, if
                                        &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is not configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;,
                                        or the maximum length the variable &quot;length signal&quot; is allowed to reach,
                                        when &lt;code&gt;DcmDspRoutineSignalType&lt;/code&gt; is configured to&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;1 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;

                                        &lt;p&gt;Note: The available length range is restricted from the AUTOSAR-defined range of
                                                 0 .. 65535 as signals of length 0 are not usable.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Length"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="2de654b1-39f2-4c63-b015-9e692eb41742"/>
                                <a:da name="DEFAULT" value="1"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=1"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalPos" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the starting position of this signal in the &lt;code&gt;routineStatusRecord&lt;/code&gt; output parameter
                                           of the diagnostic service response.&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;0 .. 65535 bits&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Position"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="4ec15cdf-37e3-4ec8-a30a-8869886cc07e"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=65535"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                                <a:da name="WARNING" type="XPath" 
                                      expr="../../../../../../DcmDspRoutineVariableLengthInBytes = &apos;true&apos; and ../DcmDspRoutineSignalType = &apos;VARIABLE_LENGTH&apos; and ((. mod 8) != 0)" 
                                      true="VARIABLE_LENGTH records are not byte-aligned."/>
                              </v:var>
                              <v:var name="DcmDspRoutineSignalType" 
                                     type="ENUMERATION">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the data type of data belonging to this signal.&lt;/p&gt;

                                        &lt;p&gt;This configuration is used in order to facilitate Endianness conversion of the data
                                           if this is required (see configuration parameter &lt;code&gt;DcmDslProtocolEndiannessConvEnabled&lt;/code&gt;).&lt;/p&gt;

                                        &lt;p&gt;This parameter also configures whether the length of this signal
                                           is variable or not. If the type of the signal is &lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;:
                                          &lt;ul&gt;
                                            &lt;li&gt;also configure &lt;code&gt;DcmDspRoutineFixedLength&lt;/code&gt; to TRUE for the &lt;code&gt;DcmDspRoutine&lt;/code&gt;
                                                referencing this &lt;code&gt;DcmDspRoutineInfo&lt;/code&gt;.&lt;/li&gt;
                                            &lt;li&gt;the length of the signal is supplied by the Application via the &lt;code&gt;currentDataLength&lt;/code&gt;
                                                parameter of the &lt;code&gt;startRoutine&lt;/code&gt; operation interface.&lt;/li&gt;
                                          &lt;/ul&gt;&lt;/p&gt;

                                        &lt;p&gt;Range:&lt;/p&gt;
                                        &lt;ul&gt;
                                          &lt;li&gt;&lt;code&gt;BOOLEAN&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;SINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT16_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT32_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;UINT8_N&lt;/code&gt;&lt;/li&gt;
                                          &lt;li&gt;&lt;code&gt;VARIABLE_LENGTH&lt;/code&gt;&lt;/li&gt;
                                        &lt;/ul&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Signal Type"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="c9caa91d-54a3-4396-969d-a55af87d81e6"/>
                                <a:da name="RANGE">
                                  <a:v>BOOLEAN</a:v>
                                  <a:v>SINT16</a:v>
                                  <a:v>SINT32</a:v>
                                  <a:v>SINT8</a:v>
                                  <a:v>UINT16</a:v>
                                  <a:v>UINT32</a:v>
                                  <a:v>UINT8</a:v>
                                  <a:v>SINT16_N</a:v>
                                  <a:v>SINT32_N</a:v>
                                  <a:v>SINT8_N</a:v>
                                  <a:v>UINT16_N</a:v>
                                  <a:v>UINT32_N</a:v>
                                  <a:v>UINT8_N</a:v>
                                  <a:v>VARIABLE_LENGTH</a:v>
                                </a:da>
                              </v:var>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="DcmDspSecurity" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration for Security Levels, which is further used in
                                 order to condition functionality on the current Security Level of the ECU.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Security Level Configuration"/>
                      <a:a name="UUID" 
                           value="5c63a81c-b97e-4f9d-a693-e0c048492552"/>
                      <v:var name="DcmDspSecurityLegacyAttemptCountersHandling" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;This flag enables legacy handling of AttemptCounters.
                                &lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: No saving of AttemptCounters to
                                                         non-volatile memory is performed.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: AttemptCounters are saved to non-volatile
                                                         memory using the legacy &lt;code&gt;Rte_DcmSecSetNumAtt&lt;/code&gt;
                                                         interface. AttemptCounters are retrieved from non-volatile memory
                                                         with every &lt;code&gt;SendKey&lt;/code&gt; operation using the
                                                         legacy &lt;code&gt;Rte_DcmSecGetNumAtt&lt;/code&gt; interface.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Enable legacy AttemptCounter handling"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="780e5aa8-ffd1-44f7-87d2-e3b48995d151"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="((. = &apos;true&apos;) and node:exists(.././DcmDspSecurityRow/*[./DcmDspSecurityAttemptCounterEnabled = &apos;true&apos;]))" 
                              true="External AttemptCounter handling must be turned off for all SecurityLevels in order to use this feature."/>
                      </v:var>
                      <v:var name="DcmDspSecurityMaxAttemptCounterReadoutTime" 
                             type="FLOAT">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;Configures the delay, in seconds, from startup (measured from the
                                  first call of the &lt;code&gt;Dcm_MainFunction&lt;/code&gt;), allowed for all
                                  AttemptCounter values to be obtained from the Application. Shall
                                  be a multiple of &lt;code&gt;DcmTaskTime&lt;/code&gt;
                                  min: A value equal to the &lt;code&gt;DcmTaskTime&lt;/code&gt;
                                &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 65535 seconds&lt;/li&gt;
                                &lt;/ul&gt;

                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Max. time to read out all attempt counters after PowerON"/>
                        <a:a name="OPTIONAL" value="false"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ac8a99bd-87d3-4e08-8cf4-0f9fbb7e7bbc"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65535"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The value of this parameter shall not be less than DcmTaskTime" 
                                    expr="node:value(.) &lt; node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)"/>
                            <mt:tst 
                                    false="The value of DcmDspSecurityMaxAttemptCounterReadoutTime shall be a multiple of DcmTaskTime." 
                                    expr="(node:value(.) &gt;= node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime))                                           and (num:mod(                                                  (node:value(.) * 1000)                                                 ,(node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime) * 1000)                                               ) = 0)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspSecurityMaxAttemptCounterWriteTime" 
                             type="FLOAT">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt; Configures the maximal time, in seconds, allowed for one attempt
                                    counter value to be written by the API
                                    &lt;code&gt;Xxx_SetSecurityAttemptCounter&lt;/code&gt;

                                    This parameter only applies when the attempt counter is reset as
                                    a result of a delay timer elapsing when the parameter
                                    &lt;code&gt;DcmDspSecurityResetAttemptCounterOnTimeout&lt;/code&gt; is set
                                    to TRUE.
                                    The timing-out behaviour in the case of writing the counter upon
                                    a failed &lt;code&gt;CompareKey&lt;/code&gt; request is handled with the
                                    usual P2/P2* mechanism.

                                    Shall be a multiple of &lt;code&gt;DcmTaskTime&lt;/code&gt;
                                    min: A value equal to &lt;code&gt;DcmTaskTime&lt;/code&gt;
                                &lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;0 .. 65535 seconds&lt;/li&gt;
                                &lt;/ul&gt;

                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Max. time to write an attempt counter"/>
                        <a:a name="OPTIONAL" value="false"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ac8a99bd-87d3-4e08-8cf4-0f9fbb7e7bbd"/>
                        <a:da name="DEFAULT" type="XPath" 
                              expr="node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:range>
                            <mt:tst expr="&lt;=65535"/>
                            <mt:tst expr="&gt;=0"/>
                          </mt:range>
                          <mt:xpath>
                            <mt:tst 
                                    true="The value of this parameter shall not be less than DcmTaskTime" 
                                    expr="node:value(.) &lt; node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)"/>
                            <mt:tst 
                                    false="The value of DcmDspSecurityMaxAttemptCounterWriteTime shall be a multiple of DcmTaskTime." 
                                    expr="(node:value(.) &gt;= node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime))                                           and (num:mod(                                                  (node:value(.) * 1000)                                                 ,(node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime) * 1000)                                               ) = 0)"/>
                          </mt:xpath>
                        </a:da>
                      </v:var>
                      <v:var name="DcmDspSecurityUnifiedDelayTimer" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;This flag enables a unified delay timer.
                                &lt;/p&gt;
                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Starting one SecurityLevel&apos;s DelayTimer
                                                          only affects that SecurityLevel.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Starting one SecurityLevel&apos;s DelayTimer
                                                         starts the DelayTimers of ALL SecurityLevels
                                                         with the DelayTimer configured for that level.
                                                         In case more than one DelayTimer value applies
                                                         (as in the case of more than one DelayTimer being
                                                         applied at startup as a result of retrieving
                                                         AttemptCounter values), the highest value shall
                                                         apply.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Enable unified delay timer"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aebe7e89-e344-4443-83e9-a8673e749446"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:var name="DcmDspSecurityResetAttemptCounterOnTimeout" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;This flag enables resetting the security access attempt counter
                                   when the delay timer expires.
                                &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The attempt counter is not reset.
                                                          ISO compatible!
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: If &lt;code&gt;DcmDspSecurityUnifiedDelayTimer&lt;/code&gt;
                                                         is disabled: When one SecurityLevel&apos;s DelayTimer
                                                         expires, reset its AttemptCounter to 0
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: If &lt;code&gt;DcmDspSecurityUnifiedDelayTimer&lt;/code&gt;
                                                         is enabled:  When the unified DelayTimer expires,
                                                         reset ALL AttemptCounters to 0
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Reset attempt counter on security access delay timeout"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aebe7e89-e344-4443-83e9-a8673e749447"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:var 
                             name="DcmDspSecurityAttemptCounterReadoutFailInfiniteDelay" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;This flag forces infinite delay if the read out of any security
                                   access attempt counter fails.
                                &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: If any of the Xxx_GetSecurityAttemptCounter
                                                          operations for getting the AttemptCounters
                                                          fails, the DelayTimer is started, as a
                                                          consequence of this failure.
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: If any of the Xxx_GetSecurityAttemptCounter
                                                         operations for getting the AttemptCounters
                                                         fails, the DelayTimer is started, as a
                                                         consequence of this failure, with infinite
                                                         value.
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;Note: In case both this parameter and &lt;code&gt;DcmDspSecurityUnifiedDelayTimer&lt;/code&gt; are
                                         configured to &lt;code&gt;TRUE&lt;/code&gt;, this will cause all SecurityLevels to be
                                         permanently locked.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Enable infinite delay when reading out an attempt counter fails"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aebe7e89-e344-4443-83e9-a8673e749448"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:var 
                             name="DcmDspSecurityIncrementAttemptCounterPastLimit" 
                             type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;This flag indicates if the security attempt counter is incremented
                                   any time a security access fails or just up to the number of times
                                   configured in &lt;code&gt;DcmDspSecurityNumAttDelay&lt;/code&gt;.
                                &lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Do not stop incrementing the attempt
                                                          counter at the limit configured in
                                                          &lt;code&gt;DcmDspSecurityNumAttDelay&lt;/code&gt;
                                                          (ISO 14229-1:2013 conforming behaviour)
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Stop incrementing the attempt counter
                                                         at the limit configured in
                                                         &lt;code&gt;DcmDspSecurityNumAttDelay&lt;/code&gt;
                                                         (non-ISO 14229-1:2013 conforming behaviour)
                                  &lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Increment the security access attempt counter past the configured limit"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aebe7e89-e344-4443-83e9-a8673e749449"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                      <v:lst name="DcmDspSecurityRow" type="MAP">
                        <a:a name="COLUMNS" value="DcmDspSecurityLevel"/>
                        <a:a name="LABEL" value="Security Levels"/>
                        <a:a name="ROWS" value="8"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="MAX" value="31"/>
                        <v:ctr name="DcmDspSecurityRow" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the Security Levels available to the &lt;code&gt;Dcm&lt;/code&gt;.
                                     Each Security Level is configured per row.&lt;/p&gt;

                                  &lt;p&gt;The &lt;code&gt;Dcm&lt;/code&gt; generates the &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                     &lt;code&gt;SecurityAccess_&amp;#60;LEVEL&amp;#62;&lt;/code&gt; and
                                     the Require Port for this interface, also named &lt;code&gt;SecurityAccess_&amp;#60;LEVEL&amp;#62;&lt;/code&gt;
                                     where &lt;code&gt;&amp;#60;LEVEL&amp;#62;&lt;/code&gt; is the name of the container
                                     &lt;code&gt;DcmDspSecurityRow&lt;/code&gt;. This interface will be used (if parameter
                                     &lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt; is &lt;code&gt;USE_SECURITY_ASYNCH_CLIENT_SERVER&lt;/code&gt; or
                                     &lt;code&gt;USE_SECURITY_SYNCH_CLIENT_SERVER&lt;/code&gt;) in order to realize the &lt;code&gt;GetSeed&lt;/code&gt;
                                     and &lt;code&gt;CompareKey&lt;/code&gt; operations.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="d7f1c0b2-191e-4a1a-b455-b97f41b3d528"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_SEC_LEV_LOCKED&apos;) and ( ./DcmDspSecurityLevel != 0)" 
                                   true="&apos;DCM_SEC_LEV_LOCKED&apos; is a reserved name for the SecurityLevel 0x00."/>
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_SEC_LEV_L1&apos;)                               and ( ./DcmDspSecurityLevel != 1)                               and ((as:modconf(&apos;Dcm&apos;)[1]/DcmGeneral/DcmServiceAPI/DcmEnableASR40ServiceAPI = &apos;true&apos;)                                     or (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI = &apos;AUTOSAR_40&apos;))" 
                                   true="&apos;DCM_SEC_LEV_L1&apos; is reserved name for the SecurityLevel 0x01."/>
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_SEC_LEV_ALL&apos;)                               and ( ./DcmDspSecurityLevel != 255)                               and ((as:modconf(&apos;Dcm&apos;)[1]/DcmGeneral/DcmServiceAPI/DcmEnableASR40ServiceAPI = &apos;true&apos;)                                     or (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI = &apos;AUTOSAR_40&apos;))" 
                                   true="&apos;DCM_SEC_LEV_ALL&apos; is a reserved name for the SecurityLevel 0xFF."/>
                          </a:da>
                          <v:var name="DcmDspSecurityAttemptCounterEnabled" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt; Allows to enable the external handling
                                        of the security attempt counter
                                        (e.g. to survive a reset of the ECU).&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The security attempt counter is handled externally&lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The security attempt counter is not handled externally&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Enable external handling of the security attempt counter"/>
                            <a:a name="OPTIONAL" value="false"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="aebe7e89-e344-4443-83e9-a8673e749443"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="(. = &apos;true&apos;) and (../DcmDspSecurityUsePort =&apos;USE_SECURITY_ASYNCH_FNC&apos; or ../DcmDspSecurityUsePort = &apos;USE_SECURITY_SYNCH_FNC&apos;) and (normalize-space(../DcmDspSecurityGetAttemptCounterFnc) = &apos;&apos;)" 
                                     true="Configure get attempt counter function."/>
                              <a:tst 
                                     expr="(. = &apos;true&apos;) and (../DcmDspSecurityUsePort =&apos;USE_SECURITY_ASYNCH_FNC&apos; or ../DcmDspSecurityUsePort = &apos;USE_SECURITY_SYNCH_FNC&apos;) and (normalize-space(../DcmDspSecuritySetAttemptCounterFnc) = &apos;&apos;)" 
                                     true="Configure set attempt counter function."/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecurityDelayTimeOnBootOverride" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;This flag allows to force delay time on boot regardless of the
                                       value of the security access attempt counter.
                                    &lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Upon startup, the DelayTimer for this
                                                             security level is started with the value
                                                             of DcmDspSecurityDelayTimeOnBoot
                                                             regardless of the number of attempts
                                                             retreived from non-volatile memory for
                                                             this security level.
                                      &lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Upon startup, the DelayTimer for this
                                                              security level is started with the
                                                              maximum value among DcmDspSecurityDelayTimeOnBoot
                                                              or DcmDspSecurityDelayTime if the number
                                                              of attempts retreived from non-volatile
                                                              memory for this security level has been
                                                              reached.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;Note: In case both this parameter and &lt;code&gt;DcmDspSecurityUnifiedDelayTimer&lt;/code&gt; are
                                             configured to &lt;code&gt;TRUE&lt;/code&gt;, this will cause all SecurityLevels to start their DelayTimers
                                             at startup with the highest value of all configured &lt;code&gt;DcmDspSecurityDelayTimeOnBoot&lt;/code&gt;
                                             delays, for SecurityLevels for which the retrieval of the AttemptCounter from non-volatile
                                             memory succeeds or is unneeded. In case a higher unified DelayTimer value applies as a
                                             result of an incorrect retrieval, or as a result of the retrieved AttemptCounter of another
                                             SecurityLevel surpassing the configured limit, the higher value shall apply.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Force security access delay on boot"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="aebe7e89-e344-4443-83e9-a8673e749444"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                          <v:var name="DcmDspSecurityDelayTimeInfinite" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;This flag forces infinite delay time after failed security
                                       access attempt.
                                    &lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: &lt;code&gt;DcmDspSecurityDelayTime&lt;/code&gt; is
                                                              considered infinite. When
                                                              &lt;code&gt;DcmDspSecurityNumAttDelay&lt;/code&gt;
                                                              failed attempts are reached, this
                                                              security level becomes blocked/inaccessible.
                                      &lt;/li&gt;
                                      &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The value configured under
                                                             &lt;code&gt;DcmDspSecurityDelayTime&lt;/code&gt;
                                                             applies.
                                      &lt;/li&gt;
                                    &lt;/ul&gt;
                                    &lt;p&gt;Note: If &lt;code&gt;DcmDspSecurityUnifiedDelayTimer&lt;/code&gt; is configured to &lt;code&gt;TRUE&lt;/code&gt;,
                                             if such an infinite DelayTimer is started, this will cause all SecurityLevels
                                             to remain permanently locked.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Force infinite security access delay time"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="aebe7e89-e344-4443-83e9-a8673e749445"/>
                            <a:da name="DEFAULT" value="false"/>
                          </v:var>
                          <v:var name="DcmDspSecurityADRSize" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the size of the &lt;code&gt;securityAccessDataRecord&lt;/code&gt; parameter expected in
                                       &lt;code&gt;requestSeed&lt;/code&gt; (&lt;code&gt;DcmDspSecurityLevel&lt;/code&gt; * 2 - 1) sub-function of the
                                       &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27) service request for this particular security level.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 4294967293 Bytes&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Note 1: The available size range is restricted to the AUTOSAR-specified maximum minus 2 Bytes, as otherwise
                                               the full request, which contains two more Bytes besides this parameter, would not be able
                                               to fit into any &lt;code&gt;DcmDslBuffer&lt;/code&gt;, which has a maximum size of 4294967295 Bytes.&lt;/p&gt;

                                    &lt;p&gt;Note 2: If this parameter is not enabled, function parameters of the &lt;code&gt;requestSeed&lt;/code&gt;
                                               interface representing the &lt;code&gt;securityAccessDataRecord&lt;/code&gt; parameter are not present.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Size of securityAccessDataRecord"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="68a05040-46cb-40aa-965f-f214c5695f63"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=4294967293"/>
                              <a:tst expr="&gt;=1"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecurityGetAttemptCounterFnc" 
                                 type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt; Defines the name of the callout used to retrieve the security
                                      access attempt counter for this particular Security Level.
                                  &lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):
                                  &lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;External attempt counter handling being enabled by setting
                                        &lt;code&gt;DcmDspSecurityAttemptCounterEnabled&lt;/code&gt; to TRUE&lt;/li&gt;

                                    &lt;li&gt;SecurityAccess Operation interface type (&lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt;):
                                        The configuration of this parameter is only relevant if parameter
                                        &lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt; is &lt;code&gt;USE_SECURITY_ASYNCH_FNC&lt;/code&gt; or
                                        &lt;code&gt;USE_SECURITY_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Get attempt counter function"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="204d25c4-15ce-4605-bdfe-2c9285d251c4"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="not(text:uniq(../../*/DcmDspSecurityGetAttemptCounterFnc,.))" 
                                  true="The function name to get the attempt counter has to be unique among all security levels."/>
                          </v:var>
                          <v:var name="DcmDspSecuritySetAttemptCounterFnc" 
                                 type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt; Defines the name of the callout used to set the security
                                      access attempt counter for this particular security level.
                                  &lt;/p&gt;
                                  &lt;p&gt;Dependency on parameter(s):
                                  &lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;External attempt counter handling being enabled by setting
                                        &lt;code&gt;DcmDspSecurityAttemptCounterEnabled&lt;/code&gt; to TRUE&lt;/li&gt;

                                    &lt;li&gt;SecurityAccess Operation interface type (&lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt;):
                                        The configuration of this parameter is only relevant if parameter
                                        &lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt; is &lt;code&gt;USE_SECURITY_ASYNCH_FNC&lt;/code&gt; or
                                        &lt;code&gt;USE_SECURITY_SYNCH_FNC&lt;/code&gt;.
                                    &lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Set attempt counter function"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="204d25c4-15ce-4605-bdfe-2c9285d251c5"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="not(text:uniq(../../*/DcmDspSecuritySetAttemptCounterFnc,.))" 
                                  true="The function name to set the attempt counter has to be unique among all security levels."/>
                          </v:var>
                          <v:var name="DcmDspSecurityCompareKeyFnc" 
                                 type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the name of the Callout used to supply the Security Key generated
                                     from the provided Security Seed to the Server, in the context of the
                                     &lt;code&gt;sendKey&lt;/code&gt; (&lt;code&gt;DcmDspSecurityLevel&lt;/code&gt; * 2) sub-function of the
                                     &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27) service request for this particular Security Level.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;SecurityAccess Operation interface type (&lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if parameter
                                                                                                                      &lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt; is &lt;code&gt;USE_SECURITY_ASYNCH_FNC&lt;/code&gt; or
                                                                                                                      &lt;code&gt;USE_SECURITY_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Compare Key function"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="204d25c4-15ce-4605-bdfe-2c9285d251c3"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="normalize-space(.) = &apos;&apos;" 
                                  true="Configure Compare Key function."/>
                          </v:var>
                          <v:var name="DcmDspSecurityDelayTime" type="FLOAT">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the delay time after a failed &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27)
                                       request sequence, before another attempt to execute the service is
                                       allowed.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 65535 seconds&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Note: This timer is started after a &lt;code&gt;DcmDspSecurityNumAttDelay&lt;/code&gt;
                                       number of failed request sequences.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Delay time for SecurityAccess"/>
                            <a:a name="OPTIONAL" value="false"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="7db9ff63-52d3-4d78-a20b-6fa610f7e5e3"/>
                            <a:da name="DEFAULT" value="0.0"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=65535"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                              <mt:xpath 
                                        true="The ratio DcmDspSecurityDelayTime / MainFunctionPeriod shall NOT be greater than 2^32" 
                                        expr="((.) div (../../../../../DcmGeneral/DcmTaskTime)) &gt;= 4294967296"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecurityDelayTimeOnBoot" 
                                 type="FLOAT">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;

                                    &lt;p&gt;Defines the delay time after power-on until a &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27)
                                       service request will be allowed to be executed.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 65535 seconds&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Note: This timer is started after a &lt;code&gt;DcmDspSecurityNumAttDelay&lt;/code&gt;
                                             number of failed request sequences.&lt;/p&gt;

                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Delay time after PowerON"/>
                            <a:a name="OPTIONAL" value="false"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="ac8a99bd-87d3-4e08-8cf4-0f9fbb7e7bbc"/>
                            <a:da name="DEFAULT" value="0.0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=65535"/>
                              <a:tst expr="&gt;=0"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecurityGetSeedFnc" 
                                 type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;Defines the name of the Callout used to request the Security Seed from
                                     the Server, and, if configured (&lt;code&gt;DcmDspSecurityADRSize&lt;/code&gt; &amp;#62; 0), also to
                                     supply the &lt;code&gt;securityAccessDataRecord[]&lt;/code&gt; from the request to the Server
                                     in the context of the
                                     &lt;code&gt;sendKey&lt;/code&gt; (&lt;code&gt;DcmDspSecurityLevel&lt;/code&gt; * 2) sub-function of the
                                     &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27) service request for this particular security level.&lt;/p&gt;

                                  &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;SecurityAccess Operation interface type (&lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if parameter
                                                                                                                     &lt;code&gt;DcmDspSecurityUsePort&lt;/code&gt; is &lt;code&gt;USE_SECURITY_ASYNCH_FNC&lt;/code&gt; or
                                                                                                                     &lt;code&gt;USE_SECURITY_SYNCH_FNC&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value=" Security Get Seed function"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="204d25c4-15ce-4605-bdfe-2c9285d251c3"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="normalize-space(.) = &apos;&apos;" 
                                  true="Configure Get Seed function."/>
                          </v:var>
                          <v:var name="DcmDspSecurityKeySize" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the size of the &lt;code&gt;securityKey&lt;/code&gt; parameter expected in
                                       &lt;code&gt;sendKey&lt;/code&gt; (&lt;code&gt;DcmDspSecurityLevel&lt;/code&gt; * 2) sub-function of the
                                       &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27) service request for this particular security level.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 4294967293 Bytes&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Note: the available size range is restricted to the AUTOSAR-specified maximum minus 2 Bytes, as otherwise
                                             the full request, which contains two more Bytes besides this parameter, would not be able
                                             to fit into any &lt;code&gt;DcmDslBuffer&lt;/code&gt;, which has a maximum size of 4294967295 Bytes&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Size of securityKey"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="2122b7b9-d07c-4ebd-a6bc-6a6fcc4286cb"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=4294967293"/>
                              <a:tst expr="&gt;=1"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecurityLevel" type="INTEGER">
                            <a:a name="COLUMN_TITLE" value="Security Level"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the numerical value of the Security Level.&lt;/p&gt;

                                    &lt;p&gt;For each security level, the subservice handling corresponding to the two
                                       operations &lt;code&gt;sendKey&lt;/code&gt; and &lt;code&gt;requestSeed&lt;/code&gt;, is generated as follows:
                                       &lt;ul&gt;
                                         &lt;li&gt;The corresponding &lt;code&gt;requestSeed&lt;/code&gt; sub-function of the &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27)
                                         service shall have the ID &lt;code&gt;DcmDspSecurityLevel&lt;/code&gt; * 2 -1&lt;/li&gt;
                                         &lt;li&gt;The corresponding &lt;code&gt;sendKey&lt;/code&gt; sub-function of the &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27)
                                         service shall have the ID &lt;code&gt;DcmDspSecurityLevel&lt;/code&gt; * 2&lt;/li&gt;
                                       &lt;/ul&gt;. Further configuration of sub-functions under &lt;code&gt;DcmDsdSubService&lt;/code&gt; is not necessary.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;1 .. 63&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Note 1: 0x01 is the highest Security Level.&lt;/p&gt;

                                    &lt;p&gt;Note 2: The locked state cannot be configured explicitly.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Security Level"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                            <a:a name="UUID" 
                                 value="d2c7db05-f621-4f6f-8c1e-6df6620ce565"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="num:integer(../@index)"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=63"/>
                                <mt:tst expr="&gt;=1"/>
                              </mt:range>
                              <mt:xpath 
                                        true="The value of the security level has to be unique." 
                                        expr="not(text:uniq(../../*/DcmDspSecurityLevel,.))"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecurityNumAttDelay" 
                                 type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the number of failed attempts of &lt;code&gt;SecurityAccess&lt;/code&gt;
                                       sequences after which the delay timer &lt;code&gt;DcmDspSecurityDelayTime&lt;/code&gt;
                                       is started. Before this timer elapses, no other attempt to execute the
                                       service is allowed.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" 
                                 value="Maximum number of failed SecurityAccess attempts"/>
                            <a:a name="OPTIONAL" value="false"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="9f76b6e3-832f-4da2-90aa-94982adb005c"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=255"/>
                              <a:tst expr="&gt;=1"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecuritySeedSize" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the size of the &lt;code&gt;securitySeed&lt;/code&gt; parameter expected in
                                       the response to the &lt;code&gt;getSeed&lt;/code&gt; (&lt;code&gt;DcmDspSecurityLevel&lt;/code&gt; * 2 -1)
                                       sub-function of the &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27) service request for this
                                       particular security level.&lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;0 .. 4294967293 Bytes&lt;/li&gt;
                                    &lt;/ul&gt;

                                    &lt;p&gt;Note: the available size range is restricted to the AUTOSAR-specified maximum minus 2 Bytes, as otherwise
                                             the full request, which contains two more Bytes besides this parameter, would not be able
                                             to fit into any &lt;code&gt;DcmDslBuffer&lt;/code&gt;, which has a maximum size of 4294967295 Bytes&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Size of the securitySeed"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="61e9ef53-3a79-42c9-b46c-f1ef88905695"/>
                            <a:da name="DEFAULT" value="0"/>
                            <a:da name="INVALID" type="Range">
                              <a:tst expr="&lt;=4294967293"/>
                              <a:tst expr="&gt;=1"/>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspSecurityUsePort" 
                                 type="ENUMERATION">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the type of the interface that shall be used to
                                     implement the &lt;code&gt;sendKey&lt;/code&gt; and &lt;code&gt;requestSeed&lt;/code&gt; operations
                                     defining the sub-functions of service &lt;code&gt;SecurityAccess&lt;/code&gt; (0x27)&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;USE_SECURITY_SYNCH_FNC&lt;/code&gt;: The two operations shall be implemented
                                                                             using a synchronous API (the operation shall be completed in one
                                                                             single call to the API). The following callout names shall be
                                                                             configured:
                                                                             &lt;ul&gt;
                                                                               &lt;li&gt;&lt;code&gt;DcmDspSecurityGetSeedFnc&lt;/code&gt;&lt;/li&gt;
                                                                               &lt;li&gt;&lt;code&gt;DcmDspSecurityCompareKeyFnc&lt;/code&gt;&lt;/li&gt;
                                                                             &lt;/ul&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_SECURITY_ASYNCH_FNC&lt;/code&gt;: The two operations shall be implemented
                                                                              using an asynchronous API (the operation shall be completed in a
                                                                              series of calls to the API, the first call being executed with an
                                                                              &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                                              as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                                                              with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                                                              all subsequent executions). The following callout names shall be
                                                                              configured:
                                                                              &lt;ul&gt;
                                                                                &lt;li&gt;&lt;code&gt;DcmDspSecurityGetSeedFnc&lt;/code&gt;&lt;/li&gt;
                                                                                &lt;li&gt;&lt;code&gt;DcmDspSecurityCompareKeyFnc&lt;/code&gt;&lt;/li&gt;
                                                                              &lt;/ul&gt;&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_SECURITY_SYNCH_CLIENT_SERVER&lt;/code&gt;: The two operations shall be implemented
                                                                                       using by using a synchronous AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                                                                       with synchronous behaviour (the operation shall be completed in one
                                                                                       single call to the operation of the generated interface). The
                                                                                       &lt;code&gt;Dcm&lt;/code&gt; generates the &lt;code&gt;SecurityAccess_&amp;#60;LEVEL&amp;#62;&lt;/code&gt;
                                                                                       &lt;code&gt;ClientServerInterface&lt;/code&gt; where &lt;code&gt;&amp;#60;LEVEL&amp;#62;&lt;/code&gt;
                                                                                       is the name of this &lt;code&gt;DcmDspSecurityRow&lt;/code&gt; container. This
                                                                                       &lt;code&gt;ClientServerInterface&lt;/code&gt; contains the &lt;code&gt;getSeed&lt;/code&gt;
                                                                                       and &lt;code&gt;compareKey&lt;/code&gt; operations.  A Require Port is
                                                                                       generated for this interface and shall be connected to a compatible
                                                                                       Provide Port of an Application Software Component. The name of this Require Port
                                                                                       is the same as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;USE_SECURITY_ASYNCH_CLIENT_SERVER&lt;/code&gt;: The two operations shall be implemented
                                                                                        using by using a synchronous AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                                                                        with asynchronous behaviour (the operation shall be completed in a
                                                                                        series of calls to the API, the first call being executed with an
                                                                                        &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                                                        as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;,
                                                                                        it shall be called with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt;
                                                                                        for all subsequent executions). The
                                                                                        &lt;code&gt;Dcm&lt;/code&gt; generates the &lt;code&gt;SecurityAccess_&amp;#60;LEVEL&amp;#62;&lt;/code&gt;
                                                                                        &lt;code&gt;ClientServerInterface&lt;/code&gt; where &lt;code&gt;&amp;#60;LEVEL&amp;#62;&lt;/code&gt;
                                                                                        is the name of this &lt;code&gt;DcmDspSecurityRow&lt;/code&gt; container. This
                                                                                        &lt;code&gt;ClientServerInterface&lt;/code&gt; contains the &lt;code&gt;getSeed&lt;/code&gt;
                                                                                        and &lt;code&gt;compareKey&lt;/code&gt; operations.  A Require Port is
                                                                                        generated for this interface and shall be connected to a compatible
                                                                                        Provide Port of an Application Software Component. The name of this Require Port
                                                                                        is the same as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Security Access Interface"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="68a05040-46cb-40aa-965f-f214c5695f63"/>
                            <a:da name="ENABLE" value="true"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr="((. = &apos;USE_SECURITY_ASYNCH_FNC&apos;) or (. = &apos;USE_SECURITY_SYNCH_FNC&apos;)) and                               ((not(node:exists(../DcmDspSecurityGetSeedFnc))) or                               (not(node:exists(../DcmDspSecurityCompareKeyFnc))))" 
                                     true="Both DcmDspSecurityGetSeedFnc Function and DcmDspSecurityCompareKeyFnc Function have to be configured."/>
                              <a:tst 
                                     expr="(((. = &apos;USE_SECURITY_ASYNCH_CLIENT_SERVER&apos;) or                                            (. = &apos;USE_SECURITY_SYNCH_CLIENT_SERVER&apos;) ) and                                          ((../../../../../DcmGeneral/DcmRteUsage = &apos;false&apos;)))" 
                                     true="Enable rte usage"/>
                            </a:da>
                            <a:da name="RANGE">
                              <a:v>USE_SECURITY_ASYNCH_CLIENT_SERVER</a:v>
                              <a:v>USE_SECURITY_ASYNCH_FNC</a:v>
                              <a:v>USE_SECURITY_SYNCH_CLIENT_SERVER</a:v>
                              <a:v>USE_SECURITY_SYNCH_FNC</a:v>
                            </a:da>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:lst name="DcmDspSession" type="MAP">
                      <a:a name="LABEL" value="Session Configuration List"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(count(./*) &gt; 1) and (../../DcmGeneral/DcmModeDeclarationSupport = &apos;true&apos;)" 
                            true="If DcmModeDeclarationSupport is set to true, the DcmDspSession container must contain only one table with sessions"/>
                      <a:da name="MIN" value="1"/>
                      <a:da name="WARNING" type="XPath" 
                            expr="node:exists(./*/DcmDspSessionRow/*[(./DcmDspSessionLevel != 255) and (./DcmDspSessionLevel != 0)]) and                           not(node:exists(../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[./DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;)]))" 
                            true="If service DiagnosticSessionControl (0x10) is not configured, changing session levels may not be possible"/>
                      <v:ctr name="DcmDspSession" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the configuration for Diagnostic Sessions, which is further used in
                                   order to:
                                   &lt;ul&gt;
                                     &lt;li&gt;Condition functionality on the current Diagnostic Session of the ECU.&lt;/li&gt;
                                     &lt;li&gt;Trigger events on switching from one Diagnostic Session to another&lt;/li&gt;
                                     &lt;li&gt;Perform jumps to and from Bootloader software.&lt;/li&gt;
                                   &lt;/ul&gt;&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Session Configuration"/>
                        <a:a name="UUID" 
                             value="06381dc3-d8f0-4e06-ad3a-e931359953b6"/>
                        <v:lst name="DcmDspSessionRow" type="MAP">
                          <a:a name="COLUMNS">
                            <a:v>DcmDspSessionForBoot</a:v>
                            <a:v>DcmDspSessionLevel</a:v>
                            <a:v>DcmDspSessionP2ServerMax</a:v>
                            <a:v>DcmDspSessionP2StarServerMax</a:v>
                          </a:a>
                          <a:a name="LABEL" value="Sessions"/>
                          <a:a name="ROWS" value="8"/>
                          <a:a name="TAB" value="GENERAL"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst 
                                   expr="count(./*[./DcmDspSessionLevel = 1]) &gt; 0" 
                                   false="Default Session needs to be configured"/>
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_DEFAULT_SESSION&apos;) and ( ./DcmDspSessionLevel != 1)" 
                                   true="&apos;DCM_DEFAULT_SESSION&apos; is reserved name for the SessionLevel 0x01."/>
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_EXTENDED_DIAGNOSTIC_SESSION&apos;) and ( ./DcmDspSessionLevel != 3)" 
                                   true="&apos;DCM_EXTENDED_DIAGNOSTIC_SESSION&apos; is reserved name for the SessionLevel 0x03."/>
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_PROGRAMMING_SESSION&apos;) and ( ./DcmDspSessionLevel != 2)" 
                                   true="&apos;DCM_PROGRAMMING_SESSION&apos; is reserved name for the SessionLevel 0x02."/>
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_SAFETY_SYSTEM_DIAGNOSTIC_SESSION&apos;) and ( ./DcmDspSessionLevel != 4)" 
                                   true="&apos;DCM_SAFETY_SYSTEM_DIAGNOSTIC_SESSION&apos; is reserved name for the SessionLevel 0x04."/>
                            <a:tst 
                                   expr="(node:name(.) = &apos;DCM_ALL_SESSION_LEVEL&apos;) and ( ./DcmDspSessionLevel != 255)" 
                                   true="&apos;DCM_ALL_SESSION_LEVEL&apos; is reserved name for the SessionLevel 0xFF."/>
                          </a:da>
                          <a:da name="MAX" value="31"/>
                          <v:ctr name="DcmDspSessionRow" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the Diagnostic Sessions available to the &lt;code&gt;Dcm&lt;/code&gt;.
                                       Each Diagnostic Session is configured per row.&lt;/p&gt;

                                      &lt;p&gt;Note 1: If a functionality shall be allowed in for all
                                                 Diagnostic Sessions, Diagnostic Session &lt;code&gt;ALL_SESSION_LEVEL&lt;/code&gt; shall be added
                                                 with value 0xFF.&lt;/p&gt;

                                      &lt;p&gt;Note 2: If a Diagnostic Session is configured, the related Sub-function ID
                                                 of the &lt;code&gt;DiagnosticSessionControl&lt;/code&gt; (0x10) service also has to be
                                                 configured in order for transitions into this Diagnostic Session to be possible.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="UUID" 
                                 value="3a33cf2c-66c6-4deb-85f2-ac659c8dc863"/>
                            <a:da name="TITLE" value="Session Configuration"/>
                            <v:var name="DcmDspSessionForBoot" 
                                   type="ENUMERATION">
                              <a:a name="COLUMN_TITLE" 
                                   value="BootLoader Switching"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Configures whether a transition to this Diagnostic Session is used
                                         in order to perform a jump to Bootloader software (OEM Bootloader
                                         or System Supplier Bootloader).&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;DCM_NO_BOOT&lt;/code&gt;: A transition to this Diagnostic Session does not
                                                                      trigger a jump to any Bootloader.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;DCM_OEM_BOOT&lt;/code&gt;: A transition to this Diagnostic Session triggers
                                                                       a jump to the OEM Bootloader.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;DCM_SYS_BOOT&lt;/code&gt;: A transition to this Diagnostic Session triggers
                                                                       a jump to the System Supplier Bootloader.&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Jump to BootLoader"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC V1.0.0"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="5065e803-5845-43bc-b8e2-64340cde9c42"/>
                              <a:da name="RANGE">
                                <a:v>DCM_NO_BOOT</a:v>
                                <a:v>DCM_OEM_BOOT</a:v>
                                <a:v>DCM_SYS_BOOT</a:v>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspSessionLevel" type="INTEGER">
                              <a:a name="COLUMN_TITLE" value="Session level"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the numeric identifier of the Diagnostic Session.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0x01 ... 0x04: Diagnostic Sessions mandatory according to ISO14229-1&lt;/li&gt;
                                        &lt;li&gt;0x05 ... 0x3F: ISOSAEReserved according to ISO14229-1&lt;/li&gt;
                                        &lt;li&gt;0x40 ... 0x5F: Vehicle Manufacturer Specific Diagnostic Sessions&lt;/li&gt;
                                        &lt;li&gt;0x60 ... 0x7E: Vehicle Supplier Specific Diagnostic Sessions&lt;/li&gt;
                                        &lt;li&gt;0xFF: Defines that the functionality referencing this Diagnostic Session
                                                  shall be allowed to run in any Diagnostic Session&lt;/li&gt;
                                      &lt;/ul&gt;

                                      &lt;p&gt;Note 1: Values of the Diagnostic Sessions shall be
                                                 configured according to ISO_14229-1.
                                      &lt;/p&gt;

                                      &lt;p&gt;Note 2: Value 0xFF is reserved for the special &lt;code&gt;ALL_SESSION_LEVEL&lt;/code&gt;
                                                 Diagnostic Session, used in order to indicate that the functionality referencing
                                                 it is to be allowed to run in any Diagnostic Session.
                                      &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Session Level"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                              <a:a name="UUID" 
                                   value="d31936ed-c875-4877-9c6a-d747bff00990"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath 
                                          false="The Session Level ID shall be unique." 
                                          expr="text:uniq(./../../*/DcmDspSessionLevel, .)"/>
                              </a:da>
                              <a:da name="WARNING" type="XPath" 
                                    expr="((. != 255) and                                        (. != 0) and                                        not(node:exists(../../../../../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[./DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;) and (node:exists(./DcmDsdSidTabFnc)) and (./DcmDsdDisableGenericServiceImplementation = &apos;true&apos;)]) or                                            node:exists(../../../../../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[./DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;) and ((not(node:exists(./DcmDsdSidTabFnc))) or ((node:exists(./DcmDsdSidTabFnc)) and (./DcmDsdDisableGenericServiceImplementation = &apos;false&apos;))) and                                                        node:exists(./DcmDsdSubService/*[./DcmDsdSubServiceId = node:current()])]                                                       )                                           )                                       ) and                                       node:exists(../../../../../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[./DcmDsdSidTabServiceId = num:hextoint(&apos;0x10&apos;)])" 
                                    true="If using an internal service handler for service DiagnosticSessionControl (0x10), please configure the related sub-service handler for this session level, otherwise it will be impossible to switch to it"/>
                            </v:var>
                            <v:var name="DcmDspSessionP2ServerMax" type="FLOAT">
                              <a:a name="COLUMN_TITLE" value="P2ServerMax"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the value for the &lt;code&gt;P2ServerMax&lt;/code&gt; in seconds as defined by ISO 15765-3.
                                         It denotes the maximum time available for the &lt;code&gt;Dcm&lt;/code&gt; to start a response message
                                         transmission after the reception of a request message.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 1 seconds&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="P2ServerMax"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="fc2a4f17-9d41-416f-b005-93e7a17c641c"/>
                              <a:da name="DEFAULT" value="0.0"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=1"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                              </a:da>
                              <a:da name="WARNING" type="XPath">
                                <a:tst 
                                       expr="(node:value(.) div node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)) &gt;= 2" 
                                       false="The ratio P2ServerMax / MainFunctionPeriod shall be greater than or equal to 2"/>
                                <a:tst 
                                       expr="(node:value(.) &gt;= node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)) and                                              (num:mod((node:value(.) * 1000), (node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime) * 1000)) = 0)" 
                                       false="The value of DcmDspSessionP2ServerMax should be a multiple of DcmTaskTime."/>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspSessionP2StarServerMax" 
                                   type="FLOAT">
                              <a:a name="COLUMN_TITLE" value="P2StarServerMax"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the value for the &lt;code&gt;P2ServerMax&lt;/code&gt; in seconds as defined by ISO 15765-3.
                                         It denotes the maximum time available for the &lt;code&gt;Dcm&lt;/code&gt; to start a response message
                                         transmission during enhanced response timing.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 100 seconds&lt;/li&gt;
                                      &lt;/ul&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="P2*ServerMax"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="5d8981fd-1a34-4347-97e7-0fa74e40d007"/>
                              <a:da name="DEFAULT" value="0.0"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=100"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                              </a:da>
                              <a:da name="WARNING" type="XPath">
                                <a:tst 
                                       expr="(node:value(.) div node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)) &gt;= 1" 
                                       false="The ratio P2*ServerMax / MainFunctionPeriod shall be greater than or equal to 1"/>
                                <a:tst 
                                       expr="(node:value(.) &gt;= node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime)) and                                           (num:mod((node:value(.) * 1000), (node:value(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmTaskTime) * 1000)) = 0)" 
                                       false="The value of DcmDspSessionP2StarServerMax should be a multiple of DcmTaskTime."/>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspDiagSesRespMaxNumRespPend" 
                                   type="INTEGER">
                              <a:a name="COLUMN_TITLE" 
                                   value="Max ResponsePending"/>
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Configures the maximum number of consecutive &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt;
                                      Negative Response Codes (NRC) allowed for one diagnostic request while in this session. When enabled
                                      and configured, the value of this parameter overrides the value of the
                                      &lt;code&gt;DcmDslDiagRespMaxNumRespPend&lt;/code&gt; parameter while the ECU is in this diagnostic session.&lt;/p&gt;

                                      &lt;p&gt;The &lt;code&gt;Dcm&lt;/code&gt; shall send the &lt;code&gt;GeneralReject&lt;/code&gt; (0x10) NRC when the number of
                                      &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt; NRCs sent in the context of the current
                                      request processing has reached the limit defined by this parameter and if this parameter
                                      (&lt;code&gt;DcmDspDiagSesRespMaxNumRespPend&lt;/code&gt;) is configured to less than the value interpreted
                                      as an infinite number of &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt; (NRCs).
                                      The value interpreted as infinity is given by the configuration parameter
                                      &lt;code&gt;DcmDslDiagRespMaxNumRespPendInfinityLimit&lt;/code&gt;:
                                      &lt;ul&gt;
                                        &lt;li&gt;255 is interpreted as infinity if the configuration parameter
                                          &lt;code&gt;DcmDslDiagRespMaxNumRespPendInfinityLimit&lt;/code&gt; is set to &quot;255&quot;.&lt;/li&gt;
                                        &lt;li&gt;65535 is interpreted as infinity if the configuration parameter
                                          &lt;code&gt;DcmDslDiagRespMaxNumRespPendInfinityLimit&lt;/code&gt; is set to &quot;65535&quot;.&lt;/li&gt;
                                      &lt;/ul&gt;&lt;/p&gt;

                                      &lt;p&gt;If this parameter (&lt;code&gt;DcmDspDiagSesRespMaxNumRespPend&lt;/code&gt;) is configured to infinity, there is no limit imposed on the
                                      maximum number of consecutive &lt;code&gt;RequestCorrectlyReceived-ResponsePending&lt;/code&gt; NRCs allowed.&lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Maximum number of ResponsePending messages"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" 
                                   value="Elektrobit Automotive GmbH"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="f83d15d2-7081-42bc-a954-5cd7213bed9d"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=65535"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath 
                                          true="Value cannot exceed the infinity limit (255 or 65535)." 
                                          expr="node:value(.) &gt; num:integer(../../../../../../DcmDsl/DcmDslDiagResp/DcmDslDiagRespMaxNumRespPendInfinityLimit)"/>
                              </a:da>
                              <a:da name="TOOLTIP" type="XPath" 
                                    expr="node:value(.) = num:integer(../../../../../../DcmDsl/DcmDslDiagResp/DcmDslDiagRespMaxNumRespPendInfinityLimit)" 
                                    true="Current value implies no limit on number of NRC 0x78 transmission"/>
                            </v:var>
                          </v:ctr>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="DcmDspTestResultByObdmid" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                             &lt;p&gt;&lt;b&gt;This parameter is enabled only if service 0x06 is supported.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt;Defines the configuration for OBD service $06
                                 (Request On-Board Monitoring Test-results for Specific Monitored Systems).&lt;/p&gt;

                              &lt;p&gt;Contains configuration for:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;OBDMID&lt;/code&gt;s (On-Board Diagnostic Monitor IDs)&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;Tid&lt;/code&gt;s (Test IDs) belonging to &lt;code&gt;OBDMID&lt;/code&gt;s&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="417a089a-b71f-4423-aecf-629299b2e7cf"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(count(./*) &gt; 0) and (count(../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[DcmDsdSidTabServiceId = num:hextoint(&apos;0x06&apos;)]) = 0)" 
                               true="The container DcmDspTestResultByObdmid is enabled therefore the OBD service 06 must be enabled."/>
                        <a:tst 
                               expr="./DcmOBDMIDSupportType = &apos;DCM_OBDMID_SUPPORT_SWC&apos; and as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmRteUsage = &apos;false&apos;" 
                               true="If DcmDspTestResultByObdmid is enabled, DcmRteUsage also has to be enabled."/>
                      </a:da>
                      <a:da name="TITLE" 
                            value="Request TestResults(OBD $06) Configuration"/>
                      <v:var name="DcmOBDMIDSupportType" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;This parameter is enabled only if service 0x06 is supported.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt; DcmOBDMIDSupportType can select from where the OBDMID are read.&lt;/p&gt;
                              &lt;p&gt; DCM_OBDMID_SUPPORT_SWC will read the values from a SWC according to ASR 4.0.3 &lt;/p&gt;
                              &lt;p&gt; DCM_OBDMID_SUPPORT_DEM will read the values from the Dem according to ASR 4.2.1 &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="OBDMID Support"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="f25a0cc6-2eb6-4b2d-9088-1ecb18c43e28"/>
                        <a:a name="VISIBLE" value="true"/>
                        <a:da name="DEFAULT" value="DCM_OBDMID_SUPPORT_SWC"/>
                        <a:da name="ENABLE" value="true"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[(DcmDsdSidTabServiceId = num:hextoint(&apos;0x06&apos;)) and ((not(node:exists(DcmDsdSidTabFnc))) or ((node:exists(DcmDsdSidTabFnc)) and (DcmDsdDisableGenericServiceImplementation = &apos;false&apos;)))]) &gt; 0)                                         and (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspTestResultByObdmid/DcmOBDMIDSupportType = &apos;DCM_OBDMID_SUPPORT_SWC&apos;)                                         and ((num:i(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspTestResultByObdmid/DcmDspTestResultObdmidTid/*)) = 0 )                                             or (num:i(count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsp/DcmDspTestResultByObdmid/DcmDspTestResultTid/*)) = 0 ))" 
                              true="If the service 0x06 is configured and DcmOBDMIDSupportType is configured to DCM_OBDMID_SUPPORT_SWC, user needs to configure at least one OBDMID"/>
                        <a:da name="RANGE">
                          <a:v>DCM_OBDMID_SUPPORT_SWC</a:v>
                          <a:v>DCM_OBDMID_SUPPORT_DEM</a:v>
                        </a:da>
                      </v:var>
                      <v:lst name="DcmDspTestResultObdmidTid" type="MAP">
                        <a:a name="LABEL" value="OBDMID and TID Configuration"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="MAX" value="255"/>
                        <a:da name="MIN" value="0"/>
                        <v:ctr name="DcmDspTestResultObdmidTid" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;&lt;b&gt;This parameter is enabled only if service 0x06 is supported.&lt;/b&gt;&lt;/p&gt;

                                  &lt;p&gt;Defines the configuration parameters for an &lt;code&gt;OBDMID&lt;/code&gt;s
                                     (On-Board Diagnostic Monitor IDs) and the assigned &lt;code&gt;Tid&lt;/code&gt;s (Test IDs)
                                      to be used in the response to the $06 - &lt;code&gt;Request On-Board Monitoring Test-results for
                                      Specific Monitored Systems&lt;/code&gt; OBD service&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="22c30cf6-5132-4090-8bce-906a2832f85b"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="TITLE" 
                                value="OBDMID and TID Configuration"/>
                          <v:var name="DcmDspTestResultObdmid" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines the identifier of this &lt;code&gt;OBDMID&lt;/code&gt;
                                     (On-Board Diagnostic Monitor ID), as expected in the
                                     &lt;code&gt;On-Board Diagnostic Monitor ID&lt;/code&gt; parameter of the
                                     $06 - &lt;code&gt;Request On-Board Monitoring Test-results for
                                     Specific Monitored Systems&lt;/code&gt; OBD service request.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="OBDMID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="64eb4ce7-a5e7-4765-9fb2-7ef4b32d321a"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="num:integer(../@index+1)"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=255"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                              <mt:xpath>
                                <mt:tst false="The OBDMID has to be unique." 
                                        expr="text:uniq(./../../*/DcmDspTestResultObdmid, .)"/>
                                <mt:tst 
                                        false="Is not permited OBDMID with availability IDs." 
                                        expr="num:mod(., 32)"/>
                                <mt:tst 
                                        false="Is not permited to have more than 254 Tids reference per OBDMID." 
                                        expr="count(./../DcmDspTestResultObdmidTids/*/DcmDspTestResultObdmidTidRefs/*[(node:refvalid(DcmDspTestResultObdmidTidRef)and(DcmDspTestResultTidUsed = &apos;true&apos;))]) &lt; 255"/>
                              </mt:xpath>
                            </a:da>
                          </v:var>
                          <v:var name="DcmDspTestResultObdmidUsed" 
                                 type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;By checking this you will enable this &lt;code&gt;OBDMID&lt;/code&gt; to be requested by
                                    (On-Board Diagnostic Monitor IDs) and the assigned &lt;code&gt;Tid&lt;/code&gt;s (Test IDs)
                                    to be used in the response to the $06 - &lt;code&gt;Request On-Board Monitoring Test-results for
                                    Specific Monitored Systems&lt;/code&gt; OBD service&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Enable MID usage"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="true"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="ENABLE" value="true"/>
                          </v:var>
                          <v:lst name="DcmDspTestResultObdmidTids" type="MAP">
                            <a:a name="LABEL" value="TID Configuration"/>
                            <a:a name="ROWS" value="4"/>
                            <a:a name="TAB" value="GENERAL"/>
                            <a:da name="MAX" value="255"/>
                            <a:da name="MIN" value="0"/>
                            <v:ctr name="DcmDspTestResultObdmidTids" 
                                   type="IDENTIFIABLE">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;
                                      &lt;p&gt;Defines the configuration of the TIDs belonging to the OBDMID
                                      &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="LABEL" value="OBDMID TID Configuration"/>
                              <a:a name="UUID" 
                                   value="c20f59d6-9890-477a-8134-64065e5a586c"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="TITLE" value="OBDMID TID"/>
                              <v:var name="DcmDspTestResultObdmidTidUaSid" 
                                     type="INTEGER">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Defines the Unit And Scaling ID for the TIDs referenced in
                                           &lt;code&gt;DcmDspTestResultObdmidTidRef&lt;/code&gt;, to be used in the
                                           $06 - &lt;code&gt;Request On-Board Monitoring Test-results for
                                           Specific Monitored Systems&lt;/code&gt; OBD service response.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Unit And Scaling ID"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                <a:a name="UUID" 
                                     value="7481eee9-b986-4466-97a7-eccc592f0071"/>
                                <a:da name="DEFAULT" value="0"/>
                                <a:da name="EDITABLE" value="true"/>
                                <a:da name="INVALID" type="Range">
                                  <a:tst expr="&lt;=255"/>
                                  <a:tst expr="&gt;=0"/>
                                </a:da>
                              </v:var>
                              <v:ref name="DcmDspTestResultObdmidTidRef" 
                                     type="REFERENCE">
                                <a:a name="DESC">
                                  <a:v>&lt;html&gt;
                                        &lt;p&gt;Reference to &lt;code&gt;DcmDspTestResultTid&lt;/code&gt; defining TIDs
                                           belonging to this OBDMID.&lt;/p&gt;
                                      &lt;/html&gt;</a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                     type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="LABEL" 
                                     value="Reference to TIDs of OBDMID"/>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="UUID" 
                                     value="f29c691e-6a7f-4f61-847d-710bf6b852dc"/>
                                <a:a name="VISIBLE" value="false"/>
                                <a:da name="EDITABLE" value="false"/>
                                <a:da name="ENABLE" value="false"/>
                                <a:da name="REF" 
                                      value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspTestResultByObdmid/DcmDspTestResultTid"/>
                              </v:ref>
                              <v:lst name="DcmDspTestResultObdmidTidRefs" 
                                     type="MAP">
                                <a:a name="LABEL" value="TIDs of OBDMID"/>
                                <a:a name="ROWS" value="4"/>
                                <a:a name="TAB" value="GENERAL"/>
                                <a:da name="MIN" value="1"/>
                                <v:ctr name="DcmDspTestResultObdmidTidRefs" 
                                       type="IDENTIFIABLE">
                                  <a:a name="DESC">
                                    <a:v>&lt;html&gt;
                                            &lt;p&gt;In this container we can find all references to &lt;code&gt;TID&lt;/code&gt;s that can be assigned
                                            to the same UaSID reported to an &lt;code&gt;OBDMID&lt;/code&gt;(On-Board Diagnostic Monitor IDs) used
                                            in the response to the $06 - &lt;code&gt;Request On-Board Monitoring Test-results for
                                            Specific Monitored Systems&lt;/code&gt; OBD service&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                  </a:a>
                                  <a:a name="LABEL" 
                                       value="Configure support of TID reference"/>
                                  <a:a name="UUID" 
                                       value="54d732bb-bb98-4848-9feb-1ca9ddd784a6"/>
                                  <v:ref name="DcmDspTestResultObdmidTidRef" 
                                         type="REFERENCE">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                          &lt;p&gt;Reference to &lt;code&gt;DcmDspTestResultTid&lt;/code&gt; defining TIDs
                                             belonging to this OBDMID.&lt;/p&gt;
                                        &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" 
                                         value="Reference to TIDs of OBDMID"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="UUID" 
                                         value="f29c691e-6a7f-4f61-847d-710bf6b852dc"/>
                                    <a:da name="EDITABLE" value="true"/>
                                    <a:da name="INVALID" type="Multi">
                                      <mt:xpath>
                                        <mt:tst false="Invalid reference." 
                                                expr="node:refvalid(.)"/>
                                        <mt:tst 
                                                false="The ObdmidTidRef shall be unique for each Obdmid container." 
                                                expr="(text:uniq(./../../../../../DcmDspTestResultObdmidTids/*/DcmDspTestResultObdmidTidRefs/*/DcmDspTestResultObdmidTidRef, .))or                                                       (./../../../../../DcmDspTestResultObdmidTids/*/DcmDspTestResultObdmidTidRefs/*/DcmDspTestResultTidUsed = &apos;false&apos;)or                                                       (./../DcmDspTestResultTidUsed = &apos;false&apos;)"/>
                                      </mt:xpath>
                                    </a:da>
                                    <a:da name="REF" 
                                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmDsp/DcmDspTestResultByObdmid/DcmDspTestResultTid"/>
                                  </v:ref>
                                  <v:var name="DcmDspTestResultTidUsed" 
                                         type="BOOLEAN">
                                    <a:a name="DESC">
                                      <a:v>&lt;html&gt;
                                          &lt;p&gt;This parameter lets you to choose what TID is processed inside this OBDMID container.&lt;/p&gt;
                                          &lt;/html&gt;</a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" 
                                         value="Enable TIDRef usage"/>
                                    <a:a name="ORIGIN" 
                                         value="Elektrobit Automotive GmbH"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:da name="DEFAULT" value="true"/>
                                    <a:da name="EDITABLE" value="true"/>
                                    <a:da name="ENABLE" value="true"/>
                                  </v:var>
                                </v:ctr>
                              </v:lst>
                            </v:ctr>
                          </v:lst>
                        </v:ctr>
                      </v:lst>
                      <v:lst name="DcmDspTestResultTid" type="MAP">
                        <a:a name="LABEL" value="TID Specific Configuration"/>
                        <a:a name="ROWS" value="4"/>
                        <a:a name="TAB" value="GENERAL"/>
                        <a:da name="MAX" value="255"/>
                        <a:da name="MIN" value="0"/>
                        <v:ctr name="DcmDspTestResultTid" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;&lt;b&gt;This parameter is enabled only if service 0x06 is supported.&lt;/b&gt;&lt;/p&gt;

                                  &lt;p&gt;Defines the configuration parameters for obtaining the data of
                                     a single TID.&lt;/p&gt;

                                  &lt;p&gt;This operation is realized by using a synchronous AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                     with synchronous behaviour (the operation shall be completed in one
                                     single call to the operation of the generated interface). The &lt;code&gt;Dcm&lt;/code&gt;
                                     shall generate the &lt;code&gt;DTRServices&lt;/code&gt; &lt;code&gt;ClientServerInterface&lt;/code&gt;,
                                     is the name of this &lt;code&gt;DcmDspRequestControl&lt;/code&gt; container. This
                                     &lt;code&gt;ClientServerInterface&lt;/code&gt; contains the necessary &lt;code&gt;GetDTRValue&lt;/code&gt;
                                     operation.
                                     A Require Port, named &lt;code&gt;DtrServices_&amp;#60;OBDMID&amp;#62;_&amp;#60;TID&amp;#62;&lt;/code&gt;,
                                     is generated for this interface for each &lt;code&gt;TID&lt;/code&gt;
                                     (&lt;code&gt;DcmDspTestResultTid&lt;/code&gt;) belonging to each &lt;code&gt;OBDMID&lt;/code&gt;
                                     (&lt;code&gt;DcmDspTestResultObdmidTid&lt;/code&gt;), where &lt;code&gt;&amp;#60;OBDMID&amp;#62;&lt;/code&gt;
                                     is the name of the &lt;code&gt;DcmDspTestResultObdmidTid&lt;/code&gt; container and
                                     &lt;code&gt;&amp;#60;TID&amp;#62;&lt;/code&gt; is the name of the &lt;code&gt;DcmDspTestResultTid&lt;/code&gt; container.
                                     This Require Port shall be connected to a compatible
                                     Provide Port of an Application Software Component.
                                  &lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="UUID" 
                               value="3129ef91-0f57-4a9a-b8ce-7b614e4585d4"/>
                          <a:da name="EDITABLE" value="true"/>
                          <v:var name="DcmDspTestResultTestId" type="INTEGER">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;&lt;code&gt;Std./Manuf. TID&lt;/code&gt; of this TID to be used in the
                                       $06 - &lt;code&gt;Request On-Board Monitoring Test-results for
                                       Specific Monitored Systems&lt;/code&gt; OBD service response.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="TID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="c1c0c7ea-96fc-41a5-981b-d1639edd9ca6"/>
                            <a:da name="DEFAULT" type="XPath" 
                                  expr="num:integer(../@index)"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="INVALID" type="Multi">
                              <mt:range>
                                <mt:tst expr="&lt;=255"/>
                                <mt:tst expr="&gt;=0"/>
                              </mt:range>
                              <mt:xpath 
                                        false="The Test ID of the service table has to be unique." 
                                        expr="text:uniq(../../*/DcmDspTestResultTestId, .)"/>
                            </a:da>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                      <v:var name="DcmWriteMidBeforeTid" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;This configuration switch defines whether the OBDMID shall be added in the response in front of every configured TID inside one OBDMID, in case it&apos;s requested by UDS service 0x22.&lt;/p&gt;

                                &lt;p&gt;Range:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The OBDMID will be added before every TID inside the response message.&lt;/li&gt;
                                  &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The OBDMID will only be added once as part of the DID requested via service 0x22&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Write MID before TID"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="aebe7e89-e344-4443-83e9-a8673e749442"/>
                        <a:da name="DEFAULT" value="false"/>
                      </v:var>
                    </v:ctr>
                    <v:lst name="DcmDspVehInfo" type="MAP">
                      <a:a name="LABEL" 
                           value="RequestVehicleInformation Configuration"/>
                      <a:a name="ROWS" value="4"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(count(./*) &gt; 0) and (count(../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[DcmDsdSidTabServiceId = num:hextoint(&apos;0x09&apos;)]) = 0)" 
                            true="There are DcmDspVehInfo configured therefore the OBD service 09 must be enabled."/>
                      <v:ctr name="DcmDspVehInfo" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;

                                &lt;p&gt;Defines the configuration parameters for the OBD
                                   Service $09 - &lt;code&gt;Request Vehicle Information&lt;/code&gt;.&lt;/p&gt;

                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="5cdcd5f7-60ab-4ced-8b9f-5511c1705934"/>
                        <a:da name="EDITABLE" value="true"/>
                        <a:da name="TITLE" 
                              value="RequestVehicleInformation Configuration"/>
                        <v:var name="DcmDspVehInfoInfoType" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Defines the &lt;code&gt;InfoType&lt;/code&gt; requested in the $09 - &lt;code&gt;Request Vehicle Information&lt;/code&gt;
                                     service request represented by this &lt;code&gt;DcmDspVehInfoInfoType&lt;/code&gt;&lt;/p&gt;

                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="InfoType"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="91d2319e-e593-4c8a-9c65-0e854c4b4bdd"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      false="The Vehicle Info Type has to be unique." 
                                      expr="text:uniq(../../*/DcmDspVehInfoInfoType, .)"/>
                              <mt:tst 
                                      true="VehInfoInfoType must not be equal to a so called &apos;availability InfoType&apos; ({0x00, 0x20, 0x40, 0x60, 0x80, 0xA0, 0xC0, 0xE0})." 
                                      expr="num:i(. mod 32) = 0"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="DcmDspVehInfoUsed" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;

                                  &lt;p&gt;Allow to activate or deactivate the usage of a service:
                                     true = service available, false = service not available
                                  &lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: This Vehicle Info is available.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: This Vehicle Info is not available.&lt;/li&gt;
                                  &lt;/ul&gt;

                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Enable Vehicle Info"/>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="EDITABLE" value="true"/>
                        </v:var>
                        <v:var name="DcmDspVehInfoNODIProvResp" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;
                                     Indicate the Dcm, which side is responsible to fill the number of data
                                     items (NODI), Dcm or the provider of the InfoType data. In case the
                                     responsibility is on provider side, only one DcmDspVehInfoData
                                     container is allowed.
                                  &lt;/p&gt;
                                  &lt;p&gt;Range&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Provider is responsible for providing the number of data items parameter.&lt;/li&gt;
                                    &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Dcm is responsible for providing the number of data items parameter&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="DcmDspVehInfoNODIProvResp"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="cd4d4d2f-ac52-4adf-a49d-a207e89dcdff"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:xpath>
                              <mt:tst 
                                      true="if DcmDspVehInfoNODIProvResp is set to true only one DcmDspVehInfoData is allowed" 
                                      expr="(. = &apos;true&apos;) and (count(../DcmDspVehInfoData/*) &gt; 1)"/>
                              <mt:tst 
                                      true="The configuration parameter DcmDspVehInfoNODIProvResp can be set to true if configuration parameter DcmDspVehInfoASRVersion is set to AUTOSAR_440" 
                                      expr="(. = &apos;true&apos;) and (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmDspVehInfoASRVersion != &apos;AUTOSAR_440&apos;)"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:lst name="DcmDspVehInfoData" type="MAP">
                          <a:a name="LABEL" value="Vehicle Information Data"/>
                          <a:a name="ROWS" value="4"/>
                          <a:a name="TAB" value="GENERAL"/>
                          <a:da name="MIN" value="1"/>
                          <v:ctr name="DcmDspVehInfoData" type="IDENTIFIABLE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;

                                    &lt;p&gt;Defines the configuration parameters of a
                                       Vehicle Information Data element.&lt;/p&gt;

                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="LABEL" value="Vehicle Information Data"/>
                            <a:a name="UUID" 
                                 value="4aec6d31-deb8-4663-b17b-af66092f9c3d"/>
                            <a:da name="EDITABLE" value="true"/>
                            <a:da name="TITLE" 
                                  value="Vehicle Information Data Configuration"/>
                            <v:var name="DcmDspVehInfoDataOrder" type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the order which the data item will take in the &lt;code&gt;InfoType&lt;/code&gt; for the response:
                                       the first data item having the order number 0, the next 1 and so on.
                                      &lt;/p&gt;

                                      &lt;p&gt;Note: The configuration of data order
                                         needs to be unique per &lt;code&gt;DcmDspVehInfo&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;0 .. 255&lt;/li&gt;
                                      &lt;/ul&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Data Index"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="a13df889-3f6e-413a-8bdc-ef955f96e7d1"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:range>
                                  <mt:tst expr="&lt;=255"/>
                                  <mt:tst expr="&gt;=0"/>
                                </mt:range>
                                <mt:xpath>
                                  <mt:tst 
                                          false="The DcmDspVehInfoDataOrder has to be unique per InfoType." 
                                          expr="text:uniq(../../*/DcmDspVehInfoDataOrder, .)"/>
                                  <mt:tst 
                                          true="The DcmDspVehInfoDataOrder of a InfoType has to be zero-based and consecutive." 
                                          expr=".&gt;= count(../../*)"/>
                                </mt:xpath>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspVehInfoDataReadFnc" 
                                   type="FUNCTION-NAME">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the name of the Callout used for reading the associated
                                         &lt;code&gt;InfoType&lt;/code&gt; data item.&lt;/p&gt;

                                      &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;Vehicle Info data retrieval interface type (&lt;code&gt;DcmDspVehInfoDataUsePort&lt;/code&gt;): The configuration of this parameter is only relevant if &lt;code&gt;DcmDspVehInfoDataUsePort&lt;/code&gt; is set to
                                                                                                                                &lt;code&gt;FALSE&lt;/code&gt;.&lt;/li&gt;
                                      &lt;/ul&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Function for reading the InfoType"/>
                              <a:a name="OPTIONAL" value="true"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="cc2b2df5-0581-44ea-87c9-ebf48e30b567"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="ENABLE" value="false"/>
                              <a:da name="INVALID" type="Multi">
                                <mt:xpath>
                                  <mt:tst 
                                          false="Empty or invalid name. (no prefixed C function name)" 
                                          expr="(node:value(../DcmDspVehInfoDataUsePort) = &apos;true&apos;) or ((node:value(.) != &apos;&apos;) and text:match(., &apos;^[a-zA-Z][a-zA-Z0-9_]*$&apos;))"/>
                                  <mt:tst 
                                          true="If Read function name is Dem_DcmGetInfoTypeValue08 or Dem_DcmGetInfoTypeValue0B and DcmDspVehInfoDataUsePort is set to false and DcmDspVehInfoASRVersion = AUTOSAR_440, DcmDspVehInfoNODIProvResp shall be enabled" 
                                          expr="(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmDspVehInfoASRVersion = &apos;AUTOSAR_440&apos;) and                                           (../DcmDspVehInfoDataUsePort = &apos;false&apos;) and                                           ((. = &apos;Dem_DcmGetInfoTypeValue08&apos;) or (. = &apos;Dem_DcmGetInfoTypeValue0B&apos;)) and                                           (node:exists(../../../DcmDspVehInfoNODIProvResp) and (../../../DcmDspVehInfoNODIProvResp = &apos;false&apos;))"/>
                                </mt:xpath>
                              </a:da>
                              <a:da name="WARNING" type="XPath" 
                                    expr="node:value(../DcmDspVehInfoDataUsePort) = &apos;false&apos;" 
                                    false="No &apos;DcmDspVehInfoDataReadFnc&apos; is needed if &apos;DcmDspVehInfoDataUsePort&apos; is true. Please disable it."/>
                            </v:var>
                            <v:var name="DcmDspVehInfoDataSize" type="INTEGER">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the size of the &lt;code&gt;InfoType&lt;/code&gt; data item in Bytes.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;1 .. 255 Bytes&lt;/li&gt;
                                      &lt;/ul&gt;

                                      &lt;p&gt;&lt;b&gt;Note : &lt;/b&gt; A VehInfoDataSize with the value 0 is invalid&lt;/p&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" value="Size of the Data"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="de48d13e-0d60-4de9-b31b-2b56ba1a4104"/>
                              <a:da name="DEFAULT" value="0"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="INVALID" type="Range">
                                <a:tst expr="&lt;=255"/>
                                <a:tst expr="&gt;=1"/>
                              </a:da>
                            </v:var>
                            <v:var name="DcmDspVehInfoDataUsePort" 
                                   type="BOOLEAN">
                              <a:a name="DESC">
                                <a:v>&lt;html&gt;

                                      &lt;p&gt;Defines the type of the interface that shall be used to implement the
                                         &lt;code&gt;GetInfotypeValueData&lt;/code&gt; operation in order to obtain the data for this
                                         &lt;code&gt;vehInfo&lt;/code&gt;.&lt;/p&gt;

                                      &lt;p&gt;Range:&lt;/p&gt;
                                      &lt;ul&gt;
                                        &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;GetInfotypeValueData&lt;/code&gt; operation for this
                                                               &lt;code&gt;vehInfo&lt;/code&gt; is implemented
                                                               by using a synchronous AUTOSAR &lt;code&gt;ClientServerInterface&lt;/code&gt;
                                                               with asynchronous behaviour(the operation shall be completed in a
                                                               series of calls to the API, the first call being executed with an
                                                               &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                               as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                                               with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                                               all subsequent executions). The &lt;code&gt;Dcm&lt;/code&gt;
                                                               generates the &lt;code&gt;InfotypeServices_&amp;#60;VEHINFODATA&amp;#62;&lt;/code&gt;
                                                               &lt;code&gt;ClientServerInterface&lt;/code&gt;, where &lt;code&gt;&amp;#60;VEHINFODATA&amp;#62;&lt;/code&gt;
                                                               is the name of this &lt;code&gt;DcmDspVehInfoData&lt;/code&gt; container. This interface shall implement the
                                                               &lt;code&gt;GetInfotypeValueData&lt;/code&gt; operation. A Require Port is generated for this interface and shall
                                                               be connected to a compatible Provide Port of an Application Software Component. The name of this
                                                               Require Port is the same as the name of the &lt;code&gt;ClientServerInterface&lt;/code&gt;.&lt;/li&gt;
                                        &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;GetInfotypeValueData&lt;/code&gt; operation for this
                                                                &lt;code&gt;vehInfo&lt;/code&gt; is implemented asynchronous API (the operation shall be completed in a
                                                                series of calls to the API, the first call being executed with an
                                                                &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_INITIAL&lt;/code&gt;, and as long
                                                                as the interface returns &lt;code&gt;E_PENDING&lt;/code&gt;, it shall be called
                                                                with an &lt;code&gt;OpStatus&lt;/code&gt; set to &lt;code&gt;DCM_PENDING&lt;/code&gt; for
                                                                all subsequent executions). The following callout name shall be
                                                                configured:
                                                                &lt;ul&gt;
                                                                  &lt;li&gt;For operation &lt;code&gt;GetInfotypeValueData&lt;/code&gt;: &lt;code&gt;DcmDspVehInfoDataReadFnc&lt;/code&gt;&lt;/li&gt;
                                                                &lt;/ul&gt;&lt;/li&gt;
                                      &lt;/ul&gt;

                                    &lt;/html&gt;</a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                   type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              </a:a>
                              <a:a name="LABEL" 
                                   value="Use port interface to access the InfoType"/>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" 
                                   value="69b441f8-a446-4686-a265-fb287a7c96a6"/>
                              <a:da name="DEFAULT" value="true"/>
                              <a:da name="EDITABLE" value="true"/>
                              <a:da name="INVALID" type="XPath" 
                                    expr="(node:value(.) = &apos;true&apos;) or node:exists(../DcmDspVehInfoDataReadFnc)" 
                                    false="Please add a &apos;DcmDspVehInfoDataReadFnc&apos; if &apos;DcmDspVehInfoUsePort&apos; is set to false."/>
                            </v:var>
                          </v:ctr>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                  <v:ctr name="DcmGeneral" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            Defines the general configuration of the &lt;code&gt;Dcm&lt;/code&gt;.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="General Configuration Parameters"/>
                    <a:a name="TAB" value="General"/>
                    <a:a name="UUID" 
                         value="ef42f70f-4ac8-4e77-9837-f20a1c131804"/>
                    <v:lst name="DcmHeaderFileInclusion">
                      <a:a name="LABEL" value="Custom header files"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MIN" value="0"/>
                      <v:var name="DcmHeaderFileInclusion" type="STRING">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                      &lt;p&gt;
                                        Name of the header file(s) to be included by the Dcm module containing the used Memory Range definitions.
                                      &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Custom standard header files"/>
                        <a:a name="UUID" 
                             value="d3ae286d-1a4a-473a-ad7d-2a12c670172d"/>
                      </v:var>
                    </v:lst>
                    <v:var name="DcmDDDIDStorage" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Defines whether DDDID definitions are stored non-volatile memory or not.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Store DDDID definitions to non-volatile memory"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="6c681c30-b478-3d48-9862-760609dfaa3b"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmDevErrorDetect" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables usage of Development Error Detection for the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables Development Error Detection.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables Development Error Detection.&lt;/li&gt;
                              &lt;/ul&gt;

                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable Development Error Detection"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="bb386aad-8708-4f3c-9332-7aba4ca9355c"/>
                      <a:da name="DEFAULT" value="true"/>
                    </v:var>
                    <v:var name="DcmDslEnableSetActiveDiagnosis" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                This switch allows to enable or disable a functionality that can be
                                used to activate or deactivate the call to the
                                &lt;code&gt;ComM_DCM_ActiveDiagnostic()&lt;/code&gt; function.
                                It is intended to be used to allow the ECU to go to sleep even if
                                the diagnosis is ongoing when ignition was turned off and the ECU
                                is in the default diagnostic session.
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Allow disabling calls to ComM_DCM_ActiveDiagnostic()"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="6c681c30-b478-3d48-9862-760619dfaa3b"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmComMMultiCoreSupport" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Allows the mapping of DCM and ComM to different partitions.&lt;/p&gt;
                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: DCM and ComM are located at different partitions.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: DCM and ComM are located at the same partition.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable DCM and ComM on different partitions"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="3a966241-2ad1-4b35-9e53-776882ac26ec"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmDynamicallyDefinedDIDInitPolicy" 
                           type="ENUMERATION">
                      <a:a name="COLUMN_TITLE" 
                           value="Policy initialization type for DDDID"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the policy initialization type for DDDID.&lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;DDDID_CLEAR_ALWAYS&lt;/code&gt;:  At Dcm initialisation phase DDDIDs will be always cleared&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;DDDID_CLEAR_ONLY_POWERON&lt;/code&gt;:  DDDIDs will be cleared by the integrator&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Policy initialization type for DDDID"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="e8f7af1a-c698-11e5-9912-ba0be0483c18"/>
                      <a:da name="DEFAULT" value="DDDID_CLEAR_ALWAYS"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="RANGE">
                        <a:v>DDDID_CLEAR_ALWAYS</a:v>
                        <a:v>DDDID_CLEAR_ONLY_POWERON</a:v>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="(node:value(.) = &apos;DDDID_CLEAR_ALWAYS&apos;) and (../DcmDDDIDStorage = &apos;true&apos;)" 
                            true="Saving the periodic DDDID configuration to NvM is inefficient as it will be overwritten during Dcm initialization."/>
                    </v:var>
                    <v:var name="DcmDynamicallyDefinedPeriodicDIDInitPolicy" 
                           type="ENUMERATION">
                      <a:a name="COLUMN_TITLE" 
                           value="Policy initialization type for periodic DDDID"/>
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the policy initialization type for dynamically defined periodic DID.&lt;/p&gt;
                          &lt;p&gt;Range:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;PRDI_PERIODIC_CLEAR_ALWAYS&lt;/code&gt;:  Periodic DDDIDs will be always cleared at Dcm initialisation phase&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;PRDI_PERIODIC_CLEAR_ONLY_POWERON&lt;/code&gt;:  Periodic DDDIDs will be cleared by the integrator&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;PRDI_PERIODIC_CLEAR_NEVER&lt;/code&gt;: Periodic DDDIDs will be restored from NvM&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Policy initialization type for periodic DDDID"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="e8f7b17c-c698-11e5-9912-ba0be0483c18"/>
                      <a:da name="DEFAULT" value="PRDI_PERIODIC_CLEAR_ALWAYS"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(node:value(.) = &apos;PRDI_PERIODIC_CLEAR_NEVER&apos;) and (../DcmDDDIDStorage = &apos;false&apos;)" 
                            true="Please configure DcmDDDIDStorage as TRUE because periodic DDDID should be restored from NvM at initialization phase."/>
                      <a:da name="RANGE">
                        <a:v>PRDI_PERIODIC_CLEAR_ALWAYS</a:v>
                        <a:v>PRDI_PERIODIC_CLEAR_ONLY_POWERON</a:v>
                        <a:v>PRDI_PERIODIC_CLEAR_NEVER</a:v>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="(node:value(.) = &apos;PRDI_PERIODIC_CLEAR_ALWAYS&apos;) and (../DcmDDDIDStorage = &apos;true&apos;)" 
                            true="Saving the periodic DDDID configuration to NvM is inefficient as it will be overwritten during Dcm initialization."/>
                    </v:var>
                    <v:var name="DcmNRCPolicyISOVersion" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Defines handling of NRCs (Suppression of NRCs of functional requests, NRC to use in negative responses) according to the selected ISO version.&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;ISO14229_2006&lt;/code&gt; = Handle NRCs according to ISO-14229-1 / 2006&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;ISO14229_2013&lt;/code&gt; = Handle NRCs according to ISO-14229-1 / 2013&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;
                              &lt;b&gt;Note&lt;/b&gt;:If UDS service &lt;code&gt;RoutineControl(0x31)&lt;/code&gt; is requested:
                                &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;ISO14229_2006&lt;/code&gt; = The NRC requestSequenceError(0x24) is return by &lt;code&gt;DCM&lt;/code&gt; module according with &lt;code&gt;ISO_14229-2006&lt;/code&gt;.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;ISO14229_2013&lt;/code&gt; = The next checks must be handled by application &quot;routineControlOptionRecord contains valid data for the requested RID&quot;, &quot;Condition check&quot; and &quot;Request sequence respected for the RID?&quot; to be according with &lt;code&gt;ISO 14229-1:2013&lt;/code&gt; and &lt;code&gt;AUTOSAR 4.2.1&lt;/code&gt;.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Define ISO"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="d31cd590-e736-11e4-b571-0800200c9a66"/>
                      <a:da name="DEFAULT" value="ISO14229_2006"/>
                      <a:da name="RANGE">
                        <a:v>ISO14229_2006</a:v>
                        <a:v>ISO14229_2013</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="DcmModeDeclarationSupport" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;

                              &lt;p&gt;Enables Mode Declaration Support for the &lt;code&gt;Dcm&lt;/code&gt;&lt;/p&gt;

                              &lt;p&gt;If enabled, the &lt;code&gt;Dcm&lt;/code&gt; acts as a mode manager and is responsible for
                              providing the modes of the &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt;s it defines  in its
                              Basic Software Module Description:&lt;/p&gt;

                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;DcmDiagnosticSessionControl&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DcmEcuReset&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DcmModeRapidPowerShutDown&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DcmCommunicationControl_&lt;symbolic name of ComMChannelId&gt;.&lt;/code&gt;&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;DcmControlDTCSetting&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;&lt;code&gt;SchM_Switch&lt;/code&gt; APIs enable the &lt;code&gt;Dcm&lt;/code&gt; to initiate a mode switch.
                              The Basic Software Scheduler then instantiates a &lt;code&gt;ModeMachineInstance&lt;/code&gt;.
                              Mode users (eg. the &lt;code&gt;BswM&lt;/code&gt;) can read the value of these
                              &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt;s via &lt;code&gt;SchM_Mode&lt;/code&gt; APIs.
                              &lt;/p&gt;

                              &lt;p&gt;Note 1: Autosar 4.0.1 used BswM callouts whenever a mode was changed and
                                       Autosar 4.0.3 uses SchM switch APIs for notifying the mode changes&lt;/p&gt;


                              &lt;p&gt;Note 2: This parameter is subject to removal in further releases.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables Mode Declaration Support&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables Mode Declaration Support&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Mode Declaration Support"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(. = &apos;false&apos;) and (count(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[(DcmDsdSidTabServiceId = num:hextoint(&apos;0x28&apos;)) and ((./DcmDsdSubService/*/DcmDsdSubServiceId = num:hextoint(&apos;0x04&apos;)) or (./DcmDsdSubService/*/DcmDsdSubServiceId = num:hextoint(&apos;0x05&apos;)))]) &gt; 0)" 
                            true="DcmModeDeclarationSupport needs to be set to true if CommunicationControl(0x28) service is configured with sub-service 0x04 or 0x05"/>
                    </v:var>
                    <v:var name="DcmRequestManufacturerNotificationEnabled" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables the Diagnostic Request Notification for Manufacturer.
                              &lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables Manufacturer Request Notification.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables Manufacturer Request Notification.&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;By enabling the Manufacturer Request Notification, the &lt;code&gt;Dcm&lt;/code&gt; will
                                 generate a Require Port for the &lt;code&gt;ServiceRequestNotification&lt;/code&gt; interface
                                 containing the following operations:
                                 &lt;ul&gt;
                                   &lt;li&gt;
                                   &lt;code&gt;Xxx_Indication&lt;/code&gt; - this operation is called right before processing
                                                                 the diagnostic request in order to check permissions
                                                                 for processing. Depending on the implemented functionality,
                                                                 the diagnostic request will be further processed, ignored or
                                                                 be rejected with a Negative Response Code
                                   &lt;/li&gt;
                                   &lt;li&gt;
                                   &lt;code&gt;Xxx_Confirmation&lt;/code&gt; - this operation is called after confirmation of the diagnostic
                                                                   response transmission as a result of request processing, or at
                                                                   the end of request processing if the transmission of a response
                                                                   is not required.
                                   &lt;/li&gt;
                                 &lt;/ul&gt;
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable Diagnostic Request Notification for Manufacturer"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="5ee68328-03aa-4900-8abc-5812ed8c30f6"/>
                      <a:da name="DEFAULT" value="true"/>
                    </v:var>
                    <v:var name="DcmRequestSeedAfterFailedCompareKey" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables strict sequencing for the execution of the SecurityAccess (0x27) service.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;SecurityAccess&lt;/code&gt; service handler execution is reset to its default state
                                                       by any &lt;code&gt;SendKey&lt;/code&gt; sub-function failure.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;:  The &lt;code&gt;SecurityAccess&lt;/code&gt; service is tolerant to out-of-sequence &lt;code&gt;SendKey&lt;/code&gt;
                                                         requests.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable a strict SecurityAccess mechanism"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="1d8277f0-5bfd-11e3-949a-0800200c9a66"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:var name="DcmRequestSupplierNotificationEnabled" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables the Diagnostic Request Notification for Supplier.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables Supplier Request Notification.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables Supplier Request Notification.&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;By enabling the Supplier Request Notification, the &lt;code&gt;Dcm&lt;/code&gt; will
                                 generate a Require Port for the &lt;code&gt;ServiceRequestNotification&lt;/code&gt; interface
                                 containing the following operations:
                                 &lt;ul&gt;
                                   &lt;li&gt;
                                   &lt;code&gt;Xxx_Indication&lt;/code&gt; - this operation is called right before processing
                                                                 the diagnostic request in order to check permissions
                                                                 for processing. Depending on the implemented functionality,
                                                                 the diagnostic request will be further processed, ignored or
                                                                 be rejected with a Negative Response Code
                                   &lt;/li&gt;
                                   &lt;li&gt;
                                   &lt;code&gt;Xxx_Confirmation&lt;/code&gt; - this operation is called after confirmation of the diagnostic
                                                                  response transmission as a result of request processing, or at
                                                                  the end of request processing if the transmission of a response
                                                                  is not required.
                                   &lt;/li&gt;
                                 &lt;/ul&gt;
                              &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable Diagnostic Request Notification for Supplier"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="fd858a9e-5903-440e-9adc-f8e085ad051b"/>
                      <a:da name="DEFAULT" value="true"/>
                    </v:var>
                    <v:var name="DcmRespondAllRequest" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;

                              &lt;p&gt;Enables if the &lt;code&gt;Dcm&lt;/code&gt; responds to all diagnostic requests.&lt;/p&gt;

                              &lt;p&gt;The &lt;code&gt;Dcm&lt;/code&gt; can be configured not to responds to diagnostic service
                              requests with service IDs in the ranges 0x40 .. 0x7F and 0xC0 .. 0x7F.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;Dcm&lt;/code&gt; sends the Negative Response Code &lt;code&gt;serviceNotSupported&lt;/code&gt; (0x11).&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;Dcm&lt;/code&gt; will not respond.&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;p&gt;Note: the functionality related to this parameter is not supported by the current implementation.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable Response for all Diagnostic Requests"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="0f4a7d5d-f1b8-49d8-8843-2c1b725440d7"/>
                      <a:da name="DEFAULT" value="true"/>
                      <a:da name="EDITABLE" value="false"/>
                    </v:var>
                    <v:var name="DcmRteUsage" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note : This is a Vendor Specific parameter for
                                           &lt;code&gt;RTE&lt;/code&gt; usage by the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt;Enables &lt;code&gt;RTE&lt;/code&gt; functionality usage by the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;

                              &lt;p&gt;By disabling this configuration parameter, &lt;code&gt;Dcm&lt;/code&gt; functionality
                              which is dependent on the presence of the &lt;code&gt;RTE&lt;/code&gt; is disabled.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables &lt;code&gt;RTE&lt;/code&gt; feature usage.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables &lt;code&gt;RTE&lt;/code&gt; feature usage.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable RTE Usage"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(((node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmProcessingConditions/DcmModeCondition/*/DcmBswModeRef)) or (node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmProcessingConditions/DcmModeCondition/*/DcmSwcModeRef))) and (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmModeDeclarationSupport = &apos;true&apos;) and (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmRteUsage = &apos;false&apos;))" 
                            true="If the parameter DcmModeDeclarationSupport is enabled and the container DcmModeCondition is populated then the parameter DcmRteUsage shall be also enabled."/>
                      <a:da name="WARNING" type="XPath" 
                            expr=". = &apos;true&apos; and count(as:modconf(&apos;Rte&apos;)/*) = 0" 
                            true="The usage of the RTE is enabled for the DCM, but the RTE is disabled or missed."/>
                    </v:var>
                    <v:var name="DcmRteTypesProtectionAtFileLevel" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note : This parameter is for choosing a type of protection of the types that
                                           are generated by &lt;code&gt;RTE&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;
                              &lt;p&gt;By enabling this configuration parameter, protection at file level is used.&lt;/p&gt;
                              &lt;p&gt;By disabling this configuration parameter, double type definition protection is used.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: &lt;code&gt;DCM&lt;/code&gt; uses protection at file level.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: &lt;code&gt;DCM&lt;/code&gt; uses double type definition protection at type level.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable protection of RTE types at file level"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="e92bd490-f18e-4a8b-9e90-11093b56a1e2 "/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:var name="DcmGenericConnectionUsage" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;b&gt;Note : This is a Vendor Specific parameter for
                                           &lt;code&gt;Generic Connection&lt;/code&gt; usage by the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/b&gt;&lt;/p&gt;

                              &lt;p&gt;Enables EB custom feature for &lt;code&gt;Generic Connections&lt;/code&gt; in order to obtain the
                              MetaData information from connection using EB &lt;code&gt;EcuC&lt;/code&gt; APIs and provide them to:
                              &lt;ul&gt;
                                &lt;li&gt;the &lt;code&gt;Indication&lt;/code&gt; and &lt;code&gt;Confirmation&lt;/code&gt; operations of the
                                    ServiceRequestNotification client-server interface.&lt;/li&gt;
                                &lt;li&gt;the lower layer using the &lt;code&gt;EcuC&lt;/code&gt; APIs&lt;/li&gt;
                              &lt;/ul&gt;&lt;/p&gt;

                              &lt;p&gt;By disabling this configuration parameter, &lt;code&gt;Dcm&lt;/code&gt; functionality
                              which is dependent on the presence of the &lt;code&gt;Generic Connection&lt;/code&gt; is disabled.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables &lt;code&gt;Generic Connection&lt;/code&gt; feature usage.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables &lt;code&gt;Generic Connection&lt;/code&gt; feature usage.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Generic Connection Usage"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:var name="DcmTaskTime" type="FLOAT">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the scheduling time for the periodic task running the &lt;code&gt;Dcm_MainFunction()&lt;/code&gt;
                              The &lt;code&gt;Dcm_MainFunction()&lt;/code&gt; is executed after every &lt;code&gt;DcmTaskTime&lt;/code&gt;, and the value
                              configured in this parameter defines the resolution of all timing dependent functionality
                              of the &lt;code&gt;Dcm_MainFunction()&lt;/code&gt;.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;0.001 .. 1 seconds&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Periodic Task time"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="73a44958-88a1-4b94-bdfd-5ecfe067b7fe"/>
                      <a:da name="DEFAULT" value="0.005"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;=1"/>
                          <mt:tst expr="&gt;=0.001"/>
                        </mt:range>
                        <mt:xpath 
                                  true="The value of this parameter cannot be 0." 
                                  expr="node:value(.) = 0"/>
                      </a:da>
                    </v:var>
                    <v:var name="DcmVersionInfoApi" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables the Version Information API for the &lt;code&gt;Dcm&lt;/code&gt;.
                                 The &lt;code&gt;Dcm_GetVersionInfo()&lt;/code&gt; shall return the
                                 version information of this module. The version information includes:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;Module Id&lt;/li&gt;
                                &lt;li&gt;Vendor Id&lt;/li&gt;
                                &lt;li&gt;Module Major Version Number&lt;/li&gt;
                                &lt;li&gt;Module Minor Version Number&lt;/li&gt;
                                &lt;li&gt;Module Patch Version Number&lt;/li&gt;
                              &lt;/ul&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: The &lt;code&gt;Dcm_GetVersionInfo()&lt;/code&gt; API is available.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: The &lt;code&gt;Dcm_GetVersionInfo()&lt;/code&gt; API is not available.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Version Info API"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="4484a841-c015-457f-a0b5-ddf0984a0d90"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:ref name="DcmDspDDDIDBlockIdRef" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to NVRAM block id to store DDDID data.&lt;/p&gt;
                              &lt;p&gt;&lt;em&gt;&lt;b&gt;Note&lt;/b&gt;&lt;/em&gt; : Only relevant if &lt;code&gt;DcmDDDIDStorage&lt;/code&gt; = TRUE.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Reference to the NVRAM blockId to store DDDID data"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="UUID" 
                           value="15e5e0d2-0140-4123-b8bb-8e51624258fc"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="../DcmDDDIDStorage = &apos;true&apos;"/>
                      <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                            false="Invalid reference."/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/NvM/NvMBlockDescriptor"/>
                    </v:ref>
                    <v:var name="DcmDataTransferServicesASRVersion" 
                           type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the AUTOSAR version compatibiliy for the following services: RequestDownload (0x34), RequestUpload (0x35), TransferData (0x36), RequestTransferExit (0x37), ReadMemoryByAddress (0x23) and WriteMemoryByAddress (0x3D)
                               Valid options: AUTOSAR 4.0.3, AUTOSAR 4.2.2 or AUTOSAR 4.3.0
                            &lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;AUTOSAR_40&lt;/code&gt; = The implementation and the callouts are AUTOSAR 4.0 compliant&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;AUTOSAR_42&lt;/code&gt; = The implementation and the callouts are AUTOSAR 4.2.2 compliant&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;AUTOSAR_43&lt;/code&gt; = The implementation and the callouts are AUTOSAR 4.3 compliant&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="TransferData services AUTOSAR version"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:aa906933-2cc0-11e2-81c1-0800200c9a66"/>
                      <a:da name="DEFAULT" value="AUTOSAR_40"/>
                      <a:da name="RANGE">
                        <a:v>AUTOSAR_40</a:v>
                        <a:v>AUTOSAR_422</a:v>
                        <a:v>AUTOSAR_43</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="DcmDspVehInfoASRVersion" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Defines the AUTOSAR version compatibiliy for the OBD RequestVehicleInformation (0x09) Service
                              &lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;AUTOSAR_403&lt;/code&gt; = The implementation and the callouts are AUTOSAR 4.0.3 compliant&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;AUTOSAR_440&lt;/code&gt; = The implementation and the callouts are AUTOSAR 4.4.0 compliant&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Request Vehicle Information service AUTOSAR version"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:20ff7dc3-089c-433f-9f5d-7018683fad83"/>
                      <a:da name="DEFAULT" value="AUTOSAR_403"/>
                      <a:da name="RANGE">
                        <a:v>AUTOSAR_403</a:v>
                        <a:v>AUTOSAR_440</a:v>
                      </a:da>
                    </v:var>
                    <v:var 
                           name="DcmDataTransferServicesMemoryRangeAndSecurityCheck" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Configure whether the following checks shall be done on receiving a
                            &lt;code&gt;RequestDownload (0x34)&lt;/code&gt; or &lt;code&gt;RequestUpload (0x35)&lt;/code&gt; service request:
                            &lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;If the range starting from the requested &lt;code&gt;MemoryAddress&lt;/code&gt; until
                              &lt;code&gt;MemoryAddress + MemorySize&lt;/code&gt; fits into a configured &lt;code&gt;DcmDspWriteMemoryRangeInfo&lt;/code&gt;
                              in case RequestDownload was requested, respectively &lt;code&gt;DcmDspReadMemoryRangeInfo&lt;/code&gt;
                              in case RequestUpload was requested&lt;/li&gt;
                              &lt;li&gt;If the requested read or write operation is allowed in the current security level&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;Range:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enables the checks above&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disables the checks above&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable optional checks for TransferData services"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:4941f719-fe51-4cba-9da7-809c0806855c"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmDataTransferServicesMemoryIdCheck" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Check if the requested MemoryId identified as the most significant byte of
                            the requested &lt;code&gt;memoryAddress&lt;/code&gt; matches a configured &lt;code&gt;DcmDspMemoryIdValue&lt;/code&gt;
                            for a configured &lt;code&gt;DcmDspWriteMemoryRangeInfo&lt;/code&gt; in case RequestDownload was requested,
                            respectively &lt;code&gt;DcmDspReadMemoryRangeInfo&lt;/code&gt; in case RequestUpload was requested
                            &lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enables the check above&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disables the check above&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable MemoryId check for TransferData services"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:6a9b7291-66c7-4cee-971c-259a74791d4d"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmDspDataDefaultEndianness" 
                           type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the default endianness belonging to a DID, RID or PID if the
                             corresponding data does not define an endianness.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt; = Most significant byte shall be stored at the lowest address.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt; = Most significant byte shall be stored at the highest address&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;OPAQUE&lt;/code&gt; = Opaque data endianness&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="DcmDspDataDefaultEndianness"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="e6a739ce-4857-43bd-9926-a172f02ad6d1"/>
                      <a:da name="DEFAULT" value="OPAQUE"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="RANGE">
                        <a:v>BIG_ENDIAN</a:v>
                        <a:v>LITTLE_ENDIAN</a:v>
                        <a:v>OPAQUE</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="DcmDslProtocolDIDEndiannessConvEnabled" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Note: This parameter has significance only when DcmDslProtocolEndiannessConvEnabled is enabled for the protocol on which the request is processed.&lt;/p&gt;
                            &lt;p&gt;Enable endianness conversion for DID signals
                            &lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enable endianness conversion for DID signals&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disable endianness conversion for DID signals&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable endianness conversion for DID signals"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="a849b1a7-bca3-43b8-b850-da67acc8031b"/>
                      <a:da name="DEFAULT" value="true"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:var name="DcmDslProtocolRoutineEndiannessConvEnabled" 
                           type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Note: This parameter has significance only when DcmDslProtocolEndiannessConvEnabled is enabled for the protocol on which the request is processed.&lt;/p&gt;
                            &lt;p&gt;Enable endianness conversion for routine signals
                            &lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enable endianness conversion for routine signals&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disable endianness conversion for routine signals&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Enable endianness conversion for routine signals"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="e6a739ce-4857-43bd-9926-a172f02ad6d1"/>
                      <a:da name="DEFAULT" value="true"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:ctr name="DcmServiceAPI" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;
                              Container for configuration of the service API of Dcm.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Service API Parameters"/>
                      <a:a name="UUID" 
                           value="ECUC:aa906930-2cc0-11e2-81c1-0800200c9a66"/>
                      <a:da name="WARNING" type="XPath">
                        <a:tst 
                               expr="not(count(as:modconf(&apos;Dem&apos;)/*) = 0)                                      and (as:modconf(&apos;Dem&apos;)[1]/CommonPublishedInformation/VendorId != 1)                                      and (node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI))                                      and (as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI = &apos;AUTOSAR_42&apos;)                                     " 
                               true="The Dcm is using AUTOSAR version 4.2.1 as default service API"/>
                        <a:tst 
                               expr="not(count(as:modconf(&apos;Dem&apos;)/*) = 0)                                      and (as:modconf(&apos;Dem&apos;)[1]/CommonPublishedInformation/VendorId = 1)                                      and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemRteUsage = &apos;false&apos;)                                     " 
                               true="Dcm and Dem do not have the same setting regarding Rte usage.                                      This might cause problems with some interfaces."/>
                        <a:tst 
                               expr="not(count(as:modconf(&apos;Dem&apos;)/*) = 0)                                      and (as:modconf(&apos;Dem&apos;)[1]/CommonPublishedInformation/VendorId = 1)                                      and (node:exists(as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI))                                      and (node:exists(as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI))                                      and (as:modconf(&apos;Dem&apos;)[1]/DemGeneral/DemServiceAPI/DemDefaultASRServiceAPI                                           != as:modconf(&apos;Dcm&apos;)[1]/DcmConfigSet/*[1]/DcmGeneral/DcmServiceAPI/DcmDefaultASRServiceAPI)                                     " 
                               true="Dcm and Dem use different AUTOSAR versions as default service API."/>
                      </a:da>
                      <v:var name="DcmEnableASR40ServiceAPI" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Configures whether the AUTOSAR 4.0 service API shall be provided.&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enables AUTOSAR 4.0 service API.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disables AUTOSAR 4.0 service API.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Enable AUTOSAR 4.0 service API"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:aa906932-2cc0-11e2-81c1-0800200c9a66"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="EDITABLE" value="true"/>
                      </v:var>
                      <v:var name="DcmEnableASR42ServiceAPI" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;
                                Configures whether the AUTOSAR 4.2 service API shall be provided.&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enables AUTOSAR 4.2 service API.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disables AUTOSAR 4.2 service API.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Enable AUTOSAR 4.2 service API"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="EDITABLE" value="true"/>
                      </v:var>
                      <v:var name="DcmDefaultASRServiceAPI" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the default AUTOSAR service API.&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;AUTOSAR_40&lt;/code&gt; = AUTOSAR 4.0 service API is the default one.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;AUTOSAR_42&lt;/code&gt; = AUTOSAR 4.2 service API is the default one.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Default AUTOSAR service API"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="ECUC:aa906933-2cc0-11e2-81c1-0800200c9a66"/>
                        <a:da name="DEFAULT" value="AUTOSAR_40"/>
                        <a:da name="RANGE">
                          <a:v>AUTOSAR_40</a:v>
                          <a:v>AUTOSAR_42</a:v>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:ctr>
                  <v:ctr name="DcmPageBufferCfg" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the configuration controlling the functionality of the
                               Paged Buffer transmission mechanism.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Paged Buffering Configuration"/>
                    <a:a name="TAB" value="Paged Buffering Configuration"/>
                    <a:a name="UUID" 
                         value="4a69daca-fd18-4d19-a1ad-a12a02831a7d"/>
                    <v:var name="DcmPagedBufferEnabled" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Enables the Paged Buffering mechanism for response transmission.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Enables Paged Buffered transmission.&lt;/li&gt;
                                &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Disables Paged Buffered transmission.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Enable Paged Buffering"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="3b386568-be00-492f-b975-2fff692b5ad6"/>
                      <a:da name="DEFAULT" value="true"/>
                    </v:var>
                    <v:var name="DcmPagedBufferTimeout" type="FLOAT">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the timeout for Paged Buffered transmissions in seconds.&lt;/p&gt;

                              &lt;p&gt;This timeout represents the maximum time to wait for a new page to
                                 be made available by the Diagnostic Service Processor (DSP) submodule
                                 of the &lt;code&gt;Dcm&lt;/code&gt; for transmission before the processing of
                                 the request is cancelled.&lt;/p&gt;

                              &lt;p&gt;Range:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;0 .. 1 seconds&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" 
                           value="Timeout for filling one page with data"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="48c2d295-a425-4be7-a66d-af93030a20ca"/>
                      <a:da name="DEFAULT" value="0.0"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="../DcmPagedBufferEnabled = &apos;true&apos;"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=1"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                  <v:ctr name="DcmProcessingConditions" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the configuration for the mode
                               arbitration functionality of the &lt;code&gt;Dcm&lt;/code&gt;.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="Processing Conditions"/>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="ECUC:793e1c41-87d8-4c11-b71d-d924a19beadc"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:lst name="DcmModeCondition" type="MAP">
                      <a:a name="LABEL" value="Mode Condition"/>
                      <a:a name="ROWS" value="6"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="DcmModeCondition" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;Defines the configuration of a mode condition
                                 which can be used as an argument of &lt;code&gt;DcmModeRule&lt;/code&gt;s. &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Mode Condition"/>
                        <a:a name="UUID" 
                             value="ECUC:1006f33d-0597-4976-ab55-0c3007d1d130"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(node:exists(DcmBswModeRef) and node:exists(DcmSwcModeRef)) or (not(node:exists(DcmBswModeRef)) and not(node:exists(DcmSwcModeRef)))" 
                              true="Atleaset one of DcmBswModeRef or DcmSwcModeRef should be configured for a mode condition but not both."/>
                        <a:da name="WARNING" type="XPath" 
                              expr="count(node:refs(../../DcmModeRule/*//DcmArgumentRef/*[node:refvalid(.)])[name(.)= name(node:current())]) = 0" 
                              true="This mode condition is not referred in any of the mode rules which implies it remains unused.                           Either remove this or refer as argument of any configured DcmModeRule"/>
                        <v:var name="DcmConditionType" type="ENUMERATION">
                          <a:a name="COLUMN_TITLE" value="Condition Type"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines what kind of comparison is made
                                       for the evaluation of the mode condition. &lt;/p&gt;

                                    &lt;p&gt;Range:&lt;/p&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt; &lt;code&gt;DCM_EQUALS&lt;/code&gt;: The &lt;code&gt;DcmModeCondition&lt;/code&gt; evaluates to &lt;code&gt;TRUE&lt;/code&gt; if, in
                                                                    &lt;code&gt;DcmBswModeRef&lt;/code&gt; or &lt;code&gt;DcmSwcModeRef&lt;/code&gt;, the
                                                                    current Mode of the &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt;
                                                                    to which the referenced &lt;code&gt;ModeDeclaration&lt;/code&gt;
                                                                    belongs equals the referenced &lt;code&gt;ModeDeclaration&lt;/code&gt;&lt;/li&gt;
                                      &lt;li&gt; &lt;code&gt;DCM_EQUALS_NOT&lt;/code&gt;: The &lt;code&gt;DcmModeCondition&lt;/code&gt; evaluates to &lt;code&gt;TRUE&lt;/code&gt; if, in
                                                                        &lt;code&gt;DcmBswModeRef&lt;/code&gt; or &lt;code&gt;DcmSwcModeRef&lt;/code&gt;, the
                                                                        current Mode of the &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt;
                                                                        to which the referenced &lt;code&gt;ModeDeclaration&lt;/code&gt;
                                                                        belongs does not equal the referenced
                                                                        &lt;code&gt;ModeDeclaration&lt;/code&gt;&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Condition Type"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:86467a0b-067d-4542-9b3a-ffa9813df904"/>
                          <a:da name="RANGE">
                            <a:v>DCM_EQUALS</a:v>
                            <a:v>DCM_EQUALS_NOT</a:v>
                          </a:da>
                        </v:var>
                        <v:ctr name="DcmBswModeRef" type="INSTANCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                    &lt;p&gt; Defines the parameters needed
                                        in order to specify a mode rule using modes provided by
                                        Basic Software Modules.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Bsw Mode Reference"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:e4dbe33b-4342-4d1f-8b87-4c3aa8048d8b"/>
                          <a:da name="ENABLE" value="false"/>
                          <v:ref name="TARGET" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                      &lt;p&gt;References a &lt;code&gt;ModeDeclaration&lt;/code&gt; belonging to a
                                         &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt; provided by a Basic Software
                                         Module, to be used for the &lt;code&gt;DcmModeCondition&lt;/code&gt;
                                         being configured. &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:da name="REF" value="ASTyped:ModeDeclaration"/>
                          </v:ref>
                          <v:lst name="CONTEXT">
                            <a:da name="ENABLE" value="false"/>
                            <v:ref name="CONTEXT" type="REFERENCE">
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="REF" 
                                    value="ASTyped:ModeDeclarationGroupPrototype"/>
                            </v:ref>
                          </v:lst>
                        </v:ctr>
                        <v:ctr name="DcmSwcModeRef" type="INSTANCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                    &lt;p&gt; Defines the parameters needed
                                        in order to specify a &lt;code&gt;DcmModeRule&lt;/code&gt; using modes provided by
                                        Software Components.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Swc Mode Reference"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="ECUC:59aa899a-23b9-436a-89ab-c4c5cc010c73"/>
                          <a:da name="ENABLE" value="false"/>
                          <v:ref name="TARGET" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                      &lt;p&gt;References a &lt;code&gt;ModeDeclaration&lt;/code&gt; belonging to a
                                         &lt;code&gt;ModeDeclarationGroupPrototype&lt;/code&gt; provided by a Software
                                         Component, to be used for the &lt;code&gt;DcmModeCondition&lt;/code&gt; being
                                         configured. &lt;/p&gt;
                                    &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:da name="REF" value="ASTyped:ModeDeclaration"/>
                          </v:ref>
                          <v:lst name="CONTEXT">
                            <a:da name="ENABLE" value="false"/>
                            <v:ref name="CONTEXT" type="REFERENCE">
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:da name="RANGE" type="IRefCtxt">
                                <a:tst expr="ROOT-SW-COMPOSITION-PROTOTYPE"/>
                                <a:tst expr="SW-COMPONENT-PROTOTYPE"/>
                                <a:tst expr="P-PORT-PROTOTYPE"/>
                                <a:tst expr="MODE-DECLARATION-GROUP-PROTOTYPE"/>
                              </a:da>
                            </v:ref>
                          </v:lst>
                        </v:ctr>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="DcmModeRule" type="MAP">
                      <a:a name="LABEL" value="Mode Rule"/>
                      <a:a name="ROWS" value="6"/>
                      <a:a name="TAB" value="GENERAL"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="DcmModeRule" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the configuration of mode rules, which
                                   represent logical expressions having &lt;code&gt;DcmModeCondistion&lt;/code&gt;s and/or other
                                   &lt;code&gt;DcmModeRule&lt;/code&gt;s as arguments. &lt;/p&gt;
                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Mode Rule"/>
                        <a:a name="UUID" 
                             value="ECUC:3ff24719-16fa-4d1f-ae20-a5a7ba2a0912"/>
                        <a:da name="WARNING" type="XPath" 
                              expr="(count(../../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*/DcmDsdSubService/*[node:refexists(DcmDsdSubServiceModeRuleRef) and                                   name(as:ref(DcmDsdSubServiceModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsd/DcmDsdServiceTable/*/DcmDsdService/*[node:refexists(DcmDsdSidTabModeRuleRef) and                                   name(as:ref(DcmDsdSidTabModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspRoutineInfo/*/DcmDspRoutineAuthorization[node:refexists(DcmDspRoutineModeRuleRef) and                                   name(as:ref(DcmDspRoutineModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspDidInfo/*/DcmDspDidAccess/DcmDspDidRead[node:refexists(DcmDspDidReadModeRuleRef) and                                   name(as:ref(DcmDspDidReadModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspDidInfo/*/DcmDspDidAccess/DcmDspDidWrite[node:refexists(DcmDspDidWriteModeRuleRef) and                                   name(as:ref(DcmDspDidWriteModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspDidInfo/*/DcmDspDidAccess/DcmDspDidControl[node:refexists(DcmDspDidControlModeRuleRef) and                                   name(as:ref(DcmDspDidControlModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspReadMemoryRangeInfo/*[node:refexists(DcmDspReadMemoryRangeModeRuleRef) and                                   name(as:ref(DcmDspReadMemoryRangeModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspMemory/DcmDspMemoryIdInfo/*/DcmDspWriteMemoryRangeInfo/*[node:refexists(DcmDspWriteMemoryRangeModeRuleRef) and                                   name(as:ref(DcmDspWriteMemoryRangeModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspControlDTCSetting[node:refexists(DcmDspControlDTCSettingReEnableModeRuleRef) and                                   name(as:ref(DcmDspControlDTCSettingReEnableModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../../../DcmDsp/DcmDspComControl/DcmDspComControlSetting[node:refexists(DcmDspComControlCommunicationReEnableModeRuleRef) and                                   name(as:ref(DcmDspComControlCommunicationReEnableModeRuleRef)) = name(node:current())]) = 0) and                                   (count(../*/DcmArgumentRef/*[(node:refvalid(.)) and (name(as:ref(.)) = name(node:current()))]) = 0)" 
                              true="This Mode rule is not referred by any DcmDsdSubServiceModeRuleRef or DcmDsdSidTabModeRuleRef or DcmDspRoutineModeRuleRef or                                   DcmDspDidReadModeRuleRef or DcmDspDidWriteModeRuleRef or DcmDspDidControlModeRuleRef or DcmDspReadMemoryRangeModeRuleRef or                                   DcmDspWriteMemoryRangeModeRuleRef or DcmDspControlDTCSettingReEnableModeRuleRef or DcmDspComControlCommunicationReEnableModeRuleRef or                                   any other mode rule which implies it remains unused. Either remove this or use this to control execution of any service or                                   subService or refer in any other mode rule"/>
                        <v:var name="DcmLogicalOperator" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;Defines the logical operator to be used in the logical expression that defines a
                                   &lt;code&gt;DcmModeRule&lt;/code&gt;. If the expression only consists of a single condition
                                   this parameter shall not be used.&lt;/p&gt;

                                  &lt;p&gt;Range:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt; &lt;code&gt;DCM_AND&lt;/code&gt;: The value of the &lt;code&gt;DcmModeRule&lt;/code&gt; shall be
                                                               the value of the &lt;code&gt;AND&lt;/code&gt;-ed operands&lt;/li&gt;
                                    &lt;li&gt; &lt;code&gt;DCM_OR&lt;/code&gt;: The value of the &lt;code&gt;DcmModeRule&lt;/code&gt; shall be
                                                              the value of the &lt;code&gt;OR&lt;/code&gt;-ed operands&lt;/li&gt;
                                  &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Logical Operator"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:a85c43c7-19e0-490e-808b-49cace0481e9"/>
                          <a:da name="RANGE">
                            <a:v>DCM_AND</a:v>
                            <a:v>DCM_OR</a:v>
                          </a:da>
                        </v:var>
                        <v:var name="DcmModeRuleNrcValue" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                  &lt;p&gt;Defines the Negative Response Code to be sent in case the &lt;code&gt;DcmModeRule&lt;/code&gt; does
                                     not evaluate to &lt;code&gt;TRUE&lt;/code&gt;.&lt;/p&gt;
                                  &lt;p&gt;This parameter is optional. In case it is disabled, 0x22 (&lt;code&gt;ConditionsNotCorrect&lt;/code&gt;)
                                     is used as the default Negative Response Code.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Mode Rule Nrc Value"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ECUC:b07cf2e6-febc-4d63-903f-f2ec5b44d785"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <v:lst name="DcmArgumentRef">
                          <a:a name="LABEL" value="Argument Reference"/>
                          <a:da name="MIN" value="1"/>
                          <v:ref name="DcmArgumentRef" type="CHOICE-REFERENCE">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                    &lt;p&gt;Defines a choice reference to either a &lt;code&gt;DcmModeCondition&lt;/code&gt; or
                                       a &lt;code&gt;DcmModeRule&lt;/code&gt; to be used as an operand of this &lt;code&gt;DcmModeRule&lt;/code&gt;.&lt;/p&gt;
                                  &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Argument Reference"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ECUC:ae40034a-47cb-4c70-b3b3-ddd06837faf0"/>
                            <a:da name="REF">
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeCondition</a:v>
                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet/DcmProcessingConditions/DcmModeRule</a:v>
                            </a:da>
                          </v:ref>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Dcm"/>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Dcm can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
