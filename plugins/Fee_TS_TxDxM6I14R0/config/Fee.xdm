<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM6I14R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Fee" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>6.14.13</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2021-07-14T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                     Configuration of the Fee (Flash EEPROM Emulation) module.
                   &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="0"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="2f7df241-8138-4b69-967c-f8a9aba13dc4"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="6"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="14"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="13"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="21"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="UUID" value="8ac7150b-a24d-4781-a4a3-ea27e5939ad8"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="EDITABLE" value="false"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:lst name="FeeBlockConfiguration" type="MAP">
                <a:a name="LABEL" value="Block List"/>
                <a:a name="TAB" value="Block Configuration"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="FeeBlockConfiguration" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         Configuration of block specific parameters for the module.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="52ee246c-7b49-4a83-b958-e56bf3c91251"/>
                  <a:da name="TITLE" value="Block Configuration"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="count(as:modconf(&apos;Fls&apos;)) = 1" 
                        false="The Flash Eeprom Emulation module needs the Flash module."/>
                  <v:var name="FeeBlockNumber" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the Fee block identifier (handle).&lt;/p&gt;

                            &lt;p&gt;&lt;code&gt;0x0000&lt;/code&gt;
                            and &lt;code&gt;0xFFFF&lt;/code&gt; shall not be
                            used for block numbers.&lt;/p&gt;

                            Range:
                            &lt;ul&gt;
                            &lt;li&gt;min = &lt;code&gt;2^NVM_DATA_SELECTION_BITS&lt;/code&gt;&lt;/li&gt;
                            &lt;li&gt;max = &lt;code&gt;0xFFFF - (2^NVM_DATA_SELECTION_BITS-1)&lt;/code&gt;&lt;/li&gt;
                            &lt;/ul&gt;

                            &lt;p&gt;Note: Depending on the number of bits set
                            aside for dataset selection several other block numbers
                            shall also be left out to ease implementation.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Block Number"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                    <a:a name="UUID" 
                         value="1b1d41ab-2a78-455b-b07b-e5bc72a97df6"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="num:i(count(../../*[position() &lt;= (node:current()/../@index)]) + 1)"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;=65534"/>
                        <mt:tst expr="&gt;=1"/>
                      </mt:range>
                      <mt:xpath false="The FeeBlockNumber need to be unique." 
                                expr="text:uniq(../../*/FeeBlockNumber,.)"/>
                    </a:da>
                  </v:var>
                  <v:var name="FeeBlockSize" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the size of the logical block in bytes.&lt;/p&gt;

                            &lt;p&gt;Note: If CRC is configured for the block in the NVRAM manager,
                            the size configured here must be large
                            enough for the number of bytes of block data and
                            the number of bytes needed for
                            the CRC type configured.&lt;/p&gt;

                            &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;At least two flash sectors &lt;code&gt;FlsSector&lt;/code&gt; must be available, in order
                            for the check regarding the total size available in FLS to be enabled.&lt;/li&gt;
                            &lt;li&gt;The total flash space space required shall be less than the total flash
                            size available, which is implemented as the sum of (Flash number of
                            sectors * Flash sector size) for all configured flash sectors.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Block Size"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="749a6b80-b0a9-4e04-8410-b6a33dd3f662"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=65535"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="FeeImmediateData" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines if the block is an immediate block (usage of high
                            priority data).&lt;/p&gt;

                            &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt;:
                            Block contains immediate data.&lt;/li&gt;

                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt;:
                            Block does not contain immediate data.&lt;/li&gt;
                            &lt;/ul&gt;

                            &lt;p&gt;Note: This must be set consistently with the block priority
                            configured in the NVRAM manager. A block with priority
                            value 0 shall be marked as containing immediate data here.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Immediate Data"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="5a44b9ed-3d56-4aa8-9050-0fb2112d2af6"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="FeeNumberOfWriteCycles" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the number of write cycles required for this block.&lt;/p&gt;

                            &lt;p&gt;Note: This value must be set to at least 1.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Number of Write Cycles"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9cf26fe5-96b6-4014-8320-a54f9fd99047"/>
                    <a:da name="DEFAULT" type="XPath" 
                          expr="as:modconf(&apos;Fls&apos;)[1]/FlsPublishedInformation/FlsSpecifiedEraseCycles"/>
                    <a:da name="INVALID" type="Multi">
                      <mt:range>
                        <mt:tst expr="&lt;= 4294967295"/>
                        <mt:tst expr="&gt;= 1"/>
                      </mt:range>
                      <mt:xpath 
                                false="The parameter FlsSpecifiedEraseCycles in the Flash driver module needs to be greater than zero." 
                                expr="as:modconf(&apos;Fls&apos;)[1]/FlsPublishedInformation/FlsSpecifiedEraseCycles &gt;= 1"/>
                    </a:da>
                  </v:var>
                  <v:ref name="FeeDeviceIndex" type="SYMBOLIC-NAME-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                             &lt;p&gt;Defines the flash (Fls) device where the NVRAM block is located.&lt;/p&gt;

                             &lt;p&gt;Note: This information is referenced by
                             the NVRAM manager and
                             the Memory Abstraction Interface to
                             address this logical block.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Flash Device"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="20947ff3-e3d0-44be-94e1-a61bc7ad79bc"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Fls/FlsGeneral"/>
                  </v:ref>
                </v:ctr>
              </v:lst>
              <v:ctr name="FeeDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="FeeDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module Fee.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../FeeGeneral/FeeDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="FeePrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module Fee.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;FeeDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;FeeDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../FeeGeneral/FeeDevErrorDetect = &apos;true&apos;) and (../FeeDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="FeePostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module Fee.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;FeeDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;FeeDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../FeeGeneral/FeeDevErrorDetect = &apos;true&apos;) and (../FeeDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="FeeStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module Fee.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;FeeDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;FeeDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../FeeGeneral/FeeDevErrorDetect = &apos;true&apos;) and (../FeeDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="FeeUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module Fee.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;FeeDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;FeeDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../FeeGeneral/FeeDevErrorDetect = &apos;true&apos;) and (../FeeDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="FeeInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module Fee.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;FeeDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;FeeDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../FeeGeneral/FeeDevErrorDetect = &apos;true&apos;) and (../FeeDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="FeeGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                        Container for general parameters.
                        These parameters are not specific to a block.
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="General Configuration Parameters"/>
                <a:a name="UUID" value="4b720612-a805-41c5-b71c-dbc60e02f0cd"/>
                <a:da name="INVALID" type="XPath" 
                      expr="sum(as:modconf(&apos;Fls&apos;)[1]/FlsConfigSet/*[1]/FlsSectorList/FlsSector/*/FlsNumberOfSectors) &gt;=2 or                                sum(as:modconf(&apos;Fls&apos;)[1]/FlsConfigSet/FlsSectorList/FlsSector/*/FlsNumberOfSectors) &gt;=2" 
                      false="At least two Flash sectors must be available."/>
                <v:var name="FeeBufferSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the size (in bytes) of buffer
                          in RAM, used internally by Fee module.
                          The buffer is used to read
                          the block management information during
                          startup. The same buffer is also used to
                          read and write memory block data from and to
                          flash.&lt;/p&gt;

                          &lt;p&gt;By default a minimum buffer size is
                          chosen so that it can just hold the largest
                          configured memory block (including
                          management data). For configurations with
                          only many small memory blocks this leads to
                          a small buffer size. In this case a
                          manually increased buffer enhances the
                          runtime performance during startup, as more
                          block management information can be read
                          from flash in each flash read call.&lt;/p&gt;

                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;The buffer size must be a multiple of
                            virtual page size.&lt;/li&gt;

                            &lt;li&gt;The buffer size must be greater or
                            equal to the largest block plus an
                            overhead of 2 bytes.&lt;/li&gt;

                            &lt;li&gt;The buffer size must be at least 10
                            bytes or 5 times FeeVirtualPageSize,
                            whichever is greater.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: This parameter is an EB
                          specific extension of the Fee configuration
                          enabling better runtime optimization.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Internal Buffer Size"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" type="XPath" 
                        expr="num:i((((10) div ../FeeVirtualPageSize) * ../FeeVirtualPageSize) + ../FeeVirtualPageSize)"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="not(node:exists(../FeeUseBufferForJobs)) or (../FeeUseBufferForJobs = &apos;false&apos;)"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="FeeUseBufferForJobs" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Assure compatibility with FLS drivers aligned at 4 bytes exclusively&lt;/p&gt;

                          &lt;p&gt;Setting this options shall cause the following:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;The buffer size will be a multiple of
                            virtual page size and 4.&lt;/li&gt;

                            &lt;li&gt;The buffer size must be greater or
                            equal to the largest block.&lt;/li&gt;

                            &lt;li&gt;Any block to be written from an address that is not aligned to 4 bytes 
                            will first be copied to the internal buffer and then sent to FLS&lt;/li&gt;

                            &lt;li&gt;Any block to be read to an address that is not aligned to 4 bytes 
                            will first be copied to the internal buffer and then to NvM&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: This parameter is an EB
                          specific extension of the Fee configuration
                          enabling compatibility addressing with specific Fls implementations.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Fls needs aligned addresses"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="FeeInitializeInLoop" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Initialization will be done in a loop with the OS disabled otherwise the initialization
                          performance will be reduced&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Loop Initialization"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FeeDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the use of development error detection.&lt;/p&gt;

                          &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                          Development error detection enabled.&lt;/li&gt;

                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                          Development error detection disabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Development Error Detection"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="7201da3b-ff31-4125-b67e-741e88bc8186"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FeeIndex" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the instance number of this
                          module. If only one instance
                          is present it shall have the index number 0.&lt;/p&gt;

                          &lt;p&gt;&lt;em&gt; The current implementation only supports one instance
                                  of the Fee module.&lt;/em&gt;&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Module Instance Index"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="72edf451-c215-441a-a02b-3da1836adc01"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=254"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FeeMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the periodic cycle time, in seconds,
                          for calling Fee main function.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="0.01"/>
                </v:var>
                <v:var name="FeeNvmJobEndNotification" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the job end notification
                          routine provided by the upper layer module
                          (&lt;code&gt;NvM_JobEndNotification&lt;/code&gt;).&lt;/p&gt;
                          &lt;p&gt;Note: The Fee will call this function on successful
                          completion of a job request.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="NvM Job End Notification Function"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="9d7877ee-da82-4138-9665-11efc90c4d49"/>
                  <a:da name="DEFAULT" value="NvM_JobEndNotification"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="FeeNvmJobErrorNotification" type="FUNCTION-NAME">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the job error notification
                          routine provided by the upper layer module
                          (&lt;code&gt;NvM_JobErrorNotification&lt;/code&gt;).&lt;/p&gt;
                          &lt;p&gt;Note: The Fee will call this function if an error occurs
                          during the processing of a job request.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="NvM Job Error Notification Function"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ea4a530d-c4ba-4789-8097-6bc9545d1535"/>
                  <a:da name="DEFAULT" value="NvM_JobErrorNotification"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="FeePollingMode" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the polling mode for this module.
                          If polling mode is enabled,
                          the Fee will poll the underlying Fls module for job results.
                          If polling mode is disabled, the Fee shall provide functions
                          that can be called by the underlying Fls module when jobs
                          have completed.&lt;/p&gt;

                          &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                          Polling mode enabled.&lt;/li&gt;

                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                          Polling mode disabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Polling Mode"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="8ee677c2-27e6-4c87-ba03-9c8c8bf1fb21"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos;) and (as:modconf(&apos;Fls&apos;)[1]/FlsGeneral/FlsGetJobResultApi = &apos;false&apos;)" 
                        true="For polling mode ON, Fls_GetJobResult API must be available."/>
                </v:var>
                <v:var name="FeeSetModeSupported" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the SetMode functionality.&lt;/p&gt;

                          &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt;:
                          SetMode functionality supported / code present.&lt;/li&gt;

                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt;:
                          SetMode functionality not supported / code not present.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: This configuration setting has to be consistent with that
                          of all underlying flash device drivers (configuration parameter FlsSetModeApi).&lt;/p&gt;

                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable SetMode Support"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="cbc31f3e-9561-4f68-af53-bf352f5f395c"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FeeVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the
                          &lt;code&gt;Fee_GetVersionInfo()&lt;/code&gt; API function.&lt;/p&gt;

                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                                &lt;code&gt;Fee_GetVersionInfo()&lt;/code&gt;
                                enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                                &lt;code&gt;Fee_GetVersionInfo()&lt;/code&gt;
                                disabled.&lt;/li&gt;
                          &lt;/ul&gt;

                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Version Info API"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="5d59daff-c134-4177-b1fe-c16f14ba83a4"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="FeeVirtualPageSize" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the size in bytes to which
                          logical blocks shall be aligned.&lt;/p&gt;

                          &lt;p&gt;Note: The value shall
                          be greater than 0.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Virtual Page Size"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1a3f7c60-853a-474f-8db1-766ddcc007db"/>
                  <a:da name="DEFAULT" value="4"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=65535"/>
                      <mt:tst expr="&gt;=1"/>
                    </mt:range>
                    <mt:xpath 
                              false="Virtual page size must be an integral multiple of physical page size." 
                              expr="count(as:modconf(&apos;Fls&apos;)[1]/FlsConfigSet/*[1]/FlsSectorList/FlsSector/*[(node:current() mod FlsPageSize) != 0]) = 0 or                                       count(as:modconf(&apos;Fls&apos;)[1]/FlsConfigSet/FlsSectorList/FlsSector/*[(node:current() mod FlsPageSize) != 0]) = 0"/>
                  </a:da>
                </v:var>
                <v:var name="FeeNumberOfSections" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the number of sections to be used by Fee for storing data.&lt;/p&gt;
                          &lt;p&gt;Note: The value shall be greater than 1.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Number of sections"/>
                  <a:a name="OPTIONAL" value="false"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Sections Configuration"/>
                  <a:da name="DEFAULT" value="2"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=254"/>
                      <mt:tst expr="&gt;=2"/>
                    </mt:range>
                    <mt:xpath 
                              true="Number of configured sections does not match number of sections" 
                              expr="(../EnableAutoSectionGeneration = &apos;false&apos;) and ( . != count(../FeeSectionConfiguration/*))"/>
                  </a:da>
                </v:var>
                <v:var name="EnableAutoSectionGeneration" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enable the automatic generation of FEE section configuration&lt;/p&gt;
                          &lt;p&gt;Note: This can only be enabled for 3 or more sections.&lt;/p&gt;
                          &lt;p&gt;Note: If the automatic generation fail because of the FLS sector
                           configuration then the user shall have to manually configure the section generation.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Automatic Section Generation"/>
                  <a:a name="OPTIONAL" value="false"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Sections Configuration"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../FeeNumberOfSections &gt; 1"/>
                  <a:da name="ENABLE" value="true"/>
                </v:var>
                <v:lst name="FeeSectionConfiguration" type="MAP">
                  <a:a name="LABEL" value="Sections List"/>
                  <a:a name="TAB" value="Sections Configuration"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../EnableAutoSectionGeneration = &apos;false&apos;)"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../EnableAutoSectionGeneration = &apos;false&apos;)"/>
                  <a:da name="MIN" value="0"/>
                  <v:ctr name="FeeSectionConfiguration" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                         Configuration of FEE sections layout.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:da name="TITLE" value="Sections Configuration"/>
                    <v:var name="FeeSectionNumber" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the Fee Section identifier (handle).&lt;/p&gt;

                            Range:
                            &lt;ul&gt;
                            &lt;li&gt;min = 1&lt;/li&gt;
                            &lt;li&gt;max = FeeNumberOfSections&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Section Number"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                      <a:da name="DEFAULT" type="XPath" 
                            expr="num:i(count(../../*[position() &lt;= (node:current()/../@index)]) + 1)"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="Multi">
                        <mt:range>
                          <mt:tst expr="&lt;= ../../../FeeNumberOfSections "/>
                          <mt:tst expr="&gt;=1"/>
                        </mt:range>
                      </a:da>
                    </v:var>
                    <v:var name="FeeSectionStartAddress" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the start address of the FEE section.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Section Start Address"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="FeeSectionSize" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;Defines the size in bytes of the FEE section.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Section Size"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:var name="FeeProdErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the use of production error detection.&lt;/p&gt;

                          &lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                          Production error detection enabled.&lt;/li&gt;

                          &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                          Production error detection disabled.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Production Error Detection"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="7607e19e-3b70-4bcf-bf9f-fcd3c40c9120"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FeeEraseCounterApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the &lt;code&gt;Fee_GetEraseCounterValue()&lt;/code&gt; API function.&lt;/p&gt;

                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                              &lt;code&gt;Fee_GetEraseCounterValue()&lt;/code&gt; enabled.&lt;/li&gt;

                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                              &lt;code&gt;Fee_GetEraseCounterValue()&lt;/code&gt; disabled.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Dependencies:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;The initial value of the flash memory erase counter (after flashing
                            the ECU) depends on the flash memory erased value (&lt;code&gt;FlsErasedValue&lt;/code&gt;).&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: Valid values for the flash erase counter are in the range of
                          0x0000 to 0xFFFE.
                          Value 0xFFFF is used to signal an invalid value of the counter.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Erase Counter API"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="d1a1453a-4dca-45ed-b73c-174dfa885c97"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FeeFreezeActivitiesApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the use of the Freeze Activities feature&lt;/p&gt;

                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; = Freeze Activities API can be used&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; = Freeze Activities API can not be used&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: By using this feature the upper layer can stop all the Fee activities, 
                          therefore Fee will not pass any command to Fls until unfreeze.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Freeze All Activities API"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="d1a1453a-4dca-45ed-b73c-174dfa885c97"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FeeCancelSectionEraseApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the &lt;code&gt;Fee_CancelSectionErase()&lt;/code&gt; API function.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                              &lt;code&gt;Fee_CancelSectionErase()&lt;/code&gt; enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                              &lt;code&gt;Fee_CancelSectionErase()&lt;/code&gt; disabled.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Note: This feature may affect the flash memory life span if used excessively.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Cancel Section Erase Api"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="4eb2ac93-c490-430d-b514-9e6ed48ac84f"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(as:modconf(&apos;Fls&apos;)[1]/FlsGeneral/FlsCancelApi = &apos;true&apos;)"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="FeeConsistencyPattern" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the use of a pattern for data consistency&lt;/p&gt;

                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; = pattern for data consistency enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; = pattern for data consistency disabled.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: This feature affects the memory layout.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable pattern for data consistency"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="9f77d0df-2b18-4ae7-ac4a-0ebb63b6d877"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="FeeConsistencyStartPattern" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the use of a pattern for data consistency&lt;/p&gt;

                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; = start pattern for data consistency enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; = start pattern for data consistency disabled.&lt;/li&gt;
                          &lt;/ul&gt;

                          &lt;p&gt;Note: This feature affects the memory layout.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable start pattern for data consistency"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="13fc1942-40d9-4b05-8ea2-e408361afcda"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../FeeConsistencyPattern = &apos;true&apos;)"/>
                </v:var>
                <v:var name="FeeEnableAbortErase" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the use of abort erase functionality.&lt;/p&gt;
                          &lt;p&gt;Any write job for an immediate block will cause 
                           the abort of an erase operation, if in progress. &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; = abort erase enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; = abort erase disabled.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependencies:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;This feature can only be enabled if Fls_Cancel API is available.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable abort erase."/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="13fc1942-40d9-4b05-8ea2-e408361afcda"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(as:modconf(&apos;Fls&apos;)[1]/FlsGeneral/FlsCancelApi = &apos;true&apos;)"/>
                </v:var>
                <v:var name="FeeNumberOfNotConfigBlocks" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines maximum number of not configured blocks that Fee can identify
                          and memorize at init and carry them during runtime through switch mechanism.&lt;/p&gt;
                          
                          &lt;p&gt;Note: If this parameter is set to 0 only configured blocks are
                          considered during the section switch.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Number of not configured blocks to switch"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1accd2d0-de67-11e7-80c1-9a214cf093ae"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:range>
                      <mt:tst expr="&lt;=65535"/>
                      <mt:tst expr="&gt;=0"/>
                    </mt:range>
                  </a:da>
                </v:var>
                <v:var name="FeeDataSizeNotConfiguredBlocks" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the total data size to be considered by Fee for not
                          configured blocks&lt;/p&gt;

                          &lt;p&gt;Note: When configuring this parameter, you shall consider the 
                          block size from upper layer including possible overhead like CRC or
                          static block Id &lt;/p&gt;

                          &lt;p&gt;Additional flash for Fee block management (info and alignment)
                          will be automatically reserved for the maximum number of not configured blocks. 
                          For an increased efficiency of allocation, in case less blocks than maximum are used, 
                          the size reserved for the management of the not used blocks can be used for data,
                          but no block is allowed to be bigger than this parameter.
                          &lt;/p&gt; 
                          &lt;p&gt;For details about flash memory allocation, please refer to the user guide.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Total  data size required for not configured blocks"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f6422c1a-de68-11e7-80c1-9a214cf093ae"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../FeeNumberOfNotConfigBlocks &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(../FeeNumberOfNotConfigBlocks &gt; . )" 
                        true="User data size shall be greater or equal to number of not configured blocks."/>
                </v:var>
                <v:var name="FeeWriteCustomApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the &lt;code&gt;Fee_WriteCustom()&lt;/code&gt; API function.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                              &lt;code&gt;Fee_WriteCustom()&lt;/code&gt; enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                              &lt;code&gt;Fee_WriteCustom()&lt;/code&gt; disabled.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependencies:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;FeeNumberOfNotConfigBlocks is different than 0.&lt;/li&gt;
                            &lt;li&gt;aligned addresses setting is off or there is one configured block 
                                with size greater or equal to the total size of not configured blocks
                            &lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable FeeWriteCustom API"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1ff46c8d-17a2-4cb8-a69b-a369065ed912"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../FeeNumberOfNotConfigBlocks &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr=" . =&apos;true&apos;                                      and                                     node:exists(../FeeUseBufferForJobs) and (../FeeUseBufferForJobs = &apos;true&apos;)                                     and                                     node:exists(../FeeDataSizeNotConfiguredBlocks)                                      and                                     node:exists(../../FeeBlockConfiguration)                                     and                                     (count(../../FeeBlockConfiguration/*) &gt; 1)                                     and                                     node:exists(../FeeNumberOfNotConfigBlocks)                                     and                                      ( num:integer(num:max(../../FeeBlockConfiguration/*/FeeBlockSize))                                       &lt;                                        num:integer(../FeeDataSizeNotConfiguredBlocks)                                      )" 
                        true="Custom blocks write and aligned Fls addresses are compatible only if there is at least one configured block with size greater or equal to the total data size of not configured blocks"/>
                </v:var>
                <v:var name="FeeReadCustomApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the &lt;code&gt;Fee_ReadCustom()&lt;/code&gt; API function.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                              &lt;code&gt;Fee_ReadCustom()&lt;/code&gt; enabled.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                              &lt;code&gt;Fee_ReadCustom()&lt;/code&gt; disabled.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Dependencies:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;FeeNumberOfNotConfigBlocks is different than 0.&lt;/li&gt;
                            &lt;li&gt;aligned addresses setting is off or there is one configured block 
                                with size greater or equal to the total size of not configured blocks
                            &lt;/li&gt;
                            
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable FeeReadCustom API"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="72198ca1-ed00-47bf-898b-ac6038d00275"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../FeeNumberOfNotConfigBlocks &gt; 0)"/>
                  <a:da name="INVALID" type="XPath" 
                        expr=" . =&apos;true&apos;                                      and                                     node:exists(../FeeUseBufferForJobs) and (../FeeUseBufferForJobs = &apos;true&apos;)                                     and                                     node:exists(../FeeDataSizeNotConfiguredBlocks)                                      and                                     node:exists(../../FeeBlockConfiguration)                                     and                                     (count(../../FeeBlockConfiguration/*) &gt; 1)                                     and                                     node:exists(../FeeNumberOfNotConfigBlocks)                                     and                                     ( num:integer(num:max(../../FeeBlockConfiguration/*/FeeBlockSize))                                       &lt;                                        num:integer(../FeeDataSizeNotConfiguredBlocks)                                      )" 
                        true="Custom blocks read and aligned Fls addresses are compatible only if there is at least one configured block with size greater or equal to the total data size of not configured blocks"/>
                </v:var>
                <v:ref name="FeeCriticalBlock" type="SYMBOLIC-NAME-REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                                 Reference to the FEE block that shall contain critical data.
                             &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Reference to Fee Emergency Block"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="7b5b27e8-d13d-467b-b8b1-a862d6f7c34f"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(as:modconf(&apos;Fls&apos;)[1]/FlsGeneral/FlsCancelApi = &apos;true&apos;)"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(node:ref(.)/FeeImmediateData = &apos;false&apos;) or (. = &apos;&apos;) or (../FeeConsistencyPattern = &apos;true&apos;)" 
                        true="The critical block must be also immediate"/>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Fee/FeeBlockConfiguration"/>
                </v:ref>
                <v:var name="FeeDynamicBlockLength" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables the functionality of reading the blocks that have the length reconfigured.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                              &lt;code&gt;Fee&lt;/code&gt; will read the block with the older length.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                              &lt;code&gt;Fee&lt;/code&gt; will not read the block with the older length.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable DynamicBlockLength"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="72198ca1-ed00-47bf-898b-ac6038d00275"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="FeeEnableSmallSectionSize" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Enables configuring Sections with size less than the total size of the Fee blocks configured
                             in case 4 or more sections are configured.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;true&lt;/code&gt; =
                              &lt;code&gt;Fee&lt;/code&gt; will allow configuring sections with size less than the total size of the Blocks.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;false&lt;/code&gt; =
                              &lt;code&gt;Fee&lt;/code&gt; will not allow configuring sections with size less than the total size of the Blocks.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Small Size Sections"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1ac9e365-5c3b-48f8-b06d-dddf88eaf3c3"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="INVALID" type="XPath" 
                        expr=" (. =&apos;true&apos;)                                      and                                     (../FeeNumberOfSections &lt; 4)" 
                        true="For this to be configured at least 4 Sections have to be configured"/>
                </v:var>
              </v:ctr>
              <v:ctr name="FeeDemEventParameterRefs" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                        &lt;p&gt;Container for the references to DemEventParameter elements
                        which shall be invoked using the API &lt;code&gt;Dem_ReportErrorStatus&lt;/code&gt; API
                        in case the corresponding error occurs. The &lt;code&gt;EventId&lt;/code&gt; is taken
                        from the referenced &lt;code&gt;DemEventParameter&lt;/code&gt;&apos;s
                        &lt;code&gt; DemEventId&lt;/code&gt; value. The standardized errors are provided
                        in the container and can be extended by vendor specific error references.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Dem Event Parameter References"/>
                <a:a name="TAB" value="Production Errors"/>
                <a:a name="UUID" value="b45fd847-845c-4cc5-9b2f-b63346526e21"/>
                <a:da name="ENABLE" type="XPath" 
                      expr="(../FeeGeneral/FeeProdErrorDetect =&apos;true&apos;)"/>
                <v:ref name="FEE_E_FLASH_ACCESSIBLE" 
                       type="SYMBOLIC-NAME-REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the &lt;code&gt;DemEventParameter&lt;/code&gt; which shall be issued
                          when the error &lt;code&gt;FEE_E_FLASH_ACCESSIBLE&lt;/code&gt; has occurred.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;Reporting of production errors shall be enabled by configuration
                          (&lt;code&gt;FeeProdErrorDetect&lt;/code&gt; shall be enabled).&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Further notes:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Activation: Thrown, during initialization or during section switch
                            if the section status cannot be read or written or a section cannot be erased.&lt;/li&gt;
                            &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                            &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                            &lt;li&gt;Rate of diagnostic checks: Checked on each module initialization or
                            during each section switch that takes place.&lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Flash Accessible Event Parameter"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="593e5045-bfd8-4e69-9fc7-ae66ade0ad27"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                </v:ref>
                <v:ref name="FEE_E_DATA_RECOVERED" 
                       type="SYMBOLIC-NAME-REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the &lt;code&gt;DemEventParameter&lt;/code&gt; which shall be issued
                          when the error &lt;code&gt;FEE_E_FLASH_ACCESSIBLE&lt;/code&gt; has occurred.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;
                          &lt;li&gt;Reporting of production errors shall be enabled by configuration
                          (&lt;code&gt;FeeProdErrorDetect&lt;/code&gt; shall be enabled).&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;p&gt;Further notes:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Activation: Thrown, during startup if the user data from active section
                            cannot be used or active section cannot be determined because of an unexpected
                            section status combination and user data is recovered from the inactive section.&lt;/li&gt;
                            &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                            &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                            &lt;li&gt;Rate of diagnostic checks: Checked during each startup of the module.&lt;/li&gt;
                          &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Flash User Data Recovered"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="d0cb3bba-4a44-4942-9281-8983e1e5ac0c"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                </v:ref>
              </v:ctr>
              <v:ctr name="FeePublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                          &lt;p&gt;Additional published parameters not covered by
                          CommonPublishedInformation container.&lt;/p&gt;
                          &lt;p&gt;Note that these parameters do not have
                          any configuration class setting,
                          since they are published information.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Fee Published Information"/>
                <a:a name="UUID" value="440bb5ec-c9fb-4501-9ac2-41cc3706b15d"/>
                <v:var name="FeeBlockOverhead" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines management overhead per logical block in bytes.&lt;/p&gt;

                          &lt;p&gt;Note: The formula to calculate Block
                          overhead is, the bytes required for aligning
                          the configured size of block along with 2 bytes
                          (for management information) to virtual page
                          size + 6 bytes(for management information)
                          aligned to virtual page size.&lt;/p&gt;

                          &lt;p&gt;&lt;em&gt;This parameter is not used by the
                          implementation.&lt;/em&gt;&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Block Management Overhead"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="1d7831b0-32df-46d3-893d-d868e79eacd7"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
                <v:var name="FeeMaximumBlockingTime" type="FLOAT_LABEL">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the maximum time the FEE module&apos;s
                          API routines shall be blocked
                          (delayed) by internal operations.&lt;/p&gt;

                          &lt;p&gt;Note: Internal operations in this
                          case means operations that are not explicitly
                          invoked from the upper layer module but need to be
                          handled for proper operation of this module or the
                          underlying memory driver.&lt;/p&gt;

                          &lt;p&gt;unit: milliseconds.
                          Configuration generators may need to convert this
                          value into a hardware specific representation
                          (e.g. timer ticks).&lt;/p&gt;

                          &lt;p&gt;&lt;em&gt;This parameter is not used by the
                          implementation.&lt;/em&gt;&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Maximum Blocking Time"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="36c6a64f-add0-4646-ac60-d968ca031f42"/>
                  <a:da name="DEFAULT" value="0.0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=Infinity"/>
                    <a:tst expr="&gt;=0.0"/>
                  </a:da>
                </v:var>
                <v:var name="FeePageOverhead" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the management overhead per page in bytes.&lt;/p&gt;

                          &lt;p&gt;Note: There is no overhead per virtual page
                          but an overhead per block and per section.&lt;/p&gt;

                          &lt;p&gt;&lt;em&gt;This parameter is not used internally by the
                          current implementation.&lt;/em&gt;&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Page Management Overhead"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e1c27cef-a77f-4ab7-977d-8f4558ab7b65"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Fee"/>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Fee can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
          <d:chc name="myEcuParameterDefinition" type="AR-ELEMENT" 
                 value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_TxDxM6I14R0/Fee"/>
              </d:lst>
            </d:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
