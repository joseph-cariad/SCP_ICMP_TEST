<?xml version='1.0'?>
<datamodel version="3.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_T19D1M6I0R0_AS40" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Os" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.2.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2011-11-09T11:36:22Z</ad:DATE>
                    </ad:DOC-REVISION>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>6.0.302</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>Elektrobit Automotive GmbH</ad:ISSUED-BY>
                      <ad:DATE>2018-01-10T23:59:59Z</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="ECUC:8f6994c0-a4c8-48b9-bade-db9a5b9c2474"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="4"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="6"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="302"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the Os can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="UUID" value="2494cf64-6f49-4b43-9a5b-58e0b7d1238f"/>
                <a:a name="__ORIGIN" value="AUTOSAR"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:lst name="OsAlarm" type="MAP">
                <a:a name="COLUMNS" value="OsAlarmCounterRef"/>
                <v:ctr name="OsAlarm" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          An &lt;b&gt;OsAlarm&lt;/b&gt; may be used to asynchronously inform or activate a specific task.
                          It is possible to start alarms automatically at system start-up depending on the application mode.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="F5BF116F-A0A2-4a8b-9F6A-1B023E6D9A13"/>
                  <v:lst name="OsAlarmAccessingApplication">
                    <v:ref name="OsAlarmAccessingApplication" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            Reference to applications which have an access to this object.
                            The objects of referenced OsAplication can access and change the state of current OsAlarm by calling the system service APIs.
                            For example this alarm can be started, stopped or inquired about its state by the objects of referenced OsApplication.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="d97f0119-74e7-4abf-a5e9-5e93a36abfef"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                    </v:ref>
                  </v:lst>
                  <v:ref name="OsAlarmCounterRef" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            The &lt;b&gt;OsAlarmCounterRef&lt;/b&gt; attribute specifies the Counter with which the Alarm is associated.
                            Each Alarm must be associated with exactly one Counter.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="83928b76-f36c-4e67-b174-1d66931befa5"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsCounter"/>
                  </v:ref>
                  <v:chc name="OsAlarmAction" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                     The &lt;b&gt;OsAlarmAction&lt;/b&gt; attribute is a parametrized enum value specifying what shall happen when the alarm expires.
                     The values are:
                     &lt;ul&gt;
                      &lt;li&gt;ACTIVATETASK&lt;/li&gt;
                      &lt;li&gt;SETEVENT&lt;/li&gt;
                      &lt;li&gt;ALARMCALLBACK&lt;/li&gt;
                      &lt;li&gt;INCREMENTCOUNTER&lt;/li&gt;
                    &lt;/ul&gt;
                     &lt;br/&gt;
                    The parameters are:
                    &lt;ul&gt;
                      &lt;li&gt;TASK: The task that shall be activated or have an event set&lt;/li&gt;
                      &lt;li&gt;EVENT: The event that shall be set for the task&lt;/li&gt;
                      &lt;li&gt;ALARMCALLBACKNAME:the name of the alarm callback function to be called.
                      The function should be declared using the &lt;em&gt;ALARMCALLBACK(name)&lt;/em&gt; API.  &lt;/li&gt;
                    &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="c7c75183-4996-4587-8219-4fed8ceb8fc2"/>
                    <v:ctr name="OsAlarmActivateTask" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                           value="EN: This container specifies the parameters to activate a task."/>
                      <a:a name="UUID" 
                           value="63621e15-6c36-4d8e-8e3c-15f45442ab88"/>
                      <v:ref name="OsAlarmActivateTaskRef" type="REFERENCE">
                        <a:a name="DESC" 
                             value="EN: Reference to the task that will be activated by that alarm action"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="143e3581-9884-4ee7-b95f-b5862ecca4c0"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsTask"/>
                      </v:ref>
                    </v:ctr>
                    <v:ctr name="OsAlarmCallback" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                           value="EN: This container specifies the parameters to call a callback OS alarm action."/>
                      <a:a name="UUID" 
                           value="d8d19441-4404-4fb9-9ef7-5211c3deedae"/>
                      <v:var name="OsAlarmCallbackName" type="FUNCTION-NAME">
                        <a:a name="DESC" 
                             value="EN: Name of the function that is called when this alarm callback is triggered."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="8ff36dd0-7490-492a-a898-9f3e7d024dc3"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                      </v:var>
                    </v:ctr>
                    <v:ctr name="OsAlarmIncrementCounter" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                           value="EN: This container specifies the parameters to increment a counter."/>
                      <a:a name="UUID" 
                           value="c6ecc921-c4d0-4534-8641-006d2297794f"/>
                      <v:ref name="OsAlarmIncrementCounterRef" type="REFERENCE">
                        <a:a name="DESC" 
                             value="EN: Reference to the counter that will be incremented by that alarm action"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="e77893d5-69fe-4c36-bb2f-0fd2aa1e845c"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsCounter"/>
                      </v:ref>
                    </v:ctr>
                    <v:ctr name="OsAlarmSetEvent" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                           value="EN: This container specifies the parameters to set an event"/>
                      <a:a name="UUID" 
                           value="3a7c600e-d74d-4f73-9415-1badd5debbfc"/>
                      <v:ref name="OsAlarmSetEventRef" type="REFERENCE">
                        <a:a name="DESC" 
                             value="EN: Reference to the event that will be set by that alarm action"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="690b57a5-2b82-4d1f-b3cf-c1c0f947af6a"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsEvent"/>
                      </v:ref>
                      <v:ref name="OsAlarmSetEventTaskRef" type="REFERENCE">
                        <a:a name="DESC" 
                             value="EN: Reference to the task that will be activated by that event"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="1eff658e-8fe6-4737-8eff-20d772e9833d"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsTask"/>
                      </v:ref>
                    </v:ctr>
                  </v:chc>
                  <v:ctr name="OsAlarmAutostart" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsAlarmAutostart&lt;/b&gt; is a boolean attribute whose value specifies whether the alarm shall be started automatically when
                            the kernel starts. If the value is &lt;b&gt;TRUE&lt;/b&gt;, the &lt;b&gt;OsAlarmAppModeRef&lt;/b&gt; sub-attribute specifies in which application modes the task
                            shall be automatically started, and the sub-attributes &lt;b&gt;OsAlarmAlarmTime&lt;/b&gt; and
                            &lt;b&gt;OsAlarmCycleTime&lt;/b&gt; specify the first and subsequent relative values of the counter at which the alarm shall
                            expire.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="74738ace-8d8e-487b-8e4a-05524a0463cf"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:var name="OsAlarmAlarmTime" type="INTEGER">
                      <a:a name="DESC" 
                           value="EN: The relative or absolute tick value when the alarm expires for the first time. Note that for an alarm which is RELATIVE the value must be at bigger than 0."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="31c4fcc2-f5f7-4d65-a0ca-377a625f51b6"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsAlarmAutostartType" type="ENUMERATION">
                      <a:a name="DESC" 
                           value="EN: This specifies the type of autostart for the alarm.."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ff032e88-22d4-4ed4-9ab8-dd682366e225"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="RELATIVE"/>
                      <a:da name="RANGE">
                        <a:v>ABSOLUTE</a:v>
                        <a:v>RELATIVE</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="OsAlarmCycleTime" type="INTEGER">
                      <a:a name="DESC" 
                           value="EN: Cycle time of a cyclic alarm in ticks. If the value is 0 than the alarm is not cyclic."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="770b8463-3504-4606-bbbb-03162b2b8537"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:lst name="OsAlarmAppModeRef">
                      <a:da name="MIN" value="1"/>
                      <v:ref name="OsAlarmAppModeRef" type="REFERENCE">
                        <a:a name="DESC" 
                             value="EN: Reference to the application modes for which the AUTOSTART shall be performed"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="df1d431e-c520-41b7-a19f-50630370be42"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsAppMode"/>
                      </v:ref>
                    </v:lst>
                    <v:var name="OsTimeUnit" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>EN: 
                         &lt;html&gt;&lt;b&gt;OsTimeUnit&lt;/b&gt; contains the time unit type used for this alarm.&lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:d3e95a4b-a4cb-4d8f-96fb-02eea69014d3"/>
                      <a:da name="DEFAULT" value="TICKS"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="RANGE">
                        <a:v>NANOSECONDS</a:v>
                        <a:v>TICKS</a:v>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <v:lst name="OsAppMode" type="MAP">
                <a:da name="MAX" value="255"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="OsAppMode" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN:
                      
                        &lt;html&gt;
                          &lt;b&gt;OsAppMode&lt;/b&gt; objects are used to define which tasks, alarms, etc. will be started automatically when the kernel is
                          first started. In a valid AUTOSAR OS configuration the &lt;b&gt;CPU&lt;/b&gt; must contain at least one &lt;b&gt;OsAppMode&lt;/b&gt; object.
                          Plain OIL defines no attributes for the APPMODE object.
                          An OsAppMode called OSDEFAULTAPPMODE must always be present for OSEK compatibility. [source: OSEK OIL Spec. 2.5]
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" 
                       value="ECUC:44b2af00-f4af-494b-ab23-6c4bd5ea9ca7"/>
                  <v:lst name="OsAlarmRef">
                    <v:ref name="OsAlarmRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN:
                          
                        &lt;html&gt;Optional references to autostarted OS alarms. This configuration parameter is not supported by AutoCore OS,
                        use the application mode reference in the alarm object instead.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="ECUC:c3482777-1ece-41b2-b304-ef4cd3255106"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsAlarm"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsScheduleTableRef">
                    <v:ref name="OsScheduleTableRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN:
                          
                        &lt;html&gt;Optional references to autostarted OS schedule tables. This configuration parameter is not supported by AutoCore OS,
                        use the application mode reference in the schedule table object instead.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="ECUC:ae3ffd27-9ce6-4bd7-acba-b9d9dde919c6"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsScheduleTable"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsTaskRef">
                    <v:ref name="OsTaskRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN:
                          
                        &lt;html&gt;Optional references to autostarted OS tasks. This configuration parameter is not supported by AutoCore OS,
                        use the application mode reference in the task object instead.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="ECUC:eb28ccef-3b91-4a35-93f3-366901fbba83"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsTask"/>
                    </v:ref>
                  </v:lst>
                </v:ctr>
              </v:lst>
              <v:lst name="OsApplication" type="MAP">
                <a:a name="COLUMNS" value="OsTrusted"/>
                <v:ctr name="OsApplication" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        An &lt;b&gt;AUTOSAR OS&lt;/b&gt; must be capable of supporting a collection of OS objects (tasks, interrupts, alarms, hooks etc.)
                        that form a cohesive functional unit.&lt;br/&gt;
                        This collection of objects is termed an OS-Application.&lt;br/&gt;
                        All objects which belong to the same OS-Application have access to each other.&lt;br/&gt;
                        Access means to allow to use these objects within API services.&lt;br/&gt;
                        Access by other applications can be granted separately.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="3FE22410-F7C0-4ae4-A89A-E6D8C2861115"/>
                  <v:var name="OsTrusted" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsTrusted&lt;/b&gt; is a boolean attribute that specifies whether Tasks, ISRs etc. associated with the application are to
                            run with the kernel&apos;s Privileged or Non-Privileged protection parameters. Privileged applications have access
                            to more of the CPU&apos;s resources than non-privileged applications. When &lt;b&gt;OsTrusted&lt;/b&gt; is &lt;b&gt;TRUE&lt;/b&gt;, the &lt;b&gt;TRUSTED_FUNCTION&lt;/b&gt;
                            sub-attributes are available.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9fc5b534-21d9-45f8-8ce0-d89df031b841"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:lst name="OsAppAlarmRef">
                    <v:ref name="OsAppAlarmRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: Specifies the OsAlarms that belong to the OsApplication."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="fc064bc5-9920-4d1d-99c5-fde15b3c6e40"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsAlarm"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsAppCounterRef">
                    <v:ref name="OsAppCounterRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: References the OsCounters that belong to the OsApplication."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="384736b5-1377-4faa-8fb7-379bca7faccc"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsCounter"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsAppIsrRef">
                    <v:ref name="OsAppIsrRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: references which OsIsrs belong to the OsApplication"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="727ae16f-52c6-48f0-9f9e-4a7225cbefd7"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsIsr"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsAppResourceRef">
                    <v:ref name="OsAppResourceRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: References the OsResources that belong to the OsApplication."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="c96f0726-8a3a-4699-ab86-28748b5217bd"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsResource"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsAppScheduleTableRef">
                    <v:ref name="OsAppScheduleTableRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: References the OsScheduleTables that belong to the OsApplication."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="a30b8c63-498b-46a6-936f-94b571f7fa87"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsScheduleTable"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsAppTaskRef">
                    <v:ref name="OsAppTaskRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: references which OsTasks belong to the OsApplication"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="4e5e38c3-1943-484e-9b99-1e225e2c10d9"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsTask"/>
                    </v:ref>
                  </v:lst>
                  <v:ref name="OsRestartTask" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            If it is set &lt;b&gt;OsRestartTask&lt;/b&gt; specifies which task shall be automatically activated when the application
                            is killed and restarted after a serious error.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="08e453ec-2335-49c6-8438-4aae348abd51"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsTask"/>
                  </v:ref>
                  <v:ctr name="OsApplicationHooks" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                         &lt;html&gt;This container structures the OS-Application-specific hooks.&lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="504B9C2F-8C8F-4650-878E-FBAA905CD5C6"/>
                    <v:var name="OsAppErrorHook" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              &lt;b&gt;OsAppErrorHook&lt;/b&gt; is a boolean attribute that specifies whether this application has a private error-hook function.
                              If the value is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void ErrorHook_&lt;application-name&gt;(StatusType
                              errorcode)&lt;/em&gt; instead of the global error hook whenever an error is detected in the application, unless the error
                              was caused within an error hook.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="b2c4609f-d127-45b9-b400-9de88dfcaf19"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="false"/>
                      <a:da name="WARNING" type="XPath" 
                            expr="(. = &apos;true&apos;) and (../../../../OsOS/OsAutosarCustomization/OsErrorHandling = &apos;MINIMAL&apos;)" 
                            true="Application error hook is enabled but OsErrorHandling set to MINIMAL"/>
                    </v:var>
                    <v:var name="OsAppShutdownHook" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>EN: 
                           &lt;html&gt;
                             &lt;b&gt;OsAppShutdownHook&lt;/b&gt; is a boolean attribute that specifies whether this application has a private shutdown-hook
                             function.
                             If the value is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void ShutdownHook_&lt;applicationname&gt;(StatusType errorcode)&lt;/em&gt;
                             when the system has been shut down, before calling the global shutdown
                             hook.
                             The parameter is the value of the error code passed to &lt;em&gt;ShutdownOS()&lt;/em&gt;
                             Application-specific startup hooks must always return because the order of calling is not defined.
                             Any final action such as restarting the system should take place in the global shutdown hook.
                           &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="60f0c60d-a495-44b0-bc5f-74b0609ed6fa"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:var name="OsAppStartupHook" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            The &lt;b&gt;OsAppStartupHook&lt;/b&gt; attribute specifies whether the application has a private startup-hook function.
                            If the value is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void StartupHook_&lt;application-name&gt;(void)&lt;/em&gt; immediately
                            before starting the scheduler, after calling the global startup hook.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="e87f6f96-6806-42c9-9d1c-fc8b6c5ccdaf"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:var name="OsAppErrorHookStack" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                         &lt;html&gt;&lt;b&gt;OsAppErrorHookStack&lt;/b&gt; defines the stack size of the error hook in
                         bytes.&lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="UUID" 
                           value="F7E7375A-54FB-4234-A9AA-257A4B66B83F"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=2000000000"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsAppShutdownHookStack" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                         &lt;html&gt;&lt;b&gt;OsAppShutdownHookStack&lt;/b&gt; defines the stack size of the shutdown hook in
                         bytes.&lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="UUID" 
                           value="3F9DF506-F839-4F0B-B91D-8F85B733DBB9"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=2000000000"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsAppStartupHookStack" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                         &lt;html&gt;&lt;b&gt;OsAppStartupHookStack&lt;/b&gt; defines the stack size of the startup hook in
                         bytes.&lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="UUID" 
                           value="6C930286-F65A-471F-880E-67FD78346EF3"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=2000000000"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                  <v:lst name="OsApplicationTrustedFunction" type="MAP">
                    <v:ctr name="OsApplicationTrustedFunction" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              The &lt;b&gt;OsApplicationTrustedFunction&lt;/b&gt; attribute is a list of &lt;b&gt;BOOLEAN&lt;/b&gt; attributes specifying trusted functions belonging to
                              this application. If the value is &lt;b&gt;TRUE&lt;/b&gt;, further sub-attributes specify the &lt;b&gt;NAME&lt;/b&gt; of the trusted function. There are
                              further implementation-specific sub-attributes. Trusted functions can be called by other applications using the
                              &lt;em&gt;CallTrustedFunction&lt;/em&gt; API.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="b2eba9bb-29de-437f-bd75-e249f356ff15"/>
                      <v:var name="OsTrustedFunctionName" type="FUNCTION-NAME">
                        <a:a name="DESC" 
                             value="EN: Trusted function (as part of a trusted OS-Application) available to other OS-Applications. This also supersedes the OSEK OIL attribute TRUSTED in APPLICATION because the optionality of this parameter is describing that already."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="11d0bf4b-c57b-4f81-af93-f44314f04497"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                      </v:var>
                      <v:var name="OsTrustedFunctionStacksize" type="INTEGER">
                        <a:a name="DESC">
                          <a:v>EN: 
                              &lt;html&gt;
                                 This attribute specifies the amount of stack required by the trusted function in bytes.

                                 &lt;br/&gt;&lt;br/&gt;
                                 &lt;b&gt;EB tresos AutoCore OS:&lt;/b&gt;&lt;br/&gt;
                                 The kernel checks that the calling task or ISR has sufficient stack remaining before calling the trusted function.&lt;br/&gt;
                                 &lt;b&gt;It is vitally important that the stack size for trusted functions is set correctly. Too small a value
                                 means that the trusted function could overflow the task or ISR&apos;s stack region, and since it is trusted
                                 the overflow will not be caught by the memory protection mechanisms.&lt;/b&gt;

                              &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="UUID" 
                             value="CFD02BA6-7CA5-431E-969C-2A582743A1A5"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=2000000000"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:lst>
                  <v:var name="OsApplicationCoreAssignment" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;p&gt;The logical core ID of the core to which the OsApplication is bound.&lt;/p&gt;
                            &lt;p&gt;If you use the advanced logical core ID configuration (OsUseLogicalCoreIDs enabled), ensure that OSApplicationCoreAssignment values are in the range specified by OsLogicalCoreId.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="2aa0efb7-eb33-4a93-ba2c-f282e2ceaab4"/>
                    <a:da name="EDITABLE" value="true"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr=". &lt; 0" true="Core Id may not be negative"/>
                      <a:tst expr=". &gt;= ../../../OsOS/OsMaxNumberOfCores" 
                             true="Core Id invalid (must be less than the maximum number of cores)."/>
                    </a:da>
                  </v:var>
                  <v:ref name="OsAppEcucPartitionRef" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            Denotes which &quot;EcucPartition&quot; is implemented by this &quot;OSApplication&quot;.
                            &lt;br/&gt;
                            &lt;b&gt;This reference is not used by the OS generator.&lt;/b&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="8fef9170-a37c-4541-8bf4-7006d62bd73f"/>
                    <a:da name="EDITABLE" value="true"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                  </v:ref>
                </v:ctr>
              </v:lst>
              <v:lst name="OsCounter" type="MAP">
                <a:a name="COLUMNS">
                  <a:v>OsCounterMaxAllowedValue</a:v>
                  <a:v>OsCounterMinCycle</a:v>
                  <a:v>OsCounterTicksPerBase</a:v>
                  <a:v>OsCounterType</a:v>
                </a:a>
                <v:ctr name="OsCounter" type="IDENTIFIABLE">
                  <a:a name="DESC" 
                       value="EN: A COUNTER is the mechanism by which Alarms are triggered."/>
                  <a:a name="UUID" value="027F4979-A1D4-4ba0-A615-19A5A8081073"/>
                  <v:var name="OsCounterMaxAllowedValue" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: Maximum possible allowed value of the system counter in ticks.                          When the counter reaches this value, the next advancement will cause it to restart from zero."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="6b83a3cd-85dc-43b5-8e60-4a81ec3b5ced"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4294967295"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsCounterMinCycle" type="INTEGER">
                    <a:a name="DESC" 
                         value="EN: The MINCYCLE attribute specifies the minimum allowed number of counter ticks for a cyclic alarm linked to the counter."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="daa966d2-afd2-4a7f-9733-63979125a221"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(. &lt; 1) or (. &gt; ../OsCounterMaxAllowedValue)" 
                          true="OsCounterMinCycle &lt;1 or &gt;OsCounterMaxAllowedValue."/>
                  </v:var>
                  <v:var name="OsCounterTicksPerBase" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsCounterTicksPerBase&lt;/b&gt; is a UINT32 value that specifies how many ticks of the counter represent a known unit of
                            counting. The value of this attribute is not used by the kernel, but is made available for application purposes.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="0042afa7-73d9-49dc-8455-cdcfe8ab2706"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4294967295"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsCounterType" type="ENUMERATION">
                    <a:a name="DESC" 
                         value="EN: This parameter contains the natural type or unit of the counter."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="06823187-1c2b-468b-a1c8-92e74c43e3ec"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="RANGE">
                      <a:v>HARDWARE</a:v>
                      <a:v>SOFTWARE</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsCounterWindowsTimer" type="ENUMERATION">
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="DCE:7c05ef06-51b8-4930-80f4-6f13674a3514"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="../OsCounterType=&apos;HARDWARE&apos;"/>
                    <a:da name="RANGE">
                      <a:v>TIMER0</a:v>
                      <a:v>TIMER1</a:v>
                      <a:v>TIMER2</a:v>
                      <a:v>TIMER3</a:v>
                      <a:v>TSIM_00</a:v>
                      <a:v>TSIM_01</a:v>
                      <a:v>TSIM_10</a:v>
                      <a:v>TSIM_11</a:v>
                    </a:da>
                  </v:var>
                  <v:lst name="OsCounterAccessingApplication">
                    <v:ref name="OsCounterAccessingApplication" 
                           type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            Reference to applications which have an access to this object.
                            The objects of referenced OsAplication can access and change the state of current OsCounter by calling the system service APIs.
                            For example the value of OsCounter can be read or incremented by the objects of referenced OsApplication.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="0ffabaee-22ba-4e79-90bf-897ff9baefac"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                    </v:ref>
                  </v:lst>
                  <v:var name="OsWindowsIrqLevel" type="INTEGER">
                    <a:a name="DESC" 
                         value="Select the relative interrupt level of the timer"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="D3E95A4B-A4CB-4d8f-96FB-12EEA69014D3"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="../OsCounterType=&apos;HARDWARE&apos;"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=32"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:lst name="OsTimeConstant" type="MAP">
                    <v:ctr name="OsTimeConstant" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            Allows the user to define constants which can be e.g. used to compare time values with timer tick values.&lt;br /&gt;
                            A time value will be converted to a timer tick value during generation and can be accessed later on via its OsConstName.
                            The conversion is done by rounding time values to the nearest fitting tick value.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="UUID" 
                           value="f3393eae-b0c6-44b7-87fd-1079dd4fb152"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(../../OsCounterType != &apos;SOFTWARE&apos;) or node:exists(../../OsSecondsPerTick)" 
                            false="OsCounterType set to SOFTWARE but OsSecondsPerTick not configured"/>
                      <v:var name="OsConstName" type="STRING">
                        <a:a name="DESC" 
                             value="EN: The name which is accessed by the application to get the OsTimeValue of the constant."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="56771f40-d06d-4039-8d14-2b1560948940"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                      </v:var>
                      <v:var name="OsTimeValue" type="FLOAT">
                        <a:a name="DESC" 
                             value="EN: This parameter contains the value of the constant in seconds."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="718c9ae4-2512-49c5-80d7-b27ac344e16a"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=86400.0"/>
                          <a:tst expr="&gt;=0.0"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:lst>
                  <v:ctr name="OsDriver" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          This Container contains the information how a software counter can be incremented automatically
                          without specifying an alarm.&lt;br /&gt;
                          This configuration is only valid if the parameter OsCounterType is set to SOFTWARE.
                          If the container is disabled, the Os manages the counter and increments it, if configured
                          by the user, with an alarm.&lt;br /&gt;
                          If the container is enabled the OS can either use the Autosar GPT driver or a hardware
                          module to automatically increment the counter. For the former variant, the user has to supply
                          the GPT channel. For the latter, a hardware module has to be specified.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="3f64ecc2-bd5f-4a4f-8586-c3cfbd23b108"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="../OsCounterType != &apos;SOFTWARE&apos;" 
                          true="OsCounterType must be &apos;SOFTWARE&apos; if OsDriver is enabled."/>
                    <v:ref name="OsGptChannelRef" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                        &lt;html&gt;
                          Reference to the GPT channel.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="8e0975d2-5e06-4e85-93a9-6ab6a344461d"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Gpt/GptChannelConfigSet/GptChannelConfiguration"/>
                    </v:ref>
                    <v:ctr name="OsHwIncrementer" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              &lt;b&gt;OsHwIncrementer&lt;/b&gt; specifies a hardware module that automatically increments the software counter.
                              Specify the period of the incrementer module in the OsSecondsPerTick parameter.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="efc3bdc3-0133-4e58-b635-3423fda1b27c"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:var name="OsHwModule" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>EN: 
                            &lt;html&gt;
                              &lt;b&gt;OsHwModule&lt;/b&gt; provides a list of supported hardware modules that can be used to increment a software counter.
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="efc3bda3-0833-4e58-b635-3427fda1227c"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="RANGE" value="NONE"/>
                      </v:var>
                      <v:var name="OsIncrementerIrqLevel" type="INTEGER">
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="efc3bdf3-0233-4e58-b725-3427fda1227c"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=1"/>
                          <a:tst expr="&gt;=1"/>
                        </a:da>
                      </v:var>
                    </v:ctr>
                  </v:ctr>
                  <v:var name="OsSecondsPerTick" type="FLOAT">
                    <a:a name="DESC">
                      <a:v>EN: 
                                  &lt;html&gt;
                                    &lt;b&gt;Note&lt;/b&gt;: If OsCounterType is set to HARDWARE, one tick always lasts 1 millisecond
                                    and hence, OsSecondsPerTick must always have the value 0.001.
                                    This is the perception of time of an AUTOSAR application.
                                    The actual time accuracy offered by Windows might be different.
                                    In these cases, there is a time interpolation behind the scenes.
                                    But even then, a user can always assume that a tick lasts 1 millisecond.&lt;/br&gt;
                                    If OsCounterType is set to SOFTWARE, this restriction does not apply.
                                    &lt;/br&gt;&lt;/br&gt;
                                  &lt;/html&gt;</a:v>
                      <a:v>EN: Time of one hardware tick in seconds.</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="abc68bbf-914f-4ef9-b1b6-f991c966aad2"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="0.001"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=86400.0"/>
                      <a:tst expr="&gt;0.0"/>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="../OsCounterType = &apos;HARDWARE&apos; and num:floating(.) != num:floating(0.001)" 
                          true="Hardware counters on Windows always work with 0.001 seconds per tick. Please use this value, unless you know what you&apos;re doing."/>
                  </v:var>
                </v:ctr>
              </v:lst>
              <v:lst name="OsEvent" type="MAP">
                <a:a name="COLUMNS" value="OsEventMask"/>
                <v:ctr name="OsEvent" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        &lt;b&gt;OsEvent&lt;/b&gt; objects are used to provide inter-task coordination.
                        Events are represented by their event masks.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="219c86d3-a7fa-44cc-86f6-2ecb93928e43"/>
                  <v:var name="OsEventMask" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            The &lt;b&gt;OsEventMask&lt;/b&gt; attribute is a UINT64 attribute that specifies the set of bits to be associated with the event.
                            The AUTOSAR OS kernel supports up to 32 events per task, therefore the event mask must be restricted to
                            the lower 32 bits of the word.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="83f574e7-6d8c-47ad-9568-cf6582e02dd7"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4294967295"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:lst>
              <v:lst name="OsSpinlock" type="MAP">
                <a:da name="ENABLE" value="true"/>
                <a:da name="MIN" value="0"/>
                <v:ctr name="OsSpinlock" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          An OsSpinlock object is used to co-ordinate concurrent access by TASKs/ISR2s on different cores to a shared resource.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="186f2f9d-43da-4728-8e9a-64ec3bfa389a"/>
                  <a:da name="ENABLE" value="true"/>
                  <v:lst name="OsSpinlockAccessingApplication">
                    <a:da name="MIN" value="1"/>
                    <v:ref name="OsSpinlockAccessingApplication" 
                           type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              Reference to OsApplications that have an access to this object.
                              Objects of the referenced OsApplication can acquire or release this OsSpinlock.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="cdb8d88f-ea70-451f-b718-290caf5e6d8d"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                    </v:ref>
                  </v:lst>
                  <v:ref name="OsSpinlockSuccessor" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            Reference to the next OsSpinlock object in the linked list.
                            To check whether a spinlock can be occupied (in a nested way) without any danger of deadlock,
                            a linked list of spinlocks can be defined. A spinlock can only be occupied in the order of the linked list.
                            It is allowed to skip a spinlock. If no linked list is specified, spinlocks cannot be nested.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="b61b0bcf-d5db-42ed-b6cf-50b0d1818705"/>
                    <a:da name="ENABLE" value="true"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsSpinlock"/>
                  </v:ref>
                  <v:var name="OsSpinlockLockMethod" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          OsSpinlockLockMethod is an enumerated type whose value is one of:
                          &lt;ul&gt;
                           &lt;li&gt;LOCK_NOTHING&lt;/li&gt;
                           &lt;li&gt;LOCK_ALL_INTERRUPTS&lt;/li&gt;
                           &lt;li&gt;LOCK_CAT2_INTERRUPTS&lt;/li&gt;
                           &lt;li&gt;LOCK_WITH_RES_SCHEDULER&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;br/&gt;
                          OsSpinlockLockMethod describes the lock method, which is additionally applied when a spinlock is taken.
                          This method modifies priority and interrupt lock level of tasks, which hold this spinlock.&lt;br/&gt;
                          If &lt;b&gt;LOCK_NOTHING&lt;/b&gt; is chosen, taking the spinlock will not change the current task&apos;s priority
                          or interrupt lock level.&lt;br/&gt;
                          &lt;b&gt;LOCK_ALL_INTERRUPTS&lt;/b&gt; will cause all interrupts to be disabled.&lt;br/&gt;
                          &lt;b&gt;LOCK_CAT2_INTERRUPTS&lt;/b&gt; will disable all category 2 ISRs while the spinlock is taken.&lt;br/&gt;
                          &lt;b&gt;LOCK_WITH_RES_SCHEDULER&lt;/b&gt; will prevent the task, holding this spinlock, from being preempted by another task.&lt;br/&gt;
                          &lt;br/&gt;
                          It is recommended to lock out all tasks and ISRs which could try to take a spinlock
                          to prevent certain kinds of deadlocks.
                          &lt;br/&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="d141418b-341c-4439-a651-b04f583a45b0"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="LOCK_NOTHING"/>
                    <a:da name="EDITABLE" value="true"/>
                    <a:da name="RANGE">
                      <a:v>LOCK_NOTHING</a:v>
                      <a:v>LOCK_ALL_INTERRUPTS</a:v>
                      <a:v>LOCK_CAT2_INTERRUPTS</a:v>
                      <a:v>LOCK_WITH_RES_SCHEDULER</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:lst>
              <v:ctr name="OsIoc" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN: 
                            &lt;html&gt;Configuration of the IOC (Inter OS Application) module.
                            &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="OPTIONAL" value="true"/>
                <a:a name="TAB" value="OsIoc"/>
                <a:a name="UUID" value="36dd152a-1415-4202-b316-4d6d4d57b2df"/>
                <a:da name="ENABLE" value="false"/>
                <a:da name="INVALID" type="XPath" 
                      expr="count(OsIocCommunication/*/OsIocDataType/*) &lt; 65536" 
                      false="The sum of all DataType references may not exceed 65535"/>
                <v:lst name="OsIocDataTypeIncludeHeader" type="MAP">
                  <a:a name="TAB" value="OsIoc"/>
                  <a:da name="MIN" value="1"/>
                  <v:ctr name="OsIocDataTypeIncludeHeader" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                              &lt;html&gt;The container holds information about the header
                                 file to be included by the Ioc. The header file
                                 contains the definitions for the data types used
                                 by the Ioc.&lt;/html&gt;</a:v>
                    </a:a>
                    <v:var name="IncludeHeaderName" type="STRING">
                      <a:a name="DESC">
                        <a:v>EN: 
                              &lt;html&gt;The name of the header file where data
                                    types which are used by the Ioc channels are
                                    defined in.&lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="TAB" value="OsIoc"/>
                      <a:a name="UUID" 
                           value="ae3f17d0-80f4-4d06-82e5-c905fbfe2c66"/>
                      <a:da name="INVALID" type="XPath" expr=". = &apos;&apos;" 
                            true="No include header file name is specified. Specify the include header file name."/>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:lst name="OsIocCommunication" type="MAP">
                  <a:a name="TAB" value="OsIoc"/>
                  <v:ctr name="OsIocCommunication" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                            &lt;html&gt;Representation of a 1:1 communication between software parts located in different OsApplications. The involved OsApplications are located on the same or on different cores.
                            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="78624b63-0546-4ab4-9a52-a90e52ef50e1"/>
                    <v:lst name="OsIocDataTypeRef">
                      <a:a name="VISIBLE" value="FALSE"/>
                      <a:da name="EDITABLE" value="FALSE"/>
                      <a:da name="MIN" value="0"/>
                      <v:ref name="OsIocDataTypeRef" type="FOREIGN-REFERENCE">
                        <a:a name="DESC" 
                             value="EN: This AUTOSAR standard parameter is not used and should not be edited."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="788c2253-1606-44fe-b4ab-45d88a97f4a1"/>
                        <a:a name="VISIBLE" value="FALSE"/>
                        <a:da name="EDITABLE" value="FALSE"/>
                        <a:da name="REF" 
                              value="ASTyped:IMPLEMENTATION-DATA-TYPE"/>
                      </v:ref>
                    </v:lst>
                    <v:var name="OsIocSenderApiIsTrapping" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;&lt;p&gt;If set to true, the IocSend/IocWrite functions of this channel are executed in kernel context.
                                If set to false, these functions are executed in the context of the callers.&lt;/p&gt;
                                &lt;p&gt;If you use the Safety OS and the sender API is trapping, make sure you define a &lt;em&gt;READABLE&lt;/em&gt; region for each application, which sends data over this IOC channel.
                                These regions encompass those parts of the memory, from where the kernel may read the data elements passed to IocSend and IocWrite functions.
                                They are usually defined in the linker script. The &lt;tt&gt;IOC_RSA_READABLE_(application-name)&lt;/tt&gt; symbol defines the start address of such a range.
                                The &lt;tt&gt;IOC_RLA_READABLE_(application-name)&lt;/tt&gt; must point to the next location immediately following the last readable byte.
                                In general, if a memory location needs to be protected from read accesses by certain applications or the kernel, it shall not appear in READABLE regions.
                                Furthermore, the kernel must be able to read from READABLE regions without causing an exception.
                                Note, the default values in the demo linker script are hardware-dependent and do not necessarily suit your application.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="false"/>
                      <a:a name="TAB" value="General"/>
                      <a:a name="UUID" 
                           value="4ba3b382-249d-11e5-b345-feff819cdc9f"/>
                      <a:da name="DEFAULT" value="false"/>
                    </v:var>
                    <v:var name="OsIocIntraCoreLockType" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;Selects the intra-core lock type that is used for write accesses to this channel. This lock type shall be used to avoid preemptions. This is recommended if multiple preemtive tasks in the sender application use this channel or in case of N:1 communication (i.e. senders on different cores) for reducing the coupling between cores.&lt;br/&gt;
                            &lt;ul&gt;
                              &lt;li&gt;NO_LOCK&lt;/li&gt;
                              &lt;li&gt;INTERRUPT_LOCK&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="false"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="TAB" value="General"/>
                      <a:a name="UUID" 
                           value="DCE:e383a583-3c14-4a82-9745-2de7e8f804f3"/>
                      <a:da name="DEFAULT" value="INTERRUPT_LOCK"/>
                      <a:da name="RANGE">
                        <a:v>NO_LOCK</a:v>
                        <a:v>INTERRUPT_LOCK</a:v>
                      </a:da>
                    </v:var>
                    <v:var name="OsIocUseInterCoreLock" type="BOOLEAN">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;Enable or disable the use of a spin lock for inter-core synchronization. This is required in case of N:1 communication, i.e. when mutliple senders located on different cores exist.
                          In single core configurations, this value should be set to false, otherwise it is ignored.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="false"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="TAB" value="General"/>
                      <a:a name="UUID" 
                           value="DCE:5cf15d52-07eb-473c-bafc-2a0f39ddad18"/>
                      <a:da name="DEFAULT" value="true"/>
                      <a:da name="ENABLE" value="true"/>
                    </v:var>
                    <v:lst name="OsIocDataType" type="MAP">
                      <a:a name="TAB" value="General"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="OsIocDataType" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>EN: 
                                &lt;html&gt;Container holding information on the data type
                                  used for the Ioc channel. The container holds the
                                  data type name and two flags determining whether
                                  the data type is a complex type and if it is an
                                  array or string
                                  type.&lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="c06593a0-c140-494a-abc2-e2f8d67f77a9"/>
                        <v:var name="DataTypeName" type="STRING">
                          <a:a name="DESC">
                            <a:v>EN: 
                                &lt;html&gt;Name of the data type used for this Ioc
                                  channel.&lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ae3f17d0-80f4-4d06-82e5-c905fbde2c81"/>
                          <a:da name="DEFAULT" value=""/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:empty(.)" 
                                true="The DataTypeName parameter must not be empty. Please enter a                               valid C type identifier."/>
                        </v:var>
                        <v:var name="IsComplexType" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>EN: 
                                &lt;html&gt;This flag indicates, whether the data type is complex or primitive.&lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ae3f17d0-80f4-4d06-82e5-c905fbde2c81"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:var name="IsArrayOrStringType" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>EN: 
                                &lt;html&gt;This flag indicates, whether the data has an array or string type.&lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ae3f17d0-80f4-4d06-82e5-c905fbde2c81"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(. = &apos;true&apos;) and (../IsComplexType != &apos;true&apos;)" 
                                true="IsArrayType has to be set to false since IsComplexType is set to false. An array type is a complex type."/>
                        </v:var>
                        <v:var name="VariableLength" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>EN: 
                                &lt;html&gt;
                                  This flag indicates, that the data type has a variable length.
                                  Primitive data types can&apos;t have variable length.
                                  The length, given at runtime, must not exceed the size of this type.
                                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="57ec28d3-f9cd-4bc3-9af7-c6aa186faa78"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="(. = &apos;true&apos;) and (../IsComplexType != &apos;true&apos;) and (../IsArrayOrStringType != &apos;true&apos;)" 
                                true="Primitive data types can&apos;t have variable length."/>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:chc name="OsIocCommunicationSemantics" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;Choice between queued and &quot;last-is-best&quot; semantics for this IOC communication.&lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="TAB" value="General"/>
                      <a:a name="UUID" 
                           value="0b139ee3-8945-45ef-b2ab-3e5080df230e"/>
                      <v:ctr name="OsIocLastIsBestCommunication" 
                             type="IDENTIFIABLE">
                        <a:a name="UUID" 
                             value="c06593a0-c140-494d-aac2-e2f8d67f77e4"/>
                        <v:var name="OsIocInitValueSymbol" type="LINKER-SYMBOL">
                          <a:a name="DESC">
                            <a:v>EN: 
                            &lt;html&gt;Symbolic value to be used as initializer for the data buffer.
                              This symbol is generated by the RTE (e.g. as a macro), so that the IOC
                              does not have to consider the data structure from the RTE, but can use
                              the symbol in the generated C-Code as initializer.&lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="d0094501-70fd-4f39-a477-d910a5c289add"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="count(../../OsIocDataType/*) &gt; 1" 
                                   true="This parameter can only be set if a single data type is referenced."/>
                            <a:tst expr=". = &apos;&apos;" 
                                   true="This parameter must not be empty, but a valid C literal or symbol."/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                      <v:ctr name="OsIocQueuedCommunication" 
                             type="IDENTIFIABLE">
                        <a:a name="UUID" 
                             value="0a08f952-1f5a-4b13-890b-9e589334c5d2"/>
                        <v:var name="OsIocBufferLength" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>EN: 
                            &lt;html&gt;This attribute defines the size of the IOC internal queue to be
                              allocated for a queued communication. This configuration information
                              shall allow the optimization of the needed memory for communications
                              requiring buffers within the RTE and within the IOC.&lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="57d6a2d6-4852-4192-9e77-6eff5d891be2"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:chc>
                    <v:lst name="OsIocReceiverProperties" type="MAP">
                      <a:a name="COLUMNS" value="OsIocReceivingOsApplicationRef"/>
                      <a:a name="TAB" value="General"/>
                      <a:da name="MIN" value="1"/>
                      <a:da name="WARNING" type="XPath" 
                            expr="(count(./*) &gt; 1) and (../OsIocCommunicationSemantics = &apos;OsIocQueuedCommunication&apos;)" 
                            true="Be careful with multiple receivers in queued communication: every element sent will be consumed by the first receiver!"/>
                      <v:ctr name="OsIocReceiverProperties" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>EN: 
                            &lt;html&gt;Representation of receiver properties for one communication.
                                  For each OsIocCommunication (1:1 or N:1) one receiver has to be defined.
                                  This container should be instanciated within an OsIocCommunication.&lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="UUID" 
                             value="7748837c-c78f-4d1d-be0a-96a61a7b5d03"/>
                        <v:var name="OsIocReceiverId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>EN: 
                              &lt;html&gt;The receiver id may be used to identify a receiver. It is not evaluated by the OS 
                                generator for its internal operations and hence, its use and interpretation is not 
                                constraint by it in any way. Furthermore, it&apos;s not defined by AUTOSAR and therefore
                                Elektrobit specific.&lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                          <a:a name="UUID" 
                               value="37e0ea2c-99bb-44ba-bd7c-022e8bfe7d41"/>
                          <a:da name="ENABLE" type="XPath" 
                                expr="count(../../*)&gt;1"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="OsIocReceiverPullCB" type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v>EN: 
                            &lt;html&gt;Callbacks are currently not supported.&lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="d0094501-70fd-4439-a477-d90a8c2e9add"/>
                          <a:da name="ENABLE" value="false"/>
                        </v:var>
                        <v:ref name="OsIocReceivingOsApplicationRef" 
                               type="REFERENCE">
                          <a:a name="DESC" 
                               value="EN: This attribute is a reference to the receiving OsApplication instance defined in the configuration file of the OS."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="3f693c52-c3a3-47ba-9db5-d41c304186eb"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="You need to specify a receiving OS Application."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="OsIocSenderProperties" type="MAP">
                      <a:a name="COLUMNS" value="OsIocSendingOsApplicationRef"/>
                      <a:a name="TAB" value="General"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="OsIocSenderProperties" type="IDENTIFIABLE">
                        <a:a name="UUID" 
                             value="19574439-317b-4c79-839b-e2e1db7db6ee"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(count(../*) = 1) and node:exists(./OsIocSenderId)" 
                                 true="OsIocSenderId may only be enabled if more than one sender is configured"/>
                          <a:tst 
                                 expr="(count(../*) &gt; 1) and (count(../*) != count(../*/OsIocSenderId))" 
                                 true="OsIocSenderId must be set if more than one sender is configured"/>
                        </a:da>
                        <v:var name="OsIocSenderId" type="INTEGER">
                          <a:a name="DESC" 
                               value="EN: Representation of a sender in a N:1 communication to distinguish between senders."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="37e0ea2c-99bb-44bc-bd7c-022e8bfe7d41"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:ref name="OsIocSendingOsApplicationRef" 
                               type="REFERENCE">
                          <a:a name="DESC" 
                               value="EN: This attribute is a reference to the sending OS-Application instance defined in the configuration file of the OS."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="7708bac9-5b77-4cf3-b455-e924451a3032"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="You need to specify a sending OS Application."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:lst>
              </v:ctr>
              <v:lst name="OsIsr" type="MAP">
                <a:a name="COLUMNS">
                  <a:v>OsIsrCategory</a:v>
                  <a:v>OsStacksize</a:v>
                </a:a>
                <v:ctr name="OsIsr" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        &lt;b&gt;OsIsr&lt;/b&gt; objects are used to represent interrupt service routines. All ISRs should be declared in the application
                        code using the &lt;em&gt;ISR()&lt;/em&gt; API.
                        The attributes of the ISR object are defined in the following section
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="7D5716E3-C20E-4559-BA9C-2D90F50CFD28"/>
                  <v:var name="OsIsrCategory" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsIsrCategory&lt;/b&gt; is a UINT32 attribute that defines the IRS&apos;s Category.
                            Only the values &quot;CATEGORY_1&quot; and &quot;CATEGORY_2&quot; are permitted.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="efc3bda3-0833-4e58-b635-3427fda1227c"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="RANGE">
                      <a:v>CATEGORY_1</a:v>
                      <a:v>CATEGORY_2</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsIsrPeriod" type="FLOAT">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;p&gt;&lt;b&gt;OsIsrPeriod&lt;/b&gt; specifies the period in seconds of a periodically-triggered ISR.&lt;/p&gt;
                          &lt;p&gt;The value can be used by the RTE module so that you can map timing events to an ISR.&lt;/p&gt;
                          &lt;p&gt;It is your responsibility to ensure that the hardware triggers the ISR at the correct frequency.
                          The OS does not use and cannot verify the correctness of the value you configure.&lt;/p&gt;
                          &lt;p&gt;If you do not provide a value for this parameter, you cannot map RTE timing events to the ISR.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="bd3d9772-71aa-4e00-815b-9619d7796173"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=86400.0"/>
                      <a:tst expr="&gt;=0.0"/>
                    </a:da>
                  </v:var>
                  <v:lst name="OsIsrResourceRef">
                    <v:ref name="OsIsrResourceRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: This reference defines the resources accessed by this ISR."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="a2513af8-b657-425a-a715-4dd7d8fb31e3"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsResource"/>
                    </v:ref>
                  </v:lst>
                  <v:var name="OsMeasure_Max_Runtime" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsMeasure_Max_Runtime&lt;/b&gt; is a boolean attribute that tells the kernel to record
                             the longest-observed execution-time for this ISR.
                             The value can be obtained by calling the function &lt;em&gt;OS_GetIsrMaxRuntime&lt;/em&gt;.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="0F3CCA34-9C42-453A-80E4-660097044F43"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                  <v:var name="OsEnable_On_Startup" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsEnable_On_Startup&lt;/b&gt; is a boolean attribute that determines whether the kernel should automatically enable
                            the interrupt source at startup. If this attribute is set to &lt;b&gt;FALSE&lt;/b&gt;, the application code is responsible for
                            enabling this interrupt source using &lt;code&gt;OS_EnableInterruptSource()&lt;/code&gt; when needed.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="5F4E193C-6D85-44B4-9803-7DEC4B711456"/>
                    <a:da name="DEFAULT" value="true"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                  <v:var name="OsWindowsVector" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                              &lt;html&gt;
                                &lt;b&gt;Note&lt;/b&gt;: There is no interrupt vector concept for AUTOSAR software running on Windows.
                                Hence, the actual value for &lt;b&gt;OsWindowsVector&lt;/b&gt; is not that important, unless other
                                auxiliary software depends on proper interrupt vector information.&lt;/br&gt;&lt;/br&gt;
                                Select the interrupt channel for this ISR.
                              &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="3D855434-C46E-40a1-EDCC-B85F085D2EFB"/>
                    <a:da name="RANGE">
                      <a:v>INTUSER00</a:v>
                      <a:v>INTUSER01</a:v>
                      <a:v>INTUSER02</a:v>
                      <a:v>INTUSER03</a:v>
                      <a:v>INTUSER04</a:v>
                      <a:v>INTUSER05</a:v>
                      <a:v>INTUSER06</a:v>
                      <a:v>INTUSER07</a:v>
                      <a:v>INTUSER08</a:v>
                      <a:v>INTUSER09</a:v>
                      <a:v>INTUSER10</a:v>
                      <a:v>INTUSER11</a:v>
                      <a:v>INTUSER12</a:v>
                      <a:v>INTUSER13</a:v>
                      <a:v>INTUSER14</a:v>
                      <a:v>INTUSER15</a:v>
                      <a:v>INTUSER16</a:v>
                      <a:v>INTUSER17</a:v>
                      <a:v>INTUSER18</a:v>
                      <a:v>INTUSER19</a:v>
                      <a:v>INTUSER20</a:v>
                      <a:v>INTUSER21</a:v>
                      <a:v>INTUSER22</a:v>
                      <a:v>INTUSER23</a:v>
                      <a:v>INTUSER24</a:v>
                      <a:v>INTUSER25</a:v>
                      <a:v>INTUSER26</a:v>
                      <a:v>INTUSER27</a:v>
                      <a:v>INTUSER28</a:v>
                      <a:v>INTUSER29</a:v>
                      <a:v>INTUSER30</a:v>
                      <a:v>INTUSER31</a:v>
                      <a:v>TIMER0</a:v>
                      <a:v>TIMER1</a:v>
                      <a:v>TIMER2</a:v>
                      <a:v>TIMER3</a:v>
                      <a:v>XCORE0</a:v>
                      <a:v>XCORE1</a:v>
                      <a:v>XCORE2</a:v>
                      <a:v>XCORE3</a:v>
                    </a:da>
                  </v:var>
                  <v:lst name="OsIsrAccessingApplication">
                    <v:ref name="OsIsrAccessingApplication" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              Reference to OsApplications that have an access to this object.
                              Objects of the referenced OsApplication can enable or disable this interrupt.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="UUID" 
                           value="CFFD5493-D095-4521-8502-E7EDEC3807ED"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                    </v:ref>
                  </v:lst>
                  <v:ctr name="OsIsrTimingProtection" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsIsrTimingProtection&lt;/b&gt; is a boolean attribute that specifies whether the kernel should apply timing protection to
                          the ISR.
                          When this attribute is &lt;b&gt;TRUE&lt;/b&gt;, the sub-attributes &lt;b&gt;OsIsrExecutionBudget&lt;/b&gt;, &lt;b&gt;OsIsrTimeFrame&lt;/b&gt; and
                          &lt;b&gt;OsIsrLockBudget&lt;/b&gt; are available. They are described in the following sections.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="6994fd84-b1cc-4370-9e23-b201ce0089ba"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:var name="OsIsrAllInterruptLockBudget" type="FLOAT">
                      <a:a name="DESC" 
                           value="EN: This parameter contains the maximum time for which the ISR is allowed to lock all interrupts (via SuspendAllInterrupts() or DisableAllInterrupts()) (in seconds)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="33b93192-fbf3-495f-b9f9-6a976e0a7795"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=86400.0"/>
                        <a:tst expr="&gt;0.0"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsIsrExecutionBudget" type="FLOAT">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              &lt;b&gt;OsIsrExecutionBudget&lt;/b&gt; specifies, in seconds, the maximum execution time permitted for the ISR, from call
                               to return. If the ISR is interrupted by a higher priority category 2 ISR, the interruption does not count towards
                               the ISR&apos;s execution time. However, time spent in category 1 ISRs is counted in the time of the interrupted ISR.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="0fcda17f-acd7-44a8-ae64-390f188f0848"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="( . &lt;= 86400.0) and (. &gt; 0.0)" 
                            false="ISR execution budget out of range."/>
                    </v:var>
                    <v:var name="OsIsrOsInterruptLockBudget" type="FLOAT">
                      <a:a name="DESC" 
                           value="EN: This parameter contains the maximum time for which the ISR is allowed to lock all Category 2 interrupts (via SuspendOSInterrupts()) (in seconds)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="5ca33591-e508-44c1-af93-c56a708c4939"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(. &lt; 0) or (. &lt; ../OsIsrAllInterruptLockBudget)" 
                            true="Os interrupt lock budget &lt;0 or &lt;OsIsrAllInterruptLockBudget."/>
                    </v:var>
                    <v:var name="OsIsrTimeFrame" type="FLOAT">
                      <a:a name="DESC" 
                           value="EN: This parameter contains the minimum inter-arrival time between successive interrupts (in seconds)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="7e1d56f9-52b5-44bd-b6f9-72e6266d8526"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=86400.0"/>
                        <a:tst expr="&gt;=0.0"/>
                      </a:da>
                    </v:var>
                    <v:lst name="OsIsrResourceLock" type="MAP">
                      <v:ctr name="OsIsrResourceLock" type="IDENTIFIABLE">
                        <a:a name="DESC" 
                             value="EN: This container contains a list of times the interrupt uses resources."/>
                        <a:a name="UUID" 
                             value="dac8e9c2-ab07-4815-9609-7054b5ee499a"/>
                        <v:var name="OsIsrResourceLockBudget" type="FLOAT">
                          <a:a name="DESC" 
                               value="EN: This parameter contains the maximum time the interrupt is allowed to hold the given resource (in seconds)."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="404e466f-e114-4993-a5d3-14f92fc0c283"/>
                          <a:a name="__ORIGIN" value="AUTOSAR"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=86400.0"/>
                            <a:tst expr="&gt;0.0"/>
                          </a:da>
                        </v:var>
                        <v:ref name="OsIsrResourceLockResourceRef" 
                               type="REFERENCE">
                          <a:a name="DESC" 
                               value="EN: Reference to the resource the locking time is depending on"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="536a0631-8b90-453f-9275-64b6dc5232e7"/>
                          <a:a name="__ORIGIN" value="AUTOSAR"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsResource"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:var name="OsIsrCountLimit" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsIsrCountLimit&lt;/b&gt; specifies the number of allowed interrupt arrivals within the time frame specified by OsIsrTimeFrame.&lt;br/&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:774555ef-f674-40bd-a17b-e79657039d87"/>
                      <a:da name="DEFAULT" value="1"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=0"/>
                        <a:tst expr="&lt;65536"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                  <v:var name="OsWindowsIrqLevel" type="INTEGER">
                    <a:a name="DESC" value="Select the relative interrupt level"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="D3E95A4B-A4CB-4d8f-96FB-12EEA69014D3"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=31"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsStacksize" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
	                        &lt;html&gt;
	                          &lt;b&gt;Note&lt;/b&gt;: Specification of ISR stack sizes is not needed, because Windows
	                          manages stacks automatically.&lt;/br&gt;&lt;/br&gt;
	                        &lt;/html&gt;</a:v>
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsStackSize&lt;/b&gt; specifies the stack size of the ISR in bytes.&lt;br/&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="DCE:ab5372dc-9ffc-4da3-9810-9c94591bac7c"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=2000000000"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:lst>
              <v:lst name="OsResource" type="MAP">
                <a:a name="COLUMNS" value="OsResourceProperty"/>
                <v:ctr name="OsResource" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        An &lt;b&gt;OsResource&lt;/b&gt; object is used to co-ordinate the concurrent access by tasks and ISRs to a shared resource, e.g.
                        the scheduler, any program sequence, memory or any hardware area.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="39df94d3-6f5a-44b5-863c-039f69d53b51"/>
                  <v:var name="OsResourceProperty" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;RESOURCEPROPERTY&lt;/b&gt; is an enumerated attribute that whose values are:&lt;br/&gt;
                            &lt;dl&gt;
                              &lt;dt&gt;STANDARD&lt;/dt&gt;
                              &lt;dd&gt;a normal resource that can be expicitly taken and released by application code&lt;/dd&gt;
                              &lt;dt&gt;LINKED&lt;/dt&gt;
                              &lt;dd&gt;a resource that is linked to another resource of type &lt;b&gt;STANDARD&lt;/b&gt; or &lt;b&gt;LINKED&lt;/b&gt;. The sub-attribute &lt;b&gt;LINKEDRESOURCE&lt;/b&gt;
                              specifies the resource to which it is linked.&lt;/dd&gt;
                              &lt;dt&gt;INTERNAL&lt;/dt&gt;
                              &lt;dd&gt;a resource that cannot be expicitly taken and released by application code. The resource is automatically
                              given to a task whenever the task enters the running state.&lt;/dd&gt;
                            &lt;/dl&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="aa4f2e21-4950-4451-a912-49e04e0ba136"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="STANDARD"/>
                    <a:da name="RANGE">
                      <a:v>INTERNAL</a:v>
                      <a:v>LINKED</a:v>
                      <a:v>STANDARD</a:v>
                    </a:da>
                  </v:var>
                  <v:lst name="OsResourceAccessingApplication">
                    <v:ref name="OsResourceAccessingApplication" 
                           type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              Reference to OsApplications that have an access to this object.
                              Objects of the referenced OsApplication can acquire or release this OsResource.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="f7be30b8-783c-4c0e-94ac-473c55d4418f"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                    </v:ref>
                  </v:lst>
                  <v:ref name="OsResourceLinkedResourceRef" type="REFERENCE">
                    <a:a name="DESC" 
                         value="EN: The link to the resource. Must be valid if OsResourceProperty is LINKED. If OsResourceProperty is not LINKED the value is ignored."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="dd1dc639-c140-44e6-9cb6-8f6db4a0b85b"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsResource"/>
                  </v:ref>
                </v:ctr>
              </v:lst>
              <v:lst name="OsTask" type="MAP">
                <a:a name="COLUMNS">
                  <a:v>OsTaskActivation</a:v>
                  <a:v>OsTaskPriority</a:v>
                  <a:v>OsTaskSchedule</a:v>
                  <a:v>OsStacksize</a:v>
                  <a:v>OsTaskPeriod</a:v>
                </a:a>
                <v:ctr name="OsTask" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;TASK&lt;/b&gt; objects are used to define which tasks are present in the system.
                  The attributes of the &lt;b&gt;TASK&lt;/b&gt; object are defined in the following sections.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="UUID" value="F9CD89D3-97E4-4f05-AD16-D8F577B726D0"/>
                  <v:var name="OsTaskActivation" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;ACTIVATION&lt;/b&gt; is a UINT32 attribute whose value defines the maximum number of activations that a task can
                            have at any one time.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="81639421-9cf9-4666-a218-d0d9873e8f6e"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=255"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsTaskPriority" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsTaskPriority&lt;/b&gt; is a UINT32 attribute whose value defines the relative base priority of the task. The lowest priority
                            is zero; larger values correspond to higher priorities.
                            The values given for the &lt;b&gt;OsTaskPriority&lt;/b&gt; attribute only specify a relative ordering. The actual values configured for
                            the kernel by the Generator can be different from those specified.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="7269e696-1e5c-45ad-a7fb-0faf1190e501"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=255"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsTaskPeriod" type="FLOAT">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;p&gt;&lt;b&gt;OsTaskPeriod&lt;/b&gt; specifies the period in seconds of a periodically-activated task.&lt;/p&gt; 
                          &lt;p&gt;The value can be used by the RTE module so that you can map timing events to a task whose
                          time scheduling is not generated by RTE.&lt;/p&gt;
                          &lt;p&gt;It is your responsibility to ensure that the task&apos;s activations take place at the correct frequency. 
                          The OS does not use and cannot verify the correctness of the value you configure.&lt;/p&gt; 
                          &lt;p&gt;If you do not provide a value for this parameter, you might not be able to map RTE timing events to the task.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="bd3d9772-71aa-4e00-815b-9619d7796172"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=86400.0"/>
                      <a:tst expr="&gt;=0.0"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsMeasure_Max_Runtime" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsMeasure_Max_Runtime&lt;/b&gt; is a boolean attribute that tells the kernel to record the longest-observed executiontime
                          for this task. The value can be obtained by calling the function &lt;em&gt;OS_GetTaskMaxRuntime&lt;/em&gt;.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="850140E1-B2B8-4600-8880-0404DD9FE817"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                  <v:lst name="OsTaskAccessingApplication">
                    <v:ref name="OsTaskAccessingApplication" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            Reference to applications which have an access to this object.
                            Objects of the referenced OsAplication can change the state of current Task by calling the system service APIs.
                            For example this task can be activated or an event can be set for it by objects of the referenced OsApplication.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="7ca7a9c0-aaaa-4be6-a3be-6ab3950f11fc"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsTaskEventRef">
                    <v:ref name="OsTaskEventRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: This reference defines the list of events the extended task may react on."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="f31a5cd9-5f90-4f97-b0f1-fc783ce87463"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsEvent"/>
                    </v:ref>
                  </v:lst>
                  <v:lst name="OsTaskResourceRef">
                    <v:ref name="OsTaskResourceRef" type="REFERENCE">
                      <a:a name="DESC" 
                           value="EN: This reference defines a list of resources accessed by this task."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="e641b179-3c3a-466d-8733-a83a15fd11ba"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsResource"/>
                    </v:ref>
                  </v:lst>
                  <v:ctr name="OsTaskAutostart" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsTaskAutostart&lt;/b&gt; is a boolean attribute whose value specifies whether the task shall be started automatically when
                            the kernel starts. If the value is &lt;b&gt;TRUE&lt;/b&gt;, the &lt;b&gt;OsTaskAppModeRef&lt;/b&gt; sub-attribute specifies in which application modes the task
                            shall be automatically started.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="b0e64b53-472f-4ee7-b919-29c1453a56e4"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:lst name="OsTaskAppModeRef">
                      <a:da name="MIN" value="1"/>
                      <v:ref name="OsTaskAppModeRef" type="REFERENCE">
                        <a:a name="DESC" 
                             value="EN: Reference to application modes in which that task is activated on startup of the OS"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="5c0cac46-350d-4e7a-812a-cd01528cb217"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsAppMode"/>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                  <v:var name="OsTaskUse_Hw_Fp" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsTaskUse_Hw_Fp&lt;/b&gt; is a boolean attribute that tells the kernel whether to provide a full floating-point environment for
                          the task.
                          The implementation of floating-point environments is architecture-dependent. Please refer to your Architecture
                          Supplement.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="38A13287-3F89-4563-9E4F-E9AC9425ED73"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                  <v:var name="OsTaskCallScheduler" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                       &lt;html&gt;
                         The &lt;b&gt;OsTaskCallScheduler&lt;/b&gt; attribute informs the generator whether the task
                         calls the &lt;em&gt;Schedule()&lt;/em&gt; service. If &lt;b&gt;OsTaskCallScheduler&lt;/b&gt; is set to &lt;b&gt;NO&lt;/b&gt;,
                         the generator assumes that &lt;em&gt;Schedule()&lt;/em&gt; is never called by the task. If it is set
                         to &lt;b&gt;YES&lt;/b&gt; or to &lt;b&gt;DONTKNOW&lt;/b&gt;, the generator assumes that &lt;em&gt;Schedule()&lt;/em&gt; may
                         be called. This information is used to determine which tasks are able to preempt each other.
                       &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="EEED52A0-0A30-487E-9076-F11761B82F6F"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>DONTKNOW</a:v>
                      <a:v>YES</a:v>
                      <a:v>NO</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsTaskType" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsTaskType&lt;/b&gt; is an enumerated type whose value is one of:&lt;br/&gt;
                          &lt;ul&gt;
                          &lt;li&gt;BASIC&lt;/li&gt;
                          &lt;li&gt;EXTENDED&lt;/li&gt;
                          &lt;/ul&gt;
                          BASIC specifies that the task is a basic task. EXTENDED specifies that the task is an extended task.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="BBB2CC76-B853-42C1-99AD-0999E98EEC93"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>BASIC</a:v>
                      <a:v>EXTENDED</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsStacksize" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                            &lt;html&gt;
                              &lt;b&gt;Note&lt;/b&gt;: Specification of task stack sizes is not needed, because Windows
                              manages stacks automatically.&lt;/br&gt;&lt;/br&gt;
                            &lt;/html&gt;</a:v>
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsStacksize&lt;/b&gt; specifies the stack size of the task in bytes.&lt;br/&gt;

                          Note that the generator adds an overhead for saving the task context on the stack
                          during task switches, depending on the task and Os configuration.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="DCE:f127e2d4-81a6-47b2-93cc-e1f18ef8811d"/>
                    <a:da name="DEFAULT" value="1"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=2000000000"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <v:ctr name="OsTaskTimingProtection" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          OsTaskTimingProtection is a boolean attribute that specifies whether the kernel should apply timing protection to
                          the task. When this attribute is &lt;b&gt;TRUE&lt;/b&gt;, the sub-attributes EXECUTIONBUDGET, TIMEFRAME and
                          LOCKINGTIME are available.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="1d7bd8a3-e40b-41c6-95a4-5c1a51775c2c"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:var name="OsTaskAllInterruptLockBudget" type="FLOAT">
                      <a:a name="DESC" 
                           value="EN: This parameter contains the maximum time for which the task is allowed to lock all interrupts (via SuspendAllInterrupts() or DisableAllInterrupts()) (in seconds)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="19450e54-ac66-40ea-bd7b-9af390d440ce"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=86400.0"/>
                        <a:tst expr="&gt;=0.0"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsTaskExecutionBudget" type="FLOAT">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsTaskExecutionBudget&lt;/b&gt; specifies, in seconds, the maximum execution time permitted for the task, from activation
                            to termination. If the task is interrupted by a higher priority task or a category 2 ISR, the interruption does
                            not count towards the task&apos;s execution time. However, time spent in category 1 ISRs is counted in the time of
                            the interrupted task. An extended task&apos;s execution timer is stopped when it enters the WAITING state, and is
                            restarted from the beginning when the event occurs. Waiting for an event that is already pending also restarts
                            the execution timer from the beginning.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="d5d87b7c-3701-4c96-be4e-6c6f1a2f92fc"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(. &lt;= 86400.0) and (. &gt; 0.0)" 
                            false="Task execution budget out of range."/>
                    </v:var>
                    <v:var name="OsTaskOsInterruptLockBudget" type="FLOAT">
                      <a:a name="DESC" 
                           value="EN: This parameter contains the maximum time for which the task is allowed to lock all Category 2 interrupts (via SuspendOSInterrupts()) (in seconds)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="276ba762-955b-4c2d-8a8f-0bcf96113da6"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="(. &lt; 0) or (. &lt; ../OsTaskAllInterruptLockBudget)" 
                            true="Os interrupt lock budget &lt;0 or &lt;OsTaskAllInterruptLockBudget."/>
                    </v:var>
                    <v:var name="OsTaskTimeFrame" type="FLOAT">
                      <a:a name="DESC" 
                           value="EN: The minimum inter-arrival time between activations and/or releases of a task (in seconds)."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="bd3d9772-71aa-4e00-815b-9619d7796171"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=86400.0"/>
                        <a:tst expr="&gt;=0.0"/>
                      </a:da>
                    </v:var>
                    <v:lst name="OsTaskResourceLock" type="MAP">
                      <v:ctr name="OsTaskResourceLock" type="IDENTIFIABLE">
                        <a:a name="DESC" 
                             value="EN: This parameter contains the worst case time between getting and releasing a given resource (in seconds)."/>
                        <a:a name="UUID" 
                             value="a3655512-a358-4c5c-8a86-dda473062b3b"/>
                        <v:var name="OsTaskResourceLockBudget" type="FLOAT">
                          <a:a name="DESC" 
                               value="EN: This parameter contains the maximum time the task is allowed to lock the resource (in seconds)"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="6e298370-01c5-4b1f-bb45-7cddb7208a06"/>
                          <a:a name="__ORIGIN" value="AUTOSAR"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=86400.0"/>
                            <a:tst expr="&gt;0.0"/>
                          </a:da>
                        </v:var>
                        <v:ref name="OsTaskResourceLockResourceRef" 
                               type="REFERENCE">
                          <a:a name="DESC" 
                               value="EN: Reference to the resource used by the task"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="f1c66678-0d0d-4a1e-8dce-008ba5066f7e"/>
                          <a:a name="__ORIGIN" value="AUTOSAR"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsResource"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:var name="OsTaskCountLimit" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsTaskCountLimit&lt;/b&gt; specifies the number of allowed task arrivals within the time frame specified by OsTaskTimeFrame.&lt;br/&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:774555ef-f674-40bd-a17b-e79657039d87"/>
                      <a:da name="DEFAULT" value="1"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&gt;=0"/>
                        <a:tst expr="&lt;65536"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                  <v:var name="OsTaskSchedule" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          OsTaskSchedule is an enumerated type whose value is one of:&lt;br/&gt;
                          &lt;ul&gt;
                          &lt;li&gt;NON&lt;/li&gt;
                          &lt;li&gt;FULL&lt;/li&gt;
                          &lt;/ul&gt;&lt;br/&gt;
                          &lt;b&gt;FULL&lt;/b&gt; specifies that the task is preemptable. &lt;b&gt;NON&lt;/b&gt; specifies that the task is not preemptable.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="a98241e0-5ae2-4265-a303-2d7c0a591d09"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="FULL"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="(. = &apos;FULL&apos;) and (../../../OsOS/OsSchedule = &apos;NON&apos;)" 
                          true="OsTaskSchedule is set to FULL, but OsSchedule (in OsOS container) is set to NON."/>
                    <a:da name="RANGE">
                      <a:v>FULL</a:v>
                      <a:v>NON</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:lst>
              <v:lst name="OsScheduleTable" type="MAP">
                <a:a name="COLUMNS">
                  <a:v>OsScheduleTableDuration</a:v>
                  <a:v>OsScheduleTableRepeating</a:v>
                  <a:v>OsScheduleTableCounterRef</a:v>
                </a:a>
                <v:ctr name="OsScheduleTable" type="IDENTIFIABLE">
                  <a:a name="DESC" 
                       value="EN: An OsScheduleTable addresses the synchronization issue by providing an encapsulation of a statically defined set of alarms that cannot be modified at runtime."/>
                  <a:a name="UUID" value="36d37688-585b-4e31-916d-43ac07163241"/>
                  <v:var name="OsScheduleTableDuration" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                         &lt;html&gt;
                           The &lt;b&gt;OsScheduleTableDuration&lt;/b&gt; attribute specifies the length of time for which the schedule table runs,
                           from start to finish. For periodic schedule tables, it is the period.
                           The &lt;b&gt;OsScheduleTableDuration&lt;/b&gt; sub-attribute is specified in nanoseconds or ticks depending
                           on the UNIT attribute of the schedule table.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:d3e95a4b-a4cb-4d8f-96fb-02eea69014d3"/>
                    <a:da name="DEFAULT" value="0"/>
                  </v:var>
                  <v:var name="OsScheduleTableRepeating" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          The &lt;b&gt;OsScheduleTableRepeating&lt;/b&gt; attribute specifies whether the schedule table is periodic.
                            &lt;dl&gt;
                            &lt;dt&gt;TRUE&lt;/dt&gt;
                            &lt;dd&gt;periodic schedule tables repeat indefinitely until explicitly stopped&lt;/dd&gt;
                            &lt;dt&gt;FALSE&lt;/dt&gt;
                            &lt;dd&gt;the schedule table processing stops when the final expiry point is processed&lt;/dd&gt;
                          &lt;/dl&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="59d6eb8a-a3b9-4f4c-bbc2-f723816ca3ae"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:lst name="OsSchTblAccessingApplication">
                    <v:ref name="OsSchTblAccessingApplication" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              Reference to OsApplications that have an access to this object.
                              Objects of the referenced OsApplication can start, stop, synchronize or enquire about the 
                              status of this OsScheduleTable.
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="066d141f-e7b1-4c58-adb6-794636616376"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                    </v:ref>
                  </v:lst>
                  <v:ref name="OsScheduleTableCounterRef" type="REFERENCE">
                    <a:a name="DESC" 
                         value="EN: This parameter contains a reference to the counter which drives the schedule table.Each Schedule Table must be associated with exactly one Counter."/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="UUID" 
                         value="b7f9c6b7-de57-49f9-84d5-da6bd23d63c6"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsCounter"/>
                  </v:ref>
                  <v:ctr name="OsScheduleTableAutostart" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsScheduleTableAutostart&lt;/b&gt; is a boolean attribute whose value specifies whether the alarm shall be started automatically when
                          the kernel starts. If the value is &lt;b&gt;TRUE&lt;/b&gt;, the &lt;b&gt;OsAppmode&lt;/b&gt; sub-attribute specifies in which application modes the task
                          shall be automatically started, and the sub-attribute OsScheduleTableOffset specifies the time
                          at which the first event of the schedule shall take place. The OsScheduleTableOffset is specified in ticks or nanoseconds depending
                          on the &lt;b&gt;UNIT&lt;/b&gt; attribute of the schedule table.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="285d0d6e-b975-40f3-970b-fe405e4d166b"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:var name="OsScheduleTableAutostartType" 
                           type="ENUMERATION">
                      <a:a name="DESC" 
                           value="EN: This specifies the type of the autostart for the schedule table."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="5935ca20-971f-4c80-8eb8-0efa814c33f5"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="RELATIVE"/>
                      <a:da name="RANGE">
                        <a:v>ABSOLUTE</a:v>
                        <a:v>RELATIVE</a:v>
                        <a:v>SYNCHRON</a:v>
                      </a:da>
                    </v:var>
                    <v:lst name="OsScheduleTableAppModeRef">
                      <a:da name="MIN" value="1"/>
                      <v:ref name="OsScheduleTableAppModeRef" type="REFERENCE">
                        <a:a name="DESC" 
                             value="EN: Reference in which application modes the schedule table should be started during startup"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="1570e1bf-baaa-47e7-8ab7-3c7ac277c299"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsAppMode"/>
                      </v:ref>
                    </v:lst>
                    <v:var name="OsScheduleTableStartValue" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                            &lt;html&gt;
                              Value depending on &lt;b&gt;OsScheduleTableAutostartType&lt;/b&gt;:
                              &lt;ul&gt;
                                &lt;li&gt;ABSOLUTE: Absolute autostart tick value when the schedule table starts.&lt;/li&gt;
                                &lt;li&gt;RELATIVE: Relative offset in ticks when the schedule table starts.&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="98092c83-fddb-4b7d-a3b6-902ba3f6e54c"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                  </v:ctr>
                  <v:lst name="OsScheduleTableExpiryPoint" type="MAP">
                    <a:da name="MIN" value="1"/>
                    <v:ctr name="OsScheduleTableExpiryPoint" 
                           type="IDENTIFIABLE">
                      <a:a name="DESC" 
                           value="EN: The point on a Schedule Table at which the OS activates tasks and/or sets events"/>
                      <a:a name="UUID" 
                           value="d9c4be19-759c-4b9a-8dd6-9f14483953c7"/>
                      <v:var name="OsScheduleTblExpPointOffset" type="INTEGER">
                        <a:a name="DESC" 
                             value="EN: The offset from zero (in ticks) at which the expiry point is to be processed."/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="87b483a1-313e-4bf2-8fca-3f2854a1ed0b"/>
                        <a:a name="__ORIGIN" value="AUTOSAR"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(. &lt; 0) or (. &gt; ../../../OsScheduleTableDuration)" 
                              true="Expiry point offset &lt;0 or &gt;OsScheduleTableDuration."/>
                      </v:var>
                      <v:lst name="OsScheduleTableEventSetting" type="MAP">
                        <a:a name="COLUMNS" value="OsScheduleTableSetEventRef"/>
                        <v:ctr name="OsScheduleTableEventSetting" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC" 
                               value="EN: Event that is triggered by that schedule table."/>
                          <a:a name="UUID" 
                               value="8e873981-0bca-46d8-9cbb-5a0819d5c387"/>
                          <v:ref name="OsScheduleTableSetEventRef" 
                                 type="REFERENCE">
                            <a:a name="DESC" 
                                 value="EN: Reference to event that will be set by action"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="1487d479-e6da-4780-be31-289404e2fe7b"/>
                            <a:a name="__ORIGIN" value="AUTOSAR"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsEvent"/>
                          </v:ref>
                          <v:ref name="OsScheduleTableSetEventTaskRef" 
                                 type="REFERENCE">
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="629819ab-e835-40a4-9607-07090021bb34"/>
                            <a:a name="__ORIGIN" value="AUTOSAR"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsTask"/>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                      <v:lst name="OsScheduleTableTaskActivation" type="MAP">
                        <a:a name="COLUMNS" 
                             value="OsScheduleTableActivateTaskRef"/>
                        <v:ctr name="OsScheduleTableTaskActivation" 
                               type="IDENTIFIABLE">
                          <a:a name="DESC" 
                               value="EN: Task that is triggered by that schedule table."/>
                          <a:a name="UUID" 
                               value="430c936c-98ed-43c6-906d-c31f27ef784a"/>
                          <v:ref name="OsScheduleTableActivateTaskRef" 
                                 type="REFERENCE">
                            <a:a name="DESC" 
                                 value="EN: Reference to task that will be activated by action"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="2b36cdb4-c6a4-4727-b303-7409f5e9ce5b"/>
                            <a:a name="__ORIGIN" value="AUTOSAR"/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsTask"/>
                          </v:ref>
                        </v:ctr>
                      </v:lst>
                      <v:ctr name="OsScheduleTblAdjustableExpPoint" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC" value="EN: Adjustable expiry point"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="UUID" 
                             value="ec3c8dab-4fb7-4923-a2d2-1b402d1176ba"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="WARNING" type="XPath" 
                              expr="node:exists(../../../OsScheduleTableSync/OsScheduleTblSyncStrategy) and (../../../OsScheduleTableSync/OsScheduleTblSyncStrategy = &apos;EXPLICIT&apos;)" 
                              false="OsScheduleTblAdjustableExpPoint is enabled, but schedule table is not synchronized explicitly (OsScheduleTblSyncStrategy != EXPLICIT)."/>
                        <v:var name="OsScheduleTableMaxLengthen" type="INTEGER">
                          <a:a name="DESC" 
                               value="EN: The maximum positive adjustment that can be made to the expiry point offset specified in nanoseconds or ticks depending on the UNIT attribute of the schedule table."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="70357e93-ed1c-471d-8203-ab81c9e160eb"/>
                          <a:a name="__ORIGIN" value="AUTOSAR"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4294967295"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="OsScheduleTableMaxShorten" type="INTEGER">
                          <a:a name="DESC" 
                               value="EN: The maximum negative adjustment that can be made to the expiry point offset specified in nanoseconds or ticks depending on the UNIT attribute of the schedule table."/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="223cc475-8275-419d-aa5f-923dca3a19c0"/>
                          <a:a name="__ORIGIN" value="AUTOSAR"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4294967295"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:ctr>
                  </v:lst>
                  <v:ctr name="OsScheduleTableSync" type="IDENTIFIABLE">
                    <a:a name="DESC" 
                         value="EN: This parameter specifies the synchronization parameters of the schedule table."/>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="71b2cfac-d8b5-43e0-a33b-a461f6e17ff5"/>
                    <a:da name="ENABLE" value="false"/>
                    <v:var name="OsScheduleTblExplicitPrecision" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsScheduleTblExplicitPrecision&lt;/b&gt; defines the deviation threshold for considering
                            a schedule table to be &quot;synchronous&quot;.&lt;br/&gt;
                            This parameter is only needed if explicit synchronisation is used.
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="8eba85f0-750b-4ccf-a0ee-4a1943d407e6"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="EDITABLE" type="XPath" 
                            expr="../OsScheduleTblSyncStrategy = &apos;EXPLICIT&apos;"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=4294967295"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsScheduleTblSyncStrategy" type="ENUMERATION">
                      <a:a name="DESC">
                        <a:v>EN: 
                          &lt;html&gt;
                            AUTOSAR OS provides support for synchronisation in two ways: explicit and implicit.&lt;br/&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;b&gt;EXPLICIT&lt;/b&gt;: The schedule table is driven by an OS counter but processing needs
                                to be synchronized with a different counter which is not an OS counter object.
                                The API function &lt;b&gt;SyncScheduleTable()&lt;/b&gt; provides the synchronization count to the
                                schedule table.
                                Expiry points with &lt;b&gt;OsScheduleTblAdjustableExpPoint&lt;/b&gt; configuration are used to
                                adjust the schedule table to the synchronization count.&lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;IMPLICIT&lt;/b&gt;: The counter driving the schedule table is the counter with which
                                synchronisation is required.&lt;/li&gt;
                              &lt;li&gt;&lt;b&gt;NONE&lt;/b&gt;: No support for synchronisation. (default)&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="8cf93a09-8bcb-4ffb-a6de-0a749552346a"/>
                      <a:a name="__ORIGIN" value="AUTOSAR"/>
                      <a:da name="DEFAULT" value="NONE"/>
                      <a:da name="RANGE">
                        <a:v>EXPLICIT</a:v>
                        <a:v>IMPLICIT</a:v>
                        <a:v>NONE</a:v>
                      </a:da>
                      <a:da name="WARNING" type="XPath" 
                            expr="(. = &apos;EXPLICIT&apos;) and (count(../../OsScheduleTableExpiryPoint/*/OsScheduleTblAdjustableExpPoint) = 0)" 
                            true="Schedule table is set to EXPLICIT synchronization, but no expiry points with OsScheduleTblAdjustableExpPoint configuration exist."/>
                    </v:var>
                  </v:ctr>
                  <v:var name="OsTimeUnit" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                         &lt;html&gt;&lt;b&gt;OsTimeUnit&lt;/b&gt; contains the time unit type used for this schedule
                         table.&lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:d3e95a4b-a4cb-4d8f-96fb-02eea69014d3"/>
                    <a:da name="DEFAULT" value="TICKS"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>NANOSECONDS</a:v>
                      <a:v>TICKS</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:lst>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Os"/>
              <v:ctr name="OsOS" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN: 
                      &lt;html&gt;
                        The OS object defines the existence of, and configuration for, the AUTOSAR OS kernel. In a valid AUTOSAR
                        OS configuration the &lt;b&gt;CPU&lt;/b&gt; must contain exactly one OS object.
                      &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="TAB" value="OsOS"/>
                <a:a name="UUID" value="037FEE7C-9826-4ab9-9067-69B24B57FE12"/>
                <v:var name="OsScalabilityClass" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        A scalability class for each System Object &lt;b&gt;OS&lt;/b&gt; has to be selected.
                        In order to customize the operating system to the needs of the user and to take full advantage of the processor
                        features the operating system can be scaled according to the scalability classes.&lt;br/&gt;
                        The value is one of:
                        &lt;ul&gt;
                          &lt;li&gt;SC1&lt;/li&gt;
                          &lt;li&gt;SC2&lt;/li&gt;
                          &lt;li&gt;SC3&lt;/li&gt;
                          &lt;li&gt;SC4&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="9e1c3ba5-c222-43d6-89f8-655c4b5b9cb8"/>
                  <a:a name="__ORIGIN" value="AUTOSAR"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>SC1</a:v>
                    <a:v>SC2</a:v>
                    <a:v>SC3</a:v>
                    <a:v>SC4</a:v>
                  </a:da>
                </v:var>
                <v:var name="OsNumberOfCores" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          Maximum number of cores that are controlled by EB tresos AutoCore OS.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="95944563-648b-42e5-8654-5c73ee58bb74"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="ENABLE" value="true"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr=". &gt;= 1" 
                           false="Number of cores cannot be less than 1."/>
                    <a:tst expr=". &lt;= ../OsMaxNumberOfCores" 
                           false="Number of cores exceeds the maximum number of cores for this derivative."/>
                  </a:da>
                </v:var>
                <v:var name="OsStackMonitoring" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;Note&lt;/b&gt;: Windows system calls do not allow safe estimates about how much stack space
                            is actually used. Therefore stack monitoring is disabled.&lt;/br&gt;&lt;/br&gt;
                          &lt;/html&gt;</a:v>
                    <a:v>EN: 
                      &lt;html&gt;
                        The &lt;b&gt;OsStackMonitoring&lt;/b&gt; attribute is a BOOLEAN attribute that specifies whether
                        the kernel should perform software stack monitoring at runtime.&lt;br/&gt;
                        If it is set to &lt;b&gt;TRUE&lt;/b&gt;, the stack monitoring is enabled.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="4203d985-315e-4a3f-8a23-83b25d2e68a5"/>
                  <a:a name="__ORIGIN" value="AUTOSAR"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="OsStatus" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        STATUS is an enumerated type whose value is one of:
                        &lt;ul&gt;
                        &lt;li&gt;STANDARD&lt;/li&gt;
                        &lt;li&gt;EXTENDED&lt;/li&gt;
                       &lt;/ul&gt;
                       &lt;br/&gt;
                       In AUTOSAR OS there is no possibility of the system entering an undefined state because of an error in the
                       application code. Errors are always checked for and reported. The &lt;b&gt;STATUS&lt;/b&gt; setting determines how the kernel
                       handles the error.&lt;br/&gt;
                       In &lt;b&gt;STANDARD&lt;/b&gt; mode OSEK/VDX does not specify how the kernel should react. In this mode AUTOSAR OS&apos;s
                       typical reaction to a static error is to quarantine the offending task or application.&lt;br/&gt;
                       In &lt;b&gt;EXTENDED&lt;/b&gt; mode OSEK/VDX specifies that the system services should return certain error codes when an
                       error is detected. AUTOSAR OS complies with this requirement.&lt;br/&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e3dd21e3-76c1-49f5-b059-f1c687dd97e2"/>
                  <a:a name="__ORIGIN" value="AUTOSAR"/>
                  <a:da name="DEFAULT" value="STANDARD"/>
                  <a:da name="RANGE">
                    <a:v>EXTENDED</a:v>
                    <a:v>STANDARD</a:v>
                  </a:da>
                </v:var>
                <v:var name="OsUseGetServiceId" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        In the precompiled AUTOSAR OS kernel the &lt;em&gt;OSErrorGetServiceID()&lt;/em&gt; API is always available within the
                        &lt;em&gt;ErrorHook()&lt;/em&gt;. However, if you are compiling an optimized kernel from the source code, the &lt;b&gt;USEGETSERVICEID&lt;/b&gt;
                        attribute can be used to enable or disable the feature and could result in a smaller, faster kernel.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="d0b53bbc-c338-445b-a181-c4c988e4bcee"/>
                  <a:a name="__ORIGIN" value="AUTOSAR"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsUseParameterAccess" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        In the precompiled AUTOSAR OS kernel the &lt;em&gt;OSError_x1_x2()&lt;/em&gt; APIs are always available within the &lt;em&gt;ErrorHook()&lt;/em&gt;.
                        However, if you are compiling an optimized kernel from the source code, the &lt;b&gt;USEPARAMETERACCESS&lt;/b&gt;
                        attribute can be used to enable or disable the feature and could result in a smaller, faster kernel.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="c56dedcb-c1cf-4100-9675-1f2a7d04452e"/>
                  <a:a name="__ORIGIN" value="AUTOSAR"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsUseResScheduler" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                    &lt;html&gt;
                      &lt;b&gt;OsUseResScheduler&lt;/b&gt; is a boolean attribute. If it is &lt;b&gt;TRUE&lt;/b&gt;, the Generator creates a resource called
                      &lt;b&gt;RES_SCHEDULER&lt;/b&gt; whose resource ID is typically 0. Any task is eligible to take this resource. The ceiling priority
                      of this resource is at least as high as the highest task priority.&lt;br/&gt;
                      The OSEK/VDX API &lt;em&gt;RES_SCHEDULER&lt;/em&gt; is defined in terms of this resource.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="db693403-1142-4742-9423-78106e02188e"/>
                  <a:a name="__ORIGIN" value="AUTOSAR"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="OsCC" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                    &lt;html&gt;
                      Choose automatic selection or one of the following conformance classes:&lt;br/&gt;
                      &lt;ul&gt;
                      &lt;li&gt;BCC1&lt;/li&gt;
                      &lt;li&gt;BCC2&lt;/li&gt;
                      &lt;li&gt;ECC1&lt;/li&gt;
                      &lt;li&gt;ECC2&lt;/li&gt;
                      &lt;/ul&gt;
                      The precompiled AUTOSAR OS kernel always supports an &lt;b&gt;ECC2&lt;/b&gt; system, but the setting here is used to check
                      that all the tasks satisfy the desired conformance class constraints.
                      If an optimized kernel is compiled from the sources, a lower CC setting might result in a smaller, faster kernel.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="5A1F0C0D-F538-47CF-BBF5-522C26C0F777"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>BCC1</a:v>
                    <a:v>BCC2</a:v>
                    <a:v>ECC1</a:v>
                    <a:v>ECC2</a:v>
                  </a:da>
                </v:var>
                <v:var name="OsTrace" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                     &lt;html&gt;
                       &lt;b&gt;OsTrace&lt;/b&gt; is a boolean attribute.
                       If it is &lt;b&gt;TRUE&lt;/b&gt;, the macro OS_USE_TRACE will be passed via the Make
                       environment to the OS library code, which enables the trace hooks for the
                       Debug&amp;Trace module.
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="9257CAE9-9D12-4FA2-8DBB-C06F8608C870"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsExtra_Runtime_Checks" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                     &lt;html&gt;
                       &lt;b&gt;OsExtra_Runtime_Checks&lt;/b&gt; is a boolean attribute.
                       If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel makes a range of extra checks at specific points
                       while the system is running. This is helpful during the development phase for
                       debugging purposes.
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="9257CAE9-9D97-4FA2-8DBB-C06F8608C870"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsStartupChecks" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                     &lt;html&gt;
                       &lt;b&gt;OsStartupChecks&lt;/b&gt; is a boolean attribute.
                       If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel makes a range of extra checks at
                       system startup. This is helpful during the development phase to detect possible
                       configuration errors and to ensure a coherent system state after startup.
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="9257CAE9-9F67-4FA2-8DBB-C16F8608C870"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsServiceTrace" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="Check this if you want to trace system calls via ORTI"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="D892A51B-BBCC-4F15-8BEE-537B699913F6"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsSourceOptimization" type="BOOLEAN">
                  <a:a name="DESC" 
                       value="Check this if you want to build a library optimized according to the configuration."/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="15F1C6FC-EE1D-4A00-B07F-4FE1CA5450C2"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsMicrocontroller" type="ENUMERATION">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" 
                       value="DCE:732543db-dd1f-42a5-8a1b-cea49770b89b"/>
                  <a:da name="DEFAULT" value="WIN32X86"/>
                  <a:da name="RANGE" value="WIN32X86"/>
                </v:var>
                <v:var name="OsWindowsExecutionTimer" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                       &lt;html&gt;
                         &lt;b&gt;Note:&lt;/b&gt; AUTOSAR protection features are not supported on Windows.&lt;br/&gt;&lt;br/&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" 
                       value="DCE:2bcfeb90-5355-4991-8096-ef14affbb78f"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>TIMER0</a:v>
                    <a:v>TIMER1</a:v>
                    <a:v>TIMER2</a:v>
                    <a:v>TIMER3</a:v>
                  </a:da>
                </v:var>
                <v:var name="OsUseLastError" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                     &lt;html&gt;
                       &lt;b&gt;OsUseLastError&lt;/b&gt; is a boolean attribute.
                       If it is &lt;b&gt;TRUE&lt;/b&gt;, the last error is stored internally and can be accessed
                       via ORTI.
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="A8AB6731-70C3-4632-9B93-B4001638B552"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsTracebuffer" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: 
                     &lt;html&gt;
                       &lt;b&gt;OsTracebuffer&lt;/b&gt; defines the size of the trace buffer for tracing. A
                       value of 0 disables tracing.
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" 
                       value="DCE:c012d02f-3038-4a7c-9838-3092fe08afc9"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=0"/>
                    <a:tst expr="&lt;65536"/>
                  </a:da>
                </v:var>
                <v:var name="OsSchedule" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                    &lt;html&gt;
                      &lt;ul&gt;
                      &lt;li&gt;NON&lt;/li&gt;
                      &lt;li&gt;FULL&lt;/li&gt;
                      &lt;li&gt;MIXED&lt;/li&gt;
                      &lt;/ul&gt;
                      &lt;b&gt;NON&lt;/b&gt; means that all Tasks must have their &lt;b&gt;OsTaskSchedule&lt;/b&gt; attribute set to &lt;b&gt;NON&lt;/b&gt;.&lt;br/&gt;
                      &lt;b&gt;FULL&lt;/b&gt; means that all Tasks must have their &lt;b&gt;OsTaskSchedule&lt;/b&gt; attribute set to &lt;b&gt;FULL&lt;/b&gt;.&lt;br/&gt;
                      &lt;b&gt;MIXED&lt;/b&gt; means that a mixture of Task scheduling types is permitted.&lt;br/&gt;
                      The precompiled AUTOSAR OS kernel always supports mixed scheduling, but the attribute allows the generator
                      to check that all tasks satisfy the desired scheduling constraints. If an optimized kernel is compiled from the
                      sources, a more restrictive &lt;b&gt;OsSchedule&lt;/b&gt; setting might result in a smaller, faster kernel.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="2677CF64-2D20-44B5-8AF9-1D623E857C76"/>
                  <a:da name="DEFAULT" value="MIXED"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;NON&apos;) and (count(../../OsTask/*[OsTaskSchedule = &apos;FULL&apos;]) &gt; 0)" 
                        true="OsSchedule is set to NON, but there are tasks with OsTaskSchedule set to FULL."/>
                  <a:da name="RANGE">
                    <a:v>NON</a:v>
                    <a:v>FULL</a:v>
                    <a:v>MIXED</a:v>
                  </a:da>
                </v:var>
                <v:var name="OsSchedulingAlgorithm" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                    &lt;html&gt;
                      &lt;ul&gt;
                      &lt;li&gt;CLZ_QUEUE&lt;/li&gt;
                      &lt;li&gt;LINKED_LIST&lt;/li&gt;
                      &lt;/ul&gt;
                      &lt;b&gt;CLZ_QUEUE&lt;/b&gt; selects a scheduling algorithm working with one task-queue for each priority.
                      It should be of advantage in configurations with a big number of tasks with many different
                      priorities.&lt;br/&gt;
                      &lt;b&gt;LINKED_LIST&lt;/b&gt; selects the scheduling algorithms based on one single priority queue.&lt;br/&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="656b8e74-7312-4e55-8ec3-ee05b5fd563b"/>
                  <a:da name="DEFAULT" value="CLZ_QUEUE"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>CLZ_QUEUE</a:v>
                    <a:v>LINKED_LIST</a:v>
                  </a:da>
                </v:var>
                <v:ctr name="OsHooks" type="IDENTIFIABLE">
                  <a:a name="DESC" 
                       value="EN: Container to structure all hooks belonging to the OS"/>
                  <a:a name="UUID" value="E03DAB8E-C227-44c9-BF9B-38F0564BD4DF"/>
                  <v:var name="OsErrorHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsErrorHook&lt;/b&gt; is a boolean attribute. If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void ErrorHook(
                  StatusType errorcode)&lt;/em&gt; whenever an error is detected, unless the error was caused within
                  &lt;b&gt;ErrorHook()&lt;/b&gt;.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="563b0aa9-2748-4a39-b23b-79e9f79da974"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="true"/>
                  </v:var>
                  <v:var name="OsPostTaskHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsPostTaskHook&lt;/b&gt; is a boolean attribute. If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void PostTask-
                    Hook(void)&lt;/em&gt; when a task is about to leave the running state.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="59710f79-5e1a-4ec4-9aaa-2206885b34f9"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="OsPreTaskHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                           &lt;b&gt;OsPreTaskHook&lt;/b&gt; is a boolean attribute. If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void PreTaskHook(void)&lt;/em&gt;
                           just before task execution resumes, but after the incoming task has entered the running state.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="783e7929-b188-4c7f-8afe-95a84d2d5306"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="OsProtectionHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsProtectionHook&lt;/b&gt; is a boolean attribute.
                            If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;ProtectionReturn-Type ProtectionHook(StatusType errorcode)&lt;/em&gt;
                            whenever a protection violation is detected, unless the error was caused within &lt;em&gt;ProtectionHook()&lt;/em&gt;.&lt;br/&gt;
                            The return value of the &lt;em&gt;ProtectionHook()&lt;/em&gt; function can be one of:
                            &lt;ul&gt;
                              &lt;li&gt;PRO_TERMINATETASKISR&lt;/li&gt;
                              &lt;li&gt;PRO_TERMINATEAPPL&lt;/li&gt;
                              &lt;li&gt;PRO_TERMINATEAPPL_RESTART&lt;/li&gt;
                              &lt;li&gt;PRO_SHUTDOWN&lt;/li&gt;
                              &lt;li&gt;PRO_IGNORE&lt;/li&gt;
                            &lt;/ul&gt;

                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="9d8d17de-f43f-4d81-bfac-987f59e401e0"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="true"/>
                    <a:da name="ENABLE" value="true"/>
                    <a:da name="WARNING" type="XPath" 
                          expr="(. = &apos;true&apos;) and (../../OsAutosarCustomization/OsErrorHandling = &apos;MINIMAL&apos;)" 
                          true="Protection hook is enabled but OsErrorHandling is set to MINIMAL."/>
                  </v:var>
                  <v:var name="OsShutdownHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                            &lt;b&gt;OsShutdownHook&lt;/b&gt; is a boolean attribute. If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void Shutdown-
                    Hook(StatusType errorcode)&lt;/em&gt; when the system has been shut down. The parameter is the value of the
                    error code passed to &lt;em&gt;ShutdownOS()&lt;/em&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="365d3342-11e9-49f3-97f9-a397bcacce09"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="true"/>
                  </v:var>
                  <v:var name="OsStartupHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                          &lt;html&gt;
                    &lt;b&gt;OsStartupHook&lt;/b&gt; is a boolean attribute. If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void StartupHook(void)&lt;/em&gt;
                    immediately before starting the scheduler.
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="e4e876ef-7e31-4061-aa23-098c793f16a9"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="OsPreISRHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                       &lt;html&gt;
                         &lt;b&gt;OsPreISRHook&lt;/b&gt; is a boolean attribute.
                         If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void PreIsrHook(os_isrid_t isrid) &lt;/em&gt;
                         just before an ISR is called.
                         The parameter is the ID of the ISR. For each ISR, the Generator
                         defines a macro whose name is the OIL name of the ISR and whose value is its ISR ID.
                       &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="AD220EDB-42F3-4A1F-86A6-CE03D966CDB1"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="OsPostISRHook" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsPostISRHook&lt;/b&gt; is a boolean attribute.
                          If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel calls the user-supplied &lt;em&gt;void PostIsrHook(os_isrid_t isrid)&lt;/em&gt;
                          just after an ISR returns.
                          The parameter is the ID of the ISR. For each ISR, the Generator
                          defines a macro whose name is the OIL name of the ISR and whose value is its ISR ID.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="C0284CD4-0781-4D99-B673-EC8498B51F56"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                </v:ctr>
                <v:lst name="OsCoreConfig" type="MAP">
                  <a:a name="COLUMNS">
                    <a:v>OsCoreId</a:v>
                    <a:v>OsLogicalCoreId</a:v>
                  </a:a>
                  <a:da name="INVALID" type="XPath" 
                        expr="node:when(node:value(../OsUseLogicalCoreIDs),count(./*)&gt;=../OsNumberOfCores,&apos;true&apos;)" 
                        false="If logical core ids are used, all cores have to be configured."/>
                  <v:ctr name="OsCoreConfig" type="IDENTIFIABLE">
                    <a:a name="UUID" 
                         value="F91D29D3-17E4-4A05-AD36-D8F521B728D0"/>
                    <v:var name="OsCoreId" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                         &lt;html&gt;&lt;p&gt;&lt;b&gt;OsCoreId&lt;/b&gt; physical core index based on the CPU core ID.&lt;/p&gt;
                               &lt;p&gt;
                               Values range from 0 to OsMaxNumberOfCores-1.
                               &lt;/p&gt;
                               &lt;p&gt;
                               The logical core value OsLogicalCoreId is mapped to the value of the physical core index shown in OsCoreId.
                               &lt;/p&gt;
                               &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="ECUC:771555ef-f674-40bd-a17b-e79617039d87"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="(. &gt;= 0) and (. &lt; ../../../OsMaxNumberOfCores)" 
                               false="Core Id is invalid."/>
                        <a:tst expr="text:uniq(../../*/OsCoreId, .)" 
                               false="OsCoreId needs to be unique"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsLogicalCoreId" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>EN: 
                        &lt;html&gt;&lt;p&gt;&lt;b&gt;OsLogicalCoreId&lt;/b&gt; manually changes the logical core ID for the physical core with index OsCoreId.&lt;/p&gt;
                               &lt;p&gt;
                               To change this configuration item, OsUseLogicalCoreIDs has to be enabled within OsOS.
                               &lt;/p&gt;
                               &lt;p&gt;
                               Potential values range from -1 (default value) up to OsMaxNumberOfCores-1.
                               &lt;/p&gt;
                               &lt;p&gt;
                               The default logical core value of &apos;-1&apos; means that you choose to use the physical core index shown in OsCoreId for the value of the logical core ID.
                               &lt;/p&gt;
                               &lt;p&gt;
                               The logical core values that you choose for the whole configuration should be zero-based, consecutive and unique. 
                               &lt;/p&gt;
                               &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:da name="DEFAULT" value="-1"/>
                      <a:da name="ENABLE" type="XPath" 
                            expr="node:value(../../../OsUseLogicalCoreIDs)" 
                            true="true" false="false"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst 
                               expr="((. &gt;= -1) and (. &lt; ../../../OsMaxNumberOfCores))" 
                               false="Logical Core Id is invalid."/>
                        <a:tst 
                               expr="text:uniq(../../*/OsLogicalCoreId, .) | (. = -1)" 
                               false="OsLogicalCoreId needs to be unique"/>
                        <a:tst 
                               expr="text:contains(../../*/OsLogicalCoreId, ../OsCoreId) and (. = -1)" 
                               true="OsLogicalCoreId needs to be unique (&apos;-1&apos; defaults to OsCoreId)"/>
                      </a:da>
                    </v:var>
                    <v:var name="OsWindowsExecutionTimer" type="ENUMERATION">
                      <a:a name="DESC" 
                           value="Choose a timer for the execution protection."/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:a name="UUID" 
                           value="DCE:2bcfeb90-5355-4991-8096-ef14affbb78f"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="RANGE">
                        <a:v>TIMER0</a:v>
                        <a:v>TIMER1</a:v>
                        <a:v>TIMER2</a:v>
                        <a:v>TIMER3</a:v>
                      </a:da>
                    </v:var>
                  </v:ctr>
                </v:lst>
                <v:var name="OsGenerateSWCD" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsGenerateSWCD&lt;/b&gt; is a boolean attribute.&lt;br/&gt;
                          If it is enabled, the OS specific software component description (SWCD) files will be generated,
                          exporting a subset of the OS API via RTE interfaces.&lt;br/&gt;
                          &lt;b&gt;Note:&lt;/b&gt; Enabling this parameter will result in bigger generation and compile times. You only
                          need to enable it if you are using software components that access OS API via RTE calls, which is unlikely.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr=". = &apos;true&apos; and count(as:modconf(&apos;Rte&apos;)) = 0" 
                        true="The usage of the RTE is enabled for the Os, but the RTE is disabled or missing."/>
                </v:var>
                <v:var name="OsTrappingKernel" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          &lt;b&gt;OsTrappingKernel&lt;/b&gt; is an optional boolean attribute.&lt;br/&gt;
                          If it is &lt;b&gt;TRUE&lt;/b&gt;, the kernel is entered via a Systrap mechanism. This is necessary for memory protection.&lt;br/&gt;
                          If it is &lt;b&gt;FALSE&lt;/b&gt;, the kernel is entered via function calls. Memory protection is not available in this case.&lt;br/&gt;
                          If the optional parameter is disabled, it will be automatically enabled if non-trusted applications are found.&lt;br/&gt;&lt;br/&gt;
                          &lt;b&gt;Note:&lt;/b&gt; This parameter is only available on architectures that allow a selection between Systrap and function calls.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" value="9257CAE9-9D97-4FA2-8DBB-C06FF608C870"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" expr=". = &apos;false&apos;" 
                        true="System call kernel only."/>
                </v:var>
                <v:ctr name="OsCpuLoadMeasurement" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                         &lt;html&gt;This container configures the CPU load measurement functionality in the
                      AutosarOS kernel.&lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" value="E03DCB8E-C237-41c9-BA9B-38F0564BD4FF"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:var name="OsCpuLoadIntervalDuration" type="FLOAT">
                    <a:a name="DESC">
                      <a:v>EN: 
                         &lt;html&gt;The duration of the interval between the CPU load measurement points in
                        [s]. Several of these intervals are combined to form a window in which the
                        average and peak CPU load is calculated.&lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="abc68abf-904f-4ef9-b1b6-f001c766aad2"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="0.1"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=86400.0"/>
                      <a:tst expr="&gt;0.0"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsCpuLoadNumIntervals" type="INTEGER">
                    <a:a name="DESC">
                      <a:v>EN: 
                         &lt;html&gt;The number of intervals that are used to calculate the average and peak
                        CPU load.&lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="abc68abf-904f-4ef9-b0b6-f001a666aad2"/>
                    <a:a name="__ORIGIN" value="AUTOSAR"/>
                    <a:da name="DEFAULT" value="10"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=4294967295"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <v:var name="OsCpuLoadRounding" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                         &lt;html&gt;Specifies the way how the average is rounded in the integer CPU load
                        calculation. DOWN will use the lower result, UP rounds up. NEAREST adds 1/2
                        to find a mean value.&lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DBB-C06FF608C870"/>
                    <a:da name="DEFAULT" value="NEAREST"/>
                    <a:da name="RANGE">
                      <a:v>DOWN</a:v>
                      <a:v>NEAREST</a:v>
                      <a:v>UP</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:var name="OsUseLogicalCoreIDs" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN: 
                    &lt;html&gt;&lt;p&gt;&lt;b&gt;OsUseLogicalCoreIDs&lt;/b&gt; enables the Advanced Logical Core ID configuration feature.&lt;/p&gt;
                           &lt;p&gt;
                           If this value is disabled, all logical core IDs are equivalent to their physical counterparts.
                           &lt;/p&gt;
                           &lt;p&gt;
                           If the feature is enabled, the logical core IDs must be configured within OsCoreConfig.
                           &lt;/p&gt;
                           &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="OsTimestampTimer" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          The timestamp timer is always based on the API &lt;tt&gt;QueryPerformanceCounter&lt;/tt&gt; (QPC)
                          of Microsoft Windows.
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:da name="DEFAULT" value="INTERNAL"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="not(node:exists(&apos;../../OsMicrokernel&apos;))"/>
                  <a:da name="RANGE" value="INTERNAL"/>
                </v:var>
                <v:var name="OsInitCoreId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: 
                     &lt;html&gt;&lt;p&gt;&lt;b&gt;OsInitCoreId&lt;/b&gt; designates the processor core, which will control the OS startup.&lt;/p&gt;
                           &lt;p&gt;If this value is disabled, the generator will choose it by itself.
                           It depends on the target hardware and the current configuration, which one of the cores is chosen automatically.
                           If you want a certain core to control the OS startup, then enable OsInitCoreId.
                           &lt;/p&gt;
                           &lt;p&gt;Note: If ALCI feature is enabled, this value represents the logical core id of the master core.&lt;/p&gt;
                           &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="635a4674-2187-4651-9e90-3b24c52c350b"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. &gt;= 0) and (. &lt; ../OsMaxNumberOfCores)" 
                        false="OsInitCoreId must lie within 0 to OsMaxNumberOfCores-1."/>
                </v:var>
                <v:var name="OsMaxNumberOfCores" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: 
                         &lt;html&gt;This is the number of cores provided by the hardware.&lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="e1d0fa14-6094-4565-9232-b23fa77dd1eb"/>
                  <a:a name="VISIBLE" value="true"/>
                  <a:da name="DEFAULT" value="4"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="INVALID" type="Range" expr="=4"/>
                </v:var>
                <v:ctr name="OsAutosarCustomization" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>EN: 
                        &lt;html&gt;
                          The OsAutosarCustomization container and its attrributes can be used to can be use to fine-tune the OS
                          to gain size, performance or other benefits.&lt;br/&gt;
                          &lt;b&gt;
                          Warning:&lt;br/&gt;
                          Use of non-default values for these options means that the OS is not fully conformant with the
                          Autosar specification.
                          &lt;/b&gt;

                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" value="E03DAB8E-C227-44c9-BF9B-38F0564BD4FF"/>
                  <a:da name="ENABLE" value="false"/>
                  <v:var name="OsExceptionHandling" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                           &lt;html&gt;
                             &lt;b&gt;Note:&lt;/b&gt; Exceptions are always handled by Windows.&lt;br/&gt;&lt;br/&gt;
                           &lt;/html&gt;</a:v>
                      <a:v>EN: 
                         &lt;html&gt;
                           This option can be used to disable the execption handling. If set to &lt;b&gt;FALSE&lt;/b&gt;, a minimal exception vector table is
                           used, which can be adapted if necessary.&lt;br/&gt;
                           &lt;em&gt;
                           The exact behaviour is architecture-dependent. On some architectures this option may have no
                           effect because the OS relies on some exceptions to perform its duties.
                           &lt;/em&gt;
                           &lt;br/&gt;
                           &lt;b&gt;
                           Setting the option to &lt;b&gt;FALSE&lt;/b&gt; will remove the ability of the OS to detect and correctly react to protection
                           errors.
                           &lt;/b&gt;
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DBB-C06F860FC870"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" value="false"/>
                  </v:var>
                  <v:var name="OsErrorHandling" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          This option can be used to restrict the amount of error handling that is performed by the OS.
                          The permitted values are MINIMAL, AUTOSAR and FULL.&lt;br/&gt;

                           If you choose &lt;b&gt;MINIMAL&lt;/b&gt;, the error handler &lt;em&gt;OS_Error()&lt;/em&gt; is never called,
                           and the default error code is returned to the user.
                           Choosing this option means that error and protection hooks cannot be called and the correct action
                           after an error (such as killing a task) does not take place.&lt;br/&gt;
                           If you choose &lt;b&gt;AUTOSAR&lt;/b&gt;, the error handler &lt;em&gt;OS_Error()&lt;/em&gt; will be called for all errors except those that occur in
                           System Services that do not return &lt;b&gt;StatusType&lt;/b&gt;.
                           This is the Autosar-conformant option.&lt;br/&gt;
                           If you choose &lt;b&gt;FULL&lt;/b&gt;, the error handler &lt;em&gt;OS_Error()&lt;/em&gt; will be called for all errors, including those that occur in
                           System Services that do not return &lt;b&gt;StatusType&lt;/b&gt;.
                           It will also call the error hook for those errors.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DBB-C06FF608C870"/>
                    <a:da name="DEFAULT" value="AUTOSAR"/>
                    <a:da name="RANGE">
                      <a:v>MINIMAL</a:v>
                      <a:v>AUTOSAR</a:v>
                      <a:v>FULL</a:v>
                    </a:da>
                    <a:da name="WARNING" type="XPath" 
                          expr="(. = &apos;MINIMAL&apos;) and (../../OsSourceOptimization != &apos;true&apos;)" 
                          true="OsErrorHandling is set to MINIMAL, but won&apos;t have any effect as OsSourceOptimization is disabled."/>
                  </v:var>
                  <v:var name="OsStrictServiceProtection" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                         &lt;html&gt;
                           Setting this option to &lt;b&gt;FALSE&lt;/b&gt; disables most of the calling-context checks in the System Services. The OS will
                            then only check the calling context when it is necessary for the correct functioning of the OS.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DFB-C06F8608C870"/>
                    <a:da name="DEFAULT" value="true"/>
                  </v:var>
                  <v:var name="OsCat1DirectCall" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          This parameter selects whether a category 1 ISR is called directly or via the operating
                          system&apos;s category 1 interrupt handler.&lt;br/&gt;

                          When this option is disabled, the operating system&apos;s category 1 handler is used as
                          the entry in the interrupt vector table. This handler performs a context save, switches to the kernel stack
                          (if applicable, depending on the architecture) and sets internal context data for
                          operating system for service protection. This setting is conformant with the Autosar
                          specification.&lt;br/&gt;

                          If you enable this option, the configured ISR is entered directly into the interrupt
                          vector table. This allows a fast entry into the ISR, but Autosar service
                          protection fails. Furthermore, use of operating system APIs is not supported, because
                          the APIs do not know that they have been called from a category 1 ISR and may not function
                          correctly. This applies even to the interrupt locking APIs (SuspendAllInterrupts/ResumeAllInterrupts etc.).
                          In this case it is recommended to enable also OsFastInterruptLocking, as these routines bypass
                          the caller checks.&lt;br/&gt;

                          Please note that on several architectures the ISR routine needs to be prefixed with an __interrupt
                          keyword (check compiler documentation for further details) which saves the context prior to entering the ISR.
                          You can pass the keyword to the ISR prototype by defining the macro OS_INTERRUPT_KEYWORD prior to including
                          Os.h. For example, if the toolchain uses the keyword &quot;__interrupt&quot;, use the following code:
                          &lt;pre&gt;
#define OS_INTERRUPT_KEYWORD __interrupt
#include &quot;Os.h&quot;

__interrupt ISR(foo)
{
  (...)
}
                          &lt;/pre&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8EBB-C06F860FC870"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="OsUserTaskReturn" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                             &lt;html&gt;
                               &lt;b&gt;Note:&lt;/b&gt; On Windows, each task is executed by a separate thread, hence there is no danger
                               of executing undefined code in case &lt;em&gt;ChainTask()&lt;/em&gt; or &lt;em&gt;TerminateTask()&lt;/em&gt; is missing
                               at the end of a task&apos;s function. This is because, when a task&apos;s function ends, the respective
                               thread simply blocks until the task is restarted. Furthermore, the gained memory savings are
                               not relevant in the context of Windows.&lt;br/&gt;&lt;br/&gt;
                             &lt;/html&gt;</a:v>
                      <a:v>EN: 
                         &lt;html&gt;
                           The &lt;em&gt;OS_MissingTerminateTask()&lt;/em&gt; function is entered if a task returns from its main function without calling &lt;em&gt;TerminateTask()&lt;/em&gt;
                           or &lt;em&gt;ChainTask()&lt;/em&gt;. This optimisation option controls how &lt;em&gt;OS_MissingTerminateTask()&lt;/em&gt; handles the error.&lt;br/&gt;
                           Setting this option to LOOP configures &lt;em&gt;OS_MissingTerminateTask()&lt;/em&gt; to be a simple endless loop. If you know that
                           none of your tasks can ever return from its main function you can select this option to save a little code space.
                           However, if a task ever returns without calling &lt;em&gt;TerminateTask()&lt;/em&gt;, or &lt;em&gt;TerminateTask()&lt;/em&gt; returns unexpectedly (for
                           example if the task still occupies a resource or has disabled interrupts) it will remain in an endless loop.&lt;br/&gt;
                           Setting this option to KILL_TASK configures &lt;em&gt;OS_MissingTerminateTask()&lt;/em&gt; to enter the kernel and execute
                           &lt;em&gt;OS_KernTaskReturn()&lt;/em&gt;. &lt;em&gt;OS_KernTaskReturn()&lt;/em&gt; will either call the error handler to kill the task or, if error handling is disabled, kill the task itself. If
                           this fails for any reason, &lt;em&gt;OS_MissingTerminateTask()&lt;/em&gt; will try to shut down the OS. If this fails, too, there is
                           still an endless loop to prevent the task from executing undefined code.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DBB-C06FF608C870"/>
                    <a:da name="DEFAULT" value="KILL_TASK"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>KILL_TASK</a:v>
                      <a:v>LOOP</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsInterruptLockingChecks" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                            &lt;ul&gt;
                               &lt;li&gt;&lt;b&gt;MINIMAL&lt;/b&gt;:
                                  Select &lt;b&gt;MINIMAL&lt;/b&gt; to only
                                  check the interrupt lock status when it affects
                                  the kernel&apos;s operation. The interrupt lock status
                                  affects the kernel&apos;s operation e.g. in the
                                  functions &lt;tt&gt;GetResource&lt;/tt&gt; and
                                  &lt;tt&gt;ReleaseResource&lt;/tt&gt;.
                               &lt;/li&gt;
                               &lt;li&gt;&lt;b&gt;EXTRACHECK&lt;/b&gt;:
                                  Select &lt;b&gt;EXTRACHECK&lt;/b&gt; to
                                  check the interrupt lock status in all API
                                  functions which may cause a task switch.
                               &lt;/li&gt;
                               &lt;li&gt;&lt;b&gt;AUTOSAR&lt;/b&gt;:
                                  Select &lt;b&gt;AUTOSAR&lt;/b&gt; to be
                                  fully compliant with the AUTOSAR
                                  specification.
                               &lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;p&gt;
                                &lt;b&gt;Tasks always start with interrupts enabled&lt;/b&gt;&lt;br/&gt;
                                The interrupt lock status is considered to be
                                part of the task&apos;s context. This means that each newly
                                activated task starts with interrupts enabled.
                            &lt;/p&gt;
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DFB-C06F8608C870"/>
                    <a:da name="DEFAULT" value="AUTOSAR"/>
                    <a:da name="RANGE">
                      <a:v>MINIMAL</a:v>
                      <a:v>EXTRACHECK</a:v>
                      <a:v>AUTOSAR</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsFastInterruptLocking" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                            &lt;html&gt;
                              &lt;b&gt;Note:&lt;/b&gt; Fast interrupt locking is not supported on Windows.&lt;br/&gt;&lt;br/&gt;
                            &lt;/html&gt;</a:v>
                      <a:v>EN: 
                        &lt;html&gt;
                          Enabling this option replaces the OS interrupt locking mechanism with a faster,
                          but not Autosar compliant mechanism. It affects the API functions
                          DisableAllInterrupts()/EnableAllInterrupts(), SuspendAllInterrupts()/ResumeAllInterrupts() and
                          SuspendOsInterrupts()/ResumeOsInterrupts(). When enabled, the kernel bypasses all checks and
                          syscall handlers and directly disables/enables the interrupts upon calling the API functions.&lt;br/&gt;

                          &lt;b&gt;Caveat:&lt;/b&gt; In memory-protected systems, the application using the fast locking functions
                          must be trusted, i.e. have supervisor privileges. Calling the functions from a
                          non-trusted application will lead to an exception.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9A97-4FA2-8ECB-C16F365FC870"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                  <v:var name="OsCallIsr" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                             &lt;html&gt;
                               &lt;b&gt;Note:&lt;/b&gt; On Windows, ISRs are always called directly. This means, it is not possible to
                               kill a running ISR.&lt;br/&gt;&lt;br/&gt;
                             &lt;/html&gt;</a:v>
                      <a:v>EN: 
                         &lt;html&gt;
                           Setting this option to &lt;b&gt;DIRECTLY&lt;/b&gt; causes the OS to call all category 2 ISRs directly rather than via a wrapper
                           function. This means that all ISRs (even non-trusted) run with the permissions of the OS, and ISRs cannot be
                           killed if they cause a protection fault.
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DBB-C06FF608C870"/>
                    <a:da name="DEFAULT" value="DIRECTLY"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>DIRECTLY</a:v>
                      <a:v>VIA_WRAPPER</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsCallAppErrorHook" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                             &lt;html&gt;
                               &lt;b&gt;Note:&lt;/b&gt; On Windows, hook functions are always called directly.
                               This means, there is no possibility to kill or to terminate the execution of
                               a hook function, while it is running.&lt;br/&gt;&lt;br/&gt;
                             &lt;/html&gt;</a:v>
                      <a:v>EN: 
                         &lt;html&gt;
                           Setting this option to DIRECTLY causes the OS to call all application error hooks directly rather than via a
                           wrapper function. This means that all error hooks (even those belonging to non-trusted applications) run with
                           the permissions of the OS, and the error hooks cannot be killed if they cause a protection fault.
                           &lt;b&gt;
                           The global ErrorHook and ProtectionHook functions are always called directly.
                           &lt;/b&gt;
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DBB-C06FF608C870"/>
                    <a:da name="DEFAULT" value="DIRECTLY"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>DIRECTLY</a:v>
                      <a:v>VIA_WRAPPER</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="OsPermitSystemObjects" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>EN: 
                        &lt;html&gt;
                          Setting this option to &lt;b&gt;TRUE&lt;/b&gt; inhibits the check that, if an OS-Application exists, all Tasks and ISRs must belong
                          to an OS-Application. Objects that do not belong to an application are known as &quot;system objects&quot; and are always
                          trusted.
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DFB-C06F8608C870"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <v:var name="OsCallAppStartupShutdownHook" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>EN: 
                             &lt;html&gt;
                               &lt;b&gt;Note:&lt;/b&gt; On Windows, hook functions are always called directly.
                               This means, there is no possibility to kill or to terminate the execution of
                               a hook function, while it is running.&lt;br/&gt;&lt;br/&gt;
                             &lt;/html&gt;</a:v>
                      <a:v>EN: 
                         &lt;html&gt;
                           Setting this option to &lt;b&gt;DIRECTLY&lt;/b&gt; causes the OS to call all application startup and shutdown hooks directly rather
                           than via a wrapper function. This means that all these hooks (even those belonging to non-trusted applications)
                           run with the permissions of the OS, and the hooks cannot be killed if they cause a protection fault.
                           &lt;b&gt;
                           The global StartupHook and ShutdownHook are always called directly.
                           &lt;/b&gt;
                         &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="UUID" 
                         value="9257CAE9-9D97-4FA2-8DBB-C06FF608C870"/>
                    <a:da name="DEFAULT" value="DIRECTLY"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="RANGE">
                      <a:v>DIRECTLY</a:v>
                      <a:v>VIA_WRAPPER</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
                <v:var name="OsProtection" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        &lt;b&gt;Note:&lt;/b&gt; AUTOSAR protection features are not supported on Windows.&lt;/br&gt;&lt;/br&gt;
                      &lt;/html&gt;</a:v>
                    <a:v>EN: 
                      &lt;html&gt;
                        On microcontrollers that support memory protection the presence of non-trusted applications in the configuration will
                        cause memory protection to be enabled. On some microcontrollers this can cause problems with debugger
                        breakpoints in the flash memory.
                        On such processors the &lt;b&gt;OsProtection&lt;/b&gt; attribute permits you to disable the memory protection
                        features without changing the trust status of the applications. The possible values of the &lt;b&gt;OsProtection&lt;/b&gt; attribute
                        are ON and OFF.
                        Note that the use of this attribute does not affect the trust status of applications, nor does it affect the CPU
                        mode in which the tasks run, so if a task performs an action that is not permitted in the user mode of the CPU,
                        the protection system will still detect it.&lt;br/&gt;
                        &lt;b&gt;Setting the PROTECTION attribute to any value other than ON invalidates any safety certification
                        of the OS. The Generator produces a warning for this.&lt;/b&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" 
                       value="DCE:d0486548-50de-4c09-ad4d-f63473661e73"/>
                  <a:da name="DEFAULT" value="OFF"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>OFF</a:v>
                    <a:v>ON</a:v>
                  </a:da>
                </v:var>
                <v:var name="OsStackOptimization" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>EN: 
                     &lt;html&gt;
                       &lt;b&gt;Note:&lt;/b&gt; Windows is in charge of stack management.
                       Hence, there are no stack optimization options available.&lt;/br&gt;&lt;/br&gt;
                     &lt;/html&gt;</a:v>
                    <a:v>EN: 
                     &lt;html&gt;
                       &lt;b&gt;OsStackOptimization&lt;/b&gt; is an enumerated attribute that controls how the Generator optimizes task stacks across
                       tasks and applications. The values are:
                       &lt;ul&gt;
                      &lt;li&gt;NO&lt;/li&gt;
                      &lt;li&gt;WITHIN_APPLICATIONS&lt;/li&gt;
                      &lt;li&gt;GLOBAL&lt;/li&gt;
                       &lt;/ul&gt;
                        With NO optimization, each task gets its own stack area.
                        This option uses the most RAM but is useful to determine
                        how much stack each individual task really uses.
                        Optimization WITHIN_APPLICATIONS allows tasks of the same application to share a stack when the tasks
                        types and priorities permit.
                        GLOBAL optimization allows tasks from different applications to share stacks. This option provides the most
                        efficient RAM footprint, but might conflict with memory protection mechanisms on some architectures.
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" 
                       value="DCE:c473b532-aa0c-4ef6-b9c1-c44881f71017"/>
                  <a:da name="DEFAULT" value="NO"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>GLOBAL</a:v>
                    <a:v>NO</a:v>
                    <a:v>WITHIN_APPLICATIONS</a:v>
                  </a:da>
                </v:var>
                <v:var name="OsWindowsTimeWarpFactor" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>EN: 
                      &lt;html&gt;
                        &lt;b&gt;OsWindowsTimeWarpFactor&lt;/b&gt; The time warp factor may be used to slow down
                        the time perceived by an AUTOSAR application proportionally. This might
                        be helpful in situations, when AUTOSAR applications shall be ported to
                        Windows but their timing requirements are too demanding. Instead of updating
                        all timing parameters, one could simply try to increase the time warp factor
                        to relax an application&apos;s overall timing requirements.&lt;/br&gt;&lt;/br&gt;
                        A factor of 1 makes an AUTOSAR application perceiving the passing of time with
                        the speed of a wall clock.
                        Larger factors slow down the perceived speed of time proportionally.
                        For example, a factor of 10 stretches 100 milliseconds in the AUTOSAR world
                        to 1 second in the Windows world. This stretching allows Windows to deal
                        with timing requirements of AUTOSAR applications, although the AUTOSAR
                        application itself does not take notice of this stretching.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="UUID" 
                       value="DCE:c012d02f-3038-4b7c-9838-3092fe08afc9"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=1"/>
                    <a:tst expr="&lt;4294967296"/>
                  </a:da>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
