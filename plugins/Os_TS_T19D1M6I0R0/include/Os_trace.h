/* Os_trace.h
 *
 * This file provides a defined interface for the Dbg module.
 *
 * CHECK: TABS 4 (see editor commands at end of file)
 *
 * Copyright Elektrobit Automotive GmbH
 * All rights exclusively reserved for Elektrobit Automotive GmbH,
 * unless expressly agreed to otherwise.
 *
 * $Id: Os_trace.h 27521 2017-09-21 14:10:59Z olme8414 $
*/

/* MISRA-C:2012 Deviation List
 *
 * MISRAC2012-1) Deviated Rule: 5.4 (required)
 * Macro identifiers shall be distinct.
 *
 * Reason:
 * These names are mandated by the EB tresos Debug and Trace interface.
*/

#ifndef OS_TRACE_H
#define OS_TRACE_H

#ifndef OS_ASM

#if (OS_USE_TRACE==1)
#include <Dbg.h>
#endif

#endif

/* Deviation MISRAC2012-1 <START> */

/* OSEK OS API */
#ifndef OS_TRACE_ACTIVATETASK_ENTRY
#define OS_TRACE_ACTIVATETASK_ENTRY(TaskId)
#endif

#ifndef OS_TRACE_ACTIVATETASK_EXIT
#define OS_TRACE_ACTIVATETASK_EXIT_P(r,TaskId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_ACTIVATETASK_EXIT_P(r,TaskId) OS_TRACE_ACTIVATETASK_EXIT(r,TaskId)
#else
#define OS_TRACE_ACTIVATETASK_EXIT_P(r,TaskId) OS_TRACE_ACTIVATETASK_EXIT()
#endif
#endif


#ifndef OS_TRACE_TERMINATETASK_ENTRY
#define OS_TRACE_TERMINATETASK_ENTRY()
#endif

#ifndef OS_TRACE_TERMINATETASK_EXIT
#define OS_TRACE_TERMINATETASK_EXIT_P(r)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_TERMINATETASK_EXIT_P(r) OS_TRACE_TERMINATETASK_EXIT(r)
#else
#define OS_TRACE_TERMINATETASK_EXIT_P(r) OS_TRACE_TERMINATETASK_EXIT()
#endif
#endif


#ifndef OS_TRACE_CHAINTASK_ENTRY
#define OS_TRACE_CHAINTASK_ENTRY(TaskId)
#endif

#ifndef OS_TRACE_CHAINTASK_EXIT
#define OS_TRACE_CHAINTASK_EXIT_P(r,TaskId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CHAINTASK_EXIT_P(r,TaskId) OS_TRACE_CHAINTASK_EXIT(r,TaskId)
#else
#define OS_TRACE_CHAINTASK_EXIT_P(r,TaskId) OS_TRACE_CHAINTASK_EXIT()
#endif
#endif


#ifndef OS_TRACE_SCHEDULE_ENTRY
#define OS_TRACE_SCHEDULE_ENTRY()
#endif

#ifndef OS_TRACE_SCHEDULE_EXIT
#define OS_TRACE_SCHEDULE_EXIT_P(r)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SCHEDULE_EXIT_P(r) OS_TRACE_SCHEDULE_EXIT(r)
#else
#define OS_TRACE_SCHEDULE_EXIT_P(r) OS_TRACE_SCHEDULE_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETTASKID_ENTRY
#define OS_TRACE_GETTASKID_ENTRY()
#endif

#ifndef OS_TRACE_GETTASKID_EXIT
#define OS_TRACE_GETTASKID_EXIT_P(r)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETTASKID_EXIT_P(r) OS_TRACE_GETTASKID_EXIT(r)
#else
#define OS_TRACE_GETTASKID_EXIT_P(r) OS_TRACE_GETTASKID_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETTASKSTATE_ENTRY
#define OS_TRACE_GETTASKSTATE_ENTRY(TaskId)
#endif

#ifndef OS_TRACE_GETTASKSTATE_EXIT
#define OS_TRACE_GETTASKSTATE_EXIT_P(r,TaskId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETTASKSTATE_EXIT_P(r,TaskId) OS_TRACE_GETTASKSTATE_EXIT(r,TaskId)
#else
#define OS_TRACE_GETTASKSTATE_EXIT_P(r,TaskId) OS_TRACE_GETTASKSTATE_EXIT()
#endif
#endif

/* Not instrumented API */
#ifndef OS_TRACE_DISABLEALLINTERRUPTS_ENTRY
#define OS_TRACE_DISABLEALLINTERRUPTS_ENTRY()
#endif

#ifndef OS_TRACE_DISABLEALLINTERRUPTS_EXIT
#define OS_TRACE_DISABLEALLINTERRUPTS_EXIT()
#endif


#ifndef OS_TRACE_ENABLEALLINTERRUPTS_ENTRY
#define OS_TRACE_ENABLEALLINTERRUPTS_ENTRY()
#endif

#ifndef OS_TRACE_ENABLEALLINTERRUPTS_EXIT
#define OS_TRACE_ENABLEALLINTERRUPTS_EXIT()
#endif


#ifndef OS_TRACE_SUSPENDALLINTERRUPTS_ENTRY
#define OS_TRACE_SUSPENDALLINTERRUPTS_ENTRY()
#endif

#ifndef OS_TRACE_SUSPENDALLINTERRUPTS_EXIT
#define OS_TRACE_SUSPENDALLINTERRUPTS_EXIT()
#endif


#ifndef OS_TRACE_RESUMEALLINTERRUPTS_ENTRY
#define OS_TRACE_RESUMEALLINTERRUPTS_ENTRY()
#endif

#ifndef OS_TRACE_RESUMEALLINTERRUPTS_EXIT
#define OS_TRACE_RESUMEALLINTERRUPTS_EXIT()
#endif


#ifndef OS_TRACE_SUSPENDOSINTERRUPTS_ENTRY
#define OS_TRACE_SUSPENDOSINTERRUPTS_ENTRY()
#endif

#ifndef OS_TRACE_SUSPENDOSINTERRUPTS_EXIT
#define OS_TRACE_SUSPENDOSINTERRUPTS_EXIT()
#endif


#ifndef OS_TRACE_RESUMEOSINTERRUPTS_ENTRY
#define OS_TRACE_RESUMEOSINTERRUPTS_ENTRY()
#endif

#ifndef OS_TRACE_RESUMEOSINTERRUPTS_EXIT
#define OS_TRACE_RESUMEOSINTERRUPTS_EXIT()
#endif
/* Not instrumented API */

#ifndef OS_TRACE_GETRESOURCE_ENTRY
#define OS_TRACE_GETRESOURCE_ENTRY(ResourceId)
#endif

#ifndef OS_TRACE_GETRESOURCE_EXIT
#define OS_TRACE_GETRESOURCE_EXIT_P(r,ResourceId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETRESOURCE_EXIT_P(r,ResourceId) OS_TRACE_GETRESOURCE_EXIT(r,ResourceId)
#else
#define OS_TRACE_GETRESOURCE_EXIT_P(r,ResourceId) OS_TRACE_GETRESOURCE_EXIT()
#endif
#endif


#ifndef OS_TRACE_RELEASERESOURCE_ENTRY
#define OS_TRACE_RELEASERESOURCE_ENTRY(ResourceId)
#endif

#ifndef OS_TRACE_RELEASERESOURCE_EXIT
#define OS_TRACE_RELEASERESOURCE_EXIT_P(r,ResourceId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_RELEASERESOURCE_EXIT_P(r,ResourceId) OS_TRACE_RELEASERESOURCE_EXIT(r,ResourceId)
#else
#define OS_TRACE_RELEASERESOURCE_EXIT_P(r,ResourceId) OS_TRACE_RELEASERESOURCE_EXIT()
#endif
#endif


#ifndef OS_TRACE_SETEVENT_ENTRY
#define OS_TRACE_SETEVENT_ENTRY(TaskId,EventMask)
#endif

#ifndef OS_TRACE_SETEVENT_EXIT
#define OS_TRACE_SETEVENT_EXIT_P(r,TaskId,EventMask)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SETEVENT_EXIT_P(r,TaskId,EventMask) OS_TRACE_SETEVENT_EXIT(r,TaskId,EventMask)
#else
#define OS_TRACE_SETEVENT_EXIT_P(r,TaskId,EventMask) OS_TRACE_SETEVENT_EXIT()
#endif
#endif


#ifndef OS_TRACE_CLEAREVENT_ENTRY
#define OS_TRACE_CLEAREVENT_ENTRY(EventMask)
#endif

#ifndef OS_TRACE_CLEAREVENT_EXIT
#define OS_TRACE_CLEAREVENT_EXIT_P(r,EventMask)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CLEAREVENT_EXIT_P(r,EventMask) OS_TRACE_CLEAREVENT_EXIT(r,EventMask)
#else
#define OS_TRACE_CLEAREVENT_EXIT_P(r,EventMask) OS_TRACE_CLEAREVENT_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETEVENT_ENTRY
#define OS_TRACE_GETEVENT_ENTRY(TaskId)
#endif

#ifndef OS_TRACE_GETEVENT_EXIT
#define OS_TRACE_GETEVENT_EXIT_P(r,TaskId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETEVENT_EXIT_P(r,TaskId) OS_TRACE_GETEVENT_EXIT(r,TaskId)
#else
#define OS_TRACE_GETEVENT_EXIT_P(r,TaskId) OS_TRACE_GETEVENT_EXIT()
#endif
#endif


#ifndef OS_TRACE_WAITEVENT_ENTRY
#define OS_TRACE_WAITEVENT_ENTRY(EventMask)
#endif

#ifndef OS_TRACE_WAITEVENT_EXIT
#define OS_TRACE_WAITEVENT_EXIT_P(r,EventMask)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_WAITEVENT_EXIT_P(r,EventMask) OS_TRACE_WAITEVENT_EXIT(r,EventMask)
#else
#define OS_TRACE_WAITEVENT_EXIT_P(r,EventMask) OS_TRACE_WAITEVENT_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETALARMBASE_ENTRY
#define OS_TRACE_GETALARMBASE_ENTRY(AlarmId)
#endif

#ifndef OS_TRACE_GETALARMBASE_EXIT
#define OS_TRACE_GETALARMBASE_EXIT_P(r,AlarmId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETALARMBASE_EXIT_P(r,AlarmId) OS_TRACE_GETALARMBASE_EXIT(r,AlarmId)
#else
#define OS_TRACE_GETALARMBASE_EXIT_P(r,AlarmId) OS_TRACE_GETALARMBASE_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETALARM_ENTRY
#define OS_TRACE_GETALARM_ENTRY(AlarmId)
#endif

#ifndef OS_TRACE_GETALARM_EXIT
#define OS_TRACE_GETALARM_EXIT_P(r,AlarmId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETALARM_EXIT_P(r,AlarmId) OS_TRACE_GETALARM_EXIT(r,AlarmId)
#else
#define OS_TRACE_GETALARM_EXIT_P(r,AlarmId) OS_TRACE_GETALARM_EXIT()
#endif
#endif


#ifndef OS_TRACE_SETRELALARM_ENTRY
#define OS_TRACE_SETRELALARM_ENTRY(AlarmId, Tick1, Tick2)
#endif

#ifndef OS_TRACE_SETRELALARM_EXIT
#define OS_TRACE_SETRELALARM_EXIT_P(r,AlarmId, Tick1, Tick2)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SETRELALARM_EXIT_P(r,AlarmId, Tick1, Tick2) OS_TRACE_SETRELALARM_EXIT(r,AlarmId, Tick1, Tick2)
#else
#define OS_TRACE_SETRELALARM_EXIT_P(r,AlarmId, Tick1, Tick2) OS_TRACE_SETRELALARM_EXIT()
#endif
#endif


#ifndef OS_TRACE_SETABSALARM_ENTRY
#define OS_TRACE_SETABSALARM_ENTRY(AlarmId, Tick1, Tick2)
#endif

#ifndef OS_TRACE_SETABSALARM_EXIT
#define OS_TRACE_SETABSALARM_EXIT_P(r,AlarmId, Tick1, Tick2)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SETABSALARM_EXIT_P(r,AlarmId, Tick1, Tick2) OS_TRACE_SETABSALARM_EXIT(r,AlarmId, Tick1, Tick2)
#else
#define OS_TRACE_SETABSALARM_EXIT_P(r,AlarmId, Tick1, Tick2) OS_TRACE_SETABSALARM_EXIT()
#endif
#endif


#ifndef OS_TRACE_CANCELALARM_ENTRY
#define OS_TRACE_CANCELALARM_ENTRY(AlarmId)
#endif

#ifndef OS_TRACE_CANCELALARM_EXIT
#define OS_TRACE_CANCELALARM_EXIT_P(r,AlarmId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CANCELALARM_EXIT_P(r,AlarmId) OS_TRACE_CANCELALARM_EXIT(r,AlarmId)
#else
#define OS_TRACE_CANCELALARM_EXIT_P(r,AlarmId) OS_TRACE_CANCELALARM_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETACTIVEAPPLICATIONMODE_ENTRY
#define OS_TRACE_GETACTIVEAPPLICATIONMODE_ENTRY()
#endif


#ifndef OS_TRACE_GETACTIVEAPPLICATIONMODE_EXIT
#define OS_TRACE_GETACTIVEAPPLICATIONMODE_EXIT_P(r)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETACTIVEAPPLICATIONMODE_EXIT_P(r) OS_TRACE_GETACTIVEAPPLICATIONMODE_EXIT(r)
#else
#define OS_TRACE_GETACTIVEAPPLICATIONMODE_EXIT_P(r) OS_TRACE_GETACTIVEAPPLICATIONMODE_EXIT()
#endif
#endif


#ifndef OS_TRACE_SHUTDOWNOS_ENTRY
#define OS_TRACE_SHUTDOWNOS_ENTRY(Status)
#endif

#ifndef OS_TRACE_SHUTDOWNOS_EXIT
#define OS_TRACE_SHUTDOWNOS_EXIT_P(r,status)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SHUTDOWNOS_EXIT_P(r,status) OS_TRACE_SHUTDOWNOS_EXIT(r,status)
#else
#define OS_TRACE_SHUTDOWNOS_EXIT_P(r,status) OS_TRACE_SHUTDOWNOS_EXIT()
#endif
#endif


#ifndef OS_TRACE_STARTOS_ENTRY
#define OS_TRACE_STARTOS_ENTRY(AppMode)
#endif

#ifndef OS_TRACE_STARTOS_EXIT
#define OS_TRACE_STARTOS_EXIT_P(AppMode)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_STARTOS_EXIT_P(AppMode) OS_TRACE_STARTOS_EXIT(AppMode)
#else
#define OS_TRACE_STARTOS_EXIT_P(AppMode) OS_TRACE_STARTOS_EXIT()
#endif
#endif

/* Autosar OS API */
#ifndef OS_TRACE_ALLOWACCESS_ENTRY
#define OS_TRACE_ALLOWACCESS_ENTRY()
#endif

#ifndef OS_TRACE_ALLOWACCESS_EXIT
#define OS_TRACE_ALLOWACCESS_EXIT_P(r)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_ALLOWACCESS_EXIT_P(r) OS_TRACE_ALLOWACCESS_EXIT(r)
#else
#define OS_TRACE_ALLOWACCESS_EXIT_P(r) OS_TRACE_ALLOWACCESS_EXIT()
#endif
#endif

#ifndef OS_TRACE_SHUTDOWNALLCORES_ENTRY
#define OS_TRACE_SHUTDOWNALLCORES_ENTRY(ShutdownCode)
#endif

#ifndef OS_TRACE_GETAPPLICATIONSTATE_ENTRY
#define OS_TRACE_GETAPPLICATIONSTATE_ENTRY(ApplicationId,StatePointer)
#endif

#ifndef OS_TRACE_GETAPPLICATIONSTATE_EXIT
#define OS_TRACE_GETAPPLICATIONSTATE_EXIT_P(r,ApplicationId,StatePointer)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETAPPLICATIONSTATE_EXIT_P(r,ApplicationId,StatePointer) OS_TRACE_GETAPPLICATIONSTATE_EXIT(r,ApplicationId,StatePointer)
#else
#define OS_TRACE_GETAPPLICATIONSTATE_EXIT_P(r,ApplicationId,StatePointer) OS_TRACE_GETAPPLICATIONSTATE_EXIT()
#endif
#endif

#ifndef OS_TRACE_INCREMENTCOUNTER_ENTRY
#define OS_TRACE_INCREMENTCOUNTER_ENTRY(CounterId)
#endif

#ifndef OS_TRACE_INCREMENTCOUNTER_EXIT
#define OS_TRACE_INCREMENTCOUNTER_EXIT_P(r,CounterId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_INCREMENTCOUNTER_EXIT_P(r,CounterId) OS_TRACE_INCREMENTCOUNTER_EXIT(r,CounterId)
#else
#define OS_TRACE_INCREMENTCOUNTER_EXIT_P(r,CounterId) OS_TRACE_INCREMENTCOUNTER_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETCOUNTERVALUE_ENTRY
#define OS_TRACE_GETCOUNTERVALUE_ENTRY(CounterId)
#endif

#ifndef OS_TRACE_GETCOUNTERVALUE_EXIT
#define OS_TRACE_GETCOUNTERVALUE_EXIT_P(r,CounterId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETCOUNTERVALUE_EXIT_P(r,CounterId) OS_TRACE_GETCOUNTERVALUE_EXIT(r,CounterId)
#else
#define OS_TRACE_GETCOUNTERVALUE_EXIT_P(r,CounterId) OS_TRACE_GETCOUNTERVALUE_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETELAPSEDCOUNTERVALUE_ENTRY
#define OS_TRACE_GETELAPSEDCOUNTERVALUE_ENTRY(CounterId)
#endif

#ifndef OS_TRACE_GETELAPSEDCOUNTERVALUE_EXIT
#define OS_TRACE_GETELAPSEDCOUNTERVALUE_EXIT_P(r,CounterId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETELAPSEDCOUNTERVALUE_EXIT_P(r,CounterId) OS_TRACE_GETELAPSEDCOUNTERVALUE_EXIT(r,CounterId)
#else
#define OS_TRACE_GETELAPSEDCOUNTERVALUE_EXIT_P(r,CounterId) OS_TRACE_GETELAPSEDCOUNTERVALUE_EXIT()
#endif
#endif


#ifndef OS_TRACE_STARTSCHEDULETABLE_ENTRY
#define OS_TRACE_STARTSCHEDULETABLE_ENTRY(ScheduleTableId,Tick,Rel)
#endif

#ifndef OS_TRACE_STARTSCHEDULETABLE_EXIT
#define OS_TRACE_STARTSCHEDULETABLE_EXIT_P(r,ScheduleTableId,Tick,Rel)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_STARTSCHEDULETABLE_EXIT_P(r,ScheduleTableId,Tick,Rel) OS_TRACE_STARTSCHEDULETABLE_EXIT(r,ScheduleTableId,Tick,Rel)
#else
#define OS_TRACE_STARTSCHEDULETABLE_EXIT_P(r,ScheduleTableId,Tick,Rel) OS_TRACE_STARTSCHEDULETABLE_EXIT()
#endif
#endif


#ifndef OS_TRACE_STARTSCHEDULETABLESYNCHRON_ENTRY
#define OS_TRACE_STARTSCHEDULETABLESYNCHRON_ENTRY(ScheduleTableId)
#endif

#ifndef OS_TRACE_STARTSCHEDULETABLESYNCHRON_EXIT
#define OS_TRACE_STARTSCHEDULETABLESYNCHRON_EXIT_P(r,ScheduleTableId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_STARTSCHEDULETABLESYNCHRON_EXIT_P(r,ScheduleTableId) OS_TRACE_STARTSCHEDULETABLESYNCHRON_EXIT(r,ScheduleTableId)
#else
#define OS_TRACE_STARTSCHEDULETABLESYNCHRON_EXIT_P(r,ScheduleTableId) OS_TRACE_STARTSCHEDULETABLESYNCHRON_EXIT()
#endif
#endif


#ifndef OS_TRACE_NEXTSCHEDULETABLE_ENTRY
#define OS_TRACE_NEXTSCHEDULETABLE_ENTRY(ScheduleTableId1,ScheduleTableId2)
#endif

#ifndef OS_TRACE_NEXTSCHEDULETABLE_EXIT
#define OS_TRACE_NEXTSCHEDULETABLE_EXIT_P(r,ScheduleTableId1,ScheduleTableId2)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_NEXTSCHEDULETABLE_EXIT_P(r,ScheduleTableId1,ScheduleTableId2) OS_TRACE_NEXTSCHEDULETABLE_EXIT(r,ScheduleTableId1,ScheduleTableId2)
#else
#define OS_TRACE_NEXTSCHEDULETABLE_EXIT_P(r,ScheduleTableId1,ScheduleTableId2) OS_TRACE_NEXTSCHEDULETABLE_EXIT()
#endif
#endif


#ifndef OS_TRACE_STOPSCHEDULETABLE_ENTRY
#define OS_TRACE_STOPSCHEDULETABLE_ENTRY(ScheduleTableId)
#endif

#ifndef OS_TRACE_STOPSCHEDULETABLE_EXIT
#define OS_TRACE_STOPSCHEDULETABLE_EXIT_P(r,ScheduleTableId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_STOPSCHEDULETABLE_EXIT_P(r,ScheduleTableId) OS_TRACE_STOPSCHEDULETABLE_EXIT(r,ScheduleTableId)
#else
#define OS_TRACE_STOPSCHEDULETABLE_EXIT_P(r,ScheduleTableId) OS_TRACE_STOPSCHEDULETABLE_EXIT()
#endif
#endif


#ifndef OS_TRACE_SYNCSCHEDULETABLE_ENTRY
#define OS_TRACE_SYNCSCHEDULETABLE_ENTRY(ScheduleTableId, Tick)
#endif

#ifndef OS_TRACE_SYNCSCHEDULETABLE_EXIT
#define OS_TRACE_SYNCSCHEDULETABLE_EXIT_P(r,ScheduleTableId, Tick)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SYNCSCHEDULETABLE_EXIT_P(r,ScheduleTableId, Tick) OS_TRACE_SYNCSCHEDULETABLE_EXIT(r,ScheduleTableId, Tick)
#else
#define OS_TRACE_SYNCSCHEDULETABLE_EXIT_P(r,ScheduleTableId, Tick) OS_TRACE_SYNCSCHEDULETABLE_EXIT()
#endif
#endif


#ifndef OS_TRACE_SETSCHEDULETABLEASYNC_ENTRY
#define OS_TRACE_SETSCHEDULETABLEASYNC_ENTRY(ScheduleTableId)
#endif

#ifndef OS_TRACE_SETSCHEDULETABLEASYNC_EXIT
#define OS_TRACE_SETSCHEDULETABLEASYNC_EXIT_P(r,ScheduleTableId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SETSCHEDULETABLEASYNC_EXIT_P(r,ScheduleTableId) OS_TRACE_SETSCHEDULETABLEASYNC_EXIT(r,ScheduleTableId)
#else
#define OS_TRACE_SETSCHEDULETABLEASYNC_EXIT_P(r,ScheduleTableId) OS_TRACE_SETSCHEDULETABLEASYNC_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETSCHEDULETABLESTATUS_ENTRY
#define OS_TRACE_GETSCHEDULETABLESTATUS_ENTRY(ScheduleTableId)
#endif

#ifndef OS_TRACE_GETSCHEDULETABLESTATUS_EXIT
#define OS_TRACE_GETSCHEDULETABLESTATUS_EXIT_P(r,ScheduleTableId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETSCHEDULETABLESTATUS_EXIT_P(r,ScheduleTableId) OS_TRACE_GETSCHEDULETABLESTATUS_EXIT(r,ScheduleTableId)
#else
#define OS_TRACE_GETSCHEDULETABLESTATUS_EXIT_P(r,ScheduleTableId) OS_TRACE_GETSCHEDULETABLESTATUS_EXIT()
#endif
#endif


#ifndef OS_TRACE_TERMINATEAPPLICATION_ENTRY
#define OS_TRACE_TERMINATEAPPLICATION_ENTRY(ApplicationId,RestartType)
#endif

#ifndef OS_TRACE_TERMINATEAPPLICATION_EXIT
#define OS_TRACE_TERMINATEAPPLICATION_EXIT_P(r,ApplicationId,RestartType)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_TERMINATEAPPLICATION_EXIT_P(r,ApplicationId,RestartType) OS_TRACE_TERMINATEAPPLICATION_EXIT(r,RestartType)
#else
#define OS_TRACE_TERMINATEAPPLICATION_EXIT_P(r,ApplicationId,RestartType) OS_TRACE_TERMINATEAPPLICATION_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETAPPLICATIONID_ENTRY
#define OS_TRACE_GETAPPLICATIONID_ENTRY()
#endif

#ifndef OS_TRACE_GETAPPLICATIONID_EXIT
#define OS_TRACE_GETAPPLICATIONID_EXIT_P(r)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETAPPLICATIONID_EXIT_P(r) OS_TRACE_GETAPPLICATIONID_EXIT(r)
#else
#define OS_TRACE_GETAPPLICATIONID_EXIT_P(r) OS_TRACE_GETAPPLICATIONID_EXIT()
#endif
#endif


#ifndef OS_TRACE_GETISRID_ENTRY
#define OS_TRACE_GETISRID_ENTRY()
#endif

#ifndef OS_TRACE_GETISRID_EXIT
#define OS_TRACE_GETISRID_EXIT_P(r)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETISRID_EXIT_P(r) OS_TRACE_GETISRID_EXIT(r)
#else
#define OS_TRACE_GETISRID_EXIT_P(r) OS_TRACE_GETISRID_EXIT()
#endif
#endif


#ifndef OS_TRACE_CALLTRUSTEDFUNCTION_ENTRY
#define OS_TRACE_CALLTRUSTEDFUNCTION_ENTRY(TrustedFunctionIndex)
#endif

#ifndef OS_TRACE_CALLTRUSTEDFUNCTION_EXIT
#define OS_TRACE_CALLTRUSTEDFUNCTION_EXIT_P(r,TrustedFunctionIndex)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CALLTRUSTEDFUNCTION_EXIT_P(r,TrustedFunctionIndex) OS_TRACE_CALLTRUSTEDFUNCTION_EXIT(r,TrustedFunctionIndex)
#else
#define OS_TRACE_CALLTRUSTEDFUNCTION_EXIT_P(r,TrustedFunctionIndex) OS_TRACE_CALLTRUSTEDFUNCTION_EXIT()
#endif
#endif


#ifndef OS_TRACE_CHECKISRMEMORYACCESS_ENTRY
#define OS_TRACE_CHECKISRMEMORYACCESS_ENTRY(ISRId)
#endif

#ifndef OS_TRACE_CHECKISRMEMORYACCESS_EXIT
#define OS_TRACE_CHECKISRMEMORYACCESS_EXIT_P(r,ISRId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CHECKISRMEMORYACCESS_EXIT_P(r,ISRId) OS_TRACE_CHECKISRMEMORYACCESS_EXIT(r,ISRId)
#else
#define OS_TRACE_CHECKISRMEMORYACCESS_EXIT_P(r,ISRId) OS_TRACE_CHECKISRMEMORYACCESS_EXIT()
#endif
#endif


#ifndef OS_TRACE_CHECKTASKMEMORYACCESS_ENTRY
#define OS_TRACE_CHECKTASKMEMORYACCESS_ENTRY(TaskId)
#endif

#ifndef OS_TRACE_CHECKTASKMEMORYACCESS_EXIT
#define OS_TRACE_CHECKTASKMEMORYACCESS_EXIT_P(r,TaskId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CHECKTASKMEMORYACCESS_EXIT_P(r,TaskId) OS_TRACE_CHECKTASKMEMORYACCESS_EXIT(r,TaskId)
#else
#define OS_TRACE_CHECKTASKMEMORYACCESS_EXIT_P(r,TaskId) OS_TRACE_CHECKTASKMEMORYACCESS_EXIT()
#endif
#endif


#ifndef OS_TRACE_CHECKOBJECTACCESS_ENTRY
#define OS_TRACE_CHECKOBJECTACCESS_ENTRY(Application, Object, ObjectId)
#endif

#ifndef OS_TRACE_CHECKOBJECTACCESS_EXIT
#define OS_TRACE_CHECKOBJECTACCESS_EXIT_P(r,Application, Object, ObjectId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CHECKOBJECTACCESS_EXIT_P(r,Application, Object, ObjectId) OS_TRACE_CHECKOBJECTACCESS_EXIT(r,Application, Object, ObjectId)
#else
#define OS_TRACE_CHECKOBJECTACCESS_EXIT_P(r,Application, Object, ObjectId) OS_TRACE_CHECKOBJECTACCESS_EXIT()
#endif
#endif


#ifndef OS_TRACE_CHECKOBJECTOWNERSHIP_ENTRY
#define OS_TRACE_CHECKOBJECTOWNERSHIP_ENTRY(Object,ObjectId)
#endif

#ifndef OS_TRACE_CHECKOBJECTOWNERSHIP_EXIT
#define OS_TRACE_CHECKOBJECTOWNERSHIP_EXIT_P(r,Object,ObjectId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_CHECKOBJECTOWNERSHIP_EXIT_P(r,Object,ObjectId) OS_TRACE_CHECKOBJECTOWNERSHIP_EXIT(r,Object,ObjectId)
#else
#define OS_TRACE_CHECKOBJECTOWNERSHIP_EXIT_P(r,Object,ObjectId) OS_TRACE_CHECKOBJECTOWNERSHIP_EXIT()
#endif
#endif

/* Extensions */
#ifndef OS_TRACE_GETSTACKINFO_ENTRY
#define OS_TRACE_GETSTACKINFO_ENTRY(TaskOrIsrId)
#endif

#ifndef OS_TRACE_GETSTACKINFO_EXIT
#define OS_TRACE_GETSTACKINFO_EXIT_P(r,TaskOrIsrId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_GETSTACKINFO_EXIT_P(r,TaskOrIsrId) OS_TRACE_GETSTACKINFO_EXIT(r,TaskOrIsrId)
#else
#define OS_TRACE_GETSTACKINFO_EXIT_P(r,TaskOrIsrId) OS_TRACE_GETSTACKINFO_EXIT()
#endif
#endif


#ifndef OS_TRACE_DISABLEINTERRUPTSOURCE_ENTRY
#define OS_TRACE_DISABLEINTERRUPTSOURCE_ENTRY(IsrId)
#endif

#ifndef OS_TRACE_DISABLEINTERRUPTSOURCE_EXIT
#define OS_TRACE_DISABLEINTERRUPTSOURCE_EXIT_P(r,IsrId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_DISABLEINTERRUPTSOURCE_EXIT_P(r,IsrId) OS_TRACE_DISABLEINTERRUPTSOURCE_EXIT(r,IsrId)
#else
#define OS_TRACE_DISABLEINTERRUPTSOURCE_EXIT_P(r,IsrId) OS_TRACE_DISABLEINTERRUPTSOURCE_EXIT()
#endif
#endif


#ifndef OS_TRACE_ENABLEINTERRUPTSOURCE_ENTRY
#define OS_TRACE_ENABLEINTERRUPTSOURCE_ENTRY(IsrId)
#endif

#ifndef OS_TRACE_ENABLEINTERRUPTSOURCE_EXIT
#define OS_TRACE_ENABLEINTERRUPTSOURCE_EXIT_P(r,IsrId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_ENABLEINTERRUPTSOURCE_EXIT_P(r,IsrId) OS_TRACE_ENABLEINTERRUPTSOURCE_EXIT(r,IsrId)
#else
#define OS_TRACE_ENABLEINTERRUPTSOURCE_EXIT_P(r,IsrId) OS_TRACE_ENABLEINTERRUPTSOURCE_EXIT()
#endif
#endif


#ifndef OS_TRACE_RESUMEINTERRUPTS_ENTRY
#define OS_TRACE_RESUMEINTERRUPTS_ENTRY(IntLockType)
#endif

#ifndef OS_TRACE_RESUMEINTERRUPTS_EXIT
#define OS_TRACE_RESUMEINTERRUPTS_EXIT_P(IntLockType)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_RESUMEINTERRUPTS_EXIT_P(IntLockType) OS_TRACE_RESUMEINTERRUPTS_EXIT(IntLockType)
#else
#define OS_TRACE_RESUMEINTERRUPTS_EXIT_P(IntLockType) OS_TRACE_RESUMEINTERRUPTS_EXIT()
#endif
#endif


#ifndef OS_TRACE_SUSPENDINTERRUPTS_ENTRY
#define OS_TRACE_SUSPENDINTERRUPTS_ENTRY(IntLockType)
#endif

#ifndef OS_TRACE_SUSPENDINTERRUPTS_EXIT
#define OS_TRACE_SUSPENDINTERRUPTS_EXIT_P(IntLockType)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_SUSPENDINTERRUPTS_EXIT_P(IntLockType) OS_TRACE_SUSPENDINTERRUPTS_EXIT(IntLockType)
#else
#define OS_TRACE_SUSPENDINTERRUPTS_EXIT_P(IntLockType) OS_TRACE_SUSPENDINTERRUPTS_EXIT()
#endif
#endif


#ifndef OS_TRACE_TRYTOGETSPINLOCK_ENTRY
#define OS_TRACE_TRYTOGETSPINLOCK_ENTRY(lockId, out)
#endif

#ifndef OS_TRACE_TRYTOGETSPINLOCK_BEFORE_KERNELLOCK
#define OS_TRACE_TRYTOGETSPINLOCK_BEFORE_KERNELLOCK()
#endif
#ifndef OS_TRACE_TRYTOGETSPINLOCK_IN_KERNELLOCK
#define OS_TRACE_TRYTOGETSPINLOCK_IN_KERNELLOCK()
#endif

#ifndef OS_TRACE_TRYTOGETSPINLOCK_EXIT
#define OS_TRACE_TRYTOGETSPINLOCK_EXIT_P(lockId, out)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_TRYTOGETSPINLOCK_EXIT_P(lockId, out) OS_TRACE_TRYTOGETSPINLOCK_EXIT((lockId), (out))
#else
#define OS_TRACE_TRYTOGETSPINLOCK_EXIT_P(lockId, out) OS_TRACE_TRYTOGETSPINLOCK_EXIT()
#endif
#endif


#ifndef OS_TRACE_RELEASESPINLOCK_ENTRY
#define OS_TRACE_RELEASESPINLOCK_ENTRY(lockId)
#endif

#ifndef OS_TRACE_RELEASESPINLOCK_BEFORE_KERNELLOCK
#define OS_TRACE_RELEASESPINLOCK_BEFORE_KERNELLOCK()
#endif
#ifndef OS_TRACE_RELEASESPINLOCK_IN_KERNELLOCK
#define OS_TRACE_RELEASESPINLOCK_IN_KERNELLOCK()
#endif

#ifndef OS_TRACE_RELEASESPINLOCK_EXIT
#define OS_TRACE_RELEASESPINLOCK_EXIT_P(lockId)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_RELEASESPINLOCK_EXIT_P(lockId) OS_TRACE_RELEASESPINLOCK_EXIT(lockId)
#else
#define OS_TRACE_RELEASESPINLOCK_EXIT_P(lockId) OS_TRACE_RELEASESPINLOCK_EXIT()
#endif
#endif

/* Hooks */
#ifndef OS_TRACE_HOOK_ENTRY
#define OS_TRACE_HOOK_ENTRY(p)
#endif

#ifndef OS_TRACE_HOOK_EXIT
#define OS_TRACE_HOOK_EXIT_P(p)
#else
#ifdef TRACE_EXIT_WITH_PARAMS
#define OS_TRACE_HOOK_EXIT_P(p) OS_TRACE_HOOK_EXIT(p)
#else
#define OS_TRACE_HOOK_EXIT_P(p) OS_TRACE_HOOK_EXIT()
#endif
#endif

/* ISRs */
#ifndef OS_TRACE_STATE_ISR
#define OS_TRACE_STATE_ISR(IsrId,oldValue,newValue)
#endif

/* ISR state values */
#ifndef OS_TRACE_ISR_SUSPENDED
#define OS_TRACE_ISR_SUSPENDED  0
#endif

#ifndef OS_TRACE_ISR_RUNNING
#define OS_TRACE_ISR_RUNNING    5
#endif

/* Tasks */
#ifndef OS_TRACE_STATE_TASK
#define OS_TRACE_STATE_TASK(StateId,oldValue,newValue)
#endif

/* Deviation MISRAC2012-1 <STOP> */

#endif /* OS_TRACE_H */

