<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="ComXf_TS_TxDxM1I0R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="Xfrm" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:DOC-REVISIONS>
                    <ad:DOC-REVISION>
                      <ad:REVISION-LABEL>4.6.0</ad:REVISION-LABEL>
                      <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                      <ad:DATE>2014-10-31</ad:DATE>
                    </ad:DOC-REVISION>
                  </ad:DOC-REVISIONS>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="API-SERVICE-PREFIX" value="ComXf"/>
              <a:a name="DESC" 
                   value="EN: Configuration of the AUTOSAR ComXf module."/>
              <a:a name="LOWER-MULTIPLICITY" value="0"/>
              <a:a name="RELEASE" value="asc:4.2"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="LABEL" value="Config Variant"/>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="RANGE" value="VariantPreCompile"/>
              </v:var>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="4"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="2"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="37"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="175"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the ComXf can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="XfrmGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
           Contains the general configuration parameters of the module.
        &lt;/html&gt;</a:v>
                </a:a>
                <v:var name="XfrmBufferLengthType" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
          Specifies the data type of parameter BufferLength for transformer APIs.
        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="UINT16"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="count(as:modconf(&apos;Xfrm&apos;)[*/XfrmBufferLengthType = node:current()]) = count(as:modconf(&apos;Xfrm&apos;))" 
                        false="Xfrm_E_00011_BufferLengthType: Each transformer module shall be configured with the same XfrmBufferLengthType."/>
                  <a:da name="RANGE">
                    <a:v>UINT16</a:v>
                    <a:v>UINT32</a:v>
                  </a:da>
                </v:var>
                <v:var name="XfrmDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          Switches the Development Error Detection and Notification ON or OFF.
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt;: Development Error Detection mechanism is enabled (switched on).&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt;: Development Error Detection mechanism is disabled (switched off).&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:da name="DEFAULT" value="true"/>
                </v:var>
                <v:var name="XfrmVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
          Activate/Deactivates the version information API.
        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
              <v:lst name="XfrmImplementationMapping" type="MAP">
                <a:da name="MIN" value="1"/>
                <v:ctr name="XfrmImplementationMapping" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
           For each transformer (TransformationTechnology) in a transformer chain (DataTransformation) which is applied to an ISignal it is necessary to specify the BswModuleEntry which implements it. This is the container to hold these mappings.
        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="node:exists(XfrmTransformerBswModuleEntryRef) and not(starts-with(node:name(.) , concat(&apos;ComXf&apos;, &apos;_&apos;) ))" 
                           true="Xfrm_E_00003_Wrong_serializer_prefix: The container name shall start with ComXf_ for serializer transformer."/>
                    <a:tst 
                           expr="node:exists(XfrmInvTransformerBswModuleEntryRef) and not(starts-with(node:name(.) , concat(&apos;ComXf&apos;, &apos;_Inv_&apos;) ))" 
                           true="Xfrm_E_00004_Wrong_deserializer_prefix: The container name shall start with ComXf_Inv_ for deserializer transformer."/>
                    <a:tst 
                           expr="number(node:exists(XfrmInvTransformerBswModuleEntryRef)) + number(node:exists(XfrmTransformerBswModuleEntryRef)) != 1" 
                           true="Xfrm_E_00005_Wrong_BswModuleEntryRef: Exactly one reference shall be enabled, either XfrmInvTransformerBswModuleEntryRef or XfrmTransformerBswModuleEntryRef."/>
                    <a:tst 
                           expr="text:match(node:name(.), &apos;^[a-zA-Z_][a-zA-Z0-9_]*$&apos;)" 
                           false="Xfrm_E_00002_No_C_identifier: Short name of container shall be equal to function API name of transformer, but the short name is not a valid C identifier."/>
                  </a:da>
                  <v:ref name="XfmTransformationBswModuleEntryRef" 
                         type="FOREIGN-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
              This parameter is set to obsolete and will be removed in future. Please use XfrmTransformerBswModuleEntryRef instead.&lt;br&gt;&lt;/br&gt;
              Old description: Reference to the BswModuleEntry which implements the referenced transformer on the sending/calling side.
           &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="DESTINATION-TYPE" 
                         value="ASTyped:BSW-MODULE-ENTRY"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="VISIBLE" value="false"/>
                    <a:da name="EDITABLE" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="REF" value="ASTyped:BswModuleEntry"/>
                  </v:ref>
                  <v:ref name="XfrmTransformerBswModuleEntryRef" 
                         type="FOREIGN-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
              Reference to the BswModuleEntry which implements the referenced transformer on the sending/calling side.
           &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="DESTINATION-TYPE" 
                         value="ASTyped:BSW-MODULE-ENTRY"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="node:value(.) != concat(&apos;ASPath:/AUTOSAR_&apos; , &apos;ComXf&apos; , &apos;/BswModuleEntrys/&apos; , as:name(..))" 
                          true="Xfrm_E_00001_Limitation_on_Implementation_Mapping: The short name of the implementation mapping has to be identical with the short name of the referenced BSW module entry."/>
                    <a:da name="REF" value="ASTyped:BswModuleEntry"/>
                  </v:ref>
                  <v:ref name="XfrmInvTransformerBswModuleEntryRef" 
                         type="FOREIGN-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
              Reference to the BswModuleEntry which implements the referenced inverse transformer on the receiving/called side.
           &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="DESTINATION-TYPE" 
                         value="ASTyped:BSW-MODULE-ENTRY"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="node:value(.) != concat(&apos;ASPath:/AUTOSAR_&apos; , &apos;ComXf&apos; , &apos;/BswModuleEntrys/&apos; , as:name(..))" 
                          true="Xfrm_E_00001_Limitation_on_Implementation_Mapping: The short name of the implementation mapping has to be identical with the short name of the referenced BSW module entry."/>
                    <a:da name="REF" value="ASTyped:BswModuleEntry"/>
                  </v:ref>
                  <v:ref name="XfrmTransformationTechnologyRef" 
                         type="FOREIGN-REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
              Reference to the TransformationTechnology in the DataTransformation of the system description for which the implementation (BswModuleEntry) shall be mapped.
           &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="DESTINATION-TYPE" 
                         value="ASTyped:TRANSFORMATION-TECHNOLOGY"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:da name="REF" value="ASTyped:TransformationTechnology"/>
                  </v:ref>
                  <v:var name="XfrmIsSafetyTransformer" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
             Specifies if the Transformer shall be considered as a safety Transformer.
            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="ENABLE" value="false"/>
                  </v:var>
                  <v:ref name="XfrmOsApplicationRef" type="REFERENCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
              Reference to an Os application to which the BSW belongs.
              &lt;ul&gt;
                &lt;li&gt;&lt;code&gt;Enabled&lt;/code&gt;: Maps global variables of transformer or inverted transformer function to dedicated memory partition.&lt;/li&gt;
                &lt;li&gt;&lt;code&gt;Disabled&lt;/code&gt;: No dedicated memory partition assigned.&lt;/li&gt;
              &lt;/ul&gt;
            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="REF" 
                          value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsApplication"/>
                  </v:ref>
                  <v:ctr name="XfrmVariableDataPrototypeInstanceRef" 
                         type="INSTANCE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
              Instance reference to a VariableDataPrototype in case a dedicated transformer BswModuleEntry is required per VariableDataPrototype access.
            &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:da name="ENABLE" type="XPath" 
                          expr="((count(../../*[XfrmSignal/XfrmSignalChoice/XfrmISignalRef = node:current()/../XfrmSignal/XfrmSignalChoice/XfrmISignalRef]) + count(../../*[XfrmSignal/XfrmSignalChoice/XfrmISignalGroupRef = node:current()/../XfrmSignal/XfrmSignalChoice/XfrmISignalGroupRef])) &gt; 1)"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst 
                             expr="((count(as:modconf(&apos;Xfrm&apos;)[XfrmImplementationMapping/*/XfrmSignal/XfrmSignalChoice/XfrmISignalRef = node:current()/../XfrmSignal/XfrmSignalChoice/XfrmISignalRef]) +                        count(as:modconf(&apos;Xfrm&apos;)[XfrmImplementationMapping/*/XfrmSignal/XfrmSignalChoice/XfrmISignalGroupRef = node:current()/../XfrmSignal/XfrmSignalChoice/XfrmISignalGroupRef])) !=                        count(as:modconf(&apos;Xfrm&apos;)[XfrmImplementationMapping/*/XfrmVariableDataPrototypeInstanceRef/TARGET = node:current()/TARGET]))" 
                             true="Xfrm_E_constr_09094_XfrmVariableDataPrototypeInstanceRef: There is at least one further transformer which references the same ISignal or ISignalGroup as this XfrmImplementationMapping, but has not configured an XfrmVariableDataPrototypeInstanceRef. Note that XfrmVariableDataPrototypeInstanceRef is enabled automatically if at least two XfrmImplementationMapping within a transformer reference the same ISignal or ISignalGroup."/>
                      <a:tst 
                             expr="count(../../*[(XfrmVariableDataPrototypeInstanceRef/TARGET = node:current()/TARGET) and                                    (XfrmVariableDataPrototypeInstanceRef/CONTEXT/*[1] = node:current()/CONTEXT/*[1]) and                                    (XfrmVariableDataPrototypeInstanceRef/CONTEXT/*[2] = node:current()/CONTEXT/*[2])                                   ]                           ) &gt; 1" 
                             true="Xfrm_E_00007_Wrong_num_VariableDataPrototypeInstanceRef: An Instance Reference to the combination SwComponentPrototype, PortPrototype and VariableDataPrototype shall be exactly referenced once among all inverse transformers."/>
                      <a:tst 
                             expr="node:exists(../XfrmTransformerBswModuleEntryRef)" 
                             true="Xfrm_E_00010_Only_Multiple_Inv_Transformer_Support: Within ComXf module configuration more than one XfrmImplementationMapping use the same XfrmISignalRef or XfrmISignalGroupRef. For this mapping XfrmTransformerBswModuleEntryRef is enabled, while multiple instances are only allowed for inverse transformers."/>
                    </a:da>
                    <v:ref name="TARGET" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                &lt;p&gt;Target of the instance reference to a VariableDataPrototype.&lt;/p&gt;
                &lt;p&gt;The context of the instance reference is given by the list of Context References (CONTEXT) below.&lt;/p&gt;
              &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="INVALID" type="XPath" 
                            expr="node:refvalid(.) and (node:name(node:ref(.)) = &apos;dataElement&apos;)" 
                            false="Xfrm_E_00006_Wrong_dataElement_ref: Reference is not valid. There must be a valid reference to a dataElement."/>
                      <a:da name="REF" value="ASTyped:VariableDataPrototype"/>
                    </v:ref>
                    <v:lst name="CONTEXT">
                      <a:da name="MAX" value="2"/>
                      <a:da name="MIN" value="2"/>
                      <v:ref name="CONTEXT" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                  List of ordered context references of the instance reference to:
                  &lt;ol&gt;
                    &lt;li&gt;SwComponentPrototype&lt;/li&gt;
                    &lt;li&gt;PortPrototype&lt;/li&gt;
                  &lt;/ol&gt;
                  The target of the instance reference is given with the VariableDataPrototype reference (TARGET) above.
                &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="(count(../*) = 2) and ((node:path(node:current()) = node:path(../*[1])) and not(node:refvalid(.) and (node:name(node:ref(.)) = &apos;component&apos;)))" 
                                 true="Xfrm_E_00008_Wrong_first_VariableDataPrototype_Context_ref: The first context reference shall refer to a valid SwComponentPrototype."/>
                          <a:tst 
                                 expr="(count(../*) = 2) and ((node:path(node:current()) = node:path(../*[2])) and not(node:refvalid(.) and (node:name(node:ref(.)) = &apos;port&apos;)))" 
                                 true="Xfrm_E_00009_Wrong_second_VariableDataPrototype_Context_ref: The second context reference shall refer to a valid PortPrototype."/>
                        </a:da>
                        <a:da name="RANGE" type="IRefCtxt">
                          <a:tst expr="SW-COMPONENT-PROTOTYPE"/>
                          <a:tst expr="PORT-PROTOTYPE*"/>
                        </a:da>
                        <a:da name="REF">
                          <a:v>ASTyped:SwComponentPrototype</a:v>
                          <a:v>ASTyped:PortPrototype</a:v>
                        </a:da>
                      </v:ref>
                    </v:lst>
                  </v:ctr>
                  <v:ctr name="XfrmDemEventParameterRefs" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
            Container for the references to DemEventParameter elements which shall be invoked using the API Dem_ReportErrorStatus API in case the corresponding error occurs. The EventId is taken from the referenced DemEventParameters DemEventId value. The standardized errors are provided in the container and can be extended by vendor specific error references.
          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:da name="EDITABLE" value="false"/>
                    <v:ref name="XFRM_E_MALFORMED_MESSAGE" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter is not supported
                              by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              Reference to configured DEM event to report if malformed messages
                              were received by the transformer.
                            &lt;/html&gt;</a:v>
                        <a:v>&lt;html&gt;
               Reference to configured DEM event to report if malformed messages were received by the transformer.
            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="false"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    </v:ref>
                  </v:ctr>
                  <v:ctr name="XfrmSignal" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
             Reference to the signal in the system description that transports the transformed data.
          &lt;/html&gt;</a:v>
                    </a:a>
                    <v:chc name="XfrmSignalChoice" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
              Choice whether an ISignal or an ISignalGroup shall be referenced.
            &lt;/html&gt;</a:v>
                      </a:a>
                      <a:da name="INVALID" type="XPath" 
                            expr=". != &apos;XfrmISignalGroupRefChoice&apos;" 
                            true="The ComXf module supports only mappings to signal groups."/>
                      <v:ctr name="XfrmISignalGroupRefChoice" 
                             type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                 Reference to the ISignalGroup in the system description that transports the transformed data.
                &lt;/html&gt;</a:v>
                        </a:a>
                        <v:ref name="XfrmISignalGroupRef" 
                               type="FOREIGN-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                  Reference to the ISignalGroup in the system description that transports the transformed data.
                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="DESTINATION-TYPE" 
                               value="ASTyped:I-SIGNAL-GROUP"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:da name="INVALID" type="XPath" expr=". = &apos;&apos;" 
                                true="A reference to a group signal is required."/>
                          <a:da name="REF" value="ASTyped:ISignalGroup"/>
                        </v:ref>
                      </v:ctr>
                      <v:ctr name="XfrmISignalRefChoice" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                 Reference to the ISignal in the system description that transports the transformed data.
              &lt;/html&gt;</a:v>
                        </a:a>
                        <v:ref name="XfrmISignalRef" type="FOREIGN-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                   Reference to the ISignal in the system description that transports the transformed data.
                &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="DESTINATION-TYPE" value="ASTyped:I-SIGNAL"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:da name="REF" value="ASTyped:ISignal"/>
                        </v:ref>
                      </v:ctr>
                    </v:chc>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/Xfrm"/>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
