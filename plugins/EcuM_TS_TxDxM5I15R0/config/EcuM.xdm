<?xml version='1.0'?>
<datamodel version="7.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:cd="http://www.tresos.de/_projects/DataModel2/08/customdata.xsd" 
         xmlns:f="http://www.tresos.de/_projects/DataModel2/14/formulaexpr.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd"  
         xmlns:variant="http://www.tresos.de/_projects/DataModel2/11/variant.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_TxDxM5I15R0" type="AR-PACKAGE">
        <d:lst type="ELEMENTS">
          <d:chc name="EcuM" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                <ad:ADMIN-DATA>
                  <ad:LANGUAGE>EN</ad:LANGUAGE>
                </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC">
                <a:v>&lt;html&gt;
                &lt;p&gt;Configuration of the EcuM (ECU State Manager) module.&lt;/p&gt;
                &lt;/html&gt;</a:v>
              </a:a>
              <a:a name="LOWER-MULTIPLICITY" value="1"/>
              <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
              <a:a name="RELEASE" value="asc:4.0"/>
              <a:a name="UPPER-MULTIPLICITY" value="1"/>
              <a:a name="UUID" value="6d5843a1-210c-4db9-b934-ae9b38144fb3"/>
              <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Common container, aggregated by all modules. It contains published information about vendor and versions.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Common Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:a00be3e0-8783-9123-2d52-1eb616737ca6"/>
                <v:var name="ArMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:948f3f2e-f129-4bc5-b4e1-7a7bdb8599e1"/>
                  <a:da name="DEFAULT" value="3"/>
                </v:var>
                <v:var name="ArMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:2893b920-59d5-4ac2-b2c1-e23742e66d70"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="ArPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:6428eb9b-8790-488a-b9a3-0fba52d0f59e"/>
                  <a:da name="DEFAULT" value="0"/>
                </v:var>
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Major version number of the vendor specific implementation of the module.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:605b18ae-3f9a-41d4-9225-67c9c5f6fc34"/>
                  <a:da name="DEFAULT" value="5"/>
                </v:var>
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a7fe44dc-ea25-4b8d-8fad-9fbcae86d56f"/>
                  <a:da name="DEFAULT" value="15"/>
                </v:var>
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="a318d2d9-0e75-49da-ac43-e7e4e682e2f9"/>
                  <a:da name="DEFAULT" value="7"/>
                </v:var>
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Module ID of this module from Module List
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:78bc8362-080f-4253-b3da-804ab69a7154"/>
                  <a:da name="DEFAULT" value="10"/>
                </v:var>
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:01b0f467-6943-4558-b4f2-3fa1fad28449"/>
                  <a:da name="DEFAULT" value="1"/>
                </v:var>
                <v:var name="Release" type="STRING_LABEL">
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="Release Information"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:1c68a547-f24e-4a4e-9540-69fbd533ec89"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
              </v:ctr>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                </a:a>
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="UUID" value="3ebf0ef4-a17b-4916-b491-c0f0c198250a"/>
                <a:da name="DEFAULT" value="VariantPostBuild"/>
                <a:da name="EDITABLE" value="FALSE"/>
                <a:da name="RANGE" value="VariantPostBuild"/>
              </v:var>
              <v:lst name="EcuMConfiguration" 
                     type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:a name="LABEL" value="Configuration"/>
                <a:da name="MAX" value="1"/>
                <a:da name="MIN" value="1"/>
                <v:ctr name="EcuMConfiguration" 
                       type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    This container contains the configuration (parameters) of the ECU State
                    Manager
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Configuration"/>
                  <a:a name="NAME_PATTERN" value="EcuM_Config_?"/>
                  <a:a name="UUID" value="eaeeba72-6d2a-4f35-bb1f-8354cb2ea25f"/>
                  <v:ctr name="EcuMCommonConfiguration" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                      This container contains the common configuration (parameters) of the ECU State Manager
                      &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="UUID" 
                         value="70a333ce-994d-442f-a005-2be28a2f5385"/>
                    <v:var name="EcuMConfigConsistencyHash" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                         is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;A hash value is generated across all pre-compile and link-time parameters
                        of all BSW modules. This hash value is compared against a field in the
                        &lt;code&gt;EcuM_ConfigType&lt;/code&gt; and hence allows checking the consistency of the entire
                        configuration.&lt;/p&gt;
                        &lt;p&gt;Dependency:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;The maximal value for &lt;code&gt;EcuMConfigConsistencyHash&lt;/code&gt; is
                        18446744073709551615 (= 0xFFFFFFFFFFFFFFFF = (2^64)-1) according to EcuM
                        R4.0, but EB tresos Studio limits the maximum value to 9223372036854775807 (=
                        0x7FFFFFFFFFFFFFFF = (2^63)-1).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Configuration Consistency Hash"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="c09db79f-20ee-4fc6-9824-1fdf30c0e392"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=9223372036854775807"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:ref name="EcuMDefaultAppMode" type="REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        Reference to the default application mode of the OS,
                        loaded when the ECU comes out of reset.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="OS Application Mode"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                      <a:a name="UUID" 
                           value="76396e6f-3b26-431d-b1d0-aa006e9e335f"/>
                      <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                            false="The reference does not point to a valid OsAppMode in the Os configuration."/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsAppMode"/>
                    </v:ref>
                    <v:lst name="EcuMOSResource">
                      <a:da name="READONLY" value="true"/>
                      <v:ref name="EcuMOSResource" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Reference to the OS resource which is used to bring the ECU into sleep mode.
                          In case of multi core Ecu&apos;s each core shall have an own OsResource.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="f4531091-5898-45d8-851d-2538d6e01a8b"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Os/OsResource"/>
                      </v:ref>
                    </v:lst>
                    <v:var name="EcuMDefaultAppModeBaseId" type="INTEGER">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          Parameter used to set the offset value for the EcuMDefaultAppMode.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Offset OS Index Value"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="EDITABLE" value="true"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=255"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <v:ctr name="EcuMDefaultShutdownTarget" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        This container describes the default shutdown target to be selected by
                        EcuM. The actual shutdown target may be overridden by the
                        &lt;code&gt;EcuM_SelectShutdownTarget()&lt;/code&gt; service.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Default Shutdown Target"/>
                      <a:a name="UUID" 
                           value="e04e2166-eb51-4d21-b468-cb5deb986ddc"/>
                      <v:var name="EcuMDefaultState" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                            This parameter describes the state of the default shutdown target
                            selected when the ECU comes out of reset. If EcuMStateSleep is selected,
                            the parameter &lt;code&gt;EcuMDefaultSleepModeRef&lt;/code&gt; selects the specific sleep mode.
                            &lt;ul&gt;
                              &lt;li&gt; If &lt;code&gt;EcuMStateReset&lt;/code&gt; is selected then the default reset mode
                              implicitely selected as &lt;code&gt; ECUM_RESET_MCU &lt;/code&gt; since the current SWS
                              do not have  the configuration parameter reference to EcuM Reset Modes. &lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Default Shutdown State"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" 
                             value="5567defd-270b-497d-a3f3-11cbfaca4641"/>
                        <a:da name="DEFAULT" value="EcuMStateOff"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="node:value(.) = &apos;EcuMStateSleep&apos; and not(node:refvalid(../EcuMDefaultSleepModeRef))  " 
                                 true="Default sleep mode shall be selected."/>
                          <a:tst 
                                 expr="node:value(.) = &apos;EcuMStateReset&apos; and not(node:refvalid(../EcuMDefaultResetModeRef))  " 
                                 true="Default reset mode shall be selected."/>
                        </a:da>
                        <a:da name="RANGE">
                          <a:v>EcuMStateOff</a:v>
                          <a:v>EcuMStateReset</a:v>
                          <a:v>EcuMStateSleep</a:v>
                        </a:da>
                      </v:var>
                      <v:ref name="EcuMDefaultResetModeRef" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the default reset mode.&lt;/p&gt;
                          &lt;p&gt;Dependency:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;Applicable only if &lt;code&gt;EcuMDefaultShutdownTarget&lt;/code&gt; is
                              selected as &lt;code&gt;EcuMStateReset&lt;/code&gt;.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Default Reset Mode"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="../EcuMDefaultState = &apos;EcuMStateOff&apos; or ../EcuMDefaultState = &apos;EcuMStateSleep&apos;" 
                                 true="Invalid reference since default shutdown target is not reset."/>
                          <a:tst 
                                 expr="not(node:refvalid(.)) and ../EcuMDefaultState = &apos;EcuMStateReset&apos;" 
                                 true="The specific reset mode should be selected."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMResetMode"/>
                      </v:ref>
                      <v:ref name="EcuMDefaultSleepModeRef" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the default sleep mode.&lt;/p&gt;
                          &lt;p&gt;Dependency:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;Applicable only if &lt;code&gt;EcuMDefaultShutdownTarget&lt;/code&gt; is
                              selected as &lt;code&gt;EcuMStateSleep&lt;/code&gt;.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="LABEL" value="Default Sleep Mode"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:a name="UUID" 
                             value="eb78c79d-ecd5-4033-a72d-b03db64291c8"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst 
                                 expr="../EcuMDefaultState = &apos;EcuMStateOff&apos; or ../EcuMDefaultState = &apos;EcuMStateReset&apos;" 
                                 true="Invalid reference since default shutdown target is not sleep."/>
                          <a:tst 
                                 expr="not(node:refvalid(.)) and ../EcuMDefaultState = &apos;EcuMStateSleep&apos;" 
                                 true="The specific sleep mode should be selected."/>
                        </a:da>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMSleepMode"/>
                      </v:ref>
                    </v:ctr>
                    <v:ctr name="EcuMDriverInitListOne" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        Container for Init Block I.  This container holds a list of module IDs
                        that will be initialized. Each module in the list will be called for
                        initialization in the list order. All modules in this list are initialized
                        before the OS is started and so these modules require no OS support.
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Module Initialization List One"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="TAB" value="Init List One"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:lst name="EcuMDriverInitItem" type="MAP">
                        <a:a name="COLUMNS">
                          <a:v>EcuMModuleID</a:v>
                          <a:v>EcuMModuleService</a:v>
                          <a:v>EcuMEnableDriver</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Module Initialization List One"/>
                        <a:a name="TAB" value="Init List One"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="count(./*[EcuMEnableDriver = &apos;true&apos;]) = 0" 
                              true="At least one configured driver needs to be enabled."/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="EcuMDriverInitItem" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;This container describes one entry in a driver init list.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="NAME_PATTERN" value="EcuMDriverInitItem_?"/>
                          <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                          <a:a name="REQUIRES-INDEX" value="true"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="count(../../../*[node:name(.) != &apos;EcuMDriverRestartList&apos;]//*[(EcuMModuleID = node:value(node:current()/EcuMModuleID)) and (EcuMModuleService = node:value(node:current()/EcuMModuleService))]) = 1" 
                                false="A module service shall only be configured once ."/>
                          <v:var name="EcuMEnableVendorApiInfix" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;Enable this parameter if &lt;code&gt;VendorApiInfix&lt;/code&gt; is available for a module.
                                 This generate the module service in the following format:
                                 &lt;function&gt;EcuMModuleID_VendorId_VendorApiInfix_EcuMModuleService()&lt;/function&gt;
                                 Also this considers the existance of header file:
                                 &lt;code&gt;EcuMModuleID_VendorId_VendorApiInfix.h&lt;/code&gt;
                              &lt;/p&gt;
                              &lt;p&gt;Dependency:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;The module shall be configured in &lt;code&gt;EcuMFlexModuleConfigurationRef&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="EcuMEnableVendorApiInfix"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr=".= &apos;true&apos; and count(../../../../../EcuMFlexConfiguration/EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))])=0" 
                                     true="There must be a module configuration existing for this module"/>
                              <a:tst 
                                     expr=".= &apos;true&apos; and node:value(as:ref(../../../../../EcuMFlexConfiguration/EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))])/../../CommonPublishedInformation/VendorApiInfix)=&apos;&apos;" 
                                     true="VendorApiInfix is not available for this module"/>
                            </a:da>
                          </v:var>
                          <v:var name="EcuMModuleHeaderFile" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module Header File"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;Base name of the header file to be
                                included for the usage of the
                                module.&lt;/p&gt;

                                &lt;p&gt;If this parameter is left blank, the
                                EcuM will include the header file with
                                base name as entered in
                                &lt;code&gt;EcuMModuleID&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;E.g if the &lt;code&gt;Can&lt;/code&gt; is
                                configured to be initialized and the
                                &lt;code&gt;EcuMModuleHeaderFile&lt;/code&gt; is
                                kept blank, the EcuM will include
                                &lt;code&gt;Can.h&lt;/code&gt;, else the EcuM will
                                include the header with the file name
                                assembeled from the base name defined by
                                &lt;code&gt;EcuMModuleHeaderFile&lt;/code&gt; and
                                the postfix &lt;code&gt;.h&lt;/code&gt;.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Header File"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="WARNING" type="XPath" 
                                  expr="text:match(., &apos;\.h&apos;) and not(node:empty(.))" 
                                  true="Invalid name (.h not required)"/>
                          </v:var>
                          <v:var name="EcuMModuleID" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module ID"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;Specify the module short name (aka module ID) of the module to be
                              initialized; e.g. &lt;em&gt;Adc&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;The name must not be empty and follow the naming conventions for
                              valid C identifiers.&lt;/p&gt;

                              &lt;p&gt;It is assumed that there exists:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt;A header file named after the value of this parameter;
                              e.g. &lt;code&gt;Adc.h&lt;/code&gt;&lt;/li&gt;

                              &lt;li&gt;A initialization function (declared in the mentioned header
                              file) prefixed with the value of this parameter; e.g.
                              &lt;code&gt;Adc_Init()&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module ID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="text:match(.,&apos;^[A-Za-z_][A-Za-z0-9_]*$&apos;)" 
                                  false="Invalid name. Only valid C identifiers ([A-Za-z_][A-Za-z0-9_]*) are allowed."/>
                          </v:var>
                          <v:var name="EcuMModuleInitConfigStr" type="STRING">
                            <a:a name="COLUMN_TITLE" 
                                 value="Module Init Config String"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;To find the init-configuration of
                                most Autosar modules, the EcuM
                                evaluates the
                                &lt;code&gt;EcuMModuleConfigurationRefs&lt;/code&gt;
                                given in this configuration. The name
                                of the multiple-configuration
                                container these references refer to
                                also is the linker-symbol of the
                                configuration defined in that
                                container. That symbol is then passed
                                to the Init-function.&lt;/p&gt;

                                &lt;p&gt;While initializing a module which
                                does not use the multiple
                                configuration container name as symbol
                                for the configuration object, you
                                cannot use the
                                &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt;
                                to determine the pointer, which is to
                                be passed to the Init function. In
                                this case, you &lt;em&gt;must&lt;/em&gt; enable
                                and provide the parameter. The
                                parameter is then used as parameter
                                for the Init-method of the very
                                module.&lt;/p&gt;

                                &lt;p&gt;It is also possible to
                                &lt;em&gt;override&lt;/em&gt; the standard
                                configuration of any module using a
                                parameter in it&apos;s Init function using
                                this parameter. If this parameter is
                                given, the
                                &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt;
                                is ignored.&lt;/p&gt;

                                &lt;p&gt;The string given here must
                                evaluate to a C address, e.g. as plain
                                number, or as address operator followed
                                by a constant name.&lt;/p&gt;

                                &lt;p&gt;Some Autosar modules do not have a
                                parameter in the signature of their
                                &lt;em&gt;MOD&lt;/em&gt;_Init() method. For those
                                modules that do not require a
                                parameter, do not set this parameter
                                but disable it.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Config String"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:empty(.)" 
                                  true="Field must not be left empty."/>
                            <a:da name="WARNING" type="XPath">
                              <a:tst 
                                     expr="count(../../../../EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))]) &gt; 0" 
                                     true="There also is a Module Configuration Reference given for this module, which is overridden by this parameter."/>
                              <a:tst 
                                     expr="(../EcuMModuleService = &apos;Init&apos;) or (../EcuMModuleService = &apos;PreInit&apos;)" 
                                     false="The init configuration string parameter is given for a module service which is not named &apos;Init&apos; or &apos;PreInit&apos;."/>
                            </a:da>
                          </v:var>
                          <v:var name="EcuMModuleService" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module Service"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;The service to be called to initialize that module, e.g. Init,
                              PreInit, Start etc.&lt;/p&gt;
                              &lt;p&gt;If the service is Init and the parameter
                              &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt; has been set for that module, the
                              corresponding pointer to the init structure (&lt; Module &gt;_ConfigType)
                              shall be passed as an argument.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Service"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:empty(.)" 
                                  true="Field must not be left empty."/>
                          </v:var>
                          <v:var name="EcuMEnableDriver" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;If enabled, this DriverInitItem will be used by the EcuM_AL_DriverInitOne() function.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Enable Driver"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="true"/>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:ctr name="EcuMDriverInitListZero" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;Container for Init Block 0. This container holds a list of module IDs that
                        will be initialized. Each module in the list will be called for
                        initialization in the list order.  All modules in this list are
                        initilialized before the post-build configuration has been loaded and the OS
                        is initialized. Therefore, these modules may not use post-build
                        configuration.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Module Initialization List Zero"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="TAB" value="Init List Zero"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:lst name="EcuMDriverInitItem" type="MAP">
                        <a:a name="COLUMNS">
                          <a:v>EcuMModuleID</a:v>
                          <a:v>EcuMModuleService</a:v>
                        </a:a>
                        <a:a name="LABEL" 
                             value="Module Initialization List Zero"/>
                        <a:a name="TAB" value="Init List Zero"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="EcuMDriverInitItem" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;This container describes one entry in a driver init list.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="NAME_PATTERN" value="EcuMDriverInitItem_?"/>
                          <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                          <a:a name="REQUIRES-INDEX" value="true"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="count(../../../*[node:name(.) != &apos;EcuMDriverRestartList&apos;]//*[(EcuMModuleID = node:value(node:current()/EcuMModuleID)) and (EcuMModuleService = node:value(node:current()/EcuMModuleService))]) = 1" 
                                false="A module service shall only be configured once ."/>
                          <v:var name="EcuMEnableVendorApiInfix" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;Enable this parameter if &lt;code&gt;VendorApiInfix&lt;/code&gt; is available for a module.
                                 This generate the module service in the following format:
                                 &lt;function&gt;EcuMModuleID_VendorId_VendorApiInfix_EcuMModuleService()&lt;/function&gt;
                                 Also this considers the existance of header file:
                                 &lt;code&gt;EcuMModuleID_VendorId_VendorApiInfix.h&lt;/code&gt;
                              &lt;/p&gt;
                              &lt;p&gt;Dependency:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;The module shall be configured in &lt;code&gt;EcuMFlexModuleConfigurationRef&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="EcuMEnableVendorApiInfix"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr=".= &apos;true&apos; and count(../../../../../EcuMFlexConfiguration/EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))])=0" 
                                     true="There must be a module configuration exists for this module"/>
                              <a:tst 
                                     expr=".= &apos;true&apos; and node:value(as:ref(../../../../../EcuMFlexConfiguration/EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))])/../../CommonPublishedInformation/VendorApiInfix)=&apos;&apos;" 
                                     true="VendorApiInfix is not available for this module"/>
                            </a:da>
                          </v:var>
                          <v:var name="EcuMModuleHeaderFile" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module Header File"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;Base name of the header file to be
                                included for the usage of the
                                module.&lt;/p&gt;

                                &lt;p&gt;If this parameter is left blank, the
                                EcuM will include the header file with
                                base name as entered in
                                &lt;code&gt;EcuMModuleID&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;E.g if the &lt;code&gt;Can&lt;/code&gt; is
                                configured to be initialized and the
                                &lt;code&gt;EcuMModuleHeaderFile&lt;/code&gt; is
                                kept blank, the EcuM will include
                                &lt;code&gt;Can.h&lt;/code&gt;, else the EcuM will
                                include the header with the file name
                                assembeled from the base name defined by
                                &lt;code&gt;EcuMModuleHeaderFile&lt;/code&gt; and
                                the postfix &lt;code&gt;.h&lt;/code&gt;.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Header File"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="WARNING" type="XPath" 
                                  expr="text:match(., &apos;\.h&apos;) and not(node:empty(.))" 
                                  true="Invalid name (.h not required)"/>
                          </v:var>
                          <v:var name="EcuMModuleID" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module ID"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;Specify the module short name (aka module ID) of the module to be
                              initialized; e.g. &lt;em&gt;Adc&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;The name must not be empty and follow the naming conventions for
                              valid C identifiers.&lt;/p&gt;

                              &lt;p&gt;It is assumed that there exists:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt;A header file named after the value of this parameter;
                              e.g. &lt;code&gt;Adc.h&lt;/code&gt;&lt;/li&gt;

                              &lt;li&gt;A initialization function (declared in the mentioned header
                              file) prefixed with the value of this parameter; e.g.
                              &lt;code&gt;Adc_Init()&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module ID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="text:match(.,&apos;^[A-Za-z_][A-Za-z0-9_]*$&apos;)" 
                                  false="Invalid name. Only valid C identifiers ([A-Za-z_][A-Za-z0-9_]*) are allowed."/>
                          </v:var>
                          <v:var name="EcuMModuleService" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module Service"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;The service to be called to initialize that module, e.g.
                              Init, PreInit, Start etc.&lt;/p&gt;
                              &lt;p&gt;If the service is Init and the parameter
                              EcuMModuleConfigurationRef has been set for that module, the
                              corresponding pointer to the init structure
                              (&lt; Module &gt;_ConfigType) and in case of multiple instantiation
                              an uint8 value to identify the instance of the module(&lt;MSN&gt;_CtrlIdx)
                              shall be passed as an argument.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Service"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:empty(.)" 
                                  true="Field must not be left empty."/>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:ctr name="EcuMDriverRestartList" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;List of module IDs that shall be re-initialized during WakeupRestart.
                        Each module in the list will be called for initialization in the list order by the callout
                        &lt;code&gt;EcuM_AL_DriverRestart()&lt;/code&gt;.&lt;/p&gt;
                        &lt;p&gt;Restriction:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Entries in this list must appear in the same order as in the list of
                        &lt;code&gt;EcuM_DriverInitListOne&lt;/code&gt; and &lt;code&gt;EcuM_DriverInitListZero&lt;/code&gt;.
                        EcuMDriverRestartList shall only contain a subset of
                        the combined list of init block 0 and init block 1 drivers.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="TAB" value="Restart List"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="TITLE" value="Module Restart List"/>
                      <v:lst name="EcuMDriverInitItem" type="MAP">
                        <a:a name="COLUMNS">
                          <a:v>EcuMModuleID</a:v>
                          <a:v>EcuMModuleService</a:v>
                          <a:v>EcuMEnableDriver</a:v>
                        </a:a>
                        <a:a name="LABEL" value="Module Restart List"/>
                        <a:a name="TAB" value="Restart List"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="count(./*[EcuMEnableDriver = &apos;true&apos;]) = 0" 
                              true="At least one configured driver needs to be enabled."/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="EcuMDriverInitItem" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;This container describes one entry in a driver init list.&lt;/p&gt;
                            &lt;p&gt;Restriction:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;The &lt;code&gt;EcuMDriverInitItem&lt;/code&gt; name in
                            &lt;code&gt;EcuMDriverRestartList&lt;/code&gt; shall be the same for all EcuM
                            configuration containers&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="NAME_PATTERN" value="EcuMDriverInitItem_?"/>
                          <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                          <a:a name="REQUIRES-INDEX" value="true"/>
                          <a:da name="WARNING" type="XPath" 
                                expr="count(../../../EcuMDriverRestartList//*[(EcuMModuleID = node:value(node:current()/EcuMModuleID)) and (EcuMModuleService = node:value(node:current()/EcuMModuleService))]) = 1" 
                                false="A module service shall only be configured once ."/>
                          <v:var name="EcuMEnableVendorApiInfix" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;Enable this parameter if &lt;code&gt;VendorApiInfix&lt;/code&gt; is available for a module.
                                 This generate the module service in the following format:
                                 &lt;function&gt;EcuMModuleID_VendorId_VendorApiInfix_EcuMModuleService()&lt;/function&gt;
                                 Also this considers the existance of header file:
                                 &lt;code&gt;EcuMModuleID_VendorId_VendorApiInfix.h&lt;/code&gt;
                              &lt;/p&gt;
                              &lt;p&gt;Dependency:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;The module shall be configured in &lt;code&gt;EcuMFlexModuleConfigurationRef&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="EcuMEnableVendorApiInfix"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst 
                                     expr=".= &apos;true&apos; and count(../../../../../EcuMFlexConfiguration/EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))])=0" 
                                     true="There must be a module configuration exists for this module"/>
                              <a:tst 
                                     expr=".= &apos;true&apos; and node:value(as:ref(../../../../../EcuMFlexConfiguration/EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))])/../../CommonPublishedInformation/VendorApiInfix)=&apos;&apos;" 
                                     true="VendorApiInfix is not available for this module"/>
                            </a:da>
                          </v:var>
                          <v:var name="EcuMModuleHeaderFile" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module Header File"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;Base name of the header file to be
                                included for the usage of the
                                module.&lt;/p&gt;

                                &lt;p&gt;If this parameter is left blank, the
                                EcuM will include the header file with
                                base name as entered in
                                &lt;code&gt;EcuMModuleID&lt;/code&gt;.&lt;/p&gt;

                                &lt;p&gt;E.g if the &lt;code&gt;Can&lt;/code&gt; is
                                configured to be initialized and the
                                &lt;code&gt;EcuMModuleHeaderFile&lt;/code&gt; is
                                kept blank, the EcuM will include
                                &lt;code&gt;Can.h&lt;/code&gt;, else the EcuM will
                                include the header with the file name
                                assembeled from the base name defined by
                                &lt;code&gt;EcuMModuleHeaderFile&lt;/code&gt; and
                                the postfix &lt;code&gt;.h&lt;/code&gt;.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Header File"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="WARNING" type="XPath" 
                                  expr="text:match(., &apos;\.h&apos;) and not(node:empty(.))" 
                                  true="Invalid name (.h not required)"/>
                          </v:var>
                          <v:var name="EcuMModuleID" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module ID"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;Specify the module short name (aka module ID) of the module to be
                              initialized; e.g. &lt;em&gt;Adc&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;The name must not be empty and follow the naming conventions for
                              valid C identifiers.&lt;/p&gt;

                              &lt;p&gt;It is assumed that there exists:&lt;/p&gt;
                              &lt;ul&gt;
                              &lt;li&gt;A header file named after the value of this parameter;
                              e.g. &lt;code&gt;Adc.h&lt;/code&gt;&lt;/li&gt;

                              &lt;li&gt;A initialization function (declared in the mentioned header
                              file) prefixed with the value of this parameter; e.g.
                              &lt;code&gt;Adc_Init()&lt;/code&gt;&lt;/li&gt;
                              &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module ID"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          </v:var>
                          <v:var name="EcuMModuleInitConfigStr" type="STRING">
                            <a:a name="COLUMN_TITLE" 
                                 value="Module Init Config String"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                  &lt;p&gt;To find the init-configuration of
                                  most Autosar modules, the EcuM
                                  evaluates the
                                  &lt;code&gt;EcuMModuleConfigurationRefs&lt;/code&gt;
                                  given in this configuration. The name
                                  of the multiple-configuration
                                  container these references refer to
                                  also is the linker-symbol of the
                                  configuration defined in that
                                  container. That symbol is then passed
                                  to the Init-function.&lt;/p&gt;

                                  &lt;p&gt;While initializing a module which
                                  does not use the multiple
                                  configuration container name as symbol
                                  for the configuration object, you
                                  cannot use the
                                  &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt;
                                  to determine the pointer, which is to
                                  be passed to the Init function. In
                                  this case, you &lt;em&gt;must&lt;/em&gt; enable
                                  and provide the parameter. The
                                  parameter is then used as parameter
                                  for the Init-method of the very
                                  module.&lt;/p&gt;

                                  &lt;p&gt;It is also possible to
                                  &lt;em&gt;override&lt;/em&gt; the standard
                                  configuration of any module using a
                                  parameter in it&apos;s Init function using
                                  this parameter. If this parameter is
                                  given, the
                                  &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt;
                                  is ignored.&lt;/p&gt;

                                  &lt;p&gt;The string given here must
                                  evaluate to a C address, e.g. as plain
                                  number, or as address operator followed
                                  by a constant name.&lt;/p&gt;

                                  &lt;p&gt;Some Autosar modules do not have a
                                  parameter in the signature of their
                                  &lt;em&gt;MOD&lt;/em&gt;_Init() method. For those
                                  modules that do not require a
                                  parameter, do not set this parameter
                                  but disable it.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Config String"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="ENABLE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:empty(.)" 
                                  true="Field must not be left empty."/>
                            <a:da name="WARNING" type="XPath">
                              <a:tst 
                                     expr="count(../../../../EcuMFlexModuleConfigurationRef/*[starts-with(node:value(.),concat(&apos;ASPath:/&apos;,node:value(node:current()/../EcuMModuleID),&apos;/&apos;))]) &gt; 0" 
                                     true="There also is a Module Configuration Reference given for this module, which is overridden by this parameter."/>
                              <a:tst 
                                     expr="(../EcuMModuleService = &apos;Init&apos;) or (../EcuMModuleService = &apos;PreInit&apos;)" 
                                     false="The init configuration string parameter is given for a module service which is not named &apos;Init&apos; or &apos;PreInit&apos;."/>
                            </a:da>
                          </v:var>
                          <v:var name="EcuMModuleService" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module Service"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;The service to be called to initialize that module, e.g. Init,
                              PreInit, Start etc.&lt;/p&gt;
                              &lt;p&gt;If the service is Init and the parameter
                              &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt; has been set for that module, the
                              corresponding pointer to the init structure (&lt; Module &gt;_ConfigType)
                              shall be passed as an argument.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Module Service"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:empty(.)" 
                                  true="Field must not be left empty."/>
                          </v:var>
                          <v:var name="EcuMEnableDriver" type="BOOLEAN">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                   &lt;p&gt;If enabled, this DriverInitItem will be used by the EcuM_AL_DriverRestart() function.&lt;/p&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Enable Driver"/>
                            <a:a name="ORIGIN" 
                                 value="Elektrobit Automotive GmbH"/>
                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:da name="DEFAULT" value="true"/>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:lst name="EcuMSleepMode" type="MAP">
                      <a:a name="COLUMNS">
                        <a:v>EcuMSleepModeId</a:v>
                        <a:v>EcuMSleepModeSuspend</a:v>
                        <a:v>EcuMSleepModeMcuModeRef</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Sleep Mode List"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="EcuMSleepMode" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;This container describes the configured sleep mode. The name of this container specifies
                          the symbolic name of the sleep mode.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="12036831-fc9f-434e-890f-087c11b3987a"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="(node:pos(../..) = 0) or (../../../../*[1]/EcuMCommonConfiguration/EcuMSleepMode/*[position() = node:pos(node:current())+1]/@name = @name)" 
                              false="The EcuMSleepMode name shall be the same for all EcuM configuration containers"/>
                        <v:var name="EcuMSleepModeId" type="INTEGER">
                          <a:a name="COLUMN_TITLE" value="Sleep Mode ID"/>
                          <a:a name="COLUMN_WIDTH" value="150"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;Unique ID for sleep mode. The ID has to be zero-based and
                            consecutive.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Sleep Mode ID"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="3f9abe93-df78-4fac-95d1-285d76d76f8d"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      false="The Sleep Mode ID has to be unique." 
                                      expr="text:uniq(../../*/EcuMSleepModeId,.)"/>
                              <mt:tst 
                                      true="The Sleep Mode ID has to be zero-based and consecutive." 
                                      expr=". &gt;= count(../../*/../*)"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="EcuMSleepModeSuspend" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;Set this flag to true, if the CPU is suspended, halted, or
                            powered off in the sleep mode. If the CPU keeps running in this sleep
                            mode, then this flag must be set to false.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="e7962e57-0d8d-499f-9e26-5b192e1f2b74"/>
                          <a:da name="DEFAULT" value="false"/>
                        </v:var>
                        <v:ref name="EcuMSleepModeMcuModeRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="COLUMN_TITLE" value="Sleep Mcu Mode"/>
                          <a:a name="COLUMN_WIDTH" value="150"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;Reference to the corresponding MCU mode for this
                            sleep mode.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Sleep Mcu Mode"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="d8417af3-2256-4258-ad0c-9485c8facab8"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="The reference does not point to a valid SleepMode in the EcuM configuration."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuModeSettingConf"/>
                        </v:ref>
                        <v:lst name="EcuMWakeupSourceMask">
                          <a:a name="LABEL" value="Wakeup Source List"/>
                          <a:da name="MIN" value="1"/>
                          <v:ref name="EcuMWakeupSourceMask" 
                                 type="SYMBOLIC-NAME-REFERENCE">
                            <a:a name="COLUMN_TITLE" 
                                 value="Wakeup Source Reference"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;Reference to a wakeup source that shall be
                              enabled for this sleep mode.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Wakeup Source Reference"/>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="UUID" 
                                 value="ad27ffe7-b921-4651-b2b6-41a2e22e20fe"/>
                            <a:da name="INVALID" type="XPath" 
                                  expr="node:refvalid(.)" 
                                  false="The reference does not point to a valid EcuMWakeupSource in the EcuM configuration."/>
                            <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMWakeupSource"/>
                          </v:ref>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="EcuMWakeupSource" type="MAP">
                      <a:a name="COLUMNS">
                        <a:v>EcuMWakeupSourceId</a:v>
                        <a:v>EcuMWakeupSourcePolling</a:v>
                        <a:v>EcuMValidationTimeout</a:v>
                        <a:v>EcuMComMChannelRef</a:v>
                        <a:v>EcuMComMPNCRef</a:v>
                      </a:a>
                      <a:a name="LABEL" value="Wakeup Source List"/>
                      <a:da name="MAX" value="32"/>
                      <a:da name="MIN" value="5"/>
                      <v:ctr name="EcuMWakeupSource" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;Configuration of Wakeup Sources.&lt;/p&gt;
                          &lt;p&gt;
                          The short name of this container will be available as preprocessor
                          define which expands to values corresponding to the
                          bit positions(wakeup Source ID) of this wakeup Source.
                          &lt;/p&gt;&lt;p&gt;
                          &lt;em&gt;Attention:&lt;/em&gt; For the first five wakeup sources standardized names will be used:
                          &lt;/p&gt;&lt;ul&gt;
                          &lt;li&gt;&lt;code&gt;Wakeup Source ID: 0&lt;/code&gt;: ECUM_WKSOURCE_POWER&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;Wakeup Source ID: 1&lt;/code&gt;: ECUM_WKSOURCE_RESET&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;Wakeup Source ID: 2&lt;/code&gt;: ECUM_WKSOURCE_INTERNAL_RESET&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;Wakeup Source ID: 3&lt;/code&gt;: ECUM_WKSOURCE_INTERNAL_WDG&lt;/li&gt;
                          &lt;li&gt;&lt;code&gt;Wakeup Source ID: 4&lt;/code&gt;: ECUM_WKSOURCE_EXTERNAL_WDG&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="NAME_PATTERN" value="ECUM_WKSOURCE_?"/>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="fcd1fcd4-2e91-4db1-baa1-c282b707c707"/>
                        <a:da name="TITLE" value="Wakeup Source"/>
                        <v:var name="EcuMValidationTimeout" type="FLOAT">
                          <a:a name="COLUMN_TITLE" value="Valid. Timeout"/>
                          <a:a name="COLUMN_WIDTH" value="130"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;The validation timeout is the period
                            in seconds for which the ECU State
                            Manager will wait for the validation of
                            a wakeup event.&lt;/p&gt;

                            &lt;p&gt;If the timeout parameter is disabled
                            the ECU Manager does not validate the
                            wakeup source. Reported wakeup events
                            of wakeup sources with disabled timeout
                            parameter are considered to be always
                            valid.&lt;/p&gt;

                            &lt;p&gt;The validation timeout must always be
                            disabled for all default wakeup
                            sources.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Validation Timeout (s)"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="3ddb8798-593c-455c-b8a8-ba1fbf460abf"/>
                          <a:da name="DEFAULT" value="0.0"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt; Infinity"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      true="Timeout for a Validation is smaller than the cycle time of EcuM_MainFunction (EcuMMainFunctionPeriod)." 
                                      expr=". &lt; ../../../../../EcuMGeneral/EcuMMainFunctionPeriod"/>
                              <mt:tst 
                                      true="Validation must be disabled for default wakeup sources" 
                                      expr="node:name(..) = &apos;ECUM_WKSOURCE_POWER&apos; | &apos;ECUM_WKSOURCE_RESET&apos; | &apos;ECUM_WKSOURCE_INTERNAL_RESET&apos; | &apos;ECUM_WKSOURCE_INTERNAL_WDG&apos; |&apos;ECUM_WKSOURCE_EXTERNAL_WDG&apos;"/>
                              <mt:tst 
                                      false="The ratio EcuMValidationTimeout / EcuMMainFunctionPeriod shall be less than or equal to 65535" 
                                      expr="((.) div (as:modconf(&apos;EcuM&apos;)[1]/EcuMGeneral/EcuMMainFunctionPeriod)) &lt;= 65535"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                        <v:var name="EcuMWakeupSourceId" type="INTEGER">
                          <a:a name="COLUMN_TITLE" value="WKS ID"/>
                          <a:a name="COLUMN_WIDTH" value="130"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;This parameter is the identifier of a
                            wakeup source.&lt;/p&gt;
                            &lt;p&gt;The numerical value ranging from 0 to
                            31 defines the position corresponding to
                            this wakeup source in all instances of
                            &lt;code&gt;EcuM_WakeupSourceType&lt;/code&gt; bitfield.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Wakeup Source ID"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ECUC:bdc9686e-5683-43b0-95b2-0f1cd8114964"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=31"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath 
                                      false="Multiple wakeup sources have the same wakeup source ID but they have to be unique." 
                                      expr="text:uniq(../../*/EcuMWakeupSourceId, .)"/>
                          </a:da>
                        </v:var>
                        <v:var name="EcuMWakeupSourcePolling" type="BOOLEAN">
                          <a:a name="COLUMN_TITLE" value="Wakeup Source Polling"/>
                          <a:a name="COLUMN_WIDTH" value="130"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                              is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="Wakeup Source Polling"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="489b6033-c21d-4363-86f3-ff85d6a929e7"/>
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="EDITABLE" value="false"/>
                        </v:var>
                        <v:ref name="EcuMComMChannelRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="COLUMN_TITLE" value="ComM Channel"/>
                          <a:a name="COLUMN_WIDTH" value="250"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;Reference to a Network (channel) defined in the
                            Communication Manager. No reference indicates that the wakeup source is
                            not a communication channel.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="ComM Channel"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="4892c419-49fe-406e-9705-14bec70ef8dc"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="The reference does not point to a valid ComMChannel in the ComM configuration."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                        </v:ref>
                        <v:ref name="EcuMComMPNCRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="COLUMN_TITLE" value="ComM PNC"/>
                          <a:a name="COLUMN_WIDTH" value="250"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;This is a reference to a one or more PNC&apos;s defined in the
                            Communication Manager.
                            No reference indicates that the wakeup source is not assigned
                            to a partial network.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="LABEL" value="ComM PNC"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="The reference does not point to a valid ComMPnc in the ComM configuration."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMPnc"/>
                        </v:ref>
                        <v:ref name="EcuMResetReasonRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;This parameter describes the mapping of reset reasons detected by the MCU driver
                            into wakeup sources.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="5130101c-e7f8-4e10-9db0-afc4eb6f6b44"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="The reference does not point to a valid McuResetReasonConf in the Mcu configuration."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuPublishedInformation/McuResetReasonConf"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="EcuMDemEventParameterRefs" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;References to DemEventParameter elements which shall be invoked using the
                        API &lt;code&gt;Dem_ReportErrorStatus()&lt;/code&gt; in case the corresponding error occurs.
                        The EventId is taken from the referenced DemEventParameter&apos;s DemEventId value.
                        The standardized errors are provided in this container and can be extended by vendor
                        specific error references.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="3595754a-fbda-4718-b4a6-884b69c07785"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:ref name="ECUM_E_ALL_RUN_REQUESTS_KILLED" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the DemEventParameter which shall be issued when the error
                          ECUM_E_ALL_RUN_REQUESTS_KILLED has occurred.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;&lt;li&gt;&lt;code&gt;EcuMFixedConfiguration&lt;/code&gt; is configured to enable EcuM Fixed support.&lt;/li&gt;&lt;/ul&gt;
                          &lt;p&gt;Further notes:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Activation: Thrown, if the service EcuM_KillAllRunRequests is
                            issued.&lt;/li&gt;
                            &lt;li&gt;Healing: None. The error resides in memory until it is deleted.&lt;/li&gt;
                            &lt;li&gt;Trigger debounce: None. The error is reported on first occurrence.&lt;/li&gt;
                            &lt;li&gt;Rate of diagnostic checks: None. This error is thrown by every call of the service
                            that reports this error.
                            A list of API functions that report this error can be found in the
                            table of production errors in the &lt;em&gt;Integration notes&lt;/em&gt;
                            section of the module references.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="2b3cb3dd-c626-4ea8-8e66-c60f773fee29"/>
                        <a:da name="EDITABLE" value="true"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" 
                              false="The reference does not point to a valid DemEventParameter in the Dem configuration."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                      </v:ref>
                      <v:ref name="ECUM_E_CONFIGURATION_DATA_INCONSISTENT" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the DemEventParameter which shall be issued when the error
                          &quot;ECUM_E_CONFIGURATION_DATA_INCONSISTENT&quot; has occured.&lt;/p&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="aa0ec70a-8132-4c5d-9657-602f60e3f344"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" 
                              false="The reference does not point to a valid DemEventParameter in the Dem configuration."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                      </v:ref>
                      <v:ref name="ECUM_E_RAM_CHECK_FAILED" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;Reference to the DemEventParameter which shall be issued when the error
                          ECUM_E_RAM_CHECK_FAILED has occured.&lt;/p&gt;
                          &lt;p&gt;Dependency on parameter(s):&lt;/p&gt;
                          &lt;ul&gt;&lt;li&gt;&lt;code&gt;EcuMRamChkFailedReportToDem&lt;/code&gt;: Select DEM to enable the reporting of ECUM_E_RAM_CHECK_FAILED.&lt;/li&gt;&lt;/ul&gt;
                          &lt;p&gt;Further notes:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;Activation: Thrown, if the RAM check during wakeup failed.&lt;/li&gt;
                            &lt;li&gt;Healing: Dependent on the implementation of callout function
                            &lt;code&gt;EcuM_CheckRamHash()&lt;/code&gt; that must be implemented by user.&lt;/li&gt;
                            &lt;li&gt;Trigger debounce: Dependent on the implementation of callout function
                            &lt;code&gt;EcuM_CheckRamHash()&lt;/code&gt; that must be implemented by user.&lt;/li&gt;
                            &lt;li&gt;Rate of diagnostic checks: Checked on every call of the service that reports this error.
                            A list of API functions that report this error can be found in the
                            table of production errors in the &lt;em&gt;Integration notes&lt;/em&gt;
                            section of the module references.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="8442c795-ba27-4805-a33f-d97b2c804d9d"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="node:refvalid(.)" 
                              false="The reference does not point to a valid DemEventParameter in the Dem configuration."/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                      </v:ref>
                    </v:ctr>
                  </v:ctr>
                  <v:ctr name="EcuMFixedConfiguration" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                      &lt;p&gt;This container contains the configuration (parameters) of the EcuMFixed.
                      Only applicable if EcuMFixed is implemented.&lt;/p&gt;
                      &lt;p&gt;Dependency:&lt;/p&gt;
                      &lt;ul&gt;
                        &lt;li&gt;The parameter &lt;code&gt;EcuMRteUsage&lt;/code&gt; shall be enabled.&lt;/li&gt;
                      &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="UUID" 
                         value="01c96049-8a73-4081-9740-5aa04a9adfb2"/>
                    <a:da name="ENABLE" value="false"/>
                    <a:da name="INVALID" type="XPath" 
                          expr="../../../EcuMGeneral/EcuMRteUsage = &apos;false&apos;" 
                          true="EcuM Fixed support is enabled, but Rte Usage (EcuMRteUsage) is disabled!"/>
                    <v:var name="EcuMNvramReadallTimeout" type="FLOAT">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Period given in seconds for which the ECU State Manager will wait until
                          it considers a ReadAll job of the NVRAM Manager as failed.&lt;/p&gt;
                          &lt;p&gt;Dependency:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;The value shall not be smaller than &lt;code&gt;EcuMMainFunctionPeriod&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="44dba610-53d9-4d7c-b311-94c2090a32f3"/>
                      <a:da name="DEFAULT" value="0.0"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                    </v:var>
                    <v:var name="EcuMNvramWriteallTimeout" type="FLOAT">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;Period given in seconds for which the ECU State Manager will wait until
                          it considers a WriteAll job of the NVRAM Manager as failed.&lt;/p&gt;
                          &lt;p&gt;Dependency:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;The value shall not be smaller than &lt;code&gt;EcuMMainFunctionPeriod&lt;/code&gt;.&lt;/li&gt;
                          &lt;/ul&gt;
                         &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="349a621f-d14e-4436-8a98-2142f30a7bdf"/>
                      <a:da name="DEFAULT" value="0.0"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                    </v:var>
                    <v:var name="EcuMRunMinimumDuration" type="FLOAT">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;Duration given in seconds for which the ECU State Manager will stay in
                          RUN state even when no one requests RUN. This duration should be long at
                          least as long as a SW-Cs needs to request RUN.&lt;/p&gt;
                          &lt;p&gt;Dependency:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;The value shall not be smaller than &lt;code&gt;EcuMMainFunctionPeriod&lt;/code&gt;.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" 
                           value="39aab2c1-c7a1-4ce1-a48a-618b15c91db9"/>
                      <a:da name="DEFAULT" value="0.0"/>
                      <a:da name="EDITABLE" value="true"/>
                    </v:var>
                    <v:lst name="EcuMFixedModuleConfigurationRef">
                      <a:a name="EXISTING" value="false"/>
                      <a:da name="ENABLE" value="true"/>
                      <v:ref name="EcuMFixedModuleConfigurationRef" 
                             type="CHOICE-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;html&gt;
                          References to the init structure of the corresponding BSW module.
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="616ce95e-cabd-4b21-aebf-765c48fd18d2"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="REF">
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Adc/AdcConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Can/CanConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanIf/CanIfInitCfg</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanNm/CanNmGlobalConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanSM/CanSMConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanTp/CanTpConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanTrcv/CanTrcvConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Com/ComConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dbg/DbgMultipleConfigurationContainer</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dcm/DcmConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dio/DioConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dlt/DltMultipleConfigurationContainer</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Eep/EepInitConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Eth/EthConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/EthIf/EthIfConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/EthTrcv/EthTrcvConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/FiM/FiMConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Fls/FlsConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/FlsTst/FlsTstConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrArTp/FrArTpMultipleConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrIf/FrIfConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Fr/FrMultipleConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrNm/FrNmChannelConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrSM/FrSMConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/FrTp/FrTpMultipleConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Gpt/GptChannelConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Icu/IcuConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/IpduM/IpduMConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/J1939Tp/J1939TpConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Lin/LinGlobalConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/LinIf/LinIfGlobalConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/LinSM/LinSMConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/LinTp/LinTpGlobalConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/PduR/PduRRoutingTables</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Port/PortConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Pwm/PwmChannelConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Rte/RtePostBuildVariantConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/SoAd/SoAdDoIpConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spi/SpiDriver</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/UdpNm/UdpNmGlobalConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Wdg/WdgSettingsConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Xcp/XcpConfig</a:v>
                        </a:da>
                      </v:ref>
                    </v:lst>
                    <v:lst name="EcuMComMCommunicationAllowedList">
                      <a:a name="EXISTING" value="false"/>
                      <v:ref name="EcuMComMCommunicationAllowedList" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;References to the ComMChannels for which EcuM has to call ComM_CommunicationAllowed.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="78763e64-51c0-4b1d-abea-9043df480b98"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel"/>
                      </v:ref>
                    </v:lst>
                    <v:ref name="EcuMNormalMcuModeRef" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This parameter is a reference to the normal MCU mode to be restored
                          after a sleep.&lt;/p&gt;
                          &lt;p&gt;Restriction:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;This parameter shall have the same value in all configurations&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="UUID" 
                           value="8b222fb5-f2d0-40a9-a842-b2380db18353"/>
                      <a:da name="EDITABLE" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuModeSettingConf"/>
                    </v:ref>
                    <v:ctr name="EcuMDriverInitListThree" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;Container for Init Block III. This container holds a list of module IDs that
                        will be initialized. Each module in the list will be called for initialization in
                        the list order. All modules in this list are initilialized after the OS is started
                        and so these modules may use OS support. These modules may also rely on the Nvram
                        ReadAll job to have provided all data.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="8aee0bf0-52d9-4ea2-a48f-3b0b07f8e4cc"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:lst name="EcuMDriverInitItem" type="MAP">
                        <a:a name="COLUMNS">
                          <a:v>EcuMModuleID</a:v>
                          <a:v>EcuMModuleService</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="LABEL" 
                             value="Module Initialization List Three"/>
                        <a:a name="TAB" value="Init List Three"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="EcuMDriverInitItem" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                              is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;This container describes one entry in a driver init list.&lt;/p&gt;
                              &lt;p&gt;Restriction:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;The &lt;code&gt;EcuMDriverInitItem&lt;/code&gt; name in &lt;code&gt;EcuMDriverInitListThree&lt;/code&gt; shall be the same for all EcuM configuration containers&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="EXISTING" value="false"/>
                          <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                          <a:a name="REQUIRES-INDEX" value="true"/>
                          <a:a name="UUID" 
                               value="d5cc356b-7211-4cb4-989f-369658113d97"/>
                          <v:var name="EcuMModuleID" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module ID"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                              is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;Specify the module short name (aka
                                module ID) of the module to be
                                initialized; e.g. &lt;em&gt;Adc&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;The name must not be empty and
                                follow the naming conventions for
                                valid C identifiers.&lt;/p&gt;

                                &lt;p&gt;It is assumed that there exists:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;A header file named after the
                                  value of this parameter;
                                  e.g. &lt;code&gt;Adc.h&lt;/code&gt;&lt;/li&gt;

                                  &lt;li&gt;A initialization function
                                  (declared in the mentioned header
                                  file) prefixed with the value of
                                  this parameter; e.g.
                                  &lt;code&gt;Adc_Init()&lt;/code&gt;&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;Restriction:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;This parameter for a &lt;code&gt;DriverInitItem&lt;/code&gt; in &lt;code&gt;EcuMDriverInitListThree&lt;/code&gt;
                                    shall have the same value in all configurations&lt;/li&gt;
                                  &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="EXISTING" value="false"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="8a68008d-9f55-4c79-b577-600f4d98ce70"/>
                            <a:da name="EDITABLE" value="false"/>
                          </v:var>
                          <v:var name="EcuMModuleService" type="STRING">
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;The service to be called to initialize that module, e.g. Init,
                                PreInit, Start etc.&lt;/p&gt;
                                &lt;p&gt;If the service is Init and the parameter
                                &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt; has been set for that module, the
                                corresponding pointer to the init structure (&lt; Module &gt;_ConfigType)
                                shall be passed as an argument.&lt;/p&gt;
                                &lt;p&gt;Restriction:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;This parameter for a &lt;code&gt;DriverInitItem&lt;/code&gt; in &lt;code&gt;EcuMDriverInitListThree&lt;/code&gt; shall have the same value in all configurations&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="EXISTING" value="false"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="6d2acdab-94e0-42b9-a539-0a9954aadc78"/>
                            <a:da name="EDITABLE" value="false"/>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:ctr name="EcuMDriverInitListTwo" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;Container for Init Block II. This container holds a list of module IDs
                        that will be initialized. Each module in the list will be called for initialisation in the list order.
                        All modules in this list are initilialized after the OS is started and so these modules may
                        use OS support. These modules may not rely on the Nvram ReadAll job to have provided all data.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="74f2187b-9e41-482e-baaa-724d6266c48b"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:lst name="EcuMDriverInitItem" type="MAP">
                        <a:a name="COLUMNS">
                          <a:v>EcuMModuleID</a:v>
                          <a:v>EcuMModuleService</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="LABEL" value="Module Initialization List Two"/>
                        <a:a name="TAB" value="Init List Two"/>
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="MIN" value="1"/>
                        <v:ctr name="EcuMDriverInitItem" type="IDENTIFIABLE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;This container describes one entry in a driver init list.&lt;/p&gt;
                            &lt;p&gt;Restriction:&lt;/p&gt;
                              &lt;ul&gt;
                                &lt;li&gt;The &lt;code&gt;EcuMDriverInitItem&lt;/code&gt; name in &lt;code&gt;EcuMDriverInitListTwo&lt;/code&gt; shall be the same for all EcuM configuration containers&lt;/li&gt;
                              &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="EXISTING" value="false"/>
                          <a:a name="NAME_PATTERN" value="EcuMDriverInitItem_?"/>
                          <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                          <a:a name="REQUIRES-INDEX" value="true"/>
                          <a:a name="UUID" 
                               value="4ee10e1d-b359-4d57-94e4-d37b9713046f"/>
                          <v:var name="EcuMModuleID" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module ID"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Specify the module short name (aka
                                module ID) of the module to be
                                initialized; e.g. &lt;em&gt;Adc&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;The name must not be empty and
                                follow the naming conventions for
                                valid C identifiers.&lt;/p&gt;

                                &lt;p&gt;It is assumed that there exists:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;A header file named after the
                                  value of this parameter;
                                  e.g. &lt;code&gt;Adc.h&lt;/code&gt;&lt;/li&gt;

                                  &lt;li&gt;A initialization function
                                  (declared in the mentioned header
                                  file) prefixed with the value of
                                  this parameter; e.g.
                                  &lt;code&gt;Adc_Init()&lt;/code&gt;&lt;/li&gt;
                                &lt;/ul&gt;
                                &lt;p&gt;Restriction:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;This parameter for a &lt;code&gt;DriverInitItem&lt;/code&gt; in &lt;code&gt;EcuMDriverInitListTwo&lt;/code&gt;
                                    shall have the same value in all configurations&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="EXISTING" value="false"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="da233280-5e9f-4afb-949b-54ad22b7f753"/>
                            <a:da name="EDITABLE" value="false"/>
                          </v:var>
                          <v:var name="EcuMModuleService" type="STRING">
                            <a:a name="COLUMN_TITLE" value="Module Service"/>
                            <a:a name="COLUMN_WIDTH" value="150"/>
                            <a:a name="DESC">
                              <a:v>&lt;html&gt;
                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;The service to be called to initialize that module, e.g. Init,
                                PreInit, Start etc.&lt;/p&gt;
                                &lt;p&gt;If the service is Init and the parameter
                                &lt;code&gt;EcuMModuleConfigurationRef&lt;/code&gt; has been set for that module, the
                                corresponding pointer to the init structure (&lt; Module &gt;_ConfigType)
                                shall be passed as an argument.&lt;/p&gt;
                                &lt;p&gt;Restriction:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;This parameter for a &lt;code&gt;DriverInitItem&lt;/code&gt; in &lt;code&gt;EcuMDriverInitListTwo&lt;/code&gt; shall have the same value in all configurations&lt;/li&gt;
                                  &lt;/ul&gt;
                                &lt;/html&gt;</a:v>
                            </a:a>
                            <a:a name="EXISTING" value="false"/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" 
                                 value="341dd8ce-b7fd-4ff5-8de2-8d63eaf1db51"/>
                            <a:da name="EDITABLE" value="false"/>
                          </v:var>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                    <v:lst name="EcuMFixedUserConfig" type="MAP">
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="EcuMFixedUserConfig" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;These containers describe the identifiers that are needed to refer
                          to a software component or another appropriate entity in the system which
                          is designated to request the RUN state. Application requestors refer to entities
                          above RTE, system requestors to entities below RTE (e.g. Communication Manager).&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="c8dd5a37-009d-4d24-9901-6060eabbc3df"/>
                        <v:var name="EcuMFixedUser" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;Parameter used to identify one user.
                               A unique ID needs to be provided for each user.
                               The ID also has to be zero-based and
                               consecutive.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="39b264ca-ca9f-4308-90a3-8e31f98cd9f7"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="EDITABLE" value="true"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath>
                              <mt:tst 
                                      false="The EcuM Fixed user value has to be unique." 
                                      expr="text:uniq(../../*/EcuMFixedUser,.)"/>
                              <mt:tst 
                                      true="The EcuM Fixed user value has to be zero-based and consecutive." 
                                      expr=". &gt;= count(../../*)"/>
                            </mt:xpath>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="EcuMTTII" type="MAP">
                      <a:a name="EXISTING" value="false"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:ctr name="EcuMTTII" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this
                          parameter is not supported by the current
                          implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This container contains parameters for the TTII protocol. The list
                          must contain at least on element when &lt;code&gt;ECUM_TTII_ENABLED&lt;/code&gt; is set to true.&lt;/p&gt;
                          &lt;p&gt;Restriction:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;The &lt;code&gt;EcuMTTII&lt;/code&gt; name shall be the same for all EcuM configuration containers&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="9bc061bd-92cf-4408-a58d-4557019b29a3"/>
                        <v:var name="EcuMDivisor" type="INTEGER">
                          <a:a name="COLUMN_TITLE" value="Divisor Counter"/>
                          <a:a name="COLUMN_WIDTH" value="150"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                                &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                                is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                                &lt;p&gt;Initial value for the Divisor Counter of this TTII step.&lt;/p&gt;
                                &lt;p&gt;This Counter is decremented every time the ECU has been woken
                                up by the TTII Wakeup Source. When this counter has elapsed the
                                succeeding TTII step is executed.&lt;/p&gt;
                                &lt;p&gt;&lt;em&gt;This parameter is not used in this version of the EcuM.&lt;/em&gt;&lt;/p&gt;
                                &lt;p&gt;Restriction:&lt;/p&gt;
                                  &lt;ul&gt;
                                    &lt;li&gt;This parameter for an EcuM TTII shall have the same value in all configurations&lt;/li&gt;
                                    &lt;li&gt;The maximal value for &lt;code&gt;EcuMDivisor&lt;/code&gt; is
                                    18446744073709551615 (= 0xFFFFFFFFFFFFFFFF = (2^64)-1) according to EcuM
                                    configuration but EB tresos Studio limits the maximum value to 9223372036854775807 (=
                                    0x7FFFFFFFFFFFFFFF = (2^63)-1).&lt;/li&gt;
                                  &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="EXISTING" value="false"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="72ee595f-49e3-41ee-9869-1fbc111b677a"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=9223372036854775807"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:ref name="EcuMSleepModeRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="COLUMN_TITLE" value="Sleep Mode"/>
                          <a:a name="COLUMN_WIDTH" value="150"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this
                              parameter is not supported by the current
                              implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;This configuration parameter is a reference to a configured sleep mode that is used for TTII.&lt;/p&gt;
                              &lt;p&gt;Restriction:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;This parameter for an EcuM TTII shall have the same value in all configurations&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="EXISTING" value="false"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="dda0a3ee-e6df-4e76-95f8-ec25bc9c7767"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMSleepMode"/>
                        </v:ref>
                        <v:ref name="EcuMSuccessorRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="COLUMN_TITLE" value="Next Sleep Mode"/>
                          <a:a name="COLUMN_WIDTH" value="150"/>
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                              is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;This parameter is a reference to the next sleep mode in the TTII
                              protocol.&lt;/p&gt;
                              &lt;p&gt;Restriction:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;This parameter for an EcuM TTII shall have the same value in all configurations&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="EXISTING" value="false"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="3efa5937-5399-483e-8b8a-361f8c8ec144"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMSleepMode"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="EcuMWdgM" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;This container holds the configuration parameters for the interaction
                        between the Watchdog Manager (WdgM) and EcuM. The WdgM mode to be selected
                        in a specific Sleep Mode of EcuM is configured in the EcuMSleepMode
                        container.&lt;/p&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="EXISTING" value="false"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="UUID" 
                           value="d33c9ee2-6910-4999-a1ad-eb5ca53102ac"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:ref name="EcuMWdgMPostRunModeRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This parameter references the WdgM mode to be set when entering the
                          POST RUN state of EcuM.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="cc992411-554c-4325-8610-4aadc6a4bc4b"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMConfigSet/WdgMMode"/>
                      </v:ref>
                      <v:ref name="EcuMWdgMRunModeRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This parameter references the WdgM mode to be set when entering the
                          RUN state of EcuM.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="f84d7cf5-c249-4a51-b95c-4d9459c6d639"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMConfigSet/WdgMMode"/>
                      </v:ref>
                      <v:ref name="EcuMWdgMShutdownModeRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This parameter references the WdgM mode to be set when leaving the GO
                          OFF I state of EcuM.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="bc64a707-5858-4284-9253-73b78094d329"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMConfigSet/WdgMMode"/>
                      </v:ref>
                      <v:ref name="EcuMWdgMStartupModeRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This parameter references the WdgM mode to be set when entering the
                          STARTUP II state of EcuM.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="5b68a542-e2c8-4635-bf5d-eb5f76dfda2f"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMConfigSet/WdgMMode"/>
                      </v:ref>
                      <v:ref name="EcuMWdgMWakeupModeRef" type="REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This parameter references the WdgM mode to be set when entering the
                          WAKEUP I state of EcuM.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="16762ad9-9725-424e-b52a-62c88c125485"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMConfigSet/WdgMMode"/>
                      </v:ref>
                      <v:ref name="EcuMSupervisedEntityRef" 
                             type="SYMBOLIC-NAME-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;This parameter references the Supervised
                           Entity ID that way configured for EcuM in
                           the Watchdog Manager.&lt;/p&gt;

                           &lt;p&gt;The EcuM updates this associated alive
                           counter cyclically after it has initialized
                           the WdgM in all states except SLEEP.  The
                           cyclic update process is suspended in the
                           SLEEP mode but will be activated after the
                           SLEEP mode is left.&lt;/p&gt;

                           &lt;p&gt;Configure the supervised entity of the
                           EcuM in the WdgM so that the WdgM causes a
                           reset if the alive counter is not updated
                           in the WdgM modes WdgMStartupMode,
                           WdgMWakeupMode, WdgMRunMode, and
                           WdgMPostRunMode.  During the time in which
                           the WdgMShutdownMode is active no alive
                           counter is updated any more bcause the WdgM
                           is not supervising the counter any
                           more.&lt;/p&gt;

                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="EXISTING" value="false"/>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="2e3ceefe-2e91-47b1-b3ff-0c74e2ef11ac"/>
                        <a:da name="EDITABLE" value="false"/>
                        <a:da name="REF" 
                              value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMGeneral/WdgMSupervisedEntity"/>
                      </v:ref>
                    </v:ctr>
                  </v:ctr>
                  <v:ctr name="EcuMFlexConfiguration" type="IDENTIFIABLE">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                      &lt;p&gt;This container contains the configuration (parameters) of the EcuMFlex.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="LABEL" value="EcuM Flex Configuration"/>
                    <a:a name="UUID" 
                         value="0d7c5d3c-8dce-472f-b438-1ad1634288b7"/>
                    <v:lst name="EcuMFlexModuleConfigurationRef">
                      <a:a name="COLUMNS" value="EcuMFlexModuleConfigurationRef"/>
                      <a:a name="LABEL" value="Module Configuration References"/>
                      <a:a name="TAB" value="FlexConfig List"/>
                      <v:ref name="EcuMFlexModuleConfigurationRef" 
                             type="CHOICE-REFERENCE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                              &lt;p&gt;This parameter contains a reference to the init structure of the
                              corresponding BSW module.&lt;/p&gt;
                              &lt;p&gt;Dependency:&lt;/p&gt;
                                &lt;ul&gt;
                                  &lt;li&gt;The reference in the list shall not be repeated.&lt;/li&gt;
                                &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="UUID" 
                             value="11879fa7-76cc-46be-91a2-757f7b3b6aed"/>
                        <a:da name="INVALID" type="XPath" 
                              expr="text:uniq(../*,.)" 
                              false="The reference in the list shall not be repeated. "/>
                        <a:da name="REF">
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Adc/AdcConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/BswM/BswMConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Can/CanConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/CanTrcv/CanTrcvConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Cdd/CddConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dio/DioConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Eth/EthConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/EthTrcv/EthTrcvConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Fls/FlsConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Fr/FrConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Fr/FrMultipleConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Gpt/GptChannelConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Icu/IcuConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Lin/LinGlobalConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Ocu/OcuConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Port/PortConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Pwm/PwmChannelConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spi/SpiDriver</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/WdgM/WdgMConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Wdg/WdgSettingsConfig</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/GtmCfg/GtmCfgConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spmc/SpmcConfigSet</a:v>
                          <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Uart/UartConfigSet</a:v>
                        </a:da>
                      </v:ref>
                    </v:lst>
                    <v:ref name="EcuMNormalMcuModeRef" 
                           type="SYMBOLIC-NAME-REFERENCE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                          &lt;p&gt;This parameter is a reference to the normal MCU mode to be restored
                          after a sleep.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="LABEL" value="Normal Mcu Mode"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:da name="INVALID" type="XPath" expr="node:refvalid(.)" 
                            false="The reference does not point to a valid McuMode in the EcuM Configuration."/>
                      <a:da name="REF" 
                            value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuModeSettingConf"/>
                    </v:ref>
                    <v:lst name="EcuMAlarmClock" type="MAP">
                      <a:da name="ENABLE" value="false"/>
                      <v:ctr name="EcuMAlarmClock" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                          is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                          &lt;p&gt;These containers describe the configured alarm clocks.
                          The name of these containers allows giving a symbolic name
                          to one alarm clock.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="94eb1b28-928f-4d65-8864-adf7936485b5"/>
                        <v:var name="EcuMAlarmClockId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;Unique ID for this alarmclock.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="12802f6e-be1e-4a99-bc91-1b1291a2f7cd"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <v:var name="EcuMAlarmClockTimeOut" type="FLOAT">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;Parameter allows to define a timout in seconds for this alarm clock.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" 
                               value="ffce112f-14f4-43fc-99e6-bae88e58513a"/>
                          <a:da name="DEFAULT" value="0.0"/>
                          <a:da name="EDITABLE" value="false"/>
                        </v:var>
                        <v:ref name="EcuMAlarmClockUser" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;Parameter allows an alarm to be assigned to the user.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="475637a2-2936-43aa-9528-50d3b0b422e8"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="EcuMFlexUserConfig" type="MAP">
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="EcuMFlexUserConfig" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;Describes the identifiers that are needed to
                          refer to a particular software component or another appropriate entity in
                          the system which uses the EcuMFlex Interfaces.&lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="d8e99f9e-9d5c-4bd3-a6f9-e96c4c7580b8"/>
                        <v:var name="EcuMFlexUser" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;Parameter used to identify one user.&lt;/p&gt;
                            &lt;p&gt;Restriction:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;User ID shall be in the range 0 to 255 and
                               shall be unique&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="8c5f572b-38dc-4754-bc57-1395890e3b82"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath 
                                      false="The user ID is not unique within the list of user IDs" 
                                      expr="text:uniq(../../*/EcuMFlexUser,node:value(./.))"/>
                          </a:da>
                        </v:var>
                        <v:ref name="EcuMFlexEcucPartitionRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;Denotes in which &quot;EcucPartition&quot; the user of the EcuM is executed.&lt;/p&gt;

                            &lt;p&gt;This reference parameter has no effect as it is only used
                            by the Alarm Clock functionality which is not supported by the
                            current implementation.&lt;/p&gt;

                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="c8486256-d84f-42b0-ab8f-586521114c7f"/>
                          <a:da name="ENABLE" value="false"/>
                          <a:da name="INVALID" type="XPath" 
                                expr="node:refvalid(.)" 
                                false="The reference does not point to a valid EcucPartition in the EcuC configuration."/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                        </v:ref>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="EcuMGoDownAllowedUsers" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;
                            &lt;p&gt;This container describes the collection of allowed
                            users which are allowed to call the EcuM_GoDown API.
                            &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="false"/>
                      <a:a name="UUID" 
                           value="7d3d53a3-4f3d-4595-9bd9-4c2e42819a48"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:lst name="EcuMGoDownAllowedUserRef">
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="MIN" value="1"/>
                        <v:ref name="EcuMGoDownAllowedUserRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                              &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                              is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                              &lt;p&gt;These parameters describe the references to users which
                              are allowed to call the EcuM_GoDown API.&lt;/p&gt;
                              &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="79119397-b629-4210-a818-6071972fb77f"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig"/>
                        </v:ref>
                      </v:lst>
                    </v:ctr>
                    <v:lst name="EcuMResetMode" type="MAP">
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="EcuMResetMode" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;These containers describe the configured reset modes.
                          The name of these containers allows one of the following symbolic
                          names to be given to the different reset modes:
                          &lt;/p&gt;&lt;ul&gt;
                          &lt;li&gt; ECUM_RESET_MCU &lt;/li&gt;
                          &lt;li&gt; ECUM_RESET_WDGM &lt;/li&gt;
                          &lt;li&gt; ECUM_RESET_IO &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="874ac869-e713-4098-a3ee-37592d0e37e4"/>
                        <v:var name="EcuMResetModeId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;This ID identifies the reset mode in services like &lt;code&gt;EcuM_SelectShutdownTarget()&lt;/code&gt;.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="ed8c4d9e-f465-461a-a7d2-13dcd253116b"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath 
                                      false="The Reset mode ID has to be unique." 
                                      expr="text:uniq(../../../../*/EcuMResetMode/*/EcuMResetModeId,.)"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:ctr name="EcuMSetClockAllowedUsers" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                        is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                        &lt;p&gt;This container describes the collection of allowed users, which
                        are allowed to call the &lt;code&gt;EcuM_SetClock()&lt;/code&gt; API.
                        &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="false"/>
                      <a:a name="UUID" 
                           value="688729e3-2f3b-418e-80b7-72d7b0ef42df"/>
                      <a:da name="ENABLE" value="false"/>
                      <v:lst name="EcuMSetClockAllowedUserRef">
                        <a:da name="ENABLE" value="false"/>
                        <a:da name="MIN" value="1"/>
                        <v:ref name="EcuMSetClockAllowedUserRef" 
                               type="SYMBOLIC-NAME-REFERENCE">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                            is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                            &lt;p&gt;References to the users which are allowed to call the
                            &lt;code&gt;EcuM_SetClock()&lt;/code&gt; API.
                            &lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="UUID" 
                               value="8b2b175a-93fa-408a-9c83-7ef5938c55ca"/>
                          <a:da name="EDITABLE" value="false"/>
                          <a:da name="REF" 
                                value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig"/>
                        </v:ref>
                      </v:lst>
                    </v:ctr>
                    <v:lst name="EcuMShutdownCause" type="MAP">
                      <a:a name="LABEL" value="Shutdown Cause List"/>
                      <a:da name="MAX" value="255"/>
                      <a:da name="MIN" value="4"/>
                      <v:ctr name="EcuMShutdownCause" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;These containers describe the configured shut down or reset causes.
                          The name of these containers allows to give one of the following symbolic names to the different shut down causes
                          &lt;/p&gt;&lt;ul&gt;
                          &lt;li&gt; ECUM_CAUSE_ECU_STATE - ECU state machine entered a state for shutdown &lt;/li&gt;
                          &lt;li&gt; ECUM_CAUSE_WDGM -      WdgM detected failure &lt;/li&gt;
                          &lt;li&gt; ECUM_CAUSE_DCM -       Dcm requests shutdown &lt;/li&gt;
                          &lt;li&gt; and values from configuration &lt;/li&gt;
                          &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="98837a6a-3abf-4494-8828-c52339c19052"/>
                        <v:var name="EcuMShutdownCauseId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;Unique ID for identifing this shut down cause.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="86288707-1830-4c19-b1b7-65f5366975f0"/>
                          <a:da name="DEFAULT" type="XPath" 
                                expr="num:integer(../@index)"/>
                          <a:da name="INVALID" type="Multi">
                            <mt:range>
                              <mt:tst expr="&lt;=255"/>
                              <mt:tst expr="&gt;=0"/>
                            </mt:range>
                            <mt:xpath 
                                      false="The Shutdown cause ID has to be unique." 
                                      expr="text:uniq(../../../../*/EcuMShutdownCause/*/EcuMShutdownCauseId,.)"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                    <v:lst name="EcuMShutdownTarget" type="MAP">
                      <a:da name="MAX" value="3"/>
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="EcuMShutdownTarget" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v>&lt;html&gt;
                          &lt;p&gt;These containers describe the configured shut down targets. The name
                          of these containers allows to give symbolic names to the different shutdown
                          targets.&lt;/p&gt;
                          &lt;p&gt;Current implementation  supports only three predefined shutdown targets - &lt;code&gt;ECUM_STATE_SLEEP, ECUM_STATE_RESET,
                          ECUM_STATE_OFF.&lt;/code&gt;
                         &lt;/p&gt;
                          &lt;/html&gt;</a:v>
                        </a:a>
                        <a:a name="POSTBUILDCHANGEABLE" value="false"/>
                        <a:a name="UUID" 
                             value="b398c909-c4a2-4dcd-88d7-dfea6c91d438"/>
                        <v:var name="EcuMShutdownTargetId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v>&lt;html&gt;
                            &lt;p&gt;This ID identifies this shut down target in services like &lt;code&gt;EcuM_SelectShutdownTarget()&lt;/code&gt;.&lt;/p&gt;
                            &lt;/html&gt;</a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" 
                               value="6ead776d-f860-4d80-a153-cd1059a9ab6c"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                      </v:ctr>
                    </v:lst>
                  </v:ctr>
                </v:ctr>
              </v:lst>
              <v:ctr name="EcuMDefensiveProgramming" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                &lt;p&gt;Parameters for defensive programming&lt;/p&gt;
                &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Defensive Programming Options"/>
                <v:var name="EcuMDefProgEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                    &lt;p&gt;Enables or disables the defensive
                    programming feature for the module EcuM.&lt;/p&gt;
                    &lt;p&gt;Note: This feature is dependent on the use of the development error detection module.
                    To use the defensive programming feature, proceed as follows:
                    &lt;ol&gt;
                    &lt;li&gt;Enable development error detection&lt;/li&gt;
                    &lt;li&gt;Enable defensive programming&lt;/li&gt;
                    &lt;li&gt;Enable assertions as required&lt;/li&gt;
                    &lt;/ol&gt;
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Defensive Programming"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="EcuMPrecondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of precondition assertion checks reported from
                  the module EcuM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;EcuMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;EcuMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Precondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;) and (../EcuMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="EcuMPostcondAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of postcondition assertion checks reported from
                  the module EcuM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;EcuMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;EcuMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Postcondition Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;) and (../EcuMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="EcuMStaticAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of static assertion checks reported from
                  the module EcuM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;EcuMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;EcuMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Static Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;) and (../EcuMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="EcuMUnreachAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of unreachable code assertion checks
                  reported from the module EcuM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;EcuMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;EcuMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Unreachable Code Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;) and (../EcuMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
                <v:var name="EcuMInvariantAssertEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                  &lt;p&gt;Enables handling of invariant assertion checks
                  reported from functions of the module EcuM.&lt;/p&gt;
                  &lt;p&gt;Dependency on parameter(s):
                  &lt;ul&gt;
                  &lt;li&gt;Enable Development Error Detection (&lt;code&gt;EcuMDevErrorDetect&lt;/code&gt;): must be enabled &lt;/li&gt;
                  &lt;li&gt;Enable Defensive Programming (&lt;code&gt;EcuMDefProgEnabled&lt;/code&gt;): must be enabled&lt;/li&gt;
                  &lt;/ul&gt;
                  &lt;/p&gt;
                  &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Invariant Assertions"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath" 
                        expr="(../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;) and (../EcuMDefProgEnabled = &apos;true&apos;)" 
                        true="true" false="false"/>
                </v:var>
              </v:ctr>
              <v:ctr name="EcuMFixedGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                    &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                    is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                    &lt;p&gt;This container holds the general, pre-compile configuration parameters for the EcuMFixed.
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="EXISTING" value="false"/>
                <a:a name="OPTIONAL" value="true"/>
                <a:a name="UUID" value="b6f574e8-77eb-4674-827f-1f0d18362f4f"/>
                <a:da name="ENABLE" value="false"/>
                <v:var name="EcuMIncludeComM" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      &lt;p&gt;This configuration parameter defines whether the communication  manager is supported by EcuM.
                      This feature is presented for development purpose to compile out the communication manager in the
                      early debugging phase.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="EXISTING" value="false"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="eeb7902d-2842-4825-aa2c-988fa8d72a0f"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="EcuMIncludeNvM" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      &lt;p&gt;This configuration parameter defines whether the non volatile memory manager is supported by EcuM.
                      This feature is presented for development purpose to compile out the volatile memory manager in the
                      early debugging phase.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="EXISTING" value="false"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="cf9584b2-e4cc-4d33-aa1b-e5d005e8e62b"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="EcuMIncludeNvramMgr" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      &lt;p&gt;If this parameter is enabled, the EcuM will
                        be compiled with NvM (Non-Volatile RAM
                        manager) support; the EcuM will initialize the
                        NvRam-manager and also implement safe start-up
                        and shutdown of the NvRam, regarding the
                        consistency of NvRam caches and data.&lt;/p&gt;

                        &lt;p&gt;Dependency:&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;NvM must be initialized in init list 2.&lt;/li&gt;
                          &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="EXISTING" value="false"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="81816320-0f21-4b53-99f2-1b814d566690"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="EcuMIncludeWdgM" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      &lt;p&gt;This configuration parameter defines
                      whether the watchdog manager is supported by
                      EcuM. This feature is presented for
                      development purpose to compile out the
                      watchdog manager in the early debugging
                      phase&lt;/p&gt;

                     &lt;p&gt;Dependency:&lt;/p&gt;
                       &lt;ul&gt;
                         &lt;li&gt;WdgM shall be in the init list.&lt;/li&gt;
                       &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="EXISTING" value="false"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="559e3b4f-6313-40da-9a1e-d59c8edfd4e4"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="EcuMTTIIEnabled" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this
                      parameter is not supported by the current
                      implementation.&lt;/em&gt;&lt;/p&gt;

                      &lt;p&gt;Switch to enable or disable Time Triggered
                      Increased Inoperation (TTII).&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="EXISTING" value="false"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="6c3c6bbd-60f6-4c4f-8366-dd40b3fac433"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:ref name="EcuMTTIIWakeupSourceRef" 
                       type="SYMBOLIC-NAME-REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      &lt;p&gt;References to the initial sleep mode to be used by TTII when TTII is activated after a RUN mode.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="EXISTING" value="false"/>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="UUID" value="d1712281-65de-430e-a9a0-67ea16edd11c"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMWakeupSource"/>
                </v:ref>
              </v:ctr>
              <v:ctr name="EcuMFlexGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                    &lt;p&gt;This container holds the general, pre-compile configuration parameters
                    for the flexible ECU management.
                    &lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="UUID" value="60dfb46e-a8ea-4895-82a3-8e98049bd29b"/>
                <v:var name="EcuMAlarmClockPresent" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      &lt;p&gt;Flag indicates whether the optional AlarmClock feature is present.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ca19aa41-763b-4a8a-86c4-bec3490e6e5b"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:var name="EcuMEnableDefBehaviour" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      Switches the defensive behaviour on or off.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="36fb6d66-2fa4-48af-9cf6-e85a677f896d"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                </v:var>
                <v:var name="EcuMResetLoopDetection" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      If this flag is false, no reset loop detection is performed.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="f3b330fd-2f03-49f9-86e0-6c166af5f8db"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" value="false"/>
                </v:var>
                <v:ref name="EcuMAlarmWakeupSource" 
                       type="SYMBOLIC-NAME-REFERENCE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                      is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;

                      This parameter describes the reference to the EcuMWakeupSource
                      being used for the EcuM AlarmClock.
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="UUID" value="fac2ae5b-b684-4809-95dc-59186470474c"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="REF" 
                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMWakeupSource"/>
                </v:ref>
                <v:var name="EcuMStoredShutdownOperations" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;This parameter denotes the number of shutdown
                      operations for which information are stored in the EcuM
                      for later retrieval.&lt;/em&gt;&lt;/p&gt;
                      &lt;p&gt;The parameter is not specified by AUTOSAR but it is
                      an EB specific enhancement to the EcuM&lt;/p&gt; &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="1"/>
                  <a:da name="EDITABLE" value="true"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=1"/>
                  </a:da>
                </v:var>
              </v:ctr>
              <v:ctr name="EcuMGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                    &lt;p&gt;This container holds the general, pre-compile configuration parameters.&lt;/p&gt;
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Pre-Compile Configuration Parameter"/>
                <a:a name="UUID" value="94877364-e074-4f98-ac38-12e313a95e20"/>
                <v:var name="EcuMDevErrorDetect" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;Enable development error detection. If
                      false, no debug artifacts (e.g. calls to Det)
                      remain in the executable object.
                      Initialization of Det, however is controlled
                      by configuration of optional BSW modules.&lt;/p&gt;

                      &lt;p&gt;Dependency:&lt;/p&gt;
                      &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;EcuMIncludeDet&lt;/code&gt; has to be
                        enabled.&lt;/li&gt;
                      &lt;/ul&gt;
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Development Error Detection"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="79549631-b25a-4cff-9691-166ad6f37da6"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos;) and (../EcuMIncludeDet = &apos;false&apos;)" 
                        true="For using Development Error Detection the module Development Error Tracer (Det) has to be activated with the parameter EcuMIncludeDet."/>
                </v:var>
                <v:var name="EcuMIncludeDem" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;This parameter must be enabled to report production errors to
                            Diagnostics Event Manager(DEM). Dem must be initialized before
                            reporting any errors to it. The initialization consist of
                            &lt;code&gt;Dem_PreInit()&lt;/code&gt; and &lt;code&gt;Dem_Init()&lt;/code&gt;.
                          &lt;/p&gt;
                          &lt;p&gt;&lt;code&gt;Dem_PreInit()&lt;/code&gt; shall be configured in
                            &lt;code&gt;EcuMDriverInitListOne&lt;/code&gt; with proper post build parameter.
                            Further initialization of DEM by calling &lt;code&gt;Dem_Init()&lt;/code&gt; is
                            controlled by BswM module.
                          &lt;/p&gt;
                          &lt;p&gt;
                            Configure &lt;code&gt;Dem_PreInit()&lt;/code&gt; in &lt;code&gt;EcuMDriverInitListOne&lt;/code&gt;:
                            &lt;ul&gt;
                              &lt;li&gt;EcuMModuleID            : Dem&lt;/li&gt;
                              &lt;li&gt;EcuMModuleService       : PreInit&lt;/li&gt;
                              &lt;li&gt;EcuMModuleInitConfigStr : disable and let
                                  &lt;code&gt;EcuMFlexModuleConfigurationRef&lt;/code&gt; refer to the
                                  Dem configuration container&lt;/li&gt;
                              &lt;li&gt;EcuMModuleHeaderFile    : leave field blank&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/p&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Include Dem"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="30559f81-7fe9-460d-92fb-caeb43a8de1b"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr=". = &apos;true&apos; and count(../../EcuMConfiguration/*[1]/EcuMCommonConfiguration/EcuMDriverInitListOne/EcuMDriverInitItem/*[(EcuMModuleID=&apos;Dem&apos;) and (EcuMModuleService=&apos;PreInit&apos;)]) = 0" 
                        true="The usage of the DEM is enabled for the EcuM, but the Preinitialization of the DEM is missing in the driver init list one."/>
                </v:var>
                <v:var name="EcuMIncludeDet" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;According to AUTOSAR this parameter
                      controls the initialization of the Det
                      (Development Error Tracer) module.  But in the
                      current EcuM implementation the initialization
                      and the start if the Det is controlled via the
                      initialization lists just like for other
                      AUTOSAR modules.&lt;/p&gt;

                      &lt;p&gt;Dependency:&lt;/p&gt;
                        &lt;ul&gt;
                          &lt;li&gt;Det must have an entry for its
                          initialization and start in one of the
                          initialization lists.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Include Det"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="4c2afac4-0278-469d-ae7d-8cf022adf8e3"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(. = &apos;true&apos; and count(../../EcuMConfiguration/*[1]/EcuMCommonConfiguration/EcuMDriverInitListZero/EcuMDriverInitItem/*[EcuMModuleID=&apos;Det&apos;]) = 0) and (. = &apos;true&apos; and count(../../EcuMConfiguration/*[1]/EcuMCommonConfiguration/EcuMDriverInitListOne/EcuMDriverInitItem/*[EcuMModuleID=&apos;Det&apos;]) = 0)" 
                        true="The Det is included for the EcuM, but no entry for the Det can be found in any initialization list."/>
                </v:var>
                <v:var name="EcuMMainFunctionPeriod" type="FLOAT">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter defines the schedule period of &lt;code&gt;EcuM_MainFunction&lt;/code&gt;. Unit: [s]&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="2348c6b8-3ba2-44e7-8188-267341d2272b"/>
                  <a:da name="DEFAULT" value="0.02"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=0.001"/>
                  </a:da>
                </v:var>
                <v:var name="EcuMProvideShutdownHook" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This EB specific parameter enables the provision of a
                        minimalistic implementation of the
                        &lt;code&gt;ShutdownHook()&lt;/code&gt; function for the Os.&lt;/p&gt;

                        &lt;p&gt;The &lt;code&gt;ShutdownHook()&lt;/code&gt; implementation
                        provided by default only calls
                        &lt;code&gt;EcuM_Shutdown()&lt;/code&gt;.  If you need a more
                        complex implementation of the
                        &lt;code&gt;ShutdownHook()&lt;/code&gt; function, disable this
                        parameter and provide an application specific
                        implementation.&lt;/p&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Provide ShutdownHook() implementation"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;true&apos;) and (as:modconf(&apos;Os&apos;)[1]/OsOS/OsHooks/OsShutdownHook = &apos;false&apos;)" 
                        true="EcuMProvideShutdownHook is enabled although OsShutdownHook is disabled. This most probably prevents ShutdownHook() from being called."/>
                </v:var>
                <v:var name="EcuMRelocatablePbcfgEnable" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                         Enables/disables support for relocatable postbuild configuration.
                         &lt;ul&gt;
                           &lt;li&gt;True: Postbuild configuration relocatable in memory.&lt;/li&gt;
                           &lt;li&gt;False: Postbuild configuration not relocatable in memory.&lt;/li&gt;
                         &lt;/ul&gt;
                       &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="EcuMRelocatablePbcfgEnable"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="true"/>
                  <a:da name="EDITABLE" value="true"/>
                </v:var>
                <v:var name="EcuMRteUsage" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;This parameter enables the usage of the RTE for this module.&lt;/p&gt;
                        &lt;p&gt;For an easy integration it is recommended to disable the usage of the RTE
                        at the beginning of the integration work.&lt;/p&gt;
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Rte Usage"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath>
                      <mt:tst 
                              true="The usage of the RTE is enabled for the EcuM, but the RTE is disabled or missing." 
                              expr=". = &apos;true&apos; and count(as:modconf(&apos;Rte&apos;)/*) = 0"/>
                      <mt:tst 
                              true="The usage of the RTE is enabled for the EcuM, but the RTE only provides SchM functionality. Check the value of the RteGeneratorOutput configuration parameter." 
                              expr=". = &apos;true&apos; and node:exists(as:modconf(&apos;Rte&apos;)/RteGeneration/RteGeneratorOutput) and (as:modconf(&apos;Rte&apos;)/RteGeneration/RteGeneratorOutput = &apos;BSW_SCHEDULER_ONLY&apos;)"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="EcuMEnableMulticore" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;This parameter enables the multicore functionality.&lt;/em&gt;&lt;/p&gt;
                      &lt;p&gt;If multiple Os configurations are used, this parameter must always be set to true.&lt;/p&gt;
                      &lt;p&gt;The parameter is not specified by AUTOSAR but it is
                      an EB specific enhancement to the EcuM&lt;/p&gt; &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Multi-core functionality"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr=". = &apos;false&apos; and node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) &gt; 1" 
                        true="The multicore functionality is disabled for the EcuM, but is enabled for the Os since there are multiple Os cores configured."/>
                  <a:da name="WARNING" type="XPath" 
                        expr=". = &apos; true&apos; and node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) = 1" 
                        true="This configuration parameter is enabled but there are no multiple Os cores configured. In this case the multicore functionality of EcuM will not be enabled!."/>
                </v:var>
                <v:var name="EcuMMasterCoreId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;&lt;em&gt;This parameter maps the EcuM master core instance to a specific Os Core ID.&lt;/em&gt;&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="EcuM Master Core ID"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath>
                      <mt:tst 
                              false="The designated EcuM master core ID should have its value lower than the total number of Os cores" 
                              expr="node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and (. &gt;= 0) and (. &lt; node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores))"/>
                      <mt:tst 
                              false="If EcuMEnableMulticore is set to false, or there are no multiple Os cores configured, EcuMMasterCoreId shouldn&apos;t be enabled since EcuM is used in a single core context." 
                              expr="(../EcuMEnableMulticore = &apos;true&apos;) and node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) &gt; 1"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="EcuMInitialCoreId" type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;The ID of the initial core that is started when the system boots up.&lt;/p&gt;
                        &lt;p&gt;This parameter can be used to specify the logical core identifier of the core
                        which is initially started when the system boots up.&lt;/p&gt;
                        &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; If this parameter is not configured, the EcuM assumes that the
                        initial core is the core designated by OS_CORE_ID_MASTER&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="EcuM Initial Core ID"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="Multi">
                    <mt:xpath>
                      <mt:tst 
                              false="The designated EcuM initial core ID should have its value lower than the total number of Os cores, as it represents a logical core ID." 
                              expr="node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and (. &gt;= 0) and (. &lt; node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores))"/>
                      <mt:tst 
                              false="If EcuMEnableMulticore is set to false, or there are no multiple Os cores configured, EcuMInitialCoreId shouldn&apos;t be enabled since EcuM is used in a single core context." 
                              expr="(../EcuMEnableMulticore = &apos;true&apos;) and node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) &gt; 1"/>
                    </mt:xpath>
                  </a:da>
                </v:var>
                <v:var name="EcuMStartInitialCore" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;This parameter enables calling the OS API &lt;em&gt;StartCore(coreID)&lt;/em&gt; upon EcuM initialization, also for the
                      core that boots up the system.&lt;/p&gt;
                      &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; If this parameter is not enabled, the EcuM avoids to invoke StartCore() for the core that boots
                      up the system, since it is already started by the hardware and for this reason some Os solutions are triggering an error.&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="EcuM Start Initial Core"/>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="ENABLE" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="(../EcuMEnableMulticore = &apos;true&apos;) and node:exists(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) and node:value(as:modconf(&apos;Os&apos;)/OsOS/OsNumberOfCores) &gt; 1" 
                        false="If EcuMEnableMulticore is set to false, or there are no multiple Os cores configured, EcuMStartInitialCore shouldn&apos;t be enabled since EcuM is used in a single core context."/>
                </v:var>
                <v:var name="EcuMUseBoottargetSec" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      This parameter enables the mapping of the
                      variable EcuM_BootTarget to the memory section &lt;code&gt;SEC_ECUM_BOOTTARGET&lt;/code&gt;
                      instead of &lt;code&gt;SEC_VAR_CLEARED_UNSPECIFIED&lt;/code&gt;. This might be needed if you
                      access EcuM_BootTarget for a bootloader or boot manager.  Please see
                      the comments in EcuM_BootTarget.h for implementation details.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Boottarget Section"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="EcuMVersionInfoApi" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Switches the version info API on or off&lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Enable Version Info API"/>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="86f84093-468d-4c22-b267-ef004ca4ea93"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <v:var name="EcuMCrossCoreComMWakeup" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                      &lt;p&gt;
                        Enable EcuM to ComM cross core multicore support.
                        (client server connections in RTE for interfaces ComM_EcuM_WakeUpIndication and ComM_EcuM_PNCWakeUpIndication).
                      &lt;/p&gt;
                      &lt;p&gt;
                        In case EcuM wakeup events are executed on EcuM slave cores or master cores and these cores
                        are not the same as the core on which ComM runs, EcuM calls directly ComM_EcuM_WakeUpIndication and ComM_EcuM_PNCWakeUpIndication
                        which shall be avoided.
                      &lt;/p&gt;
                      &lt;p&gt;
                        Enabling this parameter avoid this and triggers the ComM_EcuM_WakeupIndication API in the context of the same core as ComM.
                      &lt;/p&gt;
                      &lt;p&gt;
                        Note that also ComMMultiCoreSupport and EcuMEnableMulticore has to be enabled in order to have Rte Connections.
                      &lt;/p&gt;
                     &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="Enable EcuM to ComM Cross Core Support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="0343c4c0-d9de-4eba-a241-01d80f9b0d93"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath" 
                        expr="((not(node:exists(as:modconf(&apos;ComM&apos;)[1]/ComMGeneral/ComMMultiCoreSupport)) or (node:exists(as:modconf(&apos;ComM&apos;)[1]/ComMGeneral/ComMMultiCoreSupport) and (as:modconf(&apos;ComM&apos;)[1]/ComMGeneral/ComMMultiCoreSupport = &apos;false&apos;))) or (as:modconf(&apos;EcuM&apos;)[1]/EcuMGeneral/EcuMEnableMulticore = &apos;false&apos;)) and (. = &apos;true&apos;)" 
                        true="If EcuMCrossCoreComMWakeup is enabled, ComMMultiCoreSupport and EcuMEnableMulticore shall also be enabled"/>
                </v:var>
                <v:ctr name="EcuMServiceAPI" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Container for configuration of the service API of EcuM.
                        &lt;/p&gt;
                        &lt;p&gt;
                          Check &quot;Enable Rte Usage&quot; in order to enable this configuration item.
                        &lt;/p&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="LABEL" value="Service API Parameters"/>
                  <a:a name="UUID" 
                       value="ECUC:fd66eb50-ceb1-11e2-8b8b-0800200c9a66"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="../EcuMRteUsage = &apos;true&apos;"/>
                  <v:var name="EcuMEnableASR32ServiceAPI" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;
                            Configures whether the AUTOSAR 3.2 service API shall be provided.
                          &lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt; &lt;code&gt;TRUE&lt;/code&gt; = Enables AUTOSAR 3.2 service API.&lt;/li&gt;
                            &lt;li&gt; &lt;code&gt;FALSE&lt;/code&gt; = Disables AUTOSAR 3.2 service API.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Enable AUTOSAR 3.2 service API"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:fd66eb51-ceb1-11e2-8b8b-0800200c9a66"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" value="true"/>
                  </v:var>
                  <v:var name="EcuMEnableASR40ServiceAPI" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                        &lt;p&gt;
                          Configures whether the AUTOSAR 4.0 service API shall be provided.&lt;/p&gt;
                          &lt;ul&gt;
                            &lt;li&gt;&lt;code&gt;TRUE&lt;/code&gt; = Enables AUTOSAR 4.0 service API.&lt;/li&gt;
                            &lt;li&gt;&lt;code&gt;FALSE&lt;/code&gt; = Disables AUTOSAR 4.0 service API.&lt;/li&gt;
                          &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Enable AUTOSAR 4.0 service API"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:fd66eb52-ceb1-11e2-8b8b-0800200c9a66"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" value="true"/>
                  </v:var>
                  <v:var name="EcuMDefaultASRServiceAPI" type="ENUMERATION">
                    <a:a name="DESC">
                      <a:v>&lt;html&gt;
                          &lt;p&gt;Defines the default AUTOSAR service API.&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;&lt;code&gt;AUTOSAR_32&lt;/code&gt; = AUTOSAR 3.2 service API is the default one.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;AUTOSAR_40&lt;/code&gt; = AUTOSAR 4.0 service API is the default one.&lt;/li&gt;
                              &lt;li&gt;&lt;code&gt;NONE&lt;/code&gt; = No default AUTOSAR service API is provided.&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/html&gt;</a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="LABEL" value="Default AUTOSAR service API"/>
                    <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" 
                         value="ECUC:fd66eb53-ceb1-11e2-8b8b-0800200c9a66"/>
                    <a:da name="DEFAULT" value="AUTOSAR_40"/>
                    <a:da name="RANGE">
                      <a:v>AUTOSAR_32</a:v>
                      <a:v>AUTOSAR_40</a:v>
                      <a:v>NONE</a:v>
                    </a:da>
                  </v:var>
                </v:ctr>
              </v:ctr>
              <v:ctr name="ReportToDem" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>&lt;html&gt;
                      Production error handling
                    &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="Production error handling"/>
                <a:a name="TAB" value="Optimization"/>
                <a:da name="TITLE" value="Production error handling"/>
                <v:var name="EcuMRamChkFailedReportToDem" type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;Selects the handling of the production error:
                        &lt;em&gt;ECUM_E_RAM_CHECK_FAILED&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Ram Check Failure"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:da name="DEFAULT" value="DEM"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst 
                           expr="(. = &apos;DEM&apos;) and (../../EcuMGeneral/EcuMIncludeDem = &apos;false&apos;)" 
                           true="EcuMIncludeDem is set to false which means that production errors cannot be reported to the diagnostic event manager (Dem)."/>
                    <a:tst 
                           expr="(. = &apos;DEM&apos;) and not(node:refvalid(../../EcuMConfiguration/*[1]/EcuMCommonConfiguration/EcuMDemEventParameterRefs/ECUM_E_RAM_CHECK_FAILED))" 
                           true="The reference to &apos;DemEventParameter&apos; is invalid !"/>
                  </a:da>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath" 
                        expr="(. = &apos;DET&apos;) and (../../EcuMGeneral/EcuMDevErrorDetect = &apos;false&apos;)" 
                        true="EcuMDevErrorDetect is set to false which means that production errors cannot be reported to the development error tracer (Det)."/>
                </v:var>
                <v:var name="EcuMRamChkFailedReportToDemDetErrorId" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;This parameter is used to report Dem to Det.
                          It shall be checked that the variable
                          &lt;code&gt;EcuMRamChkFailedReportToDemDetErrorId&lt;/code&gt;
                          is set to a value between 30 and 255; the default value shall be 30.
                          A preprocessor define ECUM_E_DEMTODET_RAM_CHECK_FAILED
                          shall be generated holding the value of
                          &lt;code&gt;EcuMRamChkFailedReportToDemDetErrorId&lt;/code&gt;.&lt;/p&gt;
                          &lt;p&gt;Dependencies:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;The identifier to report Dem to Det
                              must not be zero-based.&lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="EcuM Ram Check Failure DemToDet ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="30"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../EcuMRamChkFailedReportToDem = &apos;DET&apos;) and (../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath">
                    <a:tst expr=". &gt;= 30" 
                           false="Values from 0 to 30 are used as standard Ids according to AUTOSAR SWS."/>
                    <a:tst 
                           expr="(../EcuMCfgDataInconsistentReportToDem = &apos;DET&apos;) and (../EcuMCfgDataInconsistentReportToDemDetErrorId = .)" 
                           true="The configured Det ID is already used! (not unique)"/>
                  </a:da>
                </v:var>
                <v:var name="EcuMCfgDataInconsistentReportToDem" 
                       type="ENUMERATION">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                        &lt;p&gt;&lt;em&gt;The functionality related to this parameter
                         is not supported by the current implementation.&lt;/em&gt;&lt;/p&gt;
                        &lt;p&gt;Selects the handling of the production error:
                        &lt;em&gt;ECUM_E_CONFIGURATION_DATA_INCONSISTENT&lt;/em&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;code&gt;DEM&lt;/code&gt;: All errors are reported to the Diagnostics Event Manager (Dem).&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DET&lt;/code&gt;: All errors are reported to the Development Error Tracer (Det) if enabled.&lt;/li&gt;
                        &lt;li&gt;&lt;code&gt;DISABLE&lt;/code&gt;: Production errors are not reported at all.&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" value="Inconsistent Configuration Data"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="TAB" value="Optimization"/>
                  <a:da name="DEFAULT" value="DISABLE"/>
                  <a:da name="EDITABLE" value="false"/>
                  <a:da name="RANGE">
                    <a:v>DEM</a:v>
                    <a:v>DET</a:v>
                    <a:v>DISABLE</a:v>
                  </a:da>
                  <a:da name="WARNING" type="XPath">
                    <a:tst 
                           expr="(. = &apos;DET&apos;) and (../../EcuMGeneral/EcuMDevErrorDetect = &apos;false&apos;)" 
                           true="EcuMDevErrorDetect is set to false which means that production errors cannot be reported to the development error tracer (Det)."/>
                    <a:tst 
                           expr="(. = &apos;DEM&apos;) and (../../EcuMGeneral/EcuMIncludeDem = &apos;false&apos;)" 
                           true="EcuMIncludeDem is set to false which means that production errors cannot be reported to the diagnostic event manager (Dem)."/>
                    <a:tst 
                           expr="(. = &apos;DEM&apos;) and not(node:refvalid(../../EcuMConfiguration/*[1]/EcuMCommonConfiguration/EcuMDemEventParameterRefs/ECUM_E_CONFIGURATION_DATA_INCONSISTENT))" 
                           true="EcuM State Manager needs the DEM event /Dem/DemConfigSet/*[1]/DemEventParameter/ECUM_E_CONFIGURATION_DATA_INCONSISTENT for a successful build"/>
                  </a:da>
                </v:var>
                <v:var name="EcuMCfgDataInconsistentReportToDemDetErrorId" 
                       type="INTEGER">
                  <a:a name="DESC">
                    <a:v>&lt;html&gt;
                          &lt;p&gt;This parameter is used to report Dem to
                          Det.  It shall be checked that the variable
                          &lt;code&gt;EcuMCfgDataInconsistentReportToDemDetErrorId&lt;/code&gt;
                          is set to a value between 30 and 255; the
                          default value shall be 32.  A preprocessor
                          define
                          ECUM_E_DEMTODET_CONFIGURATION_DATA_INCONSISTENT
                          shall be generated holding the value of
                          &lt;code&gt;EcuMCfgDataInconsistentReportToDemDetErrorId&lt;/code&gt;.&lt;/p&gt;

                          &lt;p&gt;Dependencies:&lt;/p&gt;
                            &lt;ul&gt;
                              &lt;li&gt;The identifier to report Dem to Det
                              must not be zero-based.&lt;/li&gt;
                            &lt;/ul&gt;
                        &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="LABEL" 
                       value="EcuM Configuration Data Inconsistent DemToDet ErrorId"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:da name="DEFAULT" value="32"/>
                  <a:da name="ENABLE" type="XPath" 
                        expr="(../EcuMCfgDataInconsistentReportToDem = &apos;DET&apos;) and (../../EcuMGeneral/EcuMDevErrorDetect = &apos;true&apos;)"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=255"/>
                    <a:tst expr="&gt;=30"/>
                  </a:da>
                  <a:da name="WARNING" type="XPath">
                    <a:tst expr=". &gt;= 30" 
                           false="Values from 0 to 30 are used as standard Ids according to AUTOSAR SWS."/>
                    <a:tst 
                           expr="(../EcuMRamChkFailedReportToDem = &apos;DET&apos;) and (../EcuMRamChkFailedReportToDemDetErrorId = .)" 
                           true="The configured Det ID is already used! (not unique)"/>
                  </a:da>
                </v:var>
              </v:ctr>
              <d:ref type="REFINED_MODULE_DEF" 
                     value="ASPath:/AUTOSAR/EcucDefs/EcuM"/>
              <v:ctr name="PublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v>EN:
                    &lt;html&gt;
                      Additional published parameters not covered by CommonPublishedInformation container.
                  &lt;/html&gt;</a:v>
                </a:a>
                <a:a name="LABEL" value="EB Published Information"/>
                <a:a name="TAB" value="EB Published Information"/>
                <a:a name="UUID" 
                     value="ECUC:cb4128ed-26c1-4ddd-906e-854bed917e07"/>
                <v:var name="PbcfgMSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v>EN:
                      &lt;html&gt;
                        Specifies whether or not the EcuM can use the PbcfgM module for post-build support.
                    &lt;/html&gt;</a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       value="PublishedInformation"/>
                  <a:a name="LABEL" value="PbcfgM support"/>
                  <a:a name="ORIGIN" value="Elektrobit Automotive GmbH"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" 
                       value="ECUC:eb61002e-69c0-4f16-a910-c27adb75f6ee"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
