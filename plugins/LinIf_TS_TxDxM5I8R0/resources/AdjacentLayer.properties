# AdjacentLayer.properties file of module LinIf.
#
# The background for designing property files can be found in
# http://wiki.elektrobit.com/index.php/Project:AutoCore_Module_Properties
#
# The module name corresponds to the name of attribute 'categoryType' in the plugin.xml of the
# adjacent module and must be identical to the PduRBswModules Container-short name.
#
# The properties in 'Module Type Dependent Data' must be provided in dependence on particles
# ForUpperLayer|ForLowerLayer, If|Tp ('If' for handling nonTP-PDUs, 'Tp' for handling
# TP-PDUs) and Rx/Tx. If it's not provided it’s considered as 'Unsupported'.
#
# 'Mandatory', 'Unsupported' and 'Optional' are considered as possible values with the
# following meaning:
# - Mandatory: module supports this API, API shall be used by adjacent layer module
# - Optional: module supports this API (depending on the configuration), API can be used by adjacent layer module
# - Unsupported: module doesn't support this API, API shall not be used by adjacent layer module
# The XPath expressions to the references of the relevant PDUs or PDUIDs shall be restricted by
# conditions if possible.
#
# The properties for the 'API Names' are optional:
# - if no value is provided, default name is assigned (<Callee>_<Caller><ApiName>)
#   where <ApiName> is the name of the API with API type (e.g. IfRxindication, TpRxindication,...) and
# - those APIs provided by the adjacent layer module shall start with '<Callee>_'.



# ------------------------------------------
# ------------  General Data  --------------
# ------------------------------------------

# Name of module configuration (i.e name which can be used with as:modconf('<ModuleConfigName>'))
LinIf.AdjacentLayerConfig.ModuleConfigName:LinIf

# Supported AUTOSAR Handle ID Version (allowed values: AUTOSAR32, AUTOSAR40)
LinIf.AdjacentLayerConfig.HandleIDPolicyVersion:AUTOSAR40

# Name of include file(s)
# Multiple header files are separated by comma.
# If no header file is provided no property value shall be configured.
LinIf.AdjacentLayerConfig.IncludeFileNames.V1.If.ForUpperLayer:LinIf.h

# Information which services (If/Tp) a module (optionally) provides for an upper or lower layer. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
LinIf.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForUpperLayer:Mandatory
LinIf.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForLowerLayer:Unsupported
LinIf.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForUpperLayer:Unsupported
LinIf.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForLowerLayer:Unsupported

# List of modules which are possible as upper or lower layer modules
# (comma separated list or use empty property if module has a generic layer support)
# List is only valid if respective LayerServiceSupport exists.
LinIf.AdjacentLayerConfig.LayerSupportList.V1.ForUpperLayer:PduR,LinTp,Cdd

# --------------------------------------------
# -------  Module Type Dependent Data  -------
# --------------------------------------------

# Information on whether a module (optionally) provides a given API feature to its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.ProvidedApiFeature.V1.<layerType>.<apiFeature>
LinIf.AdjacentLayerConfig.ProvidedApiFeature.V1.ForUpperLayer.IfCancelTransmit:Unsupported

# Information on whether a module (optionally) requires a given API feature from its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.RequiredApiFeature.V1.<layerType>.<apiFeature>
LinIf.AdjacentLayerConfig.RequiredApiFeature.V1.ForUpperLayer.IfTxConfirmation:Mandatory
LinIf.AdjacentLayerConfig.RequiredApiFeature.V1.ForUpperLayer.IfTriggerTransmit:Mandatory

# ------- Data to referenced global Rx I-PDUs (ForUpperLayer, If-module) -------
# XPath-expression to all references of the relevant Rx I-PDUs
LinIf.AdjacentLayerConfig.AbsXPathPduRef.V1.ForUpperLayer.If.Rx:as:modconf('LinIf')[1]/LinIfGlobalConfig/*[<configIndex>]/LinIfChannel/*/LinIfFrame/*/*[. = 'LinIfRxPdu']/LinIfRxPduRef

# relative XPath-expression to associated PduId of above referenced Rx I-PDU
# No RxPduId provided by ASR 4.0 Rev.3.

# ------- Data to referenced global Tx I-PDUs (ForUpperLayer, If-module) -------
# XPath-expression to all references of the relevant Tx I-PDUs
LinIf.AdjacentLayerConfig.AbsXPathPduRef.V1.ForUpperLayer.If.Tx:as:modconf('LinIf')[1]/LinIfGlobalConfig/*[<configIndex>]/LinIfChannel/*/LinIfFrame/*/*[. = 'LinIfTxPdu']/LinIfTxPduRef

# relative XPath-expression to associated PduId of above referenced Tx I-PDU
LinIf.AdjacentLayerConfig.RelXPathPduId.V1.ForUpperLayer.If.Tx:../LinIfTxPduId

# The module gateways solely Rx I-PDUs of fixed length when using single or FIFO-buffers
# - required at least for modules which use the PduR as upper layer module
# - allowed values: Mandatory, Unsupported, Optional
LinIf.AdjacentLayerConfig.StaticPduLength.V1.ForUpperLayer.If.Rx:Optional

# Boolean value to associated data provision of above referenced Tx I-PDU with respect to
# 'Direct' data provision. This is required for consistency check of PduR routing path
# Tx buffer configuration and lower layer data provision.
# - required at least for modules which use the PduR as upper layer module
# Either set to:
# - true(),  e.g. CanIf (solely direct data provision is provided for I-PDUs)
# - false(), e.g. LinIf (solely trigger transmit data provision is provided for I-PDUs)
# - relative XPath-expression delivering true() and false() in dependence on above
#            referenced Tx I-PDUs, e.g. FrIf with 'node:value(../FrIfImmediate)'
#            (direct and trigger transmit data provision can be provided for I-PDUs)
LinIf.AdjacentLayerConfig.DataProvisionDirect.V1.ForUpperLayer.If.Tx:false()

# ------------------------------------------
# ------------    API Names   --------------
# ------------------------------------------

# API functions are provided by the callee module to the caller module with
# default pattern <callee>_<caller><name> where <name> reflects the particle of property
# <caller>.AdjacentLayerConfig.ApiName.V1.<name>
LinIf.AdjacentLayerConfig.ApiName.V1.IfTransmit:LinIf_Transmit
LinIf.AdjacentLayerConfig.ApiName.V1.IfCancelTransmit:LinIf_CancelTransmit

# Overrule API names provided by the adjacent layer's <AdjacentLayerName> property file,
# e.g. to overrule the default API name PduR_ComIfTransmit of the PduR by PduR_ComTransmit
# of the Com properties file.
# PduR.AdjacentLayerConfig.ApiName.V1.IfTransmit.Com:PduR_ComTransmit
PduR.AdjacentLayerConfig.ApiName.V1.IfRxIndication.LinIf:PduR_LinIfRxIndication
PduR.AdjacentLayerConfig.ApiName.V1.IfTxConfirmation.LinIf:PduR_LinIfTxConfirmation
PduR.AdjacentLayerConfig.ApiName.V1.IfTriggerTransmit.LinIf:PduR_LinIfTriggerTransmit

###############################################################################
# AdjacentLayer.properties file of module LinTp.
#
# The background for designing property files can be found in
# http://wiki.elektrobit.com/index.php/Project:AutoCore_Module_Properties
#
# The module name corresponds to the name of attribute 'categoryType' in the plugin.xml of the
# adjacent module and must be identical to the PduRBswModules Container-short name.
#
# The properties in 'Module Type Dependent Data' must be provided in dependence on particles
# ForUpperLayer|ForLowerLayer, If|Tp ('If' for handling nonTP-PDUs, 'Tp' for handling
# TP-PDUs) and Rx/Tx. If it's not provided it’s considered as 'Unsupported'.
#
# 'Mandatory', 'Unsupported' and 'Optional' are considered as possible values with the
# following meaning:
# - Mandatory: module supports this API, API shall be used by adjacent layer module
# - Optional: module supports this API (depending on the configuration), API can be used by adjacent layer module
# - Unsupported: module doesn't support this API, API shall not be used by adjacent layer module
# The XPath expressions to the references of the relevant PDUs or PDUIDs shall be restricted by
# conditions if possible.
#
# The properties for the 'API Names' are optional:
# - if no value is provided, default name is assigned (<Callee>_<Caller><ApiName>)
#   where <ApiName> is the name of the API with API type (e.g. IfRxindication, TpRxindication,...) and
# - those APIs provided by the adjacent layer module shall start with '<Callee>_'.



# ------------------------------------------
# ------------  General Data  --------------
# ------------------------------------------

# Name of module configuration (i.e name which can be used with as:modconf('<ModuleConfigName>'))
LinTp.AdjacentLayerConfig.ModuleConfigName:LinTp

# Supported AUTOSAR Handle ID Version (allowed values: AUTOSAR32, AUTOSAR40)
LinTp.AdjacentLayerConfig.HandleIDPolicyVersion:AUTOSAR40

# Name of include file(s)
# Multiple header files are separated by comma.
# If no header file is provided no property value shall be configured.
LinTp.AdjacentLayerConfig.IncludeFileNames.V1.Tp.ForUpperLayer:LinIf.h

# Information which services (If/Tp) a module (optionally) provides for an upper or lower layer. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
LinTp.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForUpperLayer:Unsupported
LinTp.AdjacentLayerConfig.LayerServiceSupport.V1.If.ForLowerLayer:Unsupported
LinTp.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForUpperLayer:Mandatory
LinTp.AdjacentLayerConfig.LayerServiceSupport.V1.Tp.ForLowerLayer:Unsupported

# List of modules which are possible as upper or lower layer modules
# (comma separated list or use empty property if module has a generic layer support)
# List is only valid if respective LayerServiceSupport exists.
LinTp.AdjacentLayerConfig.LayerSupportList.V1.ForUpperLayer:PduR

# --------------------------------------------
# -------  Module Type Dependent Data  -------
# --------------------------------------------

# Information on whether a module (optionally) provides a given API feature to its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.ProvidedApiFeature.V1.<layerType>.<apiFeature>
LinTp.AdjacentLayerConfig.ProvidedApiFeature.V1.ForUpperLayer.TpChangeParameter:Optional
LinTp.AdjacentLayerConfig.ProvidedApiFeature.V1.ForUpperLayer.TpCancelReceive:Optional
LinTp.AdjacentLayerConfig.ProvidedApiFeature.V1.ForUpperLayer.TpCancelTransmit:Optional




# Information on whether a module (optionally) requires a given API feature from its adjacent layer modules. (allowed values: Mandatory, Unsupported, Optional, default: Unsupported)
# <apiFeature> is the name of the API together with the API type e.g. TpRxIndication or IfTriggerTransmit
# <Modulename>.AdjacentLayerConfig.RequiredApiFeature.V1.<layerType>.<apiFeature>


# ------- Data to referenced global Rx I-PDUs (ForUpperLayer, Tp-module) -------
# XPath-expression to all references of the relevant Rx I-PDUs
LinTp.AdjacentLayerConfig.AbsXPathPduRef.V1.ForUpperLayer.Tp.Rx:as:modconf('LinTp')[1]/LinTpGlobalConfig/*[<configIndex>]/LinTpRxNSdu/*/LinTpRxNSduPduRef

# relative XPath-expression to associated PduId of above referenced Rx I-PDU
LinTp.AdjacentLayerConfig.RelXPathPduId.V1.ForUpperLayer.Tp.Rx:../LinTpRxNSduId

# ------- Data to referenced global Tx I-PDUs (ForUpperLayer, Tp-module) -------
# XPath-expression to all references of the relevant Tx I-PDUs
LinTp.AdjacentLayerConfig.AbsXPathPduRef.V1.ForUpperLayer.Tp.Tx:as:modconf('LinTp')[1]/LinTpGlobalConfig/*[<configIndex>]/LinTpTxNSdu/*/LinTpTxNSduPduRef

# relative XPath-expression to associated PduId of above referenced Tx I-PDU
LinTp.AdjacentLayerConfig.RelXPathPduId.V1.ForUpperLayer.Tp.Tx:../LinTpTxNSduId


# ------- Data for Retransmission (ForUpperLayer, Tp-module) -------
# Support of the Retransmission Feature
# - required at least for modules which use the PduR as upper layer module
# - allowed values: Mandatory, Unsupported, Optional)
LinTp.AdjacentLayerConfig.Retransmission.V1.ForUpperLayer.Tp:Unsupported

# ------------------------------------------
# ------------    API Names   --------------
# ------------------------------------------

# API functions are provided by the callee module to the caller module with
# default pattern <callee>_<caller><name> where <name> reflects the particle of property
# <caller>.AdjacentLayerConfig.ApiName.V1.<name>
LinTp.AdjacentLayerConfig.ApiName.V1.TpTransmit:LinTp_Transmit
LinTp.AdjacentLayerConfig.ApiName.V1.TpChangeParameter:LinTp_ChangeParameter
LinTp.AdjacentLayerConfig.ApiName.V1.TpCancelReceive:LinTp_CancelReceive
LinTp.AdjacentLayerConfig.ApiName.V1.TpCancelTransmit:LinTp_CancelTransmit

# Overrule API names provided by the adjacent layer's <AdjacentLayerName> property file,
# e.g. to overrule the default API name PduR_ComIfTransmit of the PduR by PduR_ComTransmit
# of the Com properties file.
# PduR.AdjacentLayerConfig.ApiName.V1.IfTransmit.Com:PduR_ComTransmit
PduR.AdjacentLayerConfig.ApiName.V1.TpStartOfReception.LinTp:PduR_LinTpStartOfReception
PduR.AdjacentLayerConfig.ApiName.V1.TpCopyRxData.LinTp:PduR_LinTpCopyRxData
PduR.AdjacentLayerConfig.ApiName.V1.TpRxIndication.LinTp:PduR_LinTpRxIndication
PduR.AdjacentLayerConfig.ApiName.V1.TpCopyTxData.LinTp:PduR_LinTpCopyTxData
PduR.AdjacentLayerConfig.ApiName.V1.TpTxConfirmation.LinTp:PduR_LinTpTxConfirmation

